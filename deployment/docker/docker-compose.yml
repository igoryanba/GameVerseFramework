version: '3.8'

services:
  # GameVerse Server
  gameverse-server:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile
    container_name: gameverse-server
    restart: unless-stopped
    ports:
      - "8080:8080"     # Game server port
      - "30121:30121"   # Admin API port
      - "9090:9090"     # Metrics port
    environment:
      - RUST_LOG=info
      - DATABASE_URL=postgresql://gameverse:gameverse_password@postgres:5432/gameverse
      - REDIS_URL=redis://redis:6379
      - ADMIN_JWT_SECRET=your-secret-key-here
    volumes:
      - gameverse-config:/app/config
      - gameverse-logs:/app/logs
      - gameverse-resources:/app/resources
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - gameverse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:30121/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gameverse-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=gameverse
      - POSTGRES_USER=gameverse
      - POSTGRES_PASSWORD=gameverse_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - gameverse-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gameverse -d gameverse"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: gameverse-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass gameverse_redis_password
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - gameverse-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: gameverse-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9091:9090"
    networks:
      - gameverse-network
    depends_on:
      - gameverse-server

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:10.0.0
    container_name: gameverse-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    networks:
      - gameverse-network
    depends_on:
      - prometheus

  # Jaeger Tracing
  jaeger:
    image: jaegertracing/all-in-one:1.48
    container_name: gameverse-jaeger
    restart: unless-stopped
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"   # Jaeger UI
      - "14268:14268"   # HTTP collector
      - "14250:14250"   # gRPC collector
    networks:
      - gameverse-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: gameverse-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    networks:
      - gameverse-network
    depends_on:
      - gameverse-server
      - grafana

volumes:
  gameverse-config:
    driver: local
  gameverse-logs:
    driver: local
  gameverse-resources:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  gameverse-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 