// Auto-generated TypeScript definitions

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x0A6D923DFFC9BD89
 */
export function NetGameserverDeleteCharacterSlotGetStatus(): number;

/**
 * ```
 * bool is always true in game scripts  
 * ```
 * @param itemHash - 
 * @param categoryHash - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xC27009422FCCA88D
 */
export function NetGameserverGetPrice(itemHash: number, categoryHash: number, p2: number): number;

/**
 * ## Parameters
 * *
 * @param transactionId - 
 * @returns number
 * @remarks Hash: 0x39BE7CEA8D9CC8E6
 */
export function NetGameserverCheckoutStart(transactionId: number): number;

/**
 * ## Parameters
 * *
 * @param transactionId - 
 * @returns number
 * @remarks Hash: 0xE2A99A9B524BEFFF
 */
export function NetGameserverEndService(transactionId: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xC13C38E47EA5DF31
 */
export function 0xc13c38e47ea5df31(p0: any): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x810E8431C0614BF9
 */
export function NetGameserverIsSessionRefreshPending(): number;

/**
 * ```
 * Note: only one of the arguments can be set to true at a time
 * ```
 * @param inventory - 
 * @param playerbalance - 
 * @returns number
 * @remarks Hash: 0x35A1B3E1D1315CFA
 */
export function NetGameserverGetBalance(inventory: number, playerbalance: number): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x85F6C9ABA1DE2BCF
 */
export function 0x85f6c9aba1de2bcf(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x0395CB47B022E62C
 */
export function 0x0395cb47b022e62c(p0: any): number;

/**
 * ```
 * Same as 0x350AA5EBC03D3BD2
 * ```
 * @returns number
 * @remarks Hash: 0x23789E777D14CE44
 */
export function NetGameserverTransferCashGetStatus(): number;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x279F08B1A4B29B7E
 */
export function NetGameserverBasketStart(): number;

/**
 * ## Parameters
 * *
 * @param charSlot - 
 * @param amount - 
 * @returns number
 * @remarks Hash: 0xD47A2C1BA117471D
 */
export function NetGameserverTransferBankToWallet(charSlot: number, amount: number): number;

/**
 * ## Parameters
 * *
 * @param itemData - 
 * @param quantity - 
 * @returns number
 * @remarks Hash: 0xF30980718C8ED876
 */
export function NetGameserverBasketAddItem(itemData: any, quantity: number): number;

/**
 * ## Parameters
 * *
 * @param charSlot - 
 * @returns number
 * @remarks Hash: 0x2F41D51BA3BCD1F1
 */
export function NetGameserverSessionApplyReceivedData(charSlot: number): number;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0xCF38DAFBB49EDE5E
 */
export function NetGameserverGetCatalogState(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x9507D4271988E1AE
 */
export function NetGameserverSetTelemetryNonceSeed(p0: number): number;

/**
 * ## Parameters
 * *
 * @param hash - 
 * @returns number
 * @remarks Hash: 0x247F0F73A182EA0B
 */
export function NetGameserverCatalogItemExistsHash(hash: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x27F76CC6C55AD30E
 */
export function NetGameserverBasketIsFull(): number;

/**
 * ```
 * Same as 0x23789E777D14CE44
 * ```
 * @returns number
 * @remarks Hash: 0x350AA5EBC03D3BD2
 */
export function NetGameserverTransferCashGetStatus2(): number;

/**
 * ## Parameters
 * *
 * @param transactionId - 
 * @param categoryHash - 
 * @param itemHash - 
 * @returns number
 * @remarks Hash: 0x3C5FD37B5499582E
 */
export function NetGameserverBeginService(transactionId: number, categoryHash: number, itemHash: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x3C4487461E9B0DCB
 */
export function NetGameserverCatalogIsReady(): number;

/**
 * ## Parameters
 * *
 * @param charSlot - 
 * @param amount - 
 * @returns number
 * @remarks Hash: 0xC2F7FE5309181C7D
 */
export function NetGameserverTransferWalletToBank(charSlot: number, amount: number): number;

/**
 * ```
 * NET_GAMESERVER_*
 * 
 * Checks if the transaction status is equal to 3.
 * 
 * NativeDB Introduced: v1365
 * ```
 * @param transactionId - 
 * @returns number
 * @remarks Hash: 0x79EDAC677CA62F81
 */
export function 0x79edac677ca62f81(transactionId: number): number;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x897433D292B44130
 */
export function NetGameserverGetTransactionManagerData(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x72EB7BA9B69BF6AB
 */
export function 0x72eb7ba9b69bf6ab(): number;

/**
 * ## Parameters
 * *
 * @param charSlot - 
 * @returns number
 * @remarks Hash: 0xA135AC892A58FC07
 */
export function NetGameserverStartSession(charSlot: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x170910093218C8B9
 */
export function 0x170910093218c8b9(p0: any): number;

/**
 * ## Parameters
 * *
 * @param slot - 
 * @param transfer - 
 * @returns number
 * @remarks Hash: 0x51F1A8E48C3D2F6D
 */
export function NetGameserverDeleteCharacterSlot(slot: number, transfer: number): number;

/**
 * ## Parameters
 * *
 * @param name - 
 * @returns number
 * @remarks Hash: 0xBD4D7EAF8A30F637
 */
export function NetGameserverCatalogItemExists(name: string): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x613F125BA3BD2EB9
 */
export function 0x613f125ba3bd2eb9(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x2B949A1E6AEC8F6A
 */
export function NetGameserverIsCatalogValid(): number;

/**
 * ```
 * Used to be NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED
 * ```
 * @returns number
 * @remarks Hash: 0x498C1E05CE5F7877
 */
export function NetGameserverTransferCashSetTelemetryNonceSeed(): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @returns number
 * @remarks Hash: 0x7D2708796355B20B
 */
export function NetGameserverUseServerTransactions(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x357B152EF96C30B6
 */
export function 0x357b152ef96c30b6(): any;

/**
 * ```
 * NET_GAMESERVER_*
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x74A0FD0688F1EE45
 */
export function 0x74a0fd0688f1ee45(p0: number): number;

/**
 * ```
 * NativeDB Introduced: v372
 * ```
 * @returns number
 * @remarks Hash: 0xFA336E7F40C0A0D0
 */
export function NetGameserverBasketDelete(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA65568121DF2EA26
 */
export function NetGameserverBasketEnd(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x112CEF1615A1139F
 */
export function NetGameserverDeleteSetTelemetryNonceSeed(): number;

/**
 * ```
 * NET_GAMESERVER_*
 * 
 * Checks if the transaction status is equal to 1.
 * 
 * NativeDB Introduced: v1365
 * ```
 * @param transactionId - 
 * @returns number
 * @remarks Hash: 0xC830417D630A50F9
 */
export function 0xc830417d630a50f9(transactionId: number): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xE3E5A7C64CA2C6ED
 */
export function 0xe3e5a7c64ca2c6ed(): any;

/**
 * ## Parameters
 * *
 * @param charSlot - 
 * @returns number
 * @remarks Hash: 0xB24F0944DA203D9E
 */
export function NetGameserverIsSessionValid(charSlot: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xE1A0450ED46A7812
 */
export function NetGameserverBasketApplyServerData(p0: any, p1: any): number;

/**
 * ```
 * Gets current UTC time
 * ```
 * @param year - 
 * @param month - 
 * @param day - 
 * @param hour - 
 * @param minute - 
 * @param second - 
 * @returns void
 * @remarks Hash: 0x8117E09A19EEF4D3
 */
export function getUtcTime(year: number, month: number, day: number, hour: number, minute: number, second: number): void;

/**
 * ```
 * Gets system time as year, month, day, hour, minute and second.  
 * Example usage:  
 * 	int year;  
 * 	int month;  
 * 	int day;  
 * 	int hour;  
 * 	int minute;  
 * 	int second;  
 * 	TIME::GET_POSIX_TIME(&year, &month, &day, &hour, &minute, &second);  
 * ```
 * @param year - 
 * @param month - 
 * @param day - 
 * @param hour - 
 * @param minute - 
 * @param second - 
 * @returns void
 * @remarks Hash: 0xDA488F299A5B164E
 */
export function getPosixTime(year: number, month: number, day: number, hour: number, minute: number, second: number): void;

/**
 * ```
 * Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in GTA is only 48 minutes in real life.  
 * ```
 * @returns number
 * @remarks Hash: 0x494E97C2EF27C470
 */
export function getClockSeconds(): number;

/**
 * ```
 * Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)  
 * ```
 * @returns number
 * @remarks Hash: 0x25223CA6B4D20B7F
 */
export function getClockHours(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x3D10BC92A4DB1D35
 */
export function getClockDayOfMonth(): number;

/**
 * ```
 * SET_CLOCK_TIME(12, 34, 56);  
 * ```
 * @param hour - 
 * @param minute - 
 * @param second - 
 * @returns void
 * @remarks Hash: 0x47C3B5848C3E45D8
 */
export function setClockTime(hour: number, minute: number, second: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x4055E40BD2DBEC1D
 */
export function pauseClock(toggle: number): void;

/**
 * Returns how many real ms are equal to one game minute.
 * A getter for [`SetMillisecondsPerGameMinute`](#_0x36CA2554).
 * @returns number
 * @remarks Hash: 0x2F8B4D1C595B11DB
 */
export function getMillisecondsPerGameMinute(): number;

/**
 * ## Parameters
 * *
 * @param hours - 
 * @param minutes - 
 * @param seconds - 
 * @returns void
 * @remarks Hash: 0xD716F30D8C8980E2
 */
export function addToClockTime(hours: number, minutes: number, seconds: number): void;

/**
 * ## Parameters
 * *
 * @param day - 
 * @param month - 
 * @param year - 
 * @returns void
 * @remarks Hash: 0xB096419DF0D06CE7
 */
export function setClockDate(day: number, month: number, year: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xBBC72712E80257A1
 */
export function getClockMonth(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x961777E64BDAF717
 */
export function getClockYear(): number;

/**
 * ```
 * Gets the current ingame clock minute.  
 * ```
 * @returns number
 * @remarks Hash: 0x13D2B8ADD79640F2
 */
export function getClockMinutes(): number;

/**
 * ```
 * Gets the current day of the week.  
 * 0: Sunday  
 * 1: Monday  
 * 2: Tuesday  
 * 3: Wednesday  
 * 4: Thursday  
 * 5: Friday  
 * 6: Saturday  
 * ```
 * @returns number
 * @remarks Hash: 0xD972E4BD7AEB235F
 */
export function getClockDayOfWeek(): number;

/**
 * ```
 * Gets local system time as year, month, day, hour, minute and second.  
 * Example usage:  
 * int year;  
 * int month;  
 * int day;  
 * int hour;  
 * int minute;  
 * int second;  
 * or use std::tm struct  
 * TIME::GET_LOCAL_TIME(&year, &month, &day, &hour, &minute, &second);  
 * ```
 * @param year - 
 * @param month - 
 * @param day - 
 * @param hour - 
 * @param minute - 
 * @param second - 
 * @returns void
 * @remarks Hash: 0x50C7A99057A69748
 */
export function getLocalTime(year: number, month: number, day: number, hour: number, minute: number, second: number): void;

/**
 * ## Parameters
 * *
 * @param hour - 
 * @param minute - 
 * @param second - 
 * @returns void
 * @remarks Hash: 0xC8CA9670B9D83B3B
 */
export function advanceClockTimeTo(hour: number, minute: number, second: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x439E9BC95B7E7FBE
 */
export function cellCamIsCharVisibleNoFaceCheck(entity: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x466DA42C89865553
 */
export function CellCamSetHeadHeight(p0: number): void;

/**
 * ## Parameters
 * *
 * @param position - 
 * @returns void
 * @remarks Hash: 0x584FDFDA48805B86
 */
export function getMobilePhonePosition(position: { x: number, y: number, z: number }): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xD6ADE981781FCA09
 */
export function CellCamSetHeadPitch(p0: number): void;

/**
 * ```
 * If bool Toggle = true so the mobile is hide to screen.  
 * If bool Toggle = false so the mobile is show to screen.  
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF511F759238A5122
 */
export function scriptIsMovingMobilePhoneOffscreen(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x3117D84EFA60F77B
 */
export function CellCamSetVerticalOffset(p0: number): void;

/**
 * ```
 * Destroys the currently active mobile phone.  
 * ```
 * @returns void
 * @remarks Hash: 0x3BC861DF703E5097
 */
export function destroyMobilePhone(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xAC2890471901861C
 */
export function 0xac2890471901861c(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xF1E22DC13F5EEBAD
 */
export function CellCamSetHeadRoll(p0: number): void;

/**
 * ```
 * Creates a mobile phone of the specified type.  
 * Possible phone types:  
 * 0 - Default phone / Michael's phone  
 * 1 - Trevor's phone  
 * 2 - Franklin's phone  
 * 4 - Prologue phone  
 * These values represent bit flags, so a value of '3' would toggle Trevor and Franklin's phones together, causing unexpected behavior and most likely crash the game.  
 * ```
 * @param phoneType - 
 * @returns void
 * @remarks Hash: 0xA4E8E696C532FBC7
 */
export function createMobilePhone(phoneType: number): void;

/**
 * ## Parameters
 * *
 * @param renderId - 
 * @returns void
 * @remarks Hash: 0xB4A53E05F68B6FA1
 */
export function getMobilePhoneRenderId(renderId: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x53F4892D18EC90A4
 */
export function CellCamSetDistance(p0: number): void;

/**
 * Activates the cellphone camera. Make sure you have a mobile phone created with [`CREATE_MOBILE_PHONE`](#_0xA4E8E696C532FBC7) or else the camera will not work.
 * @param active - 
 * @param bGoFirstPerson - 
 * @returns void
 * @remarks Hash: 0xFDE8F069C542D126
 */
export function cellCamActivate(active: number, bGoFirstPerson: number): void;

/**
 * ```
 * Needs more research. If the "phone_cam12" filter is applied, this function is called with "TRUE"; otherwise, "FALSE".
 * Example (XBOX 360):
 * // check current filter selection
 * if (MISC::ARE_STRINGS_EQUAL(getElem(g_2471024, &l_17, 4), "phone_cam12") != 0)
 * {
 *     MOBILE::_0xC273BB4D(0); // FALSE
 * }
 * else
 * {
 *     MOBILE::_0xC273BB4D(1); // TRUE
 * }
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xA2CCBE62CD4C91A4
 */
export function 0xa2ccbe62cd4c91a4(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param rotation - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x1CEFB61F193070AE
 */
export function getMobilePhoneRotation(rotation: { x: number, y: number, z: number }, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x1B0B4AEED5B9B41C
 */
export function CellCamSetHorizontalOffset(p0: number): void;

/**
 * ## Parameters
 * *
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @returns void
 * @remarks Hash: 0x693A5C6D6734085B
 */
export function setMobilePhonePosition(posX: number, posY: number, posZ: number): void;

/**
 * ```
 * This one is weird and seems to return a TRUE state regardless of whether the phone is visible on screen or tucked away.  
 * I can confirm the above. This function is hard-coded to always return 1.  
 * ```
 * @returns number
 * @remarks Hash: 0xC4E2813898C97A4B
 */
export function canPhoneBeSeenOnScreen(): number;

/**
 * ```
 * The minimum/default is 500.0f. If you plan to make it bigger set it's position as well. Also this seems to need to be called in a loop as when you close the phone the scale is reset. If not in a loop you'd need to call it everytime before you re-open the phone.  
 * ```
 * @param scale - 
 * @returns void
 * @remarks Hash: 0xCBDD322A73D6D932
 */
export function setMobilePhoneScale(scale: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x15E69E2802C24B8D
 */
export function CellCamSetRoll(p0: number): void;

/**
 * ```
 * if the bool "Toggle" is "true" so the phone is lean.  
 * if the bool "Toggle" is "false" so the phone is not lean.  
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x44E44169EF70138E
 */
export function CellCamSetLean(toggle: number): void;

/**
 * Toggles the selfie mode on the cellphone camera. Only visible when the cell phone camera is active.
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x015C49A93E3E086E
 */
export function cellCamActivateSelfieMode(toggle: number): void;

/**
 * Toggles depth of field on the cellphone camera.
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x375A706A5C2FD084
 */
export function setMobilePhoneDofState(toggle: number): void;

/**
 * ```
 * Last parameter is unknown and always zero.  
 * ```
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xBB779C0CA917E865
 */
export function setMobilePhoneRotation(rotX: number, rotY: number, rotZ: number, p3: any): void;

/**
 * Moves the character's finger in a swiping motion when holding a cellphone in their hand through the use of the [CREATE_MOBILE_PHONE](#_0xA4E8E696C532FBC7) native.
 * 
 * ```c
 * enum eCellInput {
 *     CELL_INPUT_NONE = 0,
 *     CELL_INPUT_UP = 1,
 *     CELL_INPUT_DOWN = 2,
 *     CELL_INPUT_LEFT = 3,
 *     CELL_INPUT_RIGHT = 4,
 *     CELL_INPUT_SELECT = 5
 * }
 * ```
 * @param direction - 
 * @returns void
 * @remarks Hash: 0x95C9E72F3D7DEC9B
 */
export function CellCamMoveFinger(direction: number): void;

/**
 * ```
 * Possible return values: 0, 1, 2
 * ```
 * @returns number
 * @remarks Hash: 0xA8AE43AEC1A61314
 */
export function LocalizationGetSystemDateFormat(): number;

/**
 * ```
 * 0 = american (en-US)
 * 1 = french (fr-FR)
 * 2 = german (de-DE)
 * 3 = italian (it-IT)
 * 4 = spanish (es-ES)
 * 5 = brazilian (pt-BR)
 * 6 = polish (pl-PL)
 * 7 = russian (ru-RU)
 * 8 = korean (ko-KR)
 * 9 = chinesetrad (zh-TW)
 * 10 = japanese (ja-JP)
 * 11 = mexican (es-MX)
 * 12 = chinesesimp (zh-CN)
 * ```
 * @returns number
 * @remarks Hash: 0x2BDD44CC428A7EAE
 */
export function getCurrentLanguage(): number;

/**
 * ```
 * Same return values as GET_CURRENT_LANGUAGE
 * ```
 * @returns number
 * @remarks Hash: 0x497420E022796B3F
 */
export function LocalizationGetSystemLanguage(): number;

/**
 * ```
 * Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.  
 * ```
 * @param p0 - 
 * @param maxPlayers - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x6F3D4ED9BEE4E61D
 */
export function networkSessionHost(p0: number, maxPlayers: number, p2: number): number;

/**
 * ## Parameters
 * *
 * @param contentId - 
 * @param baseContentId - 
 * @param contentTypeName - 
 * @returns number
 * @remarks Hash: 0x1DE0F5F50D723CAA
 */
export function ugcPublish(contentId: string, baseContentId: string, contentTypeName: string): number;

/**
 * ## Parameters
 * *
 * @param tunableContext - 
 * @param tunableName - 
 * @returns number
 * @remarks Hash: 0xE4E53E1419D81127
 */
export function networkDoesTunableExistHash(tunableContext: number, tunableName: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x2615AA2A695930C1
 */
export function networkAreTransitionDetailsValid(p0: any): number;

/**
 * ```
 * Takes a 24 char buffer. Returns the buffer or "**Invalid**" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist.
 * ```
 * @param player - 
 * @returns string
 * @remarks Hash: 0x4927FC39CD0869A0
 */
export function networkPlayerGetUserid(player: number): string;

/**
 * ## Parameters
 * *
 * @param netScene - 
 * @returns void
 * @remarks Hash: 0xC254481A4574CB2F
 */
export function networkStopSynchronisedScene(netScene: number): void;

/**
 * ```
 * Does nothing (it's a nullsub).
 * 
 * NativeDB Introduced: v323
 * ```
 * @returns void
 * @remarks Hash: 0x6FD992C4A1C1B986
 */
export function 0x6fd992c4a1c1b986(): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x63B406D7884BFA95
 */
export function 0x63b406d7884bfa95(): any;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x9FEDF86898F100E9
 */
export function 0x9fedf86898f100e9(): any;

/**
 * Allows scripts to use attachment commands on entities (eg. [`ATTACH_ENTITY_TO_ENTITY`](#_0x6B9BBD38AB0796DF)) that are not controlled by the client.
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x267C78C60E806B9A
 */
export function networkAllowRemoteAttachmentModification(entity: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x728C4CC7920CD102
 */
export function networkGetPresenceInvitePlaylistCurrent(p0: any): any;

/**
 * ```
 * value must be < 255
 * ```
 * @param id - 
 * @returns void
 * @remarks Hash: 0x1775961C2FBBCB5C
 */
export function networkSetPropertyId(id: number): void;

/**
 * ## Parameters
 * *
 * @param offset - 
 * @param count - 
 * @param contentTypeName - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x6D4CB481FAC835E8
 */
export function UgcQueryRecentlyCreatedContent(offset: number, count: number, contentTypeName: string, p3: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xCEF70AA5B3F89BA1
 */
export function networkSessionIsPrivate(): number;

/**
 * ## Parameters
 * *
 * @param netScene - 
 * @param entity - 
 * @param bone - 
 * @returns void
 * @remarks Hash: 0x478DCBD2A98B705A
 */
export function networkAttachSynchronisedSceneToEntity(netScene: number, entity: number, bone: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x0B824797C9BF2159
 */
export function networkIsTransitionHost(): number;

/**
 * ## Parameters
 * *
 * @param tunableContext - 
 * @param tunableName - 
 * @param value - 
 * @returns number
 * @remarks Hash: 0x8BE1146DFD5D4468
 */
export function networkAccessTunableInt(tunableContext: string, tunableName: string, value: number): number;

/**
 * ## Parameters
 * *
 * @param clanDesc - 
 * @returns number
 * @remarks Hash: 0x9FAAA4F4FC71F87F
 */
export function networkClanJoin(clanDesc: number): number;

/**
 * ```
 * Return the local Participant ID.  
 * This native is exactly the same as 'PARTICIPANT_ID' native.  
 * ```
 * @returns number
 * @remarks Hash: 0x57A3BDDAD8E5AA0A
 */
export function participantIdToInt(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0xF9E1CCAE8BA4C281
 */
export function ugcGetFriendContent(p0: any, p1: any, p2: any, p3: any): number;

/**
 * ```
 * Internal logging string: SCRIPT_RESERVING_LOCAL_PEDS
 * ```
 * 
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x2C8DF5D129595281
 */
export function ReserveNetworkLocalPeds(amount: number): void;

/**
 * ```
 * index2 is unused
 * ```
 * @param index - 
 * @param index2 - 
 * @returns string
 * @remarks Hash: 0x6F44CBF56D79FAC0
 */
export function getCommerceItemCat(index: number, index2: number): string;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0xA989044E70010ABE
 */
export function networkClanDownloadMembership(networkHandle: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x638A3A81733086DB
 */
export function networkGetInstanceIdOfThisScript(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xCE86D8191B762107
 */
export function networkGetPrimaryClanDataStart(p0: any, p1: any): number;

/**
 * @returns void
 * @remarks Hash: 0xC2B82527CA77053E
 */
export function networkClearPropertyId(): void;

/**
 * From what I can tell it looks like it does the following:
 * 
 * Creates/hosts a new transition to another online session, using this in FiveM will result in other players being disconencted from the server/preventing them from joining. This is most likely because I entered the wrong session parameters since they're pretty much all unknown right now.
 * 
 * You also need to use `NetworkJoinTransition(Player player)` and `NetworkLaunchTransition()`.
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @returns number
 * @remarks Hash: 0xA60BB5CE242BB254
 */
export function networkHostTransition(p0: number, p1: number, p2: number, p3: number, p4: any, p5: number, p6: number, p7: number, p8: any, p9: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns number
 * @remarks Hash: 0x692D58DF40657E8C
 */
export function 0x692d58df40657e8c(p0: any, p1: any, p2: any, p3: any, p4: any, p5: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xCA575C391FEA25CC
 */
export function 0xca575c391fea25cc(p0: any): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x74732C6CA90DA2B4
 */
export function networkSessionIsClosedCrew(): number;

/**
 * Returns a local synchronized scene handle of a networked synchronised scene.
 * @param netSceneId - 
 * @returns number
 * @remarks Hash: 0x02C40BF885C567B6
 */
export function networkGetLocalSceneFromNetworkId(netSceneId: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xF1EEA2DDA9FFA69D
 */
export function networkSessionSetMatchmakingMentalState(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0x678BB03C1A3BD51E
 */
export function ugcGetGetByCategory(p0: any, p1: any, p2: any, p3: any, p4: any): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xEF0912DDF7C4CB4B
 */
export function networkSessionIsVoiceSessionBusy(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x579CCED0265D4896
 */
export function networkClanServiceIsValid(): number;

/**
 * ## Parameters
 * *
 * @param handle - 
 * @returns number
 * @remarks Hash: 0x3A3D5568AF297CD5
 */
export function cloudDidRequestSucceed(handle: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xEFFB25453D8600F9
 */
export function networkIsCableConnected(): number;

/**
 * Enables ghosting between specific players. Name is between `_SET_RELATIONSHIP_GROUP_DONT_AFFECT_WANTED_LEVEL` and `SET_ROADS_BACK_TO_ORIGINAL`.
 * @param player - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xA7C511FA1C5BDA38
 */
export function SetRelationshipToPlayer(player: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param hours - 
 * @param minutes - 
 * @param seconds - 
 * @returns void
 * @remarks Hash: 0x6D03BFBD643B2A02
 */
export function networkGetGlobalMultiplayerClock(hours: number, minutes: number, seconds: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x76BF03FADBF154F5
 */
export function networkHasSocialNetworkingSharingPriv(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x73E2B500410DA5A2
 */
export function networkGetActivityPlayerNum(p0: number): number;

/**
 * ```
 * Subtracts the first argument from the second, then returns whether the result is negative.  
 * ```
 * @param timeA - 
 * @param timeB - 
 * @returns number
 * @remarks Hash: 0xDE350F8651E4346C
 */
export function isTimeMoreThan(timeA: number, timeB: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x12B37D54667DB0B8
 */
export function setPlayerInvisibleLocally(player: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x759299C5BB31D2A9
 */
export function ugcGetContentRatingCount(p0: any, p1: any): any;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xD83C2B94E7508980
 */
export function networkIsSessionActive(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x422D396F80A96547
 */
export function networkHaveRosLeaderboardWritePriv(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x6FF8FF40B6357D45
 */
export function networkIsParticipantActive(p0: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x9A4CF4F48AD77302
 */
export function networkIsCloudAvailable(): number;

/**
 * ```
 * returns true if someone is screaming or talking in a microphone  
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x031E11F3D447647E
 */
export function networkIsPlayerTalking(player: number): number;

/**
 * ## Parameters
 * *
 * @param contentTypeName - 
 * @param contentId - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0x7FD2990AF016795E
 */
export function ugcRequestContentDataFromParams(contentTypeName: string, contentId: string, p2: number, p3: number, p4: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x9AC9CCBFA8C29795
 */
export function networkHasPlayerStartedTransition(player: number): number;

/**
 * ## Parameters
 * *
 * @param pickup - 
 * @returns number
 * @remarks Hash: 0x5BC9495F0B3B6FA6
 */
export function networkHasControlOfPickup(pickup: number): number;

/**
 * ## Parameters
 * *
 * @param channel - 
 * @returns void
 * @remarks Hash: 0xEF6212C2EFEF1A23
 */
export function networkSetVoiceChannel(channel: number): void;

/**
 * ## Parameters
 * *
 * @param timeout - 
 * @returns void
 * @remarks Hash: 0x5B8ED3DB018927B1
 */
export function networkSessionVoiceSetTimeout(timeout: number): void;

/**
 * @returns void
 * @remarks Hash: 0x1888694923EF4591
 */
export function networkClearGroupActivity(): void;

/**
 * ## Parameters
 * *
 * @param netHandle - 
 * @returns number
 * @remarks Hash: 0x367B936610BA360C
 */
export function netToVeh(netHandle: number): number;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @returns void
 * @remarks Hash: 0x966DD84FB6A46017
 */
export function ClearLaunchParams(): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xBF22E0F32968E967
 */
export function 0xbf22e0f32968e967(player: number, p1: number): void;

/**
 * ```
 * SET_NETWORK_*
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x13F1FCB111B820B0
 */
export function 0x13f1fcb111b820b0(p0: number): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x0F1A4B45B7693B95
 */
export function 0x0f1a4b45b7693b95(p0: any, p1: any): void;

/**
 * @returns void
 * @remarks Hash: 0xA29177F7703B5644
 */
export function networkSessionForceCancelInvite(): void;

/**
 * ```
 * NativeDB Introduced: v2245
 * ```
 * @param scriptHash - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0xDA7DE67F5FE5EE13
 */
export function NetworkIsScriptActiveByHash(scriptHash: number, p1: number, p2: number, p3: number): number;

/**
 * ## Return value
 * Returns the network time this tick, if you want a tick-agnostic version use [`GetNetworkTimeAccurate`](#_0x89023FBBF9200E9F).
 * @returns number
 * @remarks Hash: 0x7A5487FE9FAA6B48
 */
export function getNetworkTime(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xD38C4A6D047C019D
 */
export function NetworkGetNumBodyTrackers(): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns void
 * @remarks Hash: 0xE57397B4A3429DD0
 */
export function networkSessionGetInviter(networkHandle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x37A4494483B9F5C9
 */
export function networkIsTransitionOpenToMatchmaking(): number;

/**
 * ## Parameters
 * *
 * @param netId - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0x3FA36981311FA4FF
 */
export function 0x3fa36981311fa4ff(netId: number, state: number): void;

/**
 * ```
 * Only works as host.
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0xFA8904DC5F304220
 */
export function networkSessionKickPlayer(player: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x796A87B3B68D1F3D
 */
export function NetworkSetCurrentDataManagerHandle(p0: any): number;

/**
 * Sets the alpha value used by [`_SET_LOCAL_PLAYER_AS_GHOST`](#_0x5FFE9B4144F9712F), [`SET_NETWORK_VEHICLE_AS_GHOST`](#_0x6274C4712850841E), and [`_NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER`](#_0x4BA166079D658ED4).
 * 
 * 'Solidness' cannot be achieved using 255 - this will have the opposite effect of it defaulting to 128 it seems (or just having no effect at all).
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0x658500AE6D723A7E
 */
export function SetGhostedEntityAlpha(alpha: number): void;

/**
 * ## Parameters
 * *
 * @param doorID - 
 * @returns number
 * @remarks Hash: 0x870DDFD5A4A796E4
 */
export function networkRequestControlOfDoor(doorID: number): number;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x95BAF97C82464629
 */
export function 0x95baf97c82464629(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xC7827959479DCC78
 */
export function networkGetEntityIsNetworked(entity: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x8132C0EB8B2B3293
 */
export function networkIsCloudBackgroundScriptRequestPending(): number;

/**
 * ```
 * NativeDB Added Parameter 1: Player player
 * NativeDB Added Parameter 2: int a
 * NativeDB Added Parameter 3: int b
 * ```
 * @returns number
 * @remarks Hash: 0x472841A026D26D8B
 */
export function RemoteCheatDetected(): number;

/**
 * ```
 * Returns true if the two times are equal; otherwise returns false.  
 * ```
 * @param timeA - 
 * @param timeB - 
 * @returns number
 * @remarks Hash: 0xF5BC95857BD6D512
 */
export function isTimeEqualTo(timeA: number, timeB: number): number;

/**
 * ## Parameters
 * *
 * @param tunableContext - 
 * @param tunableName - 
 * @param value - 
 * @returns number
 * @remarks Hash: 0x972BC203BBC4C4D5
 */
export function networkAccessTunableFloatHash(tunableContext: number, tunableName: number, value: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA72835064DD63E4C
 */
export function getMaxNumNetworkPickups(): number;

/**
 * ## Parameters
 * *
 * @param areaHandle - 
 * @returns number
 * @remarks Hash: 0xE64A3CA08DFA37A9
 */
export function networkEntityAreaDoesExist(areaHandle: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xC080FF658B2E41DA
 */
export function networkGetPrimaryClanDataNew(p0: any, p1: any): number;

/**
 * ## Parameters
 * *
 * @param time - 
 * @returns void
 * @remarks Hash: 0x2D95C7E2D7E07307
 */
export function networkSetLocalPlayerInvincibleTime(time: number): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @returns void
 * @remarks Hash: 0x5C497525F803486B
 */
export function 0x5c497525f803486b(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x12B6281B6C6706C0
 */
export function getNumCreatedMissionObjects(p0: number): number;

/**
 * ## Parameters
 * *
 * @param doorHash - 
 * @returns number
 * @remarks Hash: 0xCB3C68ADB06195DF
 */
export function networkHasControlOfDoor(doorHash: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD830567D88A1E873
 */
export function networkSetEntityCanBlend(entity: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x4DF7CFFF471A7FB1
 */
export function 0x4df7cfff471a7fb1(p0: any): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xFC18DB55AE19E046
 */
export function networkSetInFreeCamMode(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x77758139EC9B66C7
 */
export function usePlayerColourInsteadOfTeamColour(toggle: number): void;

/**
 * ```
 * 11 - Need to download tunables.  
 * 12 - Need to download background script.  
 * Returns 1 if the multiplayer is loaded, otherwhise 0.  
 * ```
 * @param loadingState - 
 * @returns number
 * @remarks Hash: 0xAF50DA1A3F8B1BA4
 */
export function networkCanAccessMultiplayer(loadingState: number): number;

/**
 * ```
 * Only documented...  
 * ```
 * @param animDict - 
 * @param animName - 
 * @returns number
 * @remarks Hash: 0x729E3401F0430686
 */
export function NetworkClanAnimation(animDict: string, animName: string): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x3F9990BF5F22759C
 */
export function networkHasTransitionInviteBeenAcked(networkHandle: number): number;

/**
 * ## Return value
 * Hard-coded to always return 1.
 * @returns any
 * @remarks Hash: 0xEBCAB9E5048434F4
 */
export function 0xebcab9e5048434f4(): any;

/**
 * ## Parameters
 * *
 * @param ped_amt - 
 * @param vehicle_amt - 
 * @param object_amt - 
 * @param pickup_amt - 
 * @returns number
 * @remarks Hash: 0x69778E7564BADE6D
 */
export function canRegisterMissionEntities(ped_amt: number, vehicle_amt: number, object_amt: number, pickup_amt: number): number;

/**
 * @returns void
 * @remarks Hash: 0x68103E2247887242
 */
export function 0x68103e2247887242(): void;

/**
 * @returns void
 * @remarks Hash: 0xC6F8AB8A4189CF3A
 */
export function networkSessionJoinInvite(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xF98DDE0A8ED09323
 */
export function ugcSetQueryDataFromOffline(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x3658E8CD94FC121A
 */
export function networkGetNumScriptParticipants(p0: any, p1: any, p2: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x7524B431B2E6F7EE
 */
export function networkRemoveTransitionInvite(p0: any): void;

/**
 * ```
 * Subtracts the second argument from the first.  
 * ```
 * @param timeA - 
 * @param timeB - 
 * @returns number
 * @remarks Hash: 0xA2C6FC031D46FFF0
 */
export function getTimeDifference(timeA: number, timeB: number): number;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x3A8B55FDA4C8DDEF
 */
export function NetworkRegisterTunableIntHash(): number;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @returns void
 * @remarks Hash: 0xFAC18E7356BD3210
 */
export function 0xfac18e7356bd3210(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x3F52E880AAF6C8CA
 */
export function networkSessionSetMatchmakingPropertyId(p0: number): void;

/**
 * @returns void
 * @remarks Hash: 0xFB3272229A82C759
 */
export function networkClearTransitionCreatorHandle(): void;

/**
 * ```
 * String "NETWORK_SEND_PRESENCE_TRANSITION_INVITE" is contained in the function in ida so this one is correct.  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0xC116FF9B4D488291
 */
export function NetworkSendPresenceTransitionInvite(p0: any, p1: any, p2: any, p3: any): number;

/**
 * ## Parameters
 * *
 * @param index - 
 * @returns string
 * @remarks Hash: 0x662635855957C411
 */
export function getCommerceItemId(index: number): string;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xDFF09646E12EC386
 */
export function networkGetPresenceInviteId(p0: any): any;

/**
 * @returns void
 * @remarks Hash: 0xF03755696450470C
 */
export function networkClearVoiceProximityOverride(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xAEAB987727C5A8A4
 */
export function 0xaeab987727c5a8a4(p0: any): number;

/**
 * @returns void
 * @remarks Hash: 0x2302C0264EA58D31
 */
export function 0x2302c0264ea58d31(): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x42613035157E4208
 */
export function ReserveNetworkLocalVehicles(amount: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns any
 * @remarks Hash: 0x04918A41BC9B8157
 */
export function 0x04918a41bc9b8157(p0: any, p1: any, p2: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xF49ABC20D8552257
 */
export function 0xf49abc20d8552257(p0: any): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x8C71288AE68EDE39
 */
export function networkIsPlayerMutedByMe(player: number): number;

/**
 * Adds a ped to a networked synchronized scene but extends [`NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE`](#_0x742A637471BCECD9) to support IK flags.
 * There is barely any difference between this and [`NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE`](#_0x742A637471BCECD9).
 * 
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @returns void
 * @remarks Hash: 0xA5EAFE473E45C442
 */
export function networkAddPedToSynchronisedSceneWithIk(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5DC577201723960A
 */
export function networkIsTransitionSolo(): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns string
 * @remarks Hash: 0xC82630132081BB6F
 */
export function networkMemberIdFromGamerHandle(networkHandle: number): string;

/**
 * ```
 * This is used alongside the native,
 * 'NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS'. Read its description for more info.
 * ```
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x97DD4C5944CC2E6A
 */
export function networkOverrideSendRestrictions(player: number, toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xAC8C7B9B88C4A668
 */
export function networkHasPendingInvite(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param player - 
 * @returns number
 * @remarks Hash: 0xAEEF48CDF5B6CE7C
 */
export function networkHaveCommunicationPrivileges(p0: number, player: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x144DA052257AE7D8
 */
export function 0x144da052257ae7d8(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x72D918C99BCACC54
 */
export function networkHaveUserContentPrivileges(p0: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xD23A1A815D21DB19
 */
export function networkLeaveTransition(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xFFE1E5B792D92B34
 */
export function networkJoinPreviouslyFailedTransition(): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param numReservedPeds - 
 * @param numReservedVehicles - 
 * @param numReservedObjects - 
 * @returns void
 * @remarks Hash: 0xE42D626EEC94E5D9
 */
export function 0xe42d626eec94e5d9(p0: any, p1: any, p2: any, p3: any, numReservedPeds: number, numReservedVehicles: number, numReservedObjects: number): void;

/**
 * ```
 * calls from vehicle to net.  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xB4C94523F023419C
 */
export function vehToNet(vehicle: number): number;

/**
 * ```
 * Same as _IS_TEXT_CHAT_ACTIVE, except it does not check if the text chat HUD component is initialized, and therefore may crash.  
 * ```
 * @returns number
 * @remarks Hash: 0x5FCF4D7069B09026
 */
export function NetworkIsTextChatActive(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5D10B3795F3FC886
 */
export function networkHasReceivedHostBroadcastData(): number;

/**
 * @returns void
 * @remarks Hash: 0x6D14CCEE1B40381A
 */
export function networkClearFoundGamers(): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns number
 * @remarks Hash: 0x0A49D1CB6E34AF72
 */
export function CanRegisterMissionPickups(amount: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF46A1E03E8755980
 */
export function networkSetNoSpectatorChat(toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x83CD99A1E6061AB5
 */
export function networkIsHostOfThisScript(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xE0A6138401BCB837
 */
export function ugcGetContentNum(): any;

/**
 * ```
 * NETWORK_GET_NUM_*
 * ```
 * @returns number
 * @remarks Hash: 0x617F49C2668E6155
 */
export function 0x617f49c2668e6155(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xADA24309FE08DACF
 */
export function networkIsInTutorialSession(): number;

/**
 * ```
 * bufferSize is 35 in the scripts.
 * ```
 * @param clanDesc - 
 * @param bufferSize - 
 * @returns void
 * @remarks Hash: 0xF45352426FF3A4F0
 */
export function networkClanGetUiFormattedTag(clanDesc: number, bufferSize: number): void;

/**
 * @returns void
 * @remarks Hash: 0x3B3D11CD9FFCDFC9
 */
export function networkSetMissionFinished(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xDDDF64C91BFCF0AA
 */
export function networkIsFindingGamers(): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x919B3C98ED8292F9
 */
export function networkIsPlayerConcealed(player: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x75138790B4359A74
 */
export function networkSetActivitySpectator(toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0xF814FEC6A19FD6E0
 */
export function 0xf814fec6a19fd6e0(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x606E4D3E3CCCF3EB
 */
export function networkHaveRosSocialClubPriv(): number;

/**
 * ```
 * Returns count.
 * ```
 * @param data - 
 * @param dataCount - 
 * @returns number
 * @remarks Hash: 0x73B000F7FBC55829
 */
export function networkGetTransitionMembers(data: any, dataCount: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC927EC229934AF60
 */
export function networkCanSetWaypoint(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x5ECD378EE64450AB
 */
export function 0x5ecd378ee64450ab(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x1D610EB0FEA716D9
 */
export function 0x1d610eb0fea716d9(p0: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x5539C3EBF104A53A
 */
export function 0x5539c3ebf104a53a(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xFD75DABC0957BF33
 */
export function 0xfd75dabc0957bf33(p0: number): void;

/**
 * Checks if a crew/membership for a player, from the cache (i.e. downloaded via NETWORK_CLAN_DOWNLOAD_MEMBERSHIP) is valid.
 * @param networkHandle - 
 * @param membershipIndex - 
 * @returns number
 * @remarks Hash: 0x48A59CF88D43DF0E
 */
export function networkClanGetMembershipValid(networkHandle: number, membershipIndex: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x883D79C4071E18B3
 */
export function isStoreAvailableToUser(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xBA7F0B77D80A4EB7
 */
export function 0xba7f0b77d80a4eb7(p0: any, p1: any): void;

/**
 * I've had this return the player's ped handle sometimes, but also other random entities.
 * 
 * Whatever p0 is, it's at least not synced to other players.
 * At least not all the time, some p0 values actually output the same entity, (different handle of course, but same entity).
 * But another p0 value may return an entity for player x, but not for player y (it'll just return -1 even if the entity exists on both clients).
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x37D5F739FD494675
 */
export function 0x37d5f739fd494675(p0: any): number;

/**
 * ## Parameters
 * *
 * @param heistName - 
 * @param cashEarned - 
 * @param xpEarned - 
 * @returns number
 * @remarks Hash: 0x098AB65B9ED9A9EC
 */
export function FacebookSetHeistComplete(heistName: string, cashEarned: number, xpEarned: number): number;

/**
 * ```
 * R* uses this to hear all player when spectating.   
 * It allows you to hear other online players when their chat is on none, crew and or friends  
 * ```
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDDF73E2B1FEC5AB4
 */
export function networkOverrideReceiveRestrictions(player: number, toggle: number): void;

/**
 * ```
 * milestoneId:  
 * 0 = "percentcomplete"  
 * 1 = "storycomplete"  
 * 2 = "vehicles"  
 * 3 = "properties"  
 * 4 = "psych"  
 * 5 = "mapreveal"  
 * 6 = "prologue"  
 * ```
 * @param milestoneId - 
 * @returns number
 * @remarks Hash: 0x0AE1F1653B554AB9
 */
export function FacebookSetMilestoneComplete(milestoneId: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xB746D20B17F2A229
 */
export function 0xb746d20b17f2a229(p0: any, p1: any): number;

/**
 * ```
 * scriptName examples:  
 * "freemode", "AM_CR_SecurityVan", ...  
 * Most of the time, these values are used:  
 * p1 = -1  
 * p2 = 0  
 * ```
 * @param scriptName - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x1D6A14F1F9A736FC
 */
export function networkGetHostOfScript(scriptName: string, p1: number, p2: number): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x87EB7A3FFCB314DB
 */
export function NetworkIsFriendHandleOnline(networkHandle: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x8C8D2739BA44AF0F
 */
export function 0x8c8d2739ba44af0f(p0: any): number;

/**
 * ## Parameters
 * *
 * @param friendName - 
 * @returns number
 * @remarks Hash: 0x57005C18827F3A28
 */
export function networkIsFriendInMultiplayer(friendName: string): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x0C978FDA19692C2C
 */
export function networkSetTransitionVisibilityLock(p0: number, p1: number): void;

/**
 * ```
 * Online version is defined here: update\update.rpf\common\data\version.txt
 * Example:
 * [ONLINE_VERSION_NUMBER]
 * 1.33
 * _GET_ONLINE_VERSION() will return "1.33"
 * ```
 * @returns string
 * @remarks Hash: 0xFCA9373EF340AC0A
 */
export function GetOnlineVersion(): string;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param maxPlayers - 
 * @returns number
 * @remarks Hash: 0xED34C0C02C098BB7
 */
export function networkSessionHostClosed(p0: number, maxPlayers: number): number;

/**
 * ```
 * NETWORK_ARE_*  
 * ```
 * @param player - 
 * @param index - 
 * @returns number
 * @remarks Hash: 0x9DE986FC9A87C474
 */
export function NetworkIsPlayerEqualToIndex(player: number, index: number): number;

/**
 * @returns void
 * @remarks Hash: 0x72D0706CD6CCDB58
 */
export function releaseAllCommerceItemImages(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x584770794D758C18
 */
export function 0x584770794d758c18(p0: any, p1: any): number;

/**
 * ## Return value
 * Hard-coded to always return 0.
 * @returns any
 * @remarks Hash: 0x6FB7BB3607D27FA2
 */
export function 0x6fb7bb3607d27fa2(): any;

/**
 * ## Return value
 * @returns string
 * @remarks Hash: 0xC55A0B40FFB1ED23
 */
export function ugcGetCreateContentId(): string;

/**
 * ## Parameters
 * *
 * @param tunableContext - 
 * @param tunableName - 
 * @param value - 
 * @returns number
 * @remarks Hash: 0xE5608CA7BC163A5F
 */
export function networkAccessTunableFloat(tunableContext: string, tunableName: string, value: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA0AD7E2AF5349F61
 */
export function networkHaveRosCreateTicketPriv(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xA306F470D1660581
 */
export function 0xa306f470d1660581(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x8806CEBFABD3CE05
 */
export function networkGetPresenceInviteIsTournament(p0: any): number;

/**
 * ```
 * Returns true if dinput8.dll is present in the game directory.
 * You will get following error message if that is true: "You are attempting to access GTA Online servers with an altered version of the game."
 * ```
 * @returns number
 * @remarks Hash: 0x659CF2EF7F550C4F
 */
export function NetworkHasGameBeenAltered(): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x3CA58F6CB7CBD784
 */
export function networkIsPlayerAParticipant(player: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x5A34CD9C3C5BEC44
 */
export function 0x5a34cd9c3c5bec44(p0: any): number;

/**
 * ## Parameters
 * *
 * @param areaHandle - 
 * @returns number
 * @remarks Hash: 0x4A2D4E8BF4265B0F
 */
export function networkEntityAreaIsOccupied(areaHandle: number): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns void
 * @remarks Hash: 0x66F010A4B031A331
 */
export function networkSetInviteOnCallForInviteMenu(networkHandle: number): void;

/**
 * ```
 * Always returns -1. Seems to be XB1 specific.
 * ```
 * @param netHandle - 
 * @returns number
 * @remarks Hash: 0xDEB2B99A1AF1A2A6
 */
export function NetworkStartUserContentPermissionsCheck(netHandle: any): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x0DBD5D7E3C5BEC3B
 */
export function networkIsTransitionClosedCrew(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x941E5306BCD7C2C7
 */
export function ugcDidGetSucceed(): any;

/**
 * ```
 * Return the mission id of a job.
 * ```
 * @param p0 - 
 * @returns string
 * @remarks Hash: 0x55AA95F481D694D2
 */
export function ugcGetContentId(p0: number): string;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param heading - 
 * @returns void
 * @remarks Hash: 0xA7E30DE9272B6D49
 */
export function networkOverrideCoordsAndHeading(entity: number, x: number, y: number, z: number, heading: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xA134777FF7F33331
 */
export function networkClanIsEmblemReady(p0: any, p1: any): number;

/**
 * ```
 * Returns the amount of players connected in the current session. Only works when connected to a session/server.  
 * ```
 * @returns number
 * @remarks Hash: 0xA4A79DD2D9600654
 */
export function networkGetNumConnectedPlayers(): number;

/**
 * @returns void
 * @remarks Hash: 0x265635150FB0D82E
 */
export function 0x265635150fb0d82e(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x32EBD154CB6B8B99
 */
export function 0x32ebd154cb6b8b99(p0: any, p1: any, p2: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x162C23CA83ED0A62
 */
export function 0x162c23ca83ed0a62(p0: any): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x05095437424397FA
 */
export function networkIsActivitySession(): number;

/**
 * ```
 * bufferSize is 35 in the scripts.  
 * bufferSize is the elementCount of p0(desc), sizeof(p0) == 280 == p1*8 == 35 * 8, p2(netHandle) is obtained from NETWORK::NETWORK_HANDLE_FROM_PLAYER.  And no, I can't explain why 35 * sizeof(int) == 280 and not 140, but I'll get back to you on that.  
 * the answer is: because p0 an int64_t* / int64_t[35].  and FYI p2 is an int64_t[13]  
 * pastebin.com/cSZniHak  
 * ```
 * @param clanDesc - 
 * @param bufferSize - 
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0xEEE6EACBE8874FBA
 */
export function networkClanPlayerGetDesc(clanDesc: number, bufferSize: number, networkHandle: number): number;

/**
 * @returns void
 * @remarks Hash: 0xBA96394A0EECFA65
 */
export function ugcClearQueryResults(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xD1065D68947E7B6E
 */
export function setLocalPlayerVisibleInCutscene(p0: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x1F8E00FB18239600
 */
export function 0x1f8e00fb18239600(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xCFD115B373C0DF63
 */
export function ugcGetContentUpdatedDate(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xB69317BF5E782347
 */
export function networkRequestControlOfEntity(entity: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x593570C289A77688
 */
export function NetworkGetRosPrivilege24(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x9AA46BADAD0E27ED
 */
export function networkGetPrimaryClanDataClear(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param maxPlayers - 
 * @returns number
 * @remarks Hash: 0x3E9BB38102A589B0
 */
export function networkDoTransitionToGame(p0: number, maxPlayers: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x76D9B976C4C09FDE
 */
export function networkHasFollowInvite(): number;

/**
 * ```
 * Enables a periodic ShapeTest within the NetBlender and invokes rage::netBlenderLinInterp::GoStraightToTarget (or some functional wrapper).
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x838DA0936A24ED4D
 */
export function SetNetworkEnableVehiclePositionCorrection(vehicle: number, toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x2910669969E9535E
 */
export function networkGetThisScriptIsNetworkScript(): number;

/**
 * ```
 * Return the content modifier id (the tunables context if you want) of a specific content.  
 * It takes the content hash (which is the mission id hash), and return the content modifier id, used as the tunables context.  
 * The mission id can be found on the Social club, for example, 'socialclub.rockstargames.com/games/gtav/jobs/job/A8M6Bz8MLEC5xngvDCzGwA'  
 * 'A8M6Bz8MLEC5xngvDCzGwA' is the mission id, so the game hash this and use it as the parameter for this native.  
 * ```
 * @param contentHash - 
 * @returns number
 * @remarks Hash: 0x187382F8A3E0A6C3
 */
export function networkGetContentModifierListId(contentHash: number): number;

/**
 * ## Parameters
 * *
 * @param netId - 
 * @returns number
 * @remarks Hash: 0xA1607996431332DF
 */
export function isNetworkIdOwnedByParticipant(netId: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xA73667484D7037C3
 */
export function networkSessionBlockJoinRequests(toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x9D7696D8F4FA6CB7
 */
export function networkIsTransitionToGame(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xCF61D4B4702EE9EB
 */
export function networkGetTotalNumPlayers(): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param player - 
 * @returns number
 * @remarks Hash: 0x99B72C7ABDE5C910
 */
export function networkApplyCachedPlayerHeadBlendData(ped: number, player: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x7DB53B37A2F211A0
 */
export function 0x7db53b37a2f211a0(): number;

/**
 * ```
 * Note according to IDA TU27 X360(Console),  
 * This native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.  
 * Side note: This location just stops where it's at once jumped to.  
 * Screenshot for side note,   
 * h t t p ://i.imgur.com/m2ci1mF.png  
 * h t t p://i.imgur.com/Z0Wx2B6.png  
 * ```
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x676ED266AADD31E0
 */
export function networkIsPartyMember(networkHandle: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC7ABAC5DE675EE3B
 */
export function cloudIsCheckingAvailability(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xB5074DB804E28CE7
 */
export function networkGetPrimaryClanDataPending(): any;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x0467C11ED88B7D28
 */
export function networkIsTunableCloudRequestPending(): number;

/**
 * To remove, see: [`NETWORK_REMOVE_ENTITY_AREA`](#_0x93CF869BAA0C4874).
 * 
 * See [`IS_POINT_IN_ANGLED_AREA`](#_0x2A70BAE8883E4C81) for the definition of an angled area.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param width - 
 * @returns any
 * @remarks Hash: 0x376C6375BA60293A
 */
export function networkAddEntityAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): any;

/**
 * ```
 * Same as NETWORK_CAN_COMMUNICATE_WITH_GAMER
 * 
 * NETWORK_CAN_*
 * ```
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x8F5D1AD832AEB06C
 */
export function NetworkCanCommunicateWithGamer2(networkHandle: any): number;

/**
 * ```
 * Internal logging string: SCRIPT_RESERVING_LOCAL_OBJECTS
 * ```
 * 
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x797F9C5E661D920E
 */
export function ReserveNetworkLocalObjects(amount: number): void;

/**
 * ```
 * Returns a NetworkHandle* from the specified member ID and stores it in a given buffer.  
 * * Currently unknown struct  
 * ```
 * @param memberId - 
 * @param networkHandle - 
 * @param bufferSize - 
 * @returns void
 * @remarks Hash: 0xA0FD21BED61E5C4C
 */
export function networkHandleFromMemberId(memberId: string, networkHandle: number, bufferSize: number): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0xD414BE129BB81B32
 */
export function NetworkGetAverageLatencyForPlayer(player: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x74881E6BCAE2327C
 */
export function networkGetCurrentlySelectedGamerHandleFromInviteMenu(p0: any): number;

/**
 * ```
 * In scripts R* calls 'NETWORK_GET_FRIEND_NAME' in this param.  
 * ```
 * @param friendName - 
 * @returns number
 * @remarks Hash: 0x2EA9A3BEDF3F17B8
 */
export function networkIsFriendInSameTitle(friendName: string): number;

/**
 * ```
 * NETWORK_*
 * 
 * NativeDB Introduced: v323
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x3765C3A3E8192E10
 */
export function NetworkGetUnreliableResendCountForPlayer(player: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x113E6E3E50E286B0
 */
export function networkClanReleaseEmblem(p0: any): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x57D158647A6BFABF
 */
export function networkGetScriptStatus(): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC505036A35AFD01B
 */
export function networkDisableLeaveRemotePedBehind(toggle: number): void;

/**
 * ```
 * p2 is true 3/4 of the occurrences I found.  
 * 'players' is the number of players for a session. On PS3/360 it's always 18. On PC it's 32.  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param players - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0x3AAD8B2FCA1E289F
 */
export function networkDoTransitionToFreemode(p0: any, p1: any, p2: number, players: number, p4: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x01BF60A500E28887
 */
export function networkHasControlOfEntity(entity: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param players - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns number
 * @remarks Hash: 0x9E80A5BA8109F974
 */
export function networkDoTransitionToNewFreemode(p0: any, p1: any, players: number, p3: number, p4: number, p5: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x299EF3C576773506
 */
export function ugcHasModifyFinished(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x3195F8DD0D531052
 */
export function ugcGetMyContent(p0: any, p1: any, p2: any, p3: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x7284A47B3540E6CF
 */
export function networkHasInvitedGamerToTransition(p0: any): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x9614B71F8ADB982B
 */
export function networkGetAgeGroup(): number;

/**
 * ```
 * p0 is always 0. p1 is pointing to a global.  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0xFB1F9381E80FA13F
 */
export function 0xfb1f9381e80fa13f(p0: number, p1: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xFA91550DF9318B22
 */
export function networkAcceptPresenceInvite(p0: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xCFEB46DCD7D8D5EB
 */
export function 0xcfeb46dcd7d8d5eb(p0: number): void;

/**
 * ```
 * Subtracts the second argument from the first, then returns whether the result is negative.  
 * ```
 * @param timeA - 
 * @param timeB - 
 * @returns number
 * @remarks Hash: 0xCB2CF5148012C8D0
 */
export function isTimeLessThan(timeA: number, timeB: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns any
 * @remarks Hash: 0x494C8FB299290269
 */
export function networkAddEntityArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): any;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x10FAB35428CCC9D7
 */
export function networkIsGameInProgress(): number;

/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * NativeDB Added Parameter 2: int p1
 * NativeDB Added Parameter 3: int p2
 * ```
 * @returns void
 * @remarks Hash: 0xEAA572036990CD1B
 */
export function networkBailTransition(): void;

/**
 * Overrides the game clock time for the local player, allowing for manipulation of the in-game time. This native is effective in both multiplayer and singleplayer modes.
 * @param hours - 
 * @param minutes - 
 * @param seconds - 
 * @returns void
 * @remarks Hash: 0xE679E3E06E363892
 */
export function networkOverrideClockTime(hours: number, minutes: number, seconds: number): void;

/**
 * Sets the alpha value used by [`_SET_LOCAL_PLAYER_AS_GHOST`](#_0x5FFE9B4144F9712F), [`SET_NETWORK_VEHICLE_AS_GHOST`](#_0x6274C4712850841E), and [`_NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER`](#_0x4BA166079D658ED4).
 * @returns void
 * @remarks Hash: 0x17330EBF2F2124A8
 */
export function ResetGhostedEntityAlpha(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xEA14EEF5B7CD2C30
 */
export function isCommerceDataValid(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x26F07DD83A5F7F98
 */
export function 0x26f07dd83a5f7f98(): any;

/**
 * Disconnects you from the session, and starts loading single player, however you still remain connected to the server (only if you're the host, if you're not then you also (most likely) get disconnected from the server) and other players will not be able to join until you exit the game.
 * 
 * If you're already in SP then it'll re-load singleplayer.
 * 
 * You might need to DoScreenFadeIn and ShutdownLoadingScreen otherwise you probably won't end up loading into SP at all.
 * 
 * Somewhat related note: opening the pause menu after loading into this 'singleplayer' mode crashes the game.
 * @returns number
 * @remarks Hash: 0x9ECA15ADFE141431
 */
export function ShutdownAndLoadMostRecentSave(): number;

/**
 * ## Parameters
 * *
 * @param netId - 
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xA8A024587329F36A
 */
export function setNetworkIdAlwaysExistsForPlayer(netId: number, player: number, toggle: number): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xB606E6CC59664972
 */
export function 0xb606e6cc59664972(p0: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE66C690248F11150
 */
export function networkApplyPedScarData(ped: number, p1: number): void;

/**
 * The Native returns a hash of the session id as string from the specific invite index!
 * @param inviteIndex - 
 * @returns number
 * @remarks Hash: 0x26E1CD96B0903D60
 */
export function networkGetPresenceInviteSessionId(inviteIndex: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5E24341A7F92A74B
 */
export function ugcHasCreateFinished(): number;

/**
 * @returns void
 * @remarks Hash: 0x1153FA02A659051C
 */
export function 0x1153fa02a659051c(): void;

/**
 * ```
 * Returns a NetworkHandle* from the specified user ID and stores it in a given buffer.  
 * * Currently unknown struct  
 * ```
 * @param userId - 
 * @param networkHandle - 
 * @param bufferSize - 
 * @returns void
 * @remarks Hash: 0xDCD51DD8F87AEC5C
 */
export function networkHandleFromUserId(userId: string, networkHandle: number, bufferSize: number): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x45E816772E93A9DB
 */
export function 0x45e816772e93a9db(): any;

/**
 * ## Parameters
 * *
 * @param maxNumMissionParticipants - 
 * @param p1 - 
 * @param instanceId - 
 * @returns void
 * @remarks Hash: 0x1CA59E306ECB80A5
 */
export function networkSetThisScriptIsNetworkScript(maxNumMissionParticipants: number, p1: number, instanceId: number): void;

/**
 * ```c
 * enum eMpSettingSpawn
 * {
 * 	MP_SETTING_SPAWN_NULL = 0,
 * 	MP_SETTING_SPAWN_PROPERTY = 1,
 * 	MP_SETTING_SPAWN_LAST_POSITION = 2,
 * 	MP_SETTING_SPAWN_GARAGE = 3,
 * 	MP_SETTING_SPAWN_RANDOM = 4,
 * 	MP_SETTING_SPAWN_PRIVATE_YACHT = 5,
 * 	MP_SETTING_SPAWN_OFFICE = 6,
 * 	MP_SETTING_SPAWN_CLUBHOUSE = 7,
 * 	MP_SETTING_SPAWN_IE_WAREHOUSE = 8,
 * 	MP_SETTING_SPAWN_BUNKER = 9,
 * 	MP_SETTING_SPAWN_HANGAR = 10,
 * 	MP_SETTING_SPAWN_DEFUNCT_BASE = 11,
 * 	MP_SETTING_SPAWN_NIGHTCLUB = 12,
 * 	MP_SETTING_SPAWN_ARENA_GARAGE = 13,
 * 	MP_SETTING_SPAWN_CASINO_APARTMENT = 14,
 * 	MP_SETTING_SPAWN_ARCADE = 15,
 * 	MP_SETTING_SPAWN_SUBMARINE = 16,
 * 	MP_SETTING_SPAWN_CAR_MEET = 17,
 * 	MP_SETTING_SPAWN_AUTO_SHOP = 18,
 * 	MP_SETTING_SPAWN_FIXER_HQ = 19,
 * 	MP_SETTING_SPAWN_MAX = 20,
 * };
 * ```
 * 
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param mpSettingSpawn - 
 * @returns void
 * @remarks Hash: 0xAA6D5451DC3448B6
 */
export function NetworkSetCurrentSpawnSetting(mpSettingSpawn: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xEF26739BCD9907D5
 */
export function networkSetTransitionCreatorHandle(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0xDB663CC9FF3407A9
 */
export function 0xdb663cc9ff3407a9(player: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF808475FA571D823
 */
export function networkSetFriendlyFireOption(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param team - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6F697A66CE78674E
 */
export function networkOverrideTeamRestrictions(team: number, toggle: number): void;

/**
 * Sets the provided entity not visible for yourself for the current frame.
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xE135A9FF3F5D05D8
 */
export function setEntityLocallyInvisible(entity: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @returns any
 * @remarks Hash: 0x257ED0FADF750BCF
 */
export function NetworkGetPositionHashOfThisScript(): any;

/**
 * ```
 * NETWORK_GET_*
 * 
 * NativeDB Introduced: v323
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x350C23949E43686C
 */
export function NetworkGetAveragePacketLossForPlayer(player: number): number;

/**
 * ```
 * NETWORK_SET_*
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x0D77A82DC2D0DA59
 */
export function 0x0d77a82dc2d0da59(p0: any, p1: any): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param player - 
 * @returns void
 * @remarks Hash: 0x6BFF5F84102DF80A
 */
export function 0x6bff5f84102df80a(player: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x77FADDCBE3499DF7
 */
export function 0x77faddcbe3499df7(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x595F028698072DD9
 */
export function networkCheckUserContentPrivileges(p0: number, p1: number, p2: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x1398582B7F72B3ED
 */
export function 0x1398582b7f72b3ed(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @returns any
 * @remarks Hash: 0x906CA41A4B74ECA4
 */
export function 0x906ca41a4b74eca4(): any;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x6B5C83BA3EFE6A10
 */
export function networkIsTransitionHostFromHandle(networkHandle: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x7CF0448787B23758
 */
export function ugcGetContentDescriptionHash(p0: any): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x0991549DE4D64762
 */
export function networkGetEntityIsLocal(entity: number): number;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param missionId - 
 * @returns void
 * @remarks Hash: 0x2C863ACDCD12B3DB
 */
export function NetworkSetCurrentMissionId(missionId: string): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xE26CCFF8094D8C74
 */
export function refreshPlayerListStats(p0: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x97A770BEEF227E2B
 */
export function networkGetBackgroundLoadingRecipients(p0: any, p1: any, p2: any, p3: any): number;

/**
 * ```
 * NETWORK_RE*
 * ```
 * @returns void
 * @remarks Hash: 0xF083835B70BA9BFE
 */
export function 0xf083835b70ba9bfe(): void;

/**
 * ```
 * Returns whether the game is not in offline mode.  
 * seemed not to work for some ppl  
 * ```
 * @returns number
 * @remarks Hash: 0x1077788E268557C2
 */
export function networkIsSignedOnline(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC7B4D79B01FA7A5C
 */
export function networkGetHostOfThisScript(): number;

/**
 * @returns void
 * @remarks Hash: 0x83FE8D7229593017
 */
export function 0x83fe8d7229593017(): void;

/**
 * ## Parameters
 * *
 * @param contentId - 
 * @param latestVersion - 
 * @param contentTypeName - 
 * @returns number
 * @remarks Hash: 0x158EC424F35EC469
 */
export function ugcQueryByContentId(contentId: string, latestVersion: number, contentTypeName: string): number;

/**
 * ## Return value
 * Hard-coded to always return 0.
 * @returns any
 * @remarks Hash: 0xA0FA4EC6A05DA44E
 */
export function 0xa0fa4ec6a05da44e(): any;

/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x17C9E241111A674D
 */
export function 0x17c9e241111a674d(p0: any, p1: any): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x6512765E3BE78C50
 */
export function networkIsTransitionClosedFriends(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xB5D3453C98456528
 */
export function 0xb5d3453c98456528(): any;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x76B02E21ED27A469
 */
export function reserveNetworkMissionVehicles(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xA6FCECCF4721D679
 */
export function 0xa6fceccf4721d679(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @returns void
 * @remarks Hash: 0x1F7BC3539F9E0224
 */
export function 0x1f7bc3539f9e0224(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x5B9E023DC6EBEDC0
 */
export function networkClanDownloadMembershipPending(p0: any): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x67A5589628E0CFF6
 */
export function networkHasSocialClubAccount(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x7F8413B7FC2AA6B9
 */
export function networkSessionVoiceRespondToRequest(p0: number, p1: number): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x9D724B400A7E8FFC
 */
export function 0x9d724b400a7e8ffc(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns number
 * @remarks Hash: 0x7277F1F2E085EE74
 */
export function canRegisterMissionVehicles(amount: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x271CC6AB59EBF9A5
 */
export function networkSessionMarkVisible(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x4D86CD31E8976ECE
 */
export function networkHasInvitedGamer(p0: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x30DE938B516F0AD2
 */
export function networkSetTransitionActivityId(p0: any): void;

/**
 * Returns the Name of the inviter of the specific selected Invite.
 * @param inviteIndex - 
 * @returns string
 * @remarks Hash: 0x4962CC4AA2F345B7
 */
export function networkGetPresenceInviteInviter(inviteIndex: number): string;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0x9F6E2821885CAEE2
 */
export function ugcGetCrewContent(p0: any, p1: any, p2: any, p3: any, p4: any): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x924426BFFD82E915
 */
export function networkRequestCloudBackgroundScripts(): number;

/**
 * ```
 * NativeDB Added Parameter 7: Any p6
 * NativeDB Added Parameter 8: Any p7
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns number
 * @remarks Hash: 0x9C4AB58491FDC98A
 */
export function networkDoTransitionQuickmatchWithGroup(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xEBFA8D50ADDC54C4
 */
export function 0xebfa8d50addc54c4(p0: any): number;

/**
 * Returns true if the specified network id is controlled by someone else.
 * @param netId - 
 * @returns number
 * @remarks Hash: 0x7242F8B741CE1086
 */
export function NetworkIsNetworkIdAClone(netId: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x82377B65E943F72D
 */
export function networkGetPlayerOwnsWaypoint(player: number): number;

/**
 * ```
 * Same as GET_RANDOM_INT_IN_RANGE
 * ```
 * @param rangeStart - 
 * @param rangeEnd - 
 * @returns number
 * @remarks Hash: 0xE30CF56F1EFA5F43
 */
export function networkGetRandomIntRanged(rangeStart: number, rangeEnd: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param maxPlayers - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x2CFC76E0D087C994
 */
export function networkSessionFriendMatchmaking(p0: number, p1: number, maxPlayers: number, p3: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x5324A0E3E4CE3570
 */
export function 0x5324a0e3e4ce3570(p0: any, p1: any, p2: any, p3: any): number;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @returns void
 * @remarks Hash: 0x023782EFC70585EE
 */
export function NetworkBailTransitionQuickmatch(): void;

/**
 * ```
 * Note according to IDA TU27 X360(Console),  
 * This native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.  
 * Side note: This location just stops where it's at once jumped to.  
 * Screenshot for side note,   
 * h t t p ://i.imgur.com/m2ci1mF.png  
 * h t t p://i.imgur.com/Z0Wx2B6.png  
 * ```
 * @returns number
 * @remarks Hash: 0x966C2BC2A7FE3F30
 */
export function networkIsInParty(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x6B07B9CE4D390375
 */
export function NetworkBlockKickedPlayers(p0: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xB8DFD30D6973E135
 */
export function networkIsPlayerActive(player: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xF53E48461B71EECB
 */
export function ugcIsLanguageSupported(p0: any): number;

/**
 * ## Parameters
 * *
 * @param netID - 
 * @returns number
 * @remarks Hash: 0x6E192E33AD436366
 */
export function isDamageTrackerActiveOnNetworkId(netID: number): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x0F10B05DDF8D16E9
 */
export function networkIsGamerInMySession(networkHandle: number): number;

/**
 * ```
 * Used by Metric VEHICLE_DIST_DRIVEN
 * ```
 * 
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x8C70252FC40F320B
 */
export function NetworkSetVehicleTestDrive(toggle: number): void;

/**
 * ```
 * NETWORK_IS_TRANSITION_*
 * ```
 * @returns number
 * @remarks Hash: 0xC571D0E77D8BBC29
 */
export function 0xc571d0e77d8bbc29(): number;

/**
 * ```
 * NETWORK_IS_*
 * 
 * NativeDB Introduced: v323
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x16D3D49902F697BB
 */
export function NetworkIsConnectionEndpointRelayServer(player: number): number;

/**
 * ## Parameters
 * *
 * @param friendIndex - 
 * @returns string
 * @remarks Hash: 0x4164F227D052E293
 */
export function NetworkGetFriendNameFromIndex(friendIndex: number): string;

/**
 * ```
 * NETWORK_IS_*
 * ```
 * @returns number
 * @remarks Hash: 0x14922ED3E38761F0
 */
export function 0x14922ed3e38761f0(): number;

/**
 * ## Parameters
 * *
 * @param netId - 
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0x7A1ADEEF01740A24
 */
export function networkGetDestroyerOfNetworkId(netId: number, weaponHash: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x4811BBAC21C5FCD5
 */
export function 0x4811bbac21c5fcd5(p0: any): void;

/**
 * ```
 * Hardcoded to not work in SP.  
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x416DBD4CD6ED8DD2
 */
export function fadeOutLocalPlayer(p0: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x63F9EE203C3619F2
 */
export function networkIsPlayerInMpCutscene(player: number): number;

/**
 * Sets the provided entity visible for yourself for the current frame.
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x241E289B5C059EDC
 */
export function setEntityLocallyVisible(entity: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xF2EAC213D5EA0623
 */
export function getNumCommerceItems(): number;

/**
 * ## Parameters
 * *
 * @param tunableContext - 
 * @param tunableName - 
 * @returns number
 * @remarks Hash: 0xAA6A47A573ABB75A
 */
export function networkAccessTunableBool(tunableContext: string, tunableName: string): number;

/**
 * @returns void
 * @remarks Hash: 0x9465E683B12D3F6B
 */
export function 0x9465e683b12d3f6b(): void;

/**
 * @returns void
 * @remarks Hash: 0xD972DF67326F966E
 */
export function networkClearClockTimeOverride(): void;

/**
 * ## Parameters
 * *
 * @param player1 - 
 * @param script - 
 * @param player2 - 
 * @returns number
 * @remarks Hash: 0x1AD5B71586B94820
 */
export function networkIsPlayerAParticipantOnScript(player1: number, script: string, player2: number): number;

/**
 * ```
 * Loads up the map that is loaded when beeing in mission creator  
 * Player gets placed in a mix between online/offline mode  
 * p0 is always 2 in R* scripts.  
 * Appears to be patched in gtav b757 (game gets terminated) alonside with most other network natives to prevent online modding ~ghost30812  
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC74C33FCA52856D5
 */
export function networkSessionHostSinglePlayer(p0: number): void;

/**
 * ```
 * Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
 * ```
 * @returns number
 * @remarks Hash: 0x85443FF4C328F53B
 */
export function networkHasValidRosCredentials(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param maxPlayers - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0x94BC51E9449D917F
 */
export function networkSessionCrewMatchmaking(p0: number, p1: number, p2: number, maxPlayers: number, p4: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xFB680D403909DC70
 */
export function 0xfb680d403909dc70(p0: any, p1: any): void;

/**
 * @returns void
 * @remarks Hash: 0x2FBF47B1B36D36F9
 */
export function networkSessionCancelInvite(): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x1950DAE9848A4739
 */
export function NetworkRegisterTunableFloatHash(): number;

/**
 * @returns void
 * @remarks Hash: 0x058F43EC59A8631A
 */
export function networkClearFollowers(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x02ADA21EA2F6918F
 */
export function ugcHasGetFinished(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x8D11E61A4ABF49CC
 */
export function NetworkIsPsnAvailable(): number;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x76B3F29D3F967692
 */
export function 0x76b3f29d3f967692(p0: any, p1: any): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x35F0B98A8387274D
 */
export function networkIsTutorialSessionChangePending(): number;

/**
 * ## Return value
 * Hard-coded to always return 0.
 * @returns any
 * @remarks Hash: 0x8B0C2964BA471961
 */
export function 0x8b0c2964ba471961(): any;

/**
 * p8, p9, p10 is another coordinate, or zero, often related to ``GET_BLIP_COORDS`` in the decompiled scripts.
 * @param player - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param width - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @param flags - 
 * @returns number
 * @remarks Hash: 0x4BA92A18502BCA61
 */
export function networkStartRespawnSearchInAngledAreaForPlayer(player: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, p8: number, p9: number, p10: number, flags: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x742B58F723233ED9
 */
export function 0x742b58f723233ed9(p0: any): any;

/**
 * @returns void
 * @remarks Hash: 0xFA2888E3833C8E96
 */
export function 0xfa2888e3833c8e96(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x1171A97A3D3981B6
 */
export function 0x1171a97a3d3981b6(p0: any, p1: any, p2: any, p3: any): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x91B87C55093DE351
 */
export function NetworkGetRosPrivilege25(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xAFEBB0D5D8F687D2
 */
export function networkGetMaxFriends(): number;

/**
 * ## Parameters
 * *
 * @param scriptName - 
 * @param player - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x9D40DF90FAD26098
 */
export function networkIsScriptActive(scriptName: string, player: number, p2: number, p3: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns any
 * @remarks Hash: 0x308F96458B7087CC
 */
export function ugcTextureDownloadRequest(p0: any, p1: any, p2: any, p3: any, p4: any, p5: number): any;

/**
 * ```
 * Has something to do with a host request.
 * 
 * NETWORK_RE*
 * ```
 * @returns void
 * @remarks Hash: 0x741A3D8380319A81
 */
export function 0x741a3d8380319a81(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns string
 * @remarks Hash: 0x24409FC4C55CB22D
 */
export function networkGetPresenceInviteContentId(p0: any): string;

/**
 * @returns void
 * @remarks Hash: 0xA1E5E0204A6FCC70
 */
export function ugcClearModifyResult(): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x38B7C51AB1EDC7D8
 */
export function 0x38b7c51ab1edc7d8(entity: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param index - 
 * @returns number
 * @remarks Hash: 0x1B84DF6AF2A46938
 */
export function networkGetParticipantIndex(index: number): number;

/**
 * ```
 * This function is hard-coded to always return 0.
 * ```
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x0BE73DA6984A6E33
 */
export function networkIsPendingFriend(p0: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x6C34F1208B8923FD
 */
export function networkGetRespawnResultFlags(p0: any): any;

/**
 * ```
 * Used in am_mp_property_ext and am_mp_property_int  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 2: Ped ped
 * ```
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x715135F4B82AC90D
 */
export function removeAllStickyBombsFromEntity(entity: number): void;

/**
 * ```
 * Allow vehicle wheels to be destructible even when the Vehicle entity is invincible.
 * ```
 * 
 * ```
 * NativeDB Introduced: v1365
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x890E2C5ABED7236D
 */
export function NetworkSetVehicleWheelsDestructible(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param friendIndex - 
 * @param networkHandle - 
 * @param bufferSize - 
 * @returns void
 * @remarks Hash: 0xD45CB817D7E177D2
 */
export function networkHandleFromFriend(friendIndex: number, networkHandle: number, bufferSize: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x599E4FA1F87EB5FF
 */
export function networkGetRandomInt(): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns void
 * @remarks Hash: 0xCA2C8073411ECDB6
 */
export function networkSetGamerInvitedToTransition(networkHandle: number): void;

/**
 * ```
 * _NETWORK_CAN_VIEW_* - _NETWORK_CAN_SESSION*
 * 
 * NETWORK_CAN_PLAY_GAMER_USER_CONTENT?
 * ```
 * 
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param gamerHandle - 
 * @returns number
 * @remarks Hash: 0x559EBF901A8C68E0
 */
export function 0x559ebf901a8c68e0(gamerHandle: any): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x2CC848A861D01493
 */
export function networkGetGamerStatusFromQueue(): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @param message - 
 * @returns number
 * @remarks Hash: 0x8E02D73914064223
 */
export function networkAddFriend(networkHandle: number, message: string): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xCFEB8AF24FC1D0BB
 */
export function networkBlockJoinQueueInvites(toggle: number): void;

/**
 * ```
 * Checks some commerce stuff
 * 
 * NativeDB Introduced: v1290
 * ```
 * @returns number
 * @remarks Hash: 0x155467ACA0F55705
 */
export function 0x155467aca0f55705(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xE16AA70CE9BEEDC3
 */
export function 0xe16aa70ce9beedc3(p0: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param maxPlayers - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x4665F51EFED00034
 */
export function networkDoTransitionToNewGame(p0: number, maxPlayers: number, p2: number): number;

/**
 * ```
 * Used by NetBlender
 * ```
 * @param entity - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x33DE49EDF4DDE77A
 */
export function NetworkGetLastVelocityReceived(entity: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x65042B9774C4435E
 */
export function networkGetTransitionHost(networkHandle: number): number;

/**
 * ```
 * IS_COMMERCE_*
 * ```
 * @returns number
 * @remarks Hash: 0x1D4DC17C38FEAFF0
 */
export function 0x1d4dc17c38feaff0(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xC88156EBB786F8D5
 */
export function networkActionFollowInvite(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x5776ED562C134687
 */
export function textureDownloadHasFailed(p0: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xCFEB8AF24FC1D0BB
 */
export function 0xcfeb8af24fc1d0bb(p0: number): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x4E5C93BD0C32FBF8
 */
export function reserveNetworkMissionObjects(amount: number): void;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0xB57A49545BA53CE7
 */
export function NetworkCanViewGamerUserContent(networkHandle: any): number;

/**
 * ## Parameters
 * *
 * @param netHandle1 - 
 * @param netHandle2 - 
 * @returns number
 * @remarks Hash: 0x57DBA049E110F217
 */
export function networkAreHandlesTheSame(netHandle1: number, netHandle2: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xF0210268DB0974B1
 */
export function networkRemovePresenceInvite(p0: any): number;

/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xB9351A07A0D458B1
 */
export function 0xb9351a07a0d458b1(p0: any): any;

/**
 * @returns void
 * @remarks Hash: 0x61A885D3F7CFEE9A
 */
export function ugcClearOfflineQuery(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x655B91F1495A9090
 */
export function networkPlayerIsCheater(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xFBC5E768C7A77A6A
 */
export function ugcGetCreateResult(): any;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x4EEBC3694E49C572
 */
export function networkCanSessionEnd(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x9DCFF2AFB68B3476
 */
export function networkGetFoundGamer(p0: any, p1: any): number;

/**
 * @returns void
 * @remarks Hash: 0xE9B99B6853181409
 */
export function ugcCancelQuery(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xF9B83B77929D8863
 */
export function networkDidFindGamersSucceed(): number;

/**
 * ```
 * if set to true other network players can't see it  
 * if set to false other network player can see it  
 * =========================================  
 * ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.  
 * pc or last gen?  
 * ^^ last-gen  
 * ```
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF1CA12B18AEF5298
 */
export function NetworkSetEntityInvisibleToNetwork(entity: number, toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0xE036A705F989E049
 */
export function networkClearVoiceChannel(): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x631DC5DFF4B110E3
 */
export function networkIsPlayerFading(player: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xBB6E6FEE99D866B2
 */
export function networkClanRemoteMembershipsAreInCache(p0: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x3855FB5EB2C5E8B2
 */
export function 0x3855fb5eb2c5e8b2(p0: any): any;

/**
 * ```
 * Lets objects spawn online simply do it like this:  
 * int createdObject = OBJ_TO_NET(CREATE_OBJECT_NO_OFFSET(oball, pCoords.x, pCoords.y, pCoords.z, 1, 0, 0));  
 * ```
 * @param object - 
 * @returns number
 * @remarks Hash: 0x99BFDC94A603E541
 */
export function objToNet(object: number): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x2763BBAA72A7BCB9
 */
export function networkIsActivitySpectatorFromHandle(networkHandle: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xFBCFA2EA2E206890
 */
export function networkSessionIsClosedFriends(): number;

/**
 * ## Parameters
 * *
 * @param index - 
 * @returns number
 * @remarks Hash: 0xA2F952104FC6DD4B
 */
export function requestCommerceItemImage(index: number): number;

/**
 * @returns void
 * @remarks Hash: 0x43F4DBA69710E01E
 */
export function networkCloseTransitionMatchmaking(): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xB07D3185E11657A5
 */
export function networkHasEntityBeenRegisteredWithThisThread(entity: number): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x439BFDE3CD0610F6
 */
export function networkClearFollowInvite(): any;

/**
 * @returns void
 * @remarks Hash: 0x17440AA15D1D3739
 */
export function ugcClearCreateResult(): void;

/**
 * ```
 * p0 appears to be for MP  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xAA81B5F10BC43AC2
 */
export function getNumReservedMissionObjects(p0: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x93CF869BAA0C4874
 */
export function networkRemoveEntityArea(p0: any): number;

/**
 * ## Parameters
 * *
 * @param heli - 
 * @param isAudible - 
 * @param isInvisible - 
 * @param netScriptEntityId - 
 * @returns void
 * @remarks Hash: 0x2A5E0621DD815A9A
 */
export function networkExplodeHeli(heli: number, isAudible: number, isInvisible: number, netScriptEntityId: number): void;

/**
 * Adds an entity to a network synchronised scene.
 * @param entity - 
 * @param netScene - 
 * @param animDict - 
 * @param animName - 
 * @param blendIn - 
 * @param blendOut - 
 * @param flag - 
 * @returns void
 * @remarks Hash: 0xF2404D68CBC855FA
 */
export function networkAddEntityToSynchronisedScene(entity: number, netScene: number, animDict: string, animName: string, blendIn: number, blendOut: number, flag: number): void;

/**
 * ```
 * 0 = succeeded
 * 1 = pending
 * 2 = failed
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x8BD6C6DEA20E82C6
 */
export function getStatusOfTextureDownload(p0: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC7BE335216B5EC7C
 */
export function getMaxNumNetworkObjects(): number;

/**
 * ```
 * Return the local Participant ID  
 * ```
 * @returns number
 * @remarks Hash: 0x90986E8876CE0A83
 */
export function participantId(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x83F28CE49FBBFFBA
 */
export function networkCheckCommunicationPrivileges(p0: number, p1: number, p2: number): number;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x560B423D73015E77
 */
export function 0x560b423d73015e77(p0: any): any;

/**
 * ```
 * rage::netBlenderLinInterp::GetPositionMaxForUpdateLevel
 * ```
 * @param vehicle - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0xA2A707979FE754DC
 */
export function SetNetworkVehiclePositionUpdateMultiplier(vehicle: number, multiplier: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x13518FF1C6B28938
 */
export function networkClanRequestEmblem(p0: any): number;

/**
 * ```
 * Hardcoded to return false.
 * ```
 * @returns number
 * @remarks Hash: 0x2FC5650B0271CB57
 */
export function networkIsInPlatformParty(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x8A8694B48715B000
 */
export function networkIsLocalPlayerInvincible(): number;

/**
 * ```
 * Only one occurence in the scripts:
 * auto sub_cb43(auto a_0, auto a_1) {
 *     if (g_2594CB._f1) {
 *         if (NETWORK::_855BC38818F6F684()) {
 *             NETWORK::_ABD5E88B8A2D3DB2(&a_0._fB93);
 *             g_2594CB._f14/*{13}*/ = a_0._fB93;
 *             g_2594CB._f4/*"64"*/ = a_1;
 *             return 1;
 *         }
 *     }
 *     return 0;
 * }
 * other:
 * looks like it passes a player in the paramater
 * Contains string "NETWORK_VOICE_CONNECT_TO_PLAYER" in ida
 * ```
 * @param globalPtr - 
 * @returns void
 * @remarks Hash: 0xABD5E88B8A2D3DB2
 */
export function networkSessionVoiceConnectToPlayer(globalPtr: any): void;

/**
 * Fade the given entity back in, usually used after the entity has been faded out with [NETWORK_FADE_OUT_ENTITY](#_0xDE564951F95E09ED)
 * 
 * When used on a entity which isn't invisible or faded out then the native will still work, it will just instanly make the ped invisible before fading in.
 * @param entity - 
 * @param bNetwork - 
 * @returns void
 * @remarks Hash: 0x1F4ED342ACEFE62D
 */
export function networkFadeInEntity(entity: number, bNetwork: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x7D395EA61622E116
 */
export function 0x7d395ea61622e116(p0: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x520F3282A53D26B7
 */
export function networkIsTransitionBusy(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x3C891A251567DFCE
 */
export function networkQueryRespawnResults(p0: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x3054F114121C21EA
 */
export function ugcGetContentIsPublished(p0: any): number;

/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @returns any
 * @remarks Hash: 0x4C9034162368E206
 */
export function 0x4c9034162368e206(): any;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xF287F506767CC8A9
 */
export function 0xf287f506767cc8a9(): any;

/**
 * @returns void
 * @remarks Hash: 0x6CE50E47F5543D0C
 */
export function 0x6ce50e47f5543d0c(): void;

/**
 * ## Return value
 * Hard-coded to always return 1.
 * @returns number
 * @remarks Hash: 0xBD545D44CCE70597
 */
export function 0xbd545d44cce70597(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x53FA83401D9C07FE
 */
export function networkIsTransitionStarted(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns string
 * @remarks Hash: 0xBAF6BABF9E7CCC13
 */
export function ugcGetContentPath(p0: number): string;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x5E3AA4CA2B6FB0EE
 */
export function 0x5e3aa4ca2b6fb0ee(p0: any): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x793FF272D5B365F4
 */
export function 0x793ff272d5b365f4(): any;

/**
 * ```
 * NETWORK_GET_*
 * ```
 * @param entity - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x64D779659BC37B19
 */
export function 0x64d779659bc37b19(entity: number): { x: number, y: number, z: number };

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xC87E740D9F3872CC
 */
export function 0xc87e740d9f3872cc(): any;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x4A9FDE3A5A6D0437
 */
export function 0x4a9fde3a5a6d0437(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns any
 * @remarks Hash: 0x2B1C623823DB0D9D
 */
export function 0x2b1c623823db0d9d(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): any;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0xDF02A2C93F1F26DA
 */
export function networkAmIMutedByGamer(networkHandle: any): number;

/**
 * ## Parameters
 * *
 * @param name - 
 * @returns number
 * @remarks Hash: 0x425A44533437B64D
 */
export function networkIsFriendOnline(name: string): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x5A0A3D1A186A5508
 */
export function ugcGetModifyResult(): any;

/**
 * ```
 * Could possibly bypass being muted or automatically muted  
 * ```
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x3039AE5AD2C9C0C4
 */
export function networkOverrideChatRestrictions(player: number, toggle: number): void;

/**
 * ```
 * p0 appears to be for MP  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x1F13D5AE5CB17E17
 */
export function getNumReservedMissionPeds(p0: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x237D5336A9A54108
 */
export function networkHasCachedPlayerHeadBlendData(player: number): number;

/**
 * @returns void
 * @remarks Hash: 0x283B6062A2C01E9B
 */
export function 0x283b6062a2c01e9b(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xE870F9F1F7B4F1FA
 */
export function networkHasHeadset(): number;

/**
 * ```
 * Example:  
 * int playerHandle;	  
 * NETWORK_HANDLE_FROM_PLAYER(selectedPlayer, &playerHandle, 13);  
 * NETWORK_SHOW_PROFILE_UI(&playerHandle);  
 * ```
 * @param networkHandle - 
 * @returns void
 * @remarks Hash: 0x859ED1CEA343FCA8
 */
export function networkShowProfileUi(networkHandle: number): void;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x07DD29D5E22763F1
 */
export function NetworkCanPlayMultiplayerWithGamer(networkHandle: any): number;

/**
 * ```
 * Returns defaultValue if the tunable doesn't exist.
 * ```
 * @param tunableContext - 
 * @param tunableName - 
 * @param defaultValue - 
 * @returns number
 * @remarks Hash: 0xC7420099936CE286
 */
export function networkTryAccessTunableBoolHash(tunableContext: number, tunableName: number, defaultValue: number): number;

/**
 * @returns void
 * @remarks Hash: 0x042E4B70B93E6054
 */
export function networkGetPrimaryClanDataCancel(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0x4CACA84440FA26F6
 */
export function NetworkGetDestroyerOfEntity(p0: any, p1: any, weaponHash: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x2DCF46CB1A4F0884
 */
export function networkLaunchTransition(): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0xF2FD55CB574BCC55
 */
export function networkGamerHasHeadset(networkHandle: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xCB215C4B56A7FAE7
 */
export function getNumCreatedMissionPeds(p0: number): number;

/**
 * ```
 * Getter for SET_NETWORK_CUTSCENE_ENTITIES.
 * ```
 * 
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @returns number
 * @remarks Hash: 0x66D6A5E9C511214A
 */
export function NetworkAreCutsceneEntities(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns string
 * @remarks Hash: 0x40F7E66472DF3E5C
 */
export function ugcGetCachedDescription(p0: any, p1: any): string;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xCA97246103B63917
 */
export function networkIsInSession(): number;

/**
 * ```
 * Returns a handle to networkHandle* from the specified player handle and stores it in a given buffer.  
 * * Currently unknown struct  
 * Example:  
 * std::vector<UINT64> GetPlayerNetworkHandle(Player player) {  
 *     const int size = 13;  
 *     uint64_t *buffer = std::make_unique<uint64_t[]>(size).get();  
 *     NETWORK::NETWORK_HANDLE_FROM_PLAYER(player, reinterpret_cast<int *>(buffer), 13);  
 *     for (int i = 0; i < size; i++) {  
 *         Log::Msg("networkhandle[%i]: %llx", i, buffer[i]);  
 *     }  
 *     std::vector<UINT64> result(buffer, buffer + sizeof(buffer));  
 *     return result;  
 * }  
 * ```
 * @param player - 
 * @param networkHandle - 
 * @param bufferSize - 
 * @returns void
 * @remarks Hash: 0x388EB2B86C73B6B3
 */
export function networkHandleFromPlayer(player: number, networkHandle: number, bufferSize: number): void;

/**
 * ```
 * gets the entity id of a network id  
 * ```
 * @param netHandle - 
 * @returns number
 * @remarks Hash: 0xBFFEAB45A9A9094A
 */
export function netToEnt(netHandle: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x0C1F7D49C39D2289
 */
export function getMaxNumNetworkPeds(): number;

/**
 * ```
 * Does nothing (it's a nullsub).
 * 
 * NativeDB Introduced: v323
 * ```
 * @returns void
 * @remarks Hash: 0xAEDF1BC1C133D6E3
 */
export function 0xaedf1bc1c133d6e3(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x716B6DB9D1886106
 */
export function filloutPmPlayerListWithNames(p0: any, p1: any, p2: any, p3: any): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0xC3C7A6AFDB244624
 */
export function networkSendInviteViaPresence(networkHandle: number, p1: any, p2: any, p3: any): number;

/**
 * ```
 * the first arg seems to be the network player handle (&handle) and the second var is pretty much always "" and the third seems to be a number between 0 and ~10 and the 4th is is something like 0 to 5 and I guess the 5th is a bool cuz it is always 0 or 1  
 * does this send an invite to a player?  
 * ```
 * @param networkHandle - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0x31D1D2B858D25E6B
 */
export function networkSendTransitionGamerInstruction(networkHandle: number, p1: string, p2: number, p3: number, p4: number): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x4D02279C83BE69FE
 */
export function 0x4d02279c83be69fe(): any;

/**
 * Get the local entity handle of the given network id
 * 
 * Through this native you can get back the entity that you previously converted to netid with [NetworkGetNetworkIdFromEntity](#_0x9E35DAB6) or with the `ToNet` natives
 * @param netId - 
 * @returns number
 * @remarks Hash: 0xCE4E5D9B0A4FF560
 */
export function networkGetEntityFromNetworkId(netId: number): number;

/**
 * Creates a networked synchronized scene.
 * Be sure to actually start the scene with [`NETWORK_START_SYNCHRONISED_SCENE`](#_0x9A1B3FCDB36C8697) after you're done adding peds or entities to the scene.
 * @param x - 
 * @param y - 
 * @param z - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param rotationOrder - 
 * @param holdLastFrame - 
 * @param looped - 
 * @param phaseToStopScene - 
 * @param phaseToStartScene - 
 * @param animSpeed - 
 * @returns number
 * @remarks Hash: 0x7CD6BC4C2BBDD526
 */
export function networkCreateSynchronisedScene(x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, rotationOrder: number, holdLastFrame: number, looped: number, phaseToStopScene: number, phaseToStartScene: number, animSpeed: number): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0xCE5F689CF5A0A49D
 */
export function networkGetPlayerFromGamerHandle(networkHandle: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xA9240A96C74CCA13
 */
export function ugcGetContentIsVerified(p0: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x265559DA40B3F327
 */
export function 0x265559da40b3f327(p0: any): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x94A8394D150B013A
 */
export function networkIsGettingGamerStatus(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x70EA8DA57840F9BE
 */
export function ugcGetContentHasPlayerRecord(p0: any): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xF4435D66A8E2905E
 */
export function networkIsSessionBusy(): number;

/**
 * ```
 * NETWORK_SESSION_IS_*
 * ```
 * @returns number
 * @remarks Hash: 0xBDB6F89C729CF388
 */
export function 0xbdb6f89c729cf388(): number;

/**
 * @returns void
 * @remarks Hash: 0x6793E42BE02B575D
 */
export function networkSessionVoiceLeave(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xCEFA968912D0F78D
 */
export function networkGetNumPresenceInvites(): number;

/**
 * ```
 * IS_*
 * ```
 * @returns number
 * @remarks Hash: 0x59328EB08C5CEB2B
 */
export function 0x59328eb08c5ceb2b(): number;

/**
 * ```
 * Hardcoded to return -1.
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xD66C9E72B3CC4982
 */
export function NetworkDisplaynamesFromHandlesStart(p0: any, p1: any): number;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns number
 * @remarks Hash: 0xBCBF4FEF9FA5D781
 */
export function canRegisterMissionPeds(amount: number): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x58575AC3CF2CA8EC
 */
export function networkHashFromGamerHandle(networkHandle: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns any
 * @remarks Hash: 0x041C7F2A6C9894E6
 */
export function 0x041c7f2a6c9894e6(p0: any, p1: any, p2: any): any;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x7E782A910C362C25
 */
export function networkCanEnterMultiplayer(): number;

/**
 * Adds a ped to a networked synchronised scene.
 * 
 * Synchronized scene playback flags (Also works in other `NETWORK_ADD_*_TO_SYNCHRONISED_SCENE` natives):
 * | Value     |                  Name                     |                                                             Notes                                                                |
 * | :-------: | :---------------------------------------: | :------------------------------------------------------------------------------------------------------------------------------: |
 * | `0`       |  None                                     | No flag set.                                                                                                                     |
 * | `1`       | USE_PHYSICS                               | Allows the ped to have physics during the scene.                                                                                 |
 * | `2`       | TAG_SYNC_OUT                              | The task will do a tag synchronized blend out with the movement behaviour of the ped.                                            |
 * | `4`       | DONT_INTERRUPT                            | The scene will not be interrupted by external events.                                                                            |
 * | `8`       | ON_ABORT_STOP_SCENE                       | The scene will be stopped if the scripted task is aborted.                                                                       |
 * | `16`      | ABORT_ON_WEAPON_DAMAGE                    | The scene will be stopped if the ped is damaged by a weapon.                                                                     |
 * | `32`      | BLOCK_MOVER_UPDATE                        | The task will not update the mover.                                                                                              |
 * | `64`      | LOOP_WITHIN_SCENE                         | Animations within this scene will be looped until the scene is finished.                                                         |
 * | `128`     | PRESERVE_VELOCITY                         | The task will keep it's velocity when the scene is cleaned up/stopped. Do note that the `USE_PHYSICS` flag must also be present. |
 * | `256`     | EXPAND_PED_CAPSULE_FROM_SKELETON          | The task will apply the `ExpandPedCapsuleFromSkeleton` reset flag to the ped (See [`SET_PED_RESET_FLAG`](#_0xC1E8A365BF3B29F2)). |
 * | `512`     | ACTIVATE_RAGDOLL_ON_COLLISION             | The ped will be ragdoll if it comes in contact with an object.                                                                   |
 * | `1024`    | HIDE_WEAPON                               | The ped's current weapon will be hidden during the scene.                                                                        |
 * | `2048`    | ABORT_ON_DEATH                            | The synchronised scene will be aborted if the ped dies.                                                                          |
 * | `4096`    | VEHICLE_ABORT_ON_LARGE_IMPACT             | If the scene is running on a vehicle, then it will be aborted if the vehicle takes a heavy collision with another vehicle.       |
 * | `8192`    | VEHICLE_ALLOW_PLAYER_ENTRY                | If the scene is on a vehicle, it allows players to enter it.                                                                     |
 * | `16384`   | PROCESS_ATTACHMENTS_ON_START              | Attachments will be processed at the start of the scene.                                                                         |
 * | `32768`   | NET_ON_EARLY_NON_PED_STOP_RETURN_TO_START | A non-ped entity will be returned to their starting position if the scene finishes early.                                        |
 * | `65536`   | SET_PED_OUT_OF_VEHICLE_AT_START           | If the ped is in a vehicle when the scene starts, it will be set out of the vehicle.                                             |
 * | `131072`  | NET_DISREGARD_ATTACHMENT_CHECKS           | Attachment checks will be disregarded when the scene is running.                                                                 |
 * 
 * These flags can be combined with the `|` operator.
 * @param ped - 
 * @param netScene - 
 * @param animDict - 
 * @param animClip - 
 * @param blendInSpeed - 
 * @param blendOutSpeed - 
 * @param syncedSceneFlags - 
 * @param ragdollFlags - 
 * @param moverBlendInDelta - 
 * @param ikFlags - 
 * @returns void
 * @remarks Hash: 0x742A637471BCECD9
 */
export function networkAddPedToSynchronisedScene(ped: number, netScene: number, animDict: string, animClip: string, blendInSpeed: number, blendOutSpeed: number, syncedSceneFlags: number, ragdollFlags: number, moverBlendInDelta: number, ikFlags: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x9CA5DE655269FEC4
 */
export function networkSetInMpCutscene(p0: number, p1: number): void;

/**
 * Adds a map entity to a network synchronized scene. This native function is utilized only once as of game build 2944 within the casino_slots script.
 * Please note that it's only possible to add a single map entity to synchronised scenes.
 * 
 * It's advisable to initially locate the object and retrieve its actual coordinates using [`GET_CLOSEST_OBJECT_OF_TYPE`](#_0xE143FA2249364369).
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param netScene - 
 * @param modelHash - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x45F35C0EDC33B03B
 */
export function networkAddMapEntityToSynchronisedScene(netScene: number, modelHash: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x85A0EF54A500882C
 */
export function networkQueueGamerForStatus(p0: any): number;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xF0BC9BCD24A511D5
 */
export function NetworkPedForceGameStateUpdate(ped: number): void;

/**
 * ## Return value
 * Hard-coded to always return 0.
 * @returns any
 * @remarks Hash: 0x88B588B41FF7868E
 */
export function 0x88b588b41ff7868e(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x4348BFDA56023A2F
 */
export function 0x4348bfda56023a2f(p0: any, p1: any): any;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC0D2AF00BCC234CA
 */
export function networkIsLocalTalking(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x58CC181719256197
 */
export function NetworkGetDisplaynamesFromHandles(p0: any, p1: any, p2: any): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x3B39236746714134
 */
export function networkGetPlayerTutorialSessionInstance(player: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @param player - 
 * @returns void
 * @remarks Hash: 0x5C707A667DF8B9FA
 */
export function networkSetChoiceMigrateOptions(toggle: number, player: number): void;

/**
 * ```
 * Starts a new singleplayer game (at the prologue).  
 * ```
 * @returns void
 * @remarks Hash: 0x593850C16A36B692
 */
export function shutdownAndLaunchSinglePlayerGame(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC19F6C8E7865A6FF
 */
export function networkSessionValidateJoin(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x7FCC39C46C3C03BD
 */
export function 0x7fcc39c46c3c03bd(p0: number): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xA06509A691D12BE4
 */
export function networkJoinGroupActivity(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x2B51EDBEFC301339
 */
export function 0x2b51edbefc301339(p0: number, p1: string): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x5E0165278F6339EE
 */
export function ugcRequestCachedDescription(p0: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x524FF0AEFF9C3973
 */
export function networkSetLocalPlayerSyncLookAt(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9DD368BF06983221
 */
export function networkDisableInvincibleFlashing(player: number, toggle: number): void;

/**
 * NETWORK_S*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @returns void
 * @remarks Hash: 0xCA59CCAE5D01E4CE
 */
export function 0xca59ccae5d01e4ce(): void;

/**
 * ## Parameters
 * *
 * @param handle - 
 * @returns number
 * @remarks Hash: 0x4C61B39930D045DA
 */
export function cloudHasRequestCompleted(handle: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xDBD2056652689917
 */
export function networkApplyVoiceProximityOverride(x: number, y: number, z: number): void;

/**
 * @returns void
 * @remarks Hash: 0x2B3A8F7CA3A38FDE
 */
export function networkOpenTransitionMatchmaking(): void;

/**
 * ```
 * Returns true if the NAT type is Strict (3) and a certain number of connections have failed.
 * ```
 * @returns number
 * @remarks Hash: 0x82A2B386716608F1
 */
export function NetworkShouldShowConnectivityTroubleshooting(): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xA0682D67EF1FBA3D
 */
export function networkSuppressInvite(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param playerCount - 
 * @returns void
 * @remarks Hash: 0x0E4F77F7B9D74D84
 */
export function networkSetActivityPlayerMax(playerCount: number): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x24E4E51FC16305F9
 */
export function 0x24e4e51fc16305f9(): any;

/**
 * ## Parameters
 * *
 * @param tunableContext - 
 * @param tunableName - 
 * @param value - 
 * @returns number
 * @remarks Hash: 0x40FCE03E50E8DBE8
 */
export function networkAccessTunableIntHash(tunableContext: number, tunableName: number, value: number): number;

/**
 * ```
 * NativeDB Added Parameter 3: int p2
 * ```
 * @param index - 
 * @returns string
 * @remarks Hash: 0x722F5D28B61C5EA8
 */
export function getCommerceItemTexturename(index: number): string;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xD7B6C73CAD419BCF
 */
export function 0xd7b6c73cad419bcf(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xE0031D3C8F36AB82
 */
export function setEntityVisibleInCutscene(p0: any, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xFAA10F1FAFB11AF2
 */
export function setPlayerVisibleLocally(player: number, toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0xB7C7F6AD6424304B
 */
export function NetworkUpdatePlayerScars(): void;

/**
 * Returns the coordinates of another player.
 * 
 * Does not work if you enter your own player id as p0 (will return `(0.0, 0.0, 0.0)` in that case).
 * @param player - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x125E6D638B8605D4
 */
export function NetworkGetPlayerCoords(player: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x367EF5E2F439B4C6
 */
export function 0x367ef5e2f439b4c6(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x521638ADA1BA0D18
 */
export function networkApplyTransitionParameter(p0: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param string - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xEBEFC2E77084F599
 */
export function networkApplyTransitionParameterString(p0: number, string: string, p2: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xD0A484CB2F829FBE
 */
export function networkIsTransitionVisibilityLocked(): number;

/**
 * ```
 * related to: 
 * NETWORK_BAIL  
 * NETWORK_BAIL_TRANSITION  
 * NETWORK_JOIN_GROUP_ACTIVITY  
 * NETWORK_JOIN_TRANSITION  
 * NETWORK_LAUNCH_TRANSITION  
 * NETWORK_SESSION_HOST  
 * NETWORK_SESSION_HOST_CLOSED  
 * NETWORK_SESSION_HOST_FRIENDS_ONLY  
 * NETWORK_SESSION_HOST_SINGLE_PLAYER  
 * NETWORK_SESSION_VOICE_LEAVE  
 * ```
 * @returns void
 * @remarks Hash: 0x444C4525ECE0A4B9
 */
export function 0x444c4525ece0a4b9(): void;

/**
 * ```
 * ..  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x236406F60CF216D6
 */
export function networkAddFollowers(p0: number, p1: number): void;

/**
 * Forces the "Are you sure you want to quit Grand Theft Auto V?" warning message (Same as when you Alt+F4) to show.
 * Doesn't work in singleplayer.
 * @returns void
 * @remarks Hash: 0x45A83257ED02D9BC
 */
export function networkQuitMpToDesktop(): void;

/**
 * ## Parameters
 * *
 * @param contentId - 
 * @param bookmarked - 
 * @param contentTypeName - 
 * @returns number
 * @remarks Hash: 0x274A1519DFC1094F
 */
export function ugcSetBookmarked(contentId: string, bookmarked: number, contentTypeName: string): number;

/**
 * ## Return value
 * Hard-coded to always return 1.
 * @returns any
 * @remarks Hash: 0x7808619F31FF22DB
 */
export function 0x7808619f31ff22db(): any;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xBABEC9E69A91C57B
 */
export function networkSetVoiceActive(toggle: number): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x5B4F04F19376A0BA
 */
export function networkGetPrimaryClanDataSuccess(): any;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xDFFA5BE8381C3314
 */
export function NetworkGetTargetingMode(): number;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xC3BFED92026A2AAD
 */
export function NetworkTransitionTrack(): void;

/**
 * ## Parameters
 * *
 * @param netScene - 
 * @returns void
 * @remarks Hash: 0x9A1B3FCDB36C8697
 */
export function networkStartSynchronisedScene(netScene: number): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x53C10C8BD774F2C9
 */
export function 0x53c10c8bd774f2c9(): any;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xD6D7478CA62B8D41
 */
export function 0xd6d7478ca62b8d41(p0: any, p1: any): void;

/**
 * ```
 * Sets some voice chat related value.
 * 
 * NETWORK_SET_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x3C5C1E2C2FF814B1
 */
export function 0x3c5c1e2c2ff814b1(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x87F395D957D4353D
 */
export function networkAmIBlockedByPlayer(player: number): number;

/**
 * ```
 * Sets some voice chat related value.
 * 
 * NETWORK_SET_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9D7AFCBF21C51712
 */
export function 0x9d7afcbf21c51712(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x4A595C32F77DFF76
 */
export function networkInviteGamersToTransition(p0: any, p1: any): number;

/**
 * ## Parameters
 * *
 * @param maxSpectators - 
 * @returns void
 * @remarks Hash: 0x9D277B76D1D12222
 */
export function networkSetActivitySpectatorMax(maxSpectators: number): void;

/**
 * ```
 * NativeDB Added Parameter 3: Any p2
 * NativeDB Added Parameter 4: Any p3
 * ```
 * @param netId - 
 * @param time - 
 * @returns void
 * @remarks Hash: 0xEC51713AB6EC36E8
 */
export function setNetworkVehicleRespotTimer(netId: number, time: number): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xEA8C0DDB10E2822A
 */
export function 0xea8c0ddb10e2822a(p0: any, p1: any): void;

/**
 * ```
 * Downloads prod.cloud.rockstargames.com/titles/gta5/[platform]/check.json
 * ```
 * @returns void
 * @remarks Hash: 0x4F18196C8D38768D
 */
export function cloudCheckAvailability(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xFAFC23AEE23868DB
 */
export function NetworkAllocateTunablesRegistrationDataMap(): number;

/**
 * ## Parameters
 * *
 * @param FilePath - 
 * @param Name - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x0B203B4AFDE53A4F
 */
export function titleTextureDownloadRequest(FilePath: string, Name: string, p2: number): number;

/**
 * ```
 * This would be nice to see if someone is in party chat, but 2 sad notes.  
 * 1) It only becomes true if said person is speaking in that party at the time.  
 * 2) It will never, become true unless you are in that party with said person.  
 * ```
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x8DE9945BCC9AEC52
 */
export function networkIsChattingInPlatformParty(networkHandle: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5AE17C6B0134B7F1
 */
export function networkDidGetGamerStatusSucceed(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x38D5B0FEBB086F75
 */
export function networkGetPresenceInviteHandle(p0: any, p1: any): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5ED0356A0CE3A34F
 */
export function networkGetTimeoutTime(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x487EB90B98E9FB19
 */
export function textureDownloadRelease(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x78321BEA235FD8CD
 */
export function 0x78321bea235fd8cd(p0: any, p1: number): number;

/**
 * ## Parameters
 * *
 * @param tunableContext - 
 * @param tunableName - 
 * @returns number
 * @remarks Hash: 0xEA16B69D93D71A45
 */
export function networkAccessTunableBoolHash(tunableContext: number, tunableName: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6274C4712850841E
 */
export function setNetworkVehicleAsGhost(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param memberDesc - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x48DE78AF2C8885B8
 */
export function networkClanGetMembershipDesc(memberDesc: number, p1: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @param playerPed - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x419594E137637120
 */
export function networkSetInSpectatorModeExtended(toggle: number, playerPed: number, p2: number): void;

/**
 * Hardcoded to return false.
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @returns number
 * @remarks Hash: 0x64E5C4CC82847B73
 */
export function 0x64e5c4cc82847b73(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x62B9FEC9A11F10EF
 */
export function FacebookIsSendingData(): number;

/**
 * @returns void
 * @remarks Hash: 0x25D990F8E0E3F13C
 */
export function 0x25d990f8e0e3f13c(): void;

/**
 * Retrieves a membership for a player, from the cache (i.e. downloaded via NETWORK_CLAN_DOWNLOAD_MEMBERSHIP).
 * 
 * Test C++ code:
 * https://pastebin.com/CD8wni4C
 * @param networkHandle - 
 * @param clanMembership - 
 * @param membershipIndex - 
 * @returns number
 * @remarks Hash: 0xC8BC2011F67B3411
 */
export function networkClanGetMembership(networkHandle: number, clanMembership: number, membershipIndex: number): number;

/**
 * @returns void
 * @remarks Hash: 0xEBF8284D8CADEB53
 */
export function 0xebf8284d8cadeb53(): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x422F32CC7E56ABAD
 */
export function networkIsEntityFading(entity: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC42DD763159F3461
 */
export function 0xc42dd763159f3461(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x597F8DBA9B206FC7
 */
export function ugcGetCreatorNum(): any;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x34F9E9049454A7A0
 */
export function networkBlockInvites(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param seed - 
 * @returns void
 * @remarks Hash: 0xF1B84178F8674195
 */
export function networkSeedRandomNumberGenerator(seed: number): void;

/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * NativeDB Added Parameter 2: int p1
 * NativeDB Added Parameter 3: int p2
 * ```
 * @returns void
 * @remarks Hash: 0x95914459A87EBA28
 */
export function networkBail(): void;

/**
 * @returns void
 * @remarks Hash: 0x9C1556705F864230
 */
export function networkSessionVoiceHost(): void;

/**
 * ## Parameters
 * *
 * @param netID - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD45B1FFCCD52FF19
 */
export function activateDamageTrackerOnNetworkId(netID: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns string
 * @remarks Hash: 0xBF09786A7FCAB582
 */
export function ugcGetContentName(p0: any): string;

/**
 * ```
 * p1 = 6
 * ```
 * @param player - 
 * @param p1 - 
 * @param scriptHash - 
 * @returns number
 * @remarks Hash: 0x46FB3ED415C7641C
 */
export function TriggerScriptCrcCheckOnPlayer(player: number, p1: number, scriptHash: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xE532D6811B3A4D2A
 */
export function networkFindGamersInCrew(p0: any): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xC32EA7A2F6CA7557
 */
export function 0xc32ea7a2f6ca7557(): any;

/**
 * @returns void
 * @remarks Hash: 0x64F62AFB081E260D
 */
export function networkFinishBroadcastingData(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x39917E1B4CB0F911
 */
export function 0x39917e1b4cb0f911(p0: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x24FB80D107371267
 */
export function networkGetPlayerIndex(player: number): number;

/**
 * ## Parameters
 * *
 * @param netId - 
 * @returns number
 * @remarks Hash: 0x18A47D074708FD68
 */
export function networkDoesEntityExistWithNetworkId(netId: number): number;

/**
 * ```
 * Returns the name of a given player. Returns "**Invalid**" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist.
 * ```
 * @param player - 
 * @returns string
 * @remarks Hash: 0x7718D2E2060837D2
 */
export function networkPlayerGetName(player: number): string;

/**
 * @returns void
 * @remarks Hash: 0x726E0375C7A26368
 */
export function networkRemoveAllTransitionInvite(): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x6EA101606F6E4D81
 */
export function networkIsAddingFriend(): any;

/**
 * @returns void
 * @remarks Hash: 0xBD0BE0BFC927EAC1
 */
export function networkCacheLocalPlayerHeadBlendData(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x2EAC52B4019E2782
 */
export function isCommerceStoreOpen(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns any
 * @remarks Hash: 0x25B99872D588A101
 */
export function networkAddEntityDisplayedBoundaries(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): any;

/**
 * ## Parameters
 * *
 * @param data - 
 * @param count - 
 * @param latestVersion - 
 * @param contentTypeName - 
 * @returns number
 * @remarks Hash: 0xC7397A83F7A2A462
 */
export function ugcQueryByContentIds(data: any, count: number, latestVersion: number, contentTypeName: string): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param player - 
 * @returns number
 * @remarks Hash: 0x0EDE326D47CD0F3E
 */
export function 0x0ede326d47cd0f3e(ped: number, player: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5EA784D197556507
 */
export function NetworkHaveOnlinePrivilege2(): number;

/**
 * ```
 * int handle[76];  
 * NETWORK_HANDLE_FROM_FRIEND(iSelectedPlayer, &handle[0], 13);  
 * Player uVar2 = NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(&handle[0]);  
 * NETWORK_JOIN_TRANSITION(uVar2);  
 * 		nothing doin.  
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x9D060B08CD63321A
 */
export function networkJoinTransition(player: number): number;

/**
 * ```
 * Whether or not another player is allowed to take control of the entity  
 * ```
 * @param netId - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x299EEB23175895FC
 */
export function setNetworkIdCanMigrate(netId: number, toggle: number): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x2BF66D2E7414F686
 */
export function 0x2bf66d2e7414f686(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x4AD490AE1536933B
 */
export function 0x4ad490ae1536933b(p0: any, p1: any): any;

/**
 * ```
 * normal - transition like when your coming out of LSC  
 * slow - transition like when you walk into a mission  
 * ```
 * @param entity - 
 * @param normal - 
 * @param slow - 
 * @returns void
 * @remarks Hash: 0xDE564951F95E09ED
 */
export function networkFadeOutEntity(entity: number, normal: number, slow: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x3FB99A8B08D18FD6
 */
export function networkPlayerHasHeadset(player: number): number;

/**
 * ```
 * p4 and p5 are always 0 in scripts  
 * ```
 * @param player - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x9769F811D1785B03
 */
export function NetworkRespawnCoords(player: number, x: number, y: number, z: number, p4: number, p5: number): void;

/**
 * ## Parameters
 * *
 * @param data - 
 * @param dataCount - 
 * @returns number
 * @remarks Hash: 0xB8322EEB38BE7C26
 */
export function setBalanceAddMachines(data: any, dataCount: number): number;

/**
 * ## Return value
 * Hard-coded to always return 0.
 * @returns any
 * @remarks Hash: 0x67FC09BC554A75E5
 */
export function 0x67fc09bc554a75e5(): any;

/**
 * ```
 * Same as _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER (0xD414BE129BB81B32)
 * ```
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x0E3A041ED6AC2B45
 */
export function NetworkGetAverageLatencyForPlayer2(player: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xA7BAB11E7C9C6C5A
 */
export function ugcGetContentCategory(p0: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x74698374C45701D2
 */
export function networkIsOfflineInvitePending(): number;

/**
 * ## Return value
 * True if there are any pending downloads, false otherwise.
 * @returns number
 * @remarks Hash: 0xB3F64A6A91432477
 */
export function networkClanAnyDownloadMembershipPending(): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @param event - 
 * @param amountReceived - 
 * @returns number
 * @remarks Hash: 0xEC5E3AF5289DCA81
 */
export function badSportPlayerLeftDetected(networkHandle: number, event: number, amountReceived: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x3DBF2DF0AEB7D289
 */
export function networkGetPresenceInviteFromAdmin(p0: any): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xAAA553E7DD28A457
 */
export function setNetworkCutsceneEntities(toggle: number): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x815E5E3073DA1D67
 */
export function setBalanceAddMachine(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0xD5A4B59980401588
 */
export function ugcGetBookmarkedContent(p0: any, p1: any, p2: any, p3: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x37025B27D9B658B1
 */
export function ugcGetContentFileVersion(p0: any, p1: any): any;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @param bufferSize - 
 * @returns number
 * @remarks Hash: 0x6F79B93B0A8E4133
 */
export function networkIsHandleValid(networkHandle: number, bufferSize: number): number;

/**
 * @returns void
 * @remarks Hash: 0x17E0198B3882C2CB
 */
export function networkStartSoloTutorialSession(): void;

/**
 * ```
 * Takes the specified time and writes it to the structure specified in the second argument.  
 * struct date_time  
 * { 
 *     alignas(8) int year;  
 *     alignas(8) int month;  
 *     alignas(8) int day;  
 *     alignas(8) int hour;  
 *     alignas(8) int minute;  
 *     alignas(8) int second;  
 * };
 * ```
 * @param posixTime - 
 * @param timeStructure - 
 * @returns void
 * @remarks Hash: 0xAC97AF97FA68E5D5
 */
export function convertPosixTime(posixTime: number, timeStructure: any): void;

/**
 * ```
 * NativeDB Added Parameter 5: Any p4
 * NativeDB Added Parameter 6: Any p5
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0xA091A5E44F0072E5
 */
export function networkDoTransitionQuickmatchAsync(p0: any, p1: any, p2: any, p3: any): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x57AF1F8E27483721
 */
export function networkIsPlayerBlockedByMe(player: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @param playerPed - 
 * @returns void
 * @remarks Hash: 0x423DE3854BB50894
 */
export function networkSetInSpectatorMode(toggle: number, playerPed: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xDC48473142545431
 */
export function FacebookSetCreateCharacterComplete(): number;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns number
 * @remarks Hash: 0x800DD4721A8B008B
 */
export function canRegisterMissionObjects(amount: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x02A8BEC6FD9AF660
 */
export function networkGetGamerStatusResult(p0: any, p1: any): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0xB124B57F571D8F18
 */
export function networkClanPlayerIsActive(networkHandle: number): number;

/**
 * ```
 * If you are host, returns true else returns false.
 * ```
 * @returns number
 * @remarks Hash: 0x8DB296B814EDDA07
 */
export function networkIsHost(): number;

/**
 * ## Parameters
 * *
 * @param sceneId - 
 * @returns void
 * @remarks Hash: 0xC9B43A33D09CADA7
 */
export function networkForceLocalUseOfSyncedSceneCamera(sceneId: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xB071E27958EF4CF0
 */
export function networkGamertagFromHandlePending(): number;

/**
 * ```
 * Message is limited to 64 characters.
 * ```
 * @param message - 
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x3A214F2EC889B100
 */
export function networkSendTextMessage(message: string, networkHandle: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x6CC27C9FA2040220
 */
export function networkIsInMpCutscene(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x203F1CFD823B27A4
 */
export function networkGetFriendCount(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x993CBE59D350D225
 */
export function ugcGetContentHasPlayerBookmarked(p0: any): number;

/**
 * ## Parameters
 * *
 * @param netID - 
 * @returns void
 * @remarks Hash: 0x407091CF6037118E
 */
export function networkDisableProximityMigration(netID: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param TypeOfWeapon - 
 * @returns any
 * @remarks Hash: 0xC434133D9BA52777
 */
export function 0xc434133d9ba52777(p0: any, TypeOfWeapon: number): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x2D5DC831176D0114
 */
export function 0x2d5dc831176d0114(p0: any): number;

/**
 * @returns void
 * @remarks Hash: 0x86E0660E4F5C956D
 */
export function networkClearGetGamerStatus(): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x57B192B4D4AD23D5
 */
export function networkOverrideSendRestrictionsAll(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xD05D1A6C74DA3498
 */
export function ugcSetDeleted(p0: any, p1: number, p2: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x5728BB6D63E3FF1D
 */
export function networkMarkTransitionGamerAsFullyJoined(p0: any): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xE73092F4157CD126
 */
export function isPlayerInCutscene(player: number): number;

/**
 * ## Parameters
 * *
 * @param friendIndex - 
 * @returns number
 * @remarks Hash: 0xBAD8F2A42B844821
 */
export function networkIsFriendIndexOnline(friendIndex: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x46718ACEEDEAFC84
 */
export function hasNetworkTimeStarted(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x25CB5A9F37BFD063
 */
export function networkHaveOnlinePrivileges(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x973D76AA760A6CB6
 */
export function 0x973d76aa760a6cb6(p0: number): void;

/**
 * ## Parameters
 * *
 * @param tunableContext - 
 * @param tunableName - 
 * @returns number
 * @remarks Hash: 0x85E5F8B9B898B20A
 */
export function networkDoesTunableExist(tunableContext: string, tunableName: string): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns string
 * @remarks Hash: 0x703F12425ECA8BF5
 */
export function ugcGetContentUserName(p0: any): string;

/**
 * ## Parameters
 * *
 * @param netId - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xE05E81A888FA63C8
 */
export function setNetworkIdExistsOnAllMachines(netId: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xBEC0816FF5ACBCDA
 */
export function ActivateDamageTrackerOnPlayer(player: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x4BA166079D658ED4
 */
export function NetworkSetEntityGhostedWithOwner(entity: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns string
 * @remarks Hash: 0x3448505B6E35262D
 */
export function textureDownloadGetName(p0: number): string;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns any
 * @remarks Hash: 0x07EAB372C8841D99
 */
export function 0x07eab372c8841d99(p0: any, p1: any, p2: any): any;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xF3929C2379B60CCE
 */
export function networkSessionIsSolo(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x152D90E4C1B4738A
 */
export function ugcCopyContent(p0: any, p1: any): number;

/**
 * Checks if the networkHandle is the same as any other user that is signed in on the local machine.
 * For example, if your console has two or more users signed in (on different controllers), the profile that is not controlling the game would be "inactive".
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x7E58745504313A2E
 */
export function networkIsInactiveProfile(networkHandle: number): number;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x697F508861875B42
 */
export function NetworkRegisterTunableBoolHash(): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0xE944C4F5AF1B5883
 */
export function networkIsGamerBlockedByMe(networkHandle: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x7206F674F2A3B1BB
 */
export function networkSetCurrentlySelectedGamerHandleFromInviteMenu(p0: any): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xA12D3A5A3753CC23
 */
export function 0xa12d3a5a3753cc23(): any;

/**
 * @returns void
 * @remarks Hash: 0xFB8F2A6F3DF08CBE
 */
export function networkCancelRespawnSearch(): void;

/**
 * ```
 * bufferSize is 35 in the scripts.  
 * ```
 * @param clanDesc - 
 * @param bufferSize - 
 * @returns number
 * @remarks Hash: 0x7543BB439F63792B
 */
export function networkClanIsRockstarClan(clanDesc: number, bufferSize: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA1B043EE79A916FB
 */
export function networkGetNumFoundGamers(): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x21A1684A25C2867F
 */
export function networkGetPlayerLoudness(player: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xB37E4E6A2388CA7B
 */
export function 0xb37e4e6a2388ca7b(): number;

/**
 * ```
 * index is always 18 in scripts
 * ```
 * @param index - 
 * @returns number
 * @remarks Hash: 0xA699957E60D80214
 */
export function networkHasRosPrivilege(index: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x5CAE833B0EE0C500
 */
export function ugcPoliciesMakePrivate(p0: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0xD82CF8E64C8729D8
 */
export function isSphereVisibleToAnotherMachine(p0: number, p1: number, p2: number, p3: number): number;

/**
 * ```
 * IS_*
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x7EF7649B64D7FF10
 */
export function 0x7ef7649b64d7ff10(entity: number): number;

/**
 * ```
 * gets the ped id of a network id  
 * ```
 * @param netHandle - 
 * @returns number
 * @remarks Hash: 0xBDCD95FC216A8B3E
 */
export function netToPed(netHandle: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x815F18AD865F057F
 */
export function NetworkGetEntityNetScriptId(entity: number): number;

/**
 * @returns void
 * @remarks Hash: 0x5626D9D6810730D5
 */
export function NetworkReportMyself(): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x769951E2455E2EB5
 */
export function ugcGetContentTotal(): any;

/**
 * @returns void
 * @remarks Hash: 0xD0AFAFF5A51D72F7
 */
export function networkEndTutorialSession(): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x565E430DB3B05BEC
 */
export function networkPlayerIndexIsCheater(player: number): number;

/**
 * Returns the same value as [`GetNetworkTime`](#_0x7A5487FE9FAA6B48) in freemode, but as opposed to `GetNetworkTime` it always gets the most recent time, instead of once per tick.
 * 
 * Could be used for benchmarking since it can return times in ticks.
 * @returns number
 * @remarks Hash: 0x89023FBBF9200E9F
 */
export function getNetworkTimeAccurate(): number;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param ms - 
 * @returns void
 * @remarks Hash: 0x42BF1D2E723B6D7E
 */
export function NetworkOverrideClockMillisecondsPerGameMinute(ms: number): void;

/**
 * ```
 * p0 is always false and p1 varies.  
 * NETWORK_SESSION_END(0, 1)  
 * NETWORK_SESSION_END(0, 0)  
 * Results in: "Connection to session lost due to an unknown network error. Please return to Grand Theft Auto V and try again later."  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xA02E59562D711006
 */
export function networkSessionEnd(p0: number, p1: number): number;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns any
 * @remarks Hash: 0x0CF6CC51AA18F0F8
 */
export function 0x0cf6cc51aa18f0f8(p0: any, p1: any, p2: any): any;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x84F0F13120B4E098
 */
export function networkGetTalkerProximity(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x01ABCE5E7CBDA196
 */
export function NetworkGetPlatformPartyUnk(): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xD6D09A6F32F49EF1
 */
export function networkSessionGetKickVote(player: number): number;

/**
 * ## Parameters
 * *
 * @param vars - 
 * @param numVars - 
 * @returns void
 * @remarks Hash: 0x3E9B2F01C50DF595
 */
export function networkRegisterHostBroadcastVariables(vars: number, numVars: number): void;

/**
 * This is what R* uses to hide players in MP interiors.
 * 
 * To manage player visibility with NetworkConcealPlayer, here’s a solid approach:
 * @param player - 
 * @param toggle - 
 * @param bAllowDamagingWhileConcealed - 
 * @returns void
 * @remarks Hash: 0xBBDF066252829606
 */
export function networkConcealPlayer(player: number, toggle: number, bAllowDamagingWhileConcealed: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0xBE3E347A87ACEB82
 */
export function networkSessionActivityQuickmatch(p0: any, p1: any, p2: any, p3: any): number;

/**
 * nullsub, doesn't do anything
 * 
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x3FC795691834481D
 */
export function 0x3fc795691834481d(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x93DC1BE4E1ABE9D1
 */
export function networkIsPlayerConnected(player: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x0CD9AB83489430EA
 */
export function getNumCreatedMissionVehicles(p0: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x06FAACD625D80CAA
 */
export function networkRegisterEntityAsNetworked(entity: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x171DF6A0C07FB3DC
 */
export function ugcRequestContentDataFromIndex(p0: number, p1: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x2E0BF682CC778D49
 */
export function 0x2e0bf682cc778d49(p0: any): number;

/**
 * ```
 * Returns the Player associated to a given Ped when in an online session.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x6C0E2E0125610278
 */
export function networkGetPlayerIndexFromPed(ped: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0xA7862BC5ED1DFD7E
 */
export function 0xa7862bc5ed1dfd7e(p0: any, p1: any, p2: any, p3: any): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xBA9775570DB788CF
 */
export function networkAreSocialClubPoliciesCurrent(): number;

/**
 * ## Parameters
 * *
 * @param index - 
 * @returns number
 * @remarks Hash: 0x2A7776C709904AB0
 */
export function getCommerceItemNumCats(index: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x94538037EE44F5CF
 */
export function 0x94538037ee44f5cf(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x56CE820830EF040B
 */
export function networkSessionGetMatchmakingGroupFree(p0: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x12103B9E0C9F92FB
 */
export function networkIsActivitySpectator(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5F91D5D0B36AA310
 */
export function networkHaveRosMultiplayerPriv(): number;

/**
 * ```
 * Hardcoded to return zero.
 * ==== PS4 specific info ====
 * Returns some sort of unavailable reason:
 * -1 = REASON_INVALID
 *  0 = REASON_OTHER
 *  1 = REASON_SYSTEM_UPDATE
 *  2 = REASON_GAME_UPDATE
 *  3 = REASON_SIGNED_OUT
 *  4 = REASON_AGE
 *  5 = REASON_CONNECTION
 * =================================
 * ```
 * @returns number
 * @remarks Hash: 0x74FB3E29E6D10FA9
 */
export function 0x74fb3e29e6d10fa9(): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0xCCA4318E1AB03F1F
 */
export function NetworkHasViewGamerUserContentResult(networkHandle: any): number;

/**
 * This native does absolutely nothing, just a nullsub
 * @param p0 - 
 * @param textLabel - 
 * @returns void
 * @remarks Hash: 0x3E200C2BCF4164EB
 */
export function networkSetRichPresenceString(p0: number, textLabel: string): void;

/**
 * @returns void
 * @remarks Hash: 0x42FB3B532D526E6C
 */
export function networkRequestCloudTunables(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xF6F4383B7C92F11A
 */
export function 0xf6f4383b7c92f11a(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x2CE9D95E4051AECD
 */
export function 0x2ce9d95e4051aecd(p0: any): void;

/**
 * @returns void
 * @remarks Hash: 0x140E6A44870A11CE
 */
export function 0x140e6a44870a11ce(): void;

/**
 * ## Parameters
 * *
 * @param index - 
 * @returns string
 * @remarks Hash: 0xB4271092CA7EDF48
 */
export function getCommerceItemName(index: number): string;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xEDF7F927136C224B
 */
export function ugcGetQueryResult(): any;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x0B0CC10720653F3B
 */
export function cloudGetAvailabilityCheckResult(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x172F75B6EE2233BA
 */
export function networkPlayerGetCheaterReason(): number;

/**
 * Get the network id of the given entity
 * 
 * An entity network id represents a given entity for other clients, it's a handle shared between clients, can be reconverted to a client entity handle.  
 * These (entity network IDs) can and will be reused, the network id will not change.
 * If you need to refer to an entity across machines (clients, or the server), you should use its network id.
 * 
 * Read more at [Network and local IDs](https://docs.fivem.net/docs/scripting-manual/networking/ids/)
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xA11700682F3AD45C
 */
export function networkGetNetworkIdFromEntity(entity: number): number;

/**
 * ```
 * Hardcoded to return false.
 * ```
 * @returns number
 * @remarks Hash: 0xFD8B834A8BA05048
 */
export function networkIsInPlatformPartyChat(): number;

/**
 * ```
 * NativeDB Added Parameter 5: Any p4
 * NativeDB Added Parameter 6: Any p5
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x71FB0EBCD4915D56
 */
export function networkDoTransitionQuickmatch(p0: any, p1: any, p2: any, p3: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xB4AB419E0D86ACAE
 */
export function networkSessionChangeSlots(p0: number, p1: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x66B59CFFD78467AF
 */
export function NetworkGetRosPrivilege9(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5A6AA44FF8E931E6
 */
export function networkIsTransitionPrivate(): number;

/**
 * ```
 * playerTypes:
 * 0 = regular joiner
 * 4 = spectator
 * 8 = unknown
 * ```
 * @param playerType - 
 * @param playerCount - 
 * @returns void
 * @remarks Hash: 0x8B6A4DD0AF9CE215
 */
export function networkSessionSetMatchmakingGroupMax(playerType: number, playerCount: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x0AFCE529F69B21FF
 */
export function getMaxNumNetworkVehicles(): number;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xFAE628F1E9ADB239
 */
export function 0xfae628f1e9adb239(): void;

/**
 * ```
 * One of the first things it does is get the players ped.  
 * Then it calls a function that is used in some tasks and ped based functions.  
 * ```
 * 
 * p5, p6, p7 is another coordinate (or zero), often related to ``GET_BLIP_COORDS``, in the decompiled scripts.
 * @param player - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param flags - 
 * @returns number
 * @remarks Hash: 0x5A6FFA2433E2F14C
 */
export function networkStartRespawnSearchForPlayer(player: number, x: number, y: number, z: number, radius: number, p5: number, p6: number, p7: number, flags: number): number;

/**
 * @returns void
 * @remarks Hash: 0x4C2A9FDC22377075
 */
export function 0x4c2a9fdc22377075(): void;

/**
 * ```
 * In the console script dumps, this is only referenced once.   
 * NETWORK::NETWORK_EXPLODE_VEHICLE(vehicle, 1, 0, 0);  
 * ^^^^^ That must be PC script dumps? In X360 Script Dumps it is reference a few times with 2 differences in the parameters.  
 * Which as you see below is 1, 0, 0 + 1, 1, 0 + 1, 0, and a *param?  
 * am_plane_takedown.c   
 * network_explode_vehicle(net_to_veh(Local_40.imm_2), 1, 1, 0);  
 * armenian2.c   
 * network_explode_vehicle(Local_80[6 <2>], 1, 0, 0);  
 * fm_horde_controler.c  
 * network_explode_vehicle(net_to_veh(*uParam0), 1, 0, *uParam0);  
 * fm_mission_controller.c, has 6 hits so not going to list them.  
 * Side note, setting the first parameter to 0 seems to mute sound or so?  
 * Seems it's like ADD_EXPLOSION, etc. the first 2 params. The 3rd atm no need to worry since it always seems to be 0.  
 * ```
 * @param vehicle - 
 * @param isAudible - 
 * @param isInvisible - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x301A42153C9AD707
 */
export function networkExplodeVehicle(vehicle: number, isAudible: number, isInvisible: number, p3: number): void;

/**
 * Formerly incorrectly named `USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR` due to incorrect treatment of console vs. PC native registration.
 * 
 * Native name guessed through ordering.
 * 
 * ```
 * NativeDB Added Parameter 2: BOOL p1
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x5FFE9B4144F9712F
 */
export function SetLocalPlayerAsGhost(toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x9747292807126EDA
 */
export function networkIsMultiplayerDisabled(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x702BC4D605522539
 */
export function 0x702bc4d605522539(p0: any): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x19D8DA0E5A68045A
 */
export function networkPlayerIsBadsport(): number;

/**
 * @returns void
 * @remarks Hash: 0x3442775428FD2DAA
 */
export function networkSessionLeaveSinglePlayer(): void;

/**
 * ```
 * Retrieves the local player's NetworkHandle* and stores it in the given buffer.  
 * * Currently unknown struct  
 * ```
 * @param networkHandle - 
 * @param bufferSize - 
 * @returns void
 * @remarks Hash: 0xE86051786B66CD8E
 */
export function networkGetLocalHandle(networkHandle: number, bufferSize: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x8020A73847E0CA7D
 */
export function networkHaveRosBannedPriv(): number;

/**
 * ```
 * NETWORK_GET_*
 * 
 * NativeDB Introduced: v323
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x52C1EADAF7B10302
 */
export function NetworkGetOldestResendCountForPlayer(player: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0xDC3A310219E5DA62
 */
export function isSphereVisibleToPlayer(p0: any, p1: number, p2: number, p3: number, p4: number): number;

/**
 * ```
 * gets 2 floats from the CNetGamePlayer of p0 and stores them in p1 and p2.  
 * Possibly waypoint?  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xADB57E5B663CCA8B
 */
export function 0xadb57e5b663cca8b(p0: number, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0xF7B2CFDE5C9F700D
 */
export function networkFindMatchedGamers(p0: any, p1: number, p2: number, p3: number): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x1A24A179F9B31654
 */
export function networkIsFriend(networkHandle: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x43865688AE10F0D7
 */
export function FacebookIsAvailable(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA75E2B6733DA5142
 */
export function FacebookDoUnkCheck(): number;

/**
 * ## Parameters
 * *
 * @param index - 
 * @returns string
 * @remarks Hash: 0xCA94551B50B4932C
 */
export function getCommerceProductPrice(index: number): string;

/**
 * ## Parameters
 * *
 * @param netId - 
 * @returns number
 * @remarks Hash: 0x38CE16C96BD11344
 */
export function networkDoesNetworkIdExist(netId: number): number;

/**
 * ## Parameters
 * *
 * @param friendIndex - 
 * @returns string
 * @remarks Hash: 0xE11EBBB2A783FE8B
 */
export function networkGetFriendName(friendIndex: number): string;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xEEEDA5E6D7080987
 */
export function networkChangeTransitionSlots(p0: any, p1: any): void;

/**
 * NETWORK_SET_*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x8EF52ACAECC51D9C
 */
export function 0x8ef52acaecc51d9c(toggle: number): void;

/**
 * ```
 * Appears to set whether a transition should be started when the session is migrating.
 * 
 * NETWORK_SET_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xA2E9C1AB8A92E8CD
 */
export function 0xa2e9c1ab8a92e8cd(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xE5F773C1A1D9D168
 */
export function setLocalPlayerInvisibleLocally(p0: number): void;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns void
 * @remarks Hash: 0xCBF12D65F95AD686
 */
export function networkSetTalkerProximity(value: number): void;

/**
 * ## Parameters
 * *
 * @param netHandle - 
 * @returns number
 * @remarks Hash: 0x5835D9CD92E83184
 */
export function networkClanGetEmblemTxdName(netHandle: any): number;

/**
 * ```
 * gets the network id of a ped  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x0EDEC3C276198689
 */
export function pedToNet(ped: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x23DFB504655D0CE4
 */
export function networkSessionWasInvited(): number;

/**
 * ## Parameters
 * *
 * @param matchmakingGroup - 
 * @returns void
 * @remarks Hash: 0x49EC8030F5015F8B
 */
export function networkSessionSetMatchmakingGroup(matchmakingGroup: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x292564C735375EDF
 */
export function networkIsTransitionMatchmaking(): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD5B4883AC32F24C3
 */
export function networkSetTeamOnlyChat(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xAF66059A131AA269
 */
export function networkOverrideTransitionChat(p0: number): void;

/**
 * Checks if the friendDataIndex in the friend data manager contains the data for the specified networkHandle
 * @param friendDataIndex - 
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x44B37CDCAE765AAE
 */
export function networkCheckDataManagerSucceededForHandle(friendDataIndex: number, networkHandle: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x3A17A27D75C74887
 */
export function ugcGetContentHash(): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0xA150A4F065806B1F
 */
export function networkCanCommunicateWithGamer(networkHandle: number): number;

/**
 * Returns POSIX timestamp.
 * 
 * Renamed from `_GET_POSIX_TIME` to `GET_CLOUD_TIME_AS_INT` because of conflicting native names ([`0xDA488F299A5B164E`](#_0xDA488F299A5B164E))
 * @returns number
 * @remarks Hash: 0x9A73240B49945C76
 */
export function getCloudTimeAsInt(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x4237E822315D8BA9
 */
export function 0x4237e822315d8ba9(): number;

/**
 * ```
 * On PC it's a nullsub which means it does absolutely nothing.  
 * Now that Discord supports Rich Presence, R* might finally implement this for PC. Or maybe in future games like RDR2, GTA VI...  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x1DCCACDCFC569362
 */
export function networkSetRichPresence(p0: number, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1632BE0AC1E62876
 */
export function NetworkConcealEntity(entity: number, toggle: number): void;

/**
 * ```
 * Checks if a specific value (BYTE) in CPlayerInfo is nonzero.  
 * Returns always false in Singleplayer.  
 * No longer used for dev checks since first mods were released on PS3 & 360.  
 * R* now checks with the is_dlc_present native for the dlc hash 2532323046,  
 * if that is present it will unlock dev stuff.  
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x544ABDDA3B409B6D
 */
export function networkPlayerIsRockstarDev(player: number): number;

/**
 * ```
 * Does nothing (it's a nullsub).
 * 
 * NativeDB Introduced: v323
 * ```
 * @returns void
 * @remarks Hash: 0x2555CF7DA5473794
 */
export function 0x2555cf7da5473794(): void;

/**
 * ## Parameters
 * *
 * @param netId - 
 * @returns number
 * @remarks Hash: 0xA670B3662FAFFBD0
 */
export function networkRequestControlOfNetworkId(netId: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x18D0456E86604654
 */
export function networkGetNumParticipants(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x68049AEFF83D8F0A
 */
export function networkIsInTransition(): number;

/**
 * ```
 * Checks some commerce stuff
 * 
 * NativeDB Introduced: v1290
 * ```
 * @returns number
 * @remarks Hash: 0x754615490A029508
 */
export function 0x754615490a029508(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x32DD916F3F7C9672
 */
export function ugcGetContentLanguage(p0: any): any;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xB2092A1EAA7FD45F
 */
export function IsDamageTrackerActiveOnPlayer(player: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xD1110739EEADB592
 */
export function NetworkIsThisScriptMarked(p0: any, p1: number, p2: any): number;

/**
 * ## Parameters
 * *
 * @param netId - 
 * @returns number
 * @remarks Hash: 0x4D36070FE0215186
 */
export function networkHasControlOfNetworkId(netId: number): number;

/**
 * ## Parameters
 * *
 * @param netId - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xA6928482543022B4
 */
export function setNetworkIdVisibleInCutscene(netId: number, p1: number, p2: number): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xA8ACB6459542A8C8
 */
export function 0xa8acb6459542a8c8(): any;

/**
 * ## Parameters
 * *
 * @param groupId - 
 * @returns void
 * @remarks Hash: 0xCAE55F48D3D7875C
 */
export function networkSessionAddActiveMatchmakingGroup(groupId: number): void;

/**
 * @returns void
 * @remarks Hash: 0x72433699B4E6DD64
 */
export function networkResetBodyTracker(): void;

/**
 * ## Parameters
 * *
 * @param time - 
 * @returns string
 * @remarks Hash: 0x9E23B1777A927DAD
 */
export function getTimeAsString(time: number): string;

/**
 * ## Parameters
 * *
 * @param vars - 
 * @param numVars - 
 * @returns void
 * @remarks Hash: 0x3364AA97340CA215
 */
export function networkRegisterPlayerBroadcastVariables(vars: number, numVars: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xC64DED7EF0D2FE37
 */
export function cloudDeleteMemberFile(p0: string): number;

/**
 * ```
 * unknown params  
 * p0 = 0, 2, or 999 (The global is 999 by default.)  
 * p1 = 0 (Always in every script it's found in atleast.)  
 * p2 = 0, 3, or 4 (Based on a var that is determined by a function.)  
 * p3 = maxPlayers (It's obvious in x360 scripts it's always 18)  
 * p4 = 0 (Always in every script it's found in atleast.)  
 * p5 = 0 or 1. (1 if network_can_enter_multiplayer, but set to 0 if other checks after that are passed.)  
 * p5 is reset to 0 if,  
 * Global_1315318 = 0 or Global_1315323 = 9 or 12 or (Global_1312629 = 0 && Global_1312631 = true/1) those are passed.  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param maxPlayers - 
 * @param p4 - 
 * @param p5 - 
 * @returns any
 * @remarks Hash: 0x330ED4D05491934F
 */
export function networkSessionEnter(p0: any, p1: any, p2: any, maxPlayers: number, p4: any, p5: any): any;

/**
 * ```
 * Has a 3rd param (int) since patch [???].  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 3: int p2
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x58C21165F6545892
 */
export function openCommerceStore(p0: string, p1: string): void;

/**
 * ```
 * Return the root content id of a job.
 * ```
 * @param p0 - 
 * @returns string
 * @remarks Hash: 0xC0173D6BFF4E0348
 */
export function ugcGetRootContentId(p0: number): string;

/**
 * ## Parameters
 * *
 * @param PlayerHandle - 
 * @param FilePath - 
 * @param Name - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x16160DA74A8E74A2
 */
export function textureDownloadRequest(PlayerHandle: number, FilePath: string, Name: string, p3: number): number;

/**
 * ```
 * Seems to always return 0, but it's used in quite a few loops.
 * for (num3 = 0; num3 < NETWORK::0xCCD8C02D(); num3++)
 *     {
 *         if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)
 *         {
 *             var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));
 * ```
 * @returns number
 * @remarks Hash: 0xA6C90FBC38E395EE
 */
export function networkGetMaxNumParticipants(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x4E548C0D7AE39FF9
 */
export function ugcGetContentRatingNegativeCount(p0: any, p1: any): any;

/**
 * ```
 * Actually returns the version (TUNABLE_VERSION)
 * ```
 * @returns number
 * @remarks Hash: 0x10BD227A753B0D84
 */
export function networkGetTunableCloudCrc(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xD53ACDBEF24A46E8
 */
export function ugcIsGetting(): number;

/**
 * ## Parameters
 * *
 * @param retPlayerIds - 
 * @param retNumber - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns any
 * @remarks Hash: 0x2E4C123D1C8A710E
 */
export function 0x2e4c123d1c8a710e(retPlayerIds: number, retNumber: number, p2: any, p3: any, p4: any, p5: any, p6: any): any;

/**
 * ```
 * Returns true if profile setting 901 is set to true and sets it to false.
 * 
 * NETWORK_C*
 * ```
 * @returns number
 * @remarks Hash: 0x60EDD13EB3AC1FF3
 */
export function 0x60edd13eb3ac1ff3(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE6717E652B8C8D8A
 */
export function 0xe6717e652b8c8d8a(p0: any, p1: any): void;

/**
 * ```
 * Same as GET_CLOUD_TIME_AS_INT but returns the value as a hex string (%I64X).
 * ```
 * @returns string
 * @remarks Hash: 0xF12E6CD06C73D69E
 */
export function GetCloudTimeAsString(): string;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0x42B2DAA6B596F5F8
 */
export function networkGetEntityKillerOfPlayer(player: number, weaponHash: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x36391F397731595D
 */
export function 0x36391f397731595d(p0: any): any;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x048746E388762E11
 */
export function networkIsInSpectatorMode(): number;

/**
 * ```
 * p0 appears to be for MP  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xCF3A965906452031
 */
export function getNumReservedMissionVehicles(p0: number): number;

/**
 * ```
 * Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.  
 * ```
 * @param p0 - 
 * @param maxPlayers - 
 * @returns number
 * @remarks Hash: 0xB9CFD27A5D578D83
 */
export function networkSessionHostFriendsOnly(p0: number, maxPlayers: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x70DA3BF8DACD3210
 */
export function networkSetOverrideSpectatorMode(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param TypeOfWeapon - 
 * @returns any
 * @remarks Hash: 0x2DA41ED6E1FCD7A5
 */
export function 0x2da41ed6e1fcd7a5(p0: any, TypeOfWeapon: number): any;

/**
 * Note: This only works for vehicles, which appears to be a bug (since the setter _does_ work for every entity type and the name is 99% correct).
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x71302EC70689052A
 */
export function NetworkIsEntityConcealed(entity: number): number;

/**
 * ## Parameters
 * *
 * @param data - 
 * @param dataSize - 
 * @returns number
 * @remarks Hash: 0x120364DE2845DAF8
 */
export function networkGetPlatformPartyMembers(data: any, dataSize: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x9D80CD1D0E6327DE
 */
export function networkInviteGamers(p0: any, p1: any, p2: any, p3: any): number;

/**
 * ## Parameters
 * *
 * @param doorHash - 
 * @returns number
 * @remarks Hash: 0xC01E93FAC20C3346
 */
export function networkIsDoorNetworked(doorHash: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns number
 * @remarks Hash: 0x9BF438815F5D96EA
 */
export function ugcQueryMyContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): number;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @returns any
 * @remarks Hash: 0x023ACAB2DC9DC4A4
 */
export function 0x023acab2dc9dc4a4(): any;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x580CE4438479CC61
 */
export function networkCanBail(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x1F471B79ACC90BEF
 */
export function networkClanGetLocalMembershipsCount(): number;

/**
 * ```
 * NETWORK_RE*
 * 
 * Triggers a CEventNetworkInviteConfirmed event
 * ```
 * @returns number
 * @remarks Hash: 0x62A0296C1BB1CEB3
 */
export function NetworkAcceptInvite(): number;

/**
 * ```
 * Adds the first argument to the second.  
 * ```
 * @param timeA - 
 * @param timeB - 
 * @returns number
 * @remarks Hash: 0x017008CCDAD48503
 */
export function getTimeOffset(timeA: number, timeB: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x261E97AD7BCF3D40
 */
export function 0x261e97ad7bcf3d40(p0: number): void;

/**
 * ## Parameters
 * *
 * @param netScene - 
 * @param animDict - 
 * @param animName - 
 * @returns void
 * @remarks Hash: 0xCF8BD3B0BD6D42D7
 */
export function networkAddSynchronisedSceneCamera(netScene: number, animDict: string, animName: string): void;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x9F0C0A981D73FA56
 */
export function networkGamertagFromHandleStart(networkHandle: number): number;

/**
 * ```
 * gets the object id of a network id  
 * ```
 * @param netHandle - 
 * @returns number
 * @remarks Hash: 0xD8515F5FEA14CB3F
 */
export function netToObj(netHandle: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x7AC752103856FB20
 */
export function networkSetScriptReadyForEvents(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xB309EBEA797E001F
 */
export function 0xb309ebea797e001f(p0: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns string
 * @remarks Hash: 0xCD67AD041A394C9C
 */
export function ugcGetContentUserId(p0: number): string;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1B857666604B1A74
 */
export function networkSetPlayerIsPassive(toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x59DF79317F85A7E0
 */
export function networkJoinPreviouslyFailedSession(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xAAB11F6C4ADBC2C1
 */
export function networkClanGetMembershipCount(p0: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xBC1D768F2F5D6C05
 */
export function networkHashFromPlayerHandle(player: number): number;

/**
 * ```
 * Based on scripts such as in freemode.c how they call their vars vVar and fVar the 2nd and 3rd param it a Vector3 and Float, but the first is based on get_random_int_in_range..  
 * ```
 * @param randomInt - 
 * @param coordinates - 
 * @param heading - 
 * @returns void
 * @remarks Hash: 0x371EA43692861CF1
 */
export function networkGetRespawnResult(randomInt: number, coordinates: { x: number, y: number, z: number }, heading: number): void;

/**
 * Revives our local player who was previously dead.
 * @param x - 
 * @param y - 
 * @param z - 
 * @param heading - 
 * @returns void
 * @remarks Hash: 0xEA23C49EAA83ACFB
 */
export function networkResurrectLocalPlayer(x: number, y: number, z: number, heading: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x59D421683D31835A
 */
export function 0x59d421683d31835a(p0: any): void;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x71C33B22606CD88A
 */
export function networkIsGamerTalking(networkHandle: number): number;

/**
 * @returns void
 * @remarks Hash: 0xB13E88E655E5A3BC
 */
export function 0xb13e88e655e5a3bc(): void;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xCBBD7C4991B64809
 */
export function filloutPmPlayerList(networkHandle: number, p1: any, p2: any): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x9D6981DFC91A8604
 */
export function networkAmIMutedByPlayer(player: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x87E5C46C187FE0AE
 */
export function ugcGetContentRatingPositiveCount(p0: any, p1: any): any;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x15337C7C268A27B2
 */
export function networkAmIBlockedByGamer(networkHandle: any): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xCD71A4ECAB22709E
 */
export function networkUseLogarithmicBlendingThisFrame(entity: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x53AFD64C6758F2F9
 */
export function networkSessionGetPrivateSlots(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xD39B3FFF8FFDD5BF
 */
export function networkGetPresenceInvitePlaylistLength(p0: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param damageDealt - 
 * @returns any
 * @remarks Hash: 0x83660B734994124D
 */
export function 0x83660b734994124d(p0: any, p1: any, damageDealt: number): any;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xC1447451DDB512F0
 */
export function NetworkUgcNav(p0: any, p1: any): void;

/**
 * ```
 * NativeDB Added Parameter 1: Entity entity
 * ```
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xAA5FAFCD2C5F5E47
 */
export function 0xaa5fafcd2c5f5e47(): { x: number, y: number, z: number };

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x855BC38818F6F684
 */
export function networkSessionIsInVoiceSession(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xFD00798DBA7523DD
 */
export function networkGamertagFromHandleSucceeded(): number;

/**
 * ## Parameters
 * *
 * @param privilege - 
 * @param banType - 
 * @param timeData - 
 * @returns number
 * @remarks Hash: 0xC22912B1D85F26B1
 */
export function networkHasRosPrivilegeEndDate(privilege: number, banType: number, timeData: { x: number, y: number, z: number }): number;

/**
 * Sets whether or not an object (created using `CREATE_OBJECT`, or similar) should have its position/rotation synchronized,
 * even if it is a 'static' object (for example, having flag 32 - Static - set in its archetype definition).
 * 
 * This has to be called during the same frame the object is created/registered for network, as otherwise it may already
 * have a remote clone created.
 * 
 * Once a remote clone is created, changing this value will not have any effect on said clone.
 * @param object - 
 * @param enabled - 
 * @returns void
 * @remarks Hash: 0x0379DAF89BA09AA5
 */
export function NetworkSetObjectForceStaticBlend(object: number, enabled: number): void;

/**
 * ```
 * Sets some voice chat related value.
 * NETWORK_SET_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6A5D89D7769A40D8
 */
export function 0x6a5d89d7769a40d8(toggle: number): void;

/**
 * ```
 * Access to the store for shark cards etc...  
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9641A9FF718E9C5E
 */
export function setStoreEnabled(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x7368E683BB9038D6
 */
export function networkUnregisterNetworkedEntity(entity: number): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xB60FEBA45333D36F
 */
export function reserveNetworkMissionPeds(amount: number): void;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x71DC455F5CD1C2B1
 */
export function networkHasInviteBeenAcked(networkHandle: number): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0xCE60DE011B6C7978
 */
export function networkIsGamerMutedByMe(networkHandle: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xBA416D68C631496A
 */
export function networkSessionIsVisible(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x1ACCFBA3D8DAB2EE
 */
export function ugcGetContentRating(p0: any, p1: any): any;

/**
 * ```
 * Old name: _NETWORK_SET_NETWORK_ID_DYNAMIC
 * ```
 * @param netID - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2B1813ABA29016C5
 */
export function networkUseHighPrecisionBlending(netID: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns any
 * @remarks Hash: 0x8B4FFC790CA131EF
 */
export function 0x8b4ffc790ca131ef(p0: any, p1: any, p2: any, p3: any): any;

/**
 * ```
 * Returns whether the player is signed into Social Club.  
 * ```
 * @returns number
 * @remarks Hash: 0x054354A99211EB96
 */
export function networkIsSignedIn(): number;

/**
 * ```
 * p0 is always false in scripts.
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x0FF2862B61A58AF9
 */
export function networkOverrideReceiveRestrictionsAll(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x7619364C82D3BF14
 */
export function setLocalPlayerVisibleLocally(p0: number): void;

/**
 * ```
 * NETWORK_SESSION_IS_*
 * ```
 * @returns number
 * @remarks Hash: 0xD313DE83394AF134
 */
export function 0xd313de83394af134(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x1353F87E89946207
 */
export function NetworkHasAgeRestrictedProfile(): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns string
 * @remarks Hash: 0x426141162EBE5CDB
 */
export function networkGetGamertagFromHandle(networkHandle: number): string;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns number
 * @remarks Hash: 0x135F9B7B7ADD2185
 */
export function NetworkCanGamerPlayMultiplayerWithMe(networkHandle: any): number;

/**
 * ```
 * This checks if player is playing on gta online or not.  
 * Please add an if and block your mod if this is "true".  
 * ```
 * @returns number
 * @remarks Hash: 0x9DE624D2FC4B603F
 */
export function networkIsSessionStarted(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x600F8CB31C7AAB6E
 */
export function 0x600f8cb31c7aab6e(p0: any): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x21D04D7BC538C146
 */
export function IsEntityGhostedToLocalPlayer(entity: number): number;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0xFF8FCF9FFC458A1C
 */
export function NetworkGetNumUnackedForPlayer(player: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xD7C95D322FF57522
 */
export function networkIsClockTimeOverridden(): number;

/**
 * ```
 * This sets bit [offset] of [address] to off.
 * Example:
 * MISC::CLEAR_BIT(&bitAddress, 1);
 * To check if this bit has been enabled:
 * MISC::IS_BIT_SET(bitAddress, 1); // will return 0 afterwards
 * ```
 * @param address - 
 * @param offset - 
 * @returns void
 * @remarks Hash: 0xE80492A9AC099A93
 */
export function clearBit(address: number, offset: number): void;

/**
 * ## Parameters
 * *
 * @param dispatchService - 
 * @returns number
 * @remarks Hash: 0xEB4A0C2D56441717
 */
export function GetNumDispatchedUnitsForPlayer(dispatchService: number): number;

/**
 * To remove, see: [`REMOVE_DISPATCH_SPAWN_BLOCKING_AREA`](#_0x264AC28B01B353A5).
 * 
 * See [`IS_POINT_IN_ANGLED_AREA`](#_0x2A70BAE8883E4C81) for the definition of an angled area.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param width - 
 * @returns any
 * @remarks Hash: 0x918C7B2D2FF3928B
 */
export function AddDispatchSpawnBlockingAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): any;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2C2B3493FBF51C71
 */
export function pauseDeathArrestRestart(toggle: number): void;

/**
 * ```
 * MISC::_0x957838AAF91BD12D(x, y, z, radius, false, false, false, false); seem to make all objects go away, peds, vehicles etc. All booleans set to true doesn't seem to change anything.
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @returns void
 * @remarks Hash: 0x957838AAF91BD12D
 */
export function clearAreaLeaveVehicleHealth(x: number, y: number, z: number, radius: number, p4: number, p5: number, p6: number, p7: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns any
 * @remarks Hash: 0x452736765B31FC4B
 */
export function addPoliceRestart(p0: number, p1: number, p2: number, p3: number, p4: any): any;

/**
 * ## Parameters
 * *
 * @param dst - 
 * @param src - 
 * @param size - 
 * @returns void
 * @remarks Hash: 0x213AEB2B90CBA7AC
 */
export function CopyMemory(dst: any, src: any, size: number): void;

/**
 * Gets the number of the current frame being displayed.
 * @returns number
 * @remarks Hash: 0xFC8202EFC642E6F2
 */
export function getFrameCount(): number;

/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#_0x29B487C359E19889) for weather types.
 * @returns number
 * @remarks Hash: 0x711327CD09C8F162
 */
export function getNextWeatherTypeHashName(): number;

/**
 * ## Return value
 * Hard-coded to always return 0.
 * @returns number
 * @remarks Hash: 0x4D982ADB1978442D
 */
export function isDurangoVersion(): number;

/**
 * ```
 * Returns value of the '-benchmarkIterations' command line option.
 * ```
 * @returns number
 * @remarks Hash: 0x4750FC27570311EC
 */
export function GetBenchmarkIterationsFromCommandLine(): number;

/**
 * ```c
 * enum eGravityLevel
 * {
 *     GRAV_EARTH = 0, // earth gravity 9.8m/s2
 *     GRAV_MOON = 1, // moon gravity 2.4m/s2
 *     GRAV_LOW = 2, // very low gravity
 *     GRAV_ZERO = 3 // zero gravity
 * }
 * ```
 * @param level - 
 * @returns void
 * @remarks Hash: 0x740E14FAD5842351
 */
export function setGravityLevel(level: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x72DE52178C291CB5
 */
export function queueMissionRepeatLoad(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xDC9274A7EF6B2867
 */
export function getReplayStatCount(): number;

/**
 * Clears an area of cops at the given coordinates and radius.
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0x04F8FC8FCF58F88D
 */
export function clearAreaOfCops(x: number, y: number, z: number, radius: number): void;

/**
 * ```
 * Gets the dimensions of a model.
 * Calculate (maximum - minimum) to get the size, in which case, Y will be how long the model is.
 * Example from the scripts: MISC::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), &v_1A, &v_17);
 * ```
 * @param modelHash - 
 * @param minimum - 
 * @param maximum - 
 * @returns void
 * @remarks Hash: 0x03E8D3D5F549087A
 */
export function getModelDimensions(modelHash: number, minimum: { x: number, y: number, z: number }, maximum: { x: number, y: number, z: number }): void;

/**
 * ## Parameters
 * *
 * @param dispatchService - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9B2BD3773123EA2F
 */
export function blockDispatchServiceResourceCreation(dispatchService: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param incidentId - 
 * @param dispatchService - 
 * @param numUnits - 
 * @returns void
 * @remarks Hash: 0xB08B85D860E7BA3C
 */
export function setIncidentRequestedUnits(incidentId: number, dispatchService: number, numUnits: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xE369A5783B866016
 */
export function enableStuntJumpSet(p0: number): void;

/**
 * ```
 * SET_PLAYER_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9D8D44ADBBA61EF2
 */
export function SetPlayerRockstarEditorDisabled(toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0x50EEAAD86232EE55
 */
export function doAutoSave(): void;

/**
 * ## Parameters
 * *
 * @param minAmplitude - 
 * @returns void
 * @remarks Hash: 0x31727907B2C43C55
 */
export function waterOverrideSetOceannoiseminamplitude(minAmplitude: number): void;

/**
 * ```
 * Called 4 times in the b617d scripts:
 * MISC::_A74802FB8D0B7814("CONTRAILS", 0);
 * ```
 * @param name - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xA74802FB8D0B7814
 */
export function unloadCloudHat(name: string, p1: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x7A3F19700A4D0525
 */
export function isStuntJumpInProgress(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x7B30F65D7B710098
 */
export function isThisAMinigameScript(): number;

/**
 * ## Parameters
 * *
 * @param var - 
 * @param rangeStart - 
 * @param rangeEnd - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x8EF07E15701D61ED
 */
export function setBitsInRange(var: number, rangeStart: number, rangeEnd: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param projHash - 
 * @param radius - 
 * @param ownedByPlayer - 
 * @returns number
 * @remarks Hash: 0x34318593248C8FB2
 */
export function isProjectileTypeWithinDistance(x: number, y: number, z: number, projHash: number, radius: number, ownedByPlayer: number): number;

/**
 * ```
 * Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a axis-aligned bounding box.  
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param type - 
 * @param ownedByPlayer - 
 * @returns number
 * @remarks Hash: 0x2E0DC353342C4A6D
 */
export function isProjectileTypeInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, type: number, ownedByPlayer: number): number;

/**
 * @returns void
 * @remarks Hash: 0xEB1774DF12BB9F12
 */
export function stopSaveStruct(): void;

/**
 * @returns void
 * @remarks Hash: 0x9243BAC96D64C050
 */
export function networkSetScriptIsSafeForNetworkGame(): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param level - 
 * @returns void
 * @remarks Hash: 0x7F06937B0CDCBC1A
 */
export function SetSnowLevel(level: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5AA3BEFA29F03AD4
 */
export function areProfileSettingsValid(): number;

/**
 * ```
 * The following cloudhats are useable:
 * altostratus
 * Cirrus
 * cirrocumulus
 * Clear 01
 * Cloudy 01
 * Contrails
 * Horizon
 * horizonband1
 * horizonband2
 * horizonband3
 * horsey
 * Nimbus
 * Puffs
 * RAIN
 * Snowy 01
 * Stormy 01
 * stratoscumulus
 * Stripey
 * shower
 * Wispy
 * ```
 * @param name - 
 * @param transitionTime - 
 * @returns void
 * @remarks Hash: 0xFC4842A34657BFCB
 */
export function loadCloudHat(name: string, transitionTime: number): void;

/**
 * ## Parameters
 * *
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param projectileHash - 
 * @param projectilePos - 
 * @param ownedByPlayer - 
 * @returns number
 * @remarks Hash: 0x8D7A43EC6A5FEA45
 */
export function getCoordsOfProjectileTypeInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, projectileHash: number, projectilePos: { x: number, y: number, z: number }, ownedByPlayer: number): number;

/**
 * ```
 * Begins with START_*. Next character in the name is either D or E.
 * ```
 * @returns void
 * @remarks Hash: 0x92790862E36C2ADA
 */
export function StartBenchmarkRecording(): void;

/**
 * ```
 * NativeDB Added Parameter 19: Any p18
 * NativeDB Added Parameter 20: Any p19
 * NativeDB Added Parameter 21: Any p20
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param damage - 
 * @param p7 - 
 * @param weaponHash - 
 * @param ownerPed - 
 * @param isAudible - 
 * @param isInvisible - 
 * @param speed - 
 * @param entity - 
 * @param p14 - 
 * @param p15 - 
 * @param p16 - 
 * @param p17 - 
 * @returns void
 * @remarks Hash: 0xBFE5756E7407064A
 */
export function shootSingleBulletBetweenCoordsIgnoreEntityNew(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, p7: number, weaponHash: number, ownerPed: number, isAudible: number, isInvisible: number, speed: number, entity: number, p14: number, p15: number, p16: number, p17: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xE599A503B3837E1B
 */
export function GetBenchmarkTime(): number;

/**
 * Returns the current state of the text input box.
 * 
 * ```c
 * enum eOSKStatus
 * {
 *   OSK_INVALID = -1,
 *   OSK_PENDING = 0,
 *   OSK_SUCCESS = 1,
 *   OSK_CANCELLED = 2,
 *   OSK_FAILED = 3
 * };
 * ```
 * @returns number
 * @remarks Hash: 0x0CF2B696BBF945AE
 */
export function updateOnscreenKeyboard(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x5B1F2E327B6B6FE1
 */
export function 0x5b1f2e327b6b6fe1(): any;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns number
 * @remarks Hash: 0x73D57CFFDD12C355
 */
export function absf(value: number): number;

/**
 * ```
 * =======================================================  
 * Correction, I have change this to int, instead of int*  
 * as it doesn't use a pointer to the createdIncident.  
 * If you try it you will crash (or) freeze.  
 * =======================================================  
 * ```
 * @param incidentId - 
 * @returns number
 * @remarks Hash: 0xC8BC6461E629BEAA
 */
export function isIncidentValid(incidentId: number): number;

/**
 * Returns true if the game is using the metric measurement system (profile setting 227), false if imperial is used.
 * @returns number
 * @remarks Hash: 0xD3D15555431AB793
 */
export function shouldUseMetricMeasurements(): number;

/**
 * ```
 * The game by default has 5 hospital respawn points. Disabling them all will cause the player to respawn at the last position they were.
 * ```
 * @param hospitalIndex - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC8535819C450EBA8
 */
export function disableHospitalRestart(hospitalIndex: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param startRange - 
 * @param endRange - 
 * @returns number
 * @remarks Hash: 0xD53343AA4FB7DD28
 */
export function getRandomIntInRange(startRange: number, endRange: number): number;

/**
 * ```
 * Appears to remove stealth kill action from memory
 * ```
 * @param hash - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xA6A12939F16D85BE
 */
export function RemoveStealthKill(hash: number, p1: number): void;

/**
 * Displays a text input box.
 * 
 * ```c
 * enum eKeyboardType
 * {
 *   ONSCREEN_KEYBOARD_ENGLISH = 0,
 *   ONSCREEN_KEYBOARD_LOCALISED = 1,
 *   ONSCREEN_KEYBOARD_PASSWORD = 2,
 *   ONSCREEN_KEYBOARD_GAMERTAG = 3,
 *   ONSCREEN_KEYBOARD_EMAIL = 4,
 *   ONSCREEN_KEYBOARD_BASIC_ENGLISH = 5,
 *   ONSCREEN_KEYBOARD_FILENAME = 6
 * };
 * ```
 * @param keyboardType - 
 * @param windowTitle - 
 * @param description - 
 * @param defaultText - 
 * @param defaultConcat1 - 
 * @param defaultConcat2 - 
 * @param defaultConcat3 - 
 * @param maxInputLength - 
 * @returns void
 * @remarks Hash: 0x00DC833F2568DBF6
 */
export function displayOnscreenKeyboard(keyboardType: number, windowTitle: string, description: string, defaultText: string, defaultConcat1: string, defaultConcat2: string, defaultConcat3: string, maxInputLength: number): void;

/**
 * @returns void
 * @remarks Hash: 0x74E20C9145FB66FD
 */
export function stopSaveData(): void;

/**
 * In singleplayer it does exactly what the name implies. In FiveM / GTA:Online it shows the `Disconnecting from GTA Online` warning screen message and quits the game.
 * After quitting, the game process is started again (as the name implies).
 * @returns void
 * @remarks Hash: 0xE574A662ACAEFBB1
 */
export function restartGame(): void;

/**
 * Creates a new stunt jump. 
 * 
 * The radius1 and radius2 might actually not be a radius at all, but that's what it seems to me testing them in-game. But they may be 'angle' floats instead, considering this native is named ADD\_STUNT\_JUMP\_**ANGLED**.
 * 
 * Info about the specific 'parameter sections':
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param radius1 - 
 * @param x3 - 
 * @param y3 - 
 * @param z3 - 
 * @param x4 - 
 * @param y4 - 
 * @param z4 - 
 * @param radius2 - 
 * @param camX - 
 * @param camY - 
 * @param camZ - 
 * @param unk1 - 
 * @param unk2 - 
 * @param unk3 - 
 * @returns number
 * @remarks Hash: 0xBBE5D803A5360CBF
 */
export function addStuntJumpAngled(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius1: number, x3: number, y3: number, z3: number, x4: number, y4: number, z4: number, radius2: number, camX: number, camY: number, camZ: number, unk1: number, unk2: number, unk3: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x8FA9C42FC5D7C64B
 */
export function playTennisDiveAnim(ped: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;

/**
 * ## Parameters
 * *
 * @param string - 
 * @returns number
 * @remarks Hash: 0xCA042B6957743895
 */
export function isStringNullOrEmpty(string: string): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF3D78F59DFE18D79
 */
export function setFadeInAfterLoad(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0xA66C71C98D5F2CFB
 */
export function setExplosiveAmmoThisFrame(player: number): void;

/**
 * @returns void
 * @remarks Hash: 0xCCC39339BEF76CF5
 */
export function clearWeatherTypePersist(): void;

/**
 * See [`IS_POINT_IN_ANGLED_AREA`](#_0x2A70BAE8883E4C81) for the definition of an angled area.
 * 
 * For projectiles, see: [`IS_PROJECTILE_TYPE_IN_ANGLED_AREA`](#_0xF0BC12401061DEA0)
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param width - 
 * @param ownedByPlayer - 
 * @returns number
 * @remarks Hash: 0x1A8B5F3C01E2B477
 */
export function isBulletInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, ownedByPlayer: number): number;

/**
 * Determines whether a line segment intersects a plane and, if so, returns the parameter value at which this intersection occurs.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param planeX - 
 * @param planeY - 
 * @param planeZ - 
 * @param planeNormalX - 
 * @param planeNormalY - 
 * @param planeNormalZ - 
 * @param intersectionParameter - 
 * @returns number
 * @remarks Hash: 0xF56DFB7B61BE7276
 */
export function getLinePlaneIntersection(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, planeX: number, planeY: number, planeZ: number, planeNormalX: number, planeNormalY: number, planeNormalZ: number, intersectionParameter: number): number;

/**
 * Sets the wind direction. The wind direction will stay persistent until it is reset (see examples).
 * @param direction - 
 * @returns void
 * @remarks Hash: 0xEB0F4468467B4528
 */
export function setWindDirection(direction: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param id - 
 * @returns number
 * @remarks Hash: 0x1312F4B242609CE3
 */
export function IsPopMultiplierAreaUnk(id: number): number;

/**
 * Clears the active weather type after a specific amount of time determined by `transitionTimeInMs`.
 * @returns void
 * @remarks Hash: 0x0CF97F497FE7D048
 */
export function clearWeatherTypeNowPersistNetwork(): void;

/**
 * Overrides the cloud settings, which are normally controlled by the weather, with the specified named version. This native allows for custom cloud formations and behaviors that deviate from the default settings associated with the game's current weather conditions.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param overrideSettingsName - 
 * @returns void
 * @remarks Hash: 0x02DEAAC8F8EA7FE7
 */
export function setCloudSettingsOverride(overrideSettingsName: string): void;

/**
 * Returns whether the In-Game Pause Menu Launched the Benchmark Tests.
 * @returns number
 * @remarks Hash: 0xEA2F2061875EED90
 */
export function uiStartedEndUserBenchmark(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xDC518000E39DAE1F
 */
export function deleteStuntJump(p0: number): void;

/**
 * ```
 * dx = x1 - x2
 * dy = y1 - y2
 * ```
 * @param dx - 
 * @param dy - 
 * @returns number
 * @remarks Hash: 0x2FFB6B224F4B2926
 */
export function getHeadingFromVector2d(dx: number, dy: number): number;

/**
 * ```
 * GET_SAVE_*
 * 
 * GET_SAVE_UNLESS_CUSTOM_DOT ?
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param fadeInAfterLoad - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0xA4A0065E39C9F25C
 */
export function 0xa4a0065e39c9f25c(p0: { x: number, y: number, z: number }, p1: number, fadeInAfterLoad: number, p3: number): number;

/**
 * ## Parameters
 * *
 * @param id - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xB129E447A2EDA4BF
 */
export function removePopMultiplierArea(id: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @param distance - 
 * @param outCoords - 
 * @param ownedByPlayer - 
 * @returns number
 * @remarks Hash: 0xDFB4138EEFED7B81
 */
export function getCoordsOfProjectileTypeWithinDistance(ped: number, weaponHash: number, distance: number, outCoords: { x: number, y: number, z: number }, ownedByPlayer: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param size - 
 * @param arrayName - 
 * @returns void
 * @remarks Hash: 0x60FE567DF1B1AF9D
 */
export function startSaveArrayWithSize(p0: any, size: number, arrayName: string): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x19E00D7322C6F85B
 */
export function setMinigameInProgress(toggle: number): void;

/**
 * ```
 * Compares two strings up to a specified number of characters.
 * Parameters:
 * str1 - String to be compared.
 * str2 - String to be compared.
 * matchCase - Comparison will be case-sensitive.
 * maxLength - Maximum number of characters to compare. A value of -1 indicates an infinite length.
 * Returns:
 * A value indicating the relationship between the strings:
 * <0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'A' < 'B', so result = -1)
 * 0 - The contents of both strings are equal.
 * >0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'B' > 'A', so result = 1)
 * Examples:
 * MISC::COMPARE_STRINGS("STRING", "string", false, -1); // 0; equal
 * MISC::COMPARE_STRINGS("TESTING", "test", false, 4); // 0; equal
 * MISC::COMPARE_STRINGS("R2D2", "R2xx", false, 2); // 0; equal
 * MISC::COMPARE_STRINGS("foo", "bar", false, -1); // 4; 'f' > 'b'
 * MISC::COMPARE_STRINGS("A", "A", true, 1); // 0; equal
 * When comparing case-sensitive strings, lower-case characters are greater than upper-case characters:
 * MISC::COMPARE_STRINGS("A", "a", true, 1); // -1; 'A' < 'a'
 * MISC::COMPARE_STRINGS("a", "A", true, 1); // 1; 'a' > 'A'
 * ```
 * @param str1 - 
 * @param str2 - 
 * @param matchCase - 
 * @param maxLength - 
 * @returns number
 * @remarks Hash: 0x1E34710ECD4AB0EB
 */
export function compareStrings(str1: string, str2: string, matchCase: number, maxLength: number): number;

/**
 * ```
 * Example: CLEAR_AREA(0, 0, 0, 30, true, false, false, false);  
 * ```
 * @param X - 
 * @param Y - 
 * @param Z - 
 * @param radius - 
 * @param p4 - 
 * @param ignoreCopCars - 
 * @param ignoreObjects - 
 * @param p7 - 
 * @returns void
 * @remarks Hash: 0xA56F01F3765B93A0
 */
export function clearArea(X: number, Y: number, Z: number, radius: number, p4: number, ignoreCopCars: number, ignoreObjects: number, p7: number): void;

/**
 * Returns the distance between two three-dimensional points, optionally ignoring the Z values.
 * If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
 * Consider using this faster native instead: SYSTEM::VDIST - DVIST always takes in consideration the 3D coordinates.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param useZ - 
 * @returns number
 * @remarks Hash: 0xF1B760881820C952
 */
export function getDistanceBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, useZ: number): number;

/**
 * ```
 * RESET_*
 * ```
 * @returns void
 * @remarks Hash: 0xD9F692D349249528
 */
export function 0xd9f692d349249528(): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x97E7E2C04245115B
 */
export function 0x97e7e2c04245115b(p0: any): void;

/**
 * ```
 * Sets an unknown flag used by CScene in determining which entities from CMapData scene nodes to draw, similar to SET_INSTANCE_PRIORITY_MODE.
 * ```
 * @param flag - 
 * @returns void
 * @remarks Hash: 0xC5F0A8EBD3F361CE
 */
export function setInstancePriorityHint(flag: number): void;

/**
 * @returns void
 * @remarks Hash: 0x04456F95153C6BE4
 */
export function stopSaveArray(): void;

/**
 * Enable/disable optional stunt camera.
 * 
 * ```
 * NativeDB Introduced: v757
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xFB80AB299D2EE1BD
 */
export function toggleShowOptionalStuntJumpCamera(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param startRange - 
 * @param endRange - 
 * @returns number
 * @remarks Hash: 0x313CE5879CEB6FCD
 */
export function getRandomFloatInRange(startRange: number, endRange: number): number;

/**
 * ```
 * GET_TENNIS_*; references 0xFBFEC0E9 = interruptswing
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x19BFED045C647C49
 */
export function 0x19bfed045c647c49(ped: number): number;

/**
 * @returns void
 * @remarks Hash: 0xC79AE21974B01FB2
 */
export function CleanupAsyncInstall(): void;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns void
 * @remarks Hash: 0x69FE6DC87BD2A5E9
 */
export function addReplayStatValue(value: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x1D08B970013C34B6
 */
export function acos(p0: number): number;

/**
 * ```
 * NativeDB Added Parameter 10: BOOL p9
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @returns number
 * @remarks Hash: 0x67F6413D3220E18D
 */
export function addPopMultiplierArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p6: number, p7: number, p8: number): number;

/**
 * See description of [`ADD_STUNT_JUMP_ANGLED`](#_0xBBE5D803A5360CBF) for detailed info. The only difference really is this one does not have the radius (or angle, not sure) floats parameters for entry and landing zones.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param x3 - 
 * @param y3 - 
 * @param z3 - 
 * @param x4 - 
 * @param y4 - 
 * @param z4 - 
 * @param camX - 
 * @param camY - 
 * @param camZ - 
 * @param unk1 - 
 * @param unk2 - 
 * @param unk3 - 
 * @returns number
 * @remarks Hash: 0x1A992DA297A4630C
 */
export function addStuntJump(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, x4: number, y4: number, z4: number, camX: number, camY: number, camZ: number, unk1: number, unk2: number, unk3: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xA9D1795CD5043663
 */
export function atan(p0: number): number;

/**
 * ```
 * This native is adding a zone, where you can change density settings. For example, you can add a zone on 0.0, 0.0, 0.0 with radius 900.0 and vehicleMultiplier 0.0, and you will not see any new population vehicle spawned in a radius of 900.0 from 0.0, 0.0, 0.0. Returns the id. You can have only 15 zones at the same time. You can remove zone using REMOVE_POP_MULTIPLIER_SPHERE
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param pedMultiplier - 
 * @param vehicleMultiplier - 
 * @param p6 - 
 * @param p7 - 
 * @returns number
 * @remarks Hash: 0x32C7A7E8C43A1F80
 */
export function addPopMultiplierSphere(x: number, y: number, z: number, radius: number, pedMultiplier: number, vehicleMultiplier: number, p6: number, p7: number): number;

/**
 * ## Parameters
 * *
 * @param string1 - 
 * @param string2 - 
 * @returns number
 * @remarks Hash: 0x0C515FAB3FF9EA92
 */
export function areStringsEqual(string1: string, string2: string): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDEA36202FC3382DF
 */
export function allowMissionCreatorWarp(toggle: number): void;

/**
 * ```
 * Returns the index of the newly created hospital spawn point.  
 * p3 might be radius?  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p3 - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0x1F464EF988465A81
 */
export function addHospitalRestart(x: number, y: number, z: number, p3: number, p4: any): number;

/**
 * ```
 * This function is hard-coded to always return 0.  
 * ```
 * @returns number
 * @remarks Hash: 0x7EA2B6AF97ECA6ED
 */
export function isFrontendFading(): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x8EF5573A1F801A5C
 */
export function scriptRaceGetPlayerSplitTime(player: number, p1: number, p2: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x075F1D57402C93BA
 */
export function haveCreditsReachedEnd(): number;

/**
 * ```
 * Only found 3 times in decompiled scripts. Not a whole lot to go off of.
 * MISC::_48F069265A0E4BEC(a_0, "Movie_Name_For_This_Player");
 * MISC::_48F069265A0E4BEC(&a_0._fB, "Ringtone_For_This_Player");
 * MISC::_48F069265A0E4BEC(&a_0._f1EC4._f12[v_A/*6*/], &v_13); // where v_13 is "MPATMLOGSCRS0" thru "MPATMLOGSCRS15"
 * ```
 * @param p0 - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0x48F069265A0E4BEC
 */
export function 0x48f069265a0e4bec(p0: any, name: string): void;

/**
 * ```
 * NativeDB Added Parameter 13: Any p12
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param width - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @param p11 - 
 * @returns void
 * @remarks Hash: 0x11DB3500F042A8AA
 */
export function clearAngledAreaOfVehicles(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, p7: number, p8: number, p9: number, p10: number, p11: number): void;

/**
 * This native always come right before SET_ENTITY_QUATERNION where its final 4 parameters are SLERP_NEAR_QUATERNION p9 to p12
 * @param t - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param w - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param w1 - 
 * @param outX - 
 * @param outY - 
 * @param outZ - 
 * @param outW - 
 * @returns void
 * @remarks Hash: 0xF2F6A2FA49278625
 */
export function slerpNearQuaternion(t: number, x: number, y: number, z: number, w: number, x1: number, y1: number, z1: number, w1: number, outX: number, outY: number, outZ: number, outW: number): void;

/**
 * ## Return value
 * The wind speed in meters per second
 * @returns number
 * @remarks Hash: 0xA8CF1CC0AFCD3F12
 */
export function getWindSpeed(): number;

/**
 * ```
 * p3 - possibly radius?  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns number
 * @remarks Hash: 0x9870ACFB89A90995
 */
export function hasBulletImpactedInArea(x: number, y: number, z: number, p3: number, p4: number, p5: number): number;

/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#_0x29B487C359E19889) for weather types.
 * 
 * ```
 * Mixes two weather types. If percentWeather2 is set to 0.0f, then the weather will be entirely of weatherType1, if it is set to 1.0f it will be entirely of weatherType2. If it's set somewhere in between, there will be a mixture of weather behaviors. To test, try this in the RPH console, and change the float to different values between 0 and 1:  
 * execute "NativeFunction.Natives.x578C752848ECFA0C(Game.GetHashKey(""RAIN""), Game.GetHashKey(""SMOG""), 0.50f);  
 * ```
 * @param weatherType1 - 
 * @param weatherType2 - 
 * @param percentWeather2 - 
 * @returns void
 * @remarks Hash: 0x578C752848ECFA0C
 */
export function SetWeatherTypeTransition(weatherType1: number, weatherType2: number, percentWeather2: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0xC8F4131414C835A1
 */
export function registerBoolToSave(p0: any, name: string): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xD10F442036302D50
 */
export function setDispatchSpawnLocation(x: number, y: number, z: number): void;

/**
 * ```
 * Returns true if command line option '-benchmark' is set.
 * ```
 * @returns number
 * @remarks Hash: 0xA049A5BE0F04F2F8
 */
export function IsCommandLineBenchmarkValueSet(): number;

/**
 * ```
 * I*
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x8D74E26F54B4E5C3
 */
export function 0x8d74e26f54b4e5c3(p0: string): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x96695E368AD855F3
 */
export function getRainLevel(): number;

/**
 * Attempts to identify the highest ground Z-coordinate and determine the corresponding surface normal directly beneath a specified 3D coordinate.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param groundZ - 
 * @param normal - 
 * @returns number
 * @remarks Hash: 0x8BDC7BFC57A81E76
 */
export function getGroundZAndNormalFor3dCoord(x: number, y: number, z: number, groundZ: number, normal: { x: number, y: number, z: number }): number;

/**
 * ```
 * Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\GTA V\Benchmarks and submits some metrics.
 * ```
 * @returns void
 * @remarks Hash: 0x37DEB0AA183FB6D8
 */
export function SaveBenchmarkRecording(): void;

/**
 * ```c
 * enum eFontBitField
 * {
 *   FONT_BIT_STANDARD = 1,
 *   FONT_BIT_CURSIVE = 2,
 *   FONT_BIT_ROCKSTAR_TAG = 4
 *   FONT_BIT_LEADERBOARD = 8
 *   FONT_BIT_CONDENSED = 16
 *   FONT_BIT_FIXED_WIDTH_NUMBERS = 32
 *   FONT_BIT_CONDENSED_NOT_GAMERNAME = 64
 *   FONT_BIT_PRICEDOWN = 128
 * };
 * ```
 * @param fontBitField - 
 * @returns void
 * @remarks Hash: 0x3ED1438C1F5C6612
 */
export function nextOnscreenKeyboardResultWillDisplayUsingTheseFonts(fontBitField: number): void;

/**
 * ## Parameters
 * *
 * @param maxAmplitude - 
 * @returns void
 * @remarks Hash: 0xB3E6360DDE733E82
 */
export function waterOverrideSetOceanwavemaxamplitude(maxAmplitude: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns any
 * @remarks Hash: 0xC0714D0A7EEECA54
 */
export function registerSaveHouse(p0: number, p1: number, p2: number, p3: number, p4: any, p5: any, p6: any): any;

/**
 * @returns void
 * @remarks Hash: 0x957E790EA1727B64
 */
export function ClearCloudHat(): void;

/**
 * ```
 * Sets the localplayer playerinfo state back to playing (State 0)  
 * States are:  
 * -1: "Invalid"  
 * 0: "Playing"  
 * 1: "Died"  
 * 2: "Arrested"  
 * 3: "Failed Mission"  
 * 4: "Left Game"  
 * 5: "Respawn"  
 * 6: "In MP Cutscene"  
 * ```
 * @returns void
 * @remarks Hash: 0xC0AA53F866B3134D
 */
export function forceGameStatePlaying(): void;

/**
 * ## Return value
 * Hard-coded to always return 0.
 * @returns number
 * @remarks Hash: 0xA72BC0B675B1519E
 */
export function isOrbisVersion(): number;

/**
 * @returns void
 * @remarks Hash: 0xFB00CA71DA386228
 */
export function 0xfb00ca71da386228(): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB938B7E6D3C0620C
 */
export function setCreditsActive(toggle: number): void;

/**
 * ```
 * Get inputted "Cheat code", for example:
 * while (TRUE)
 * {
 *     if (MISC::_557E43C447E700A8(${fugitive}))
 *     {
 *        // Do something.
 *     }
 *     SYSTEM::WAIT(0);
 * }
 * Calling this will also set the last saved string hash to zero.
 * ```
 * @param hash - 
 * @returns number
 * @remarks Hash: 0x557E43C447E700A8
 */
export function HasCheatStringJustBeenEntered(hash: number): number;

/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xFA3FFB0EEBC288A3
 */
export function 0xfa3ffb0eebc288a3(p0: number): void;

/**
 * @returns void
 * @remarks Hash: 0xE6B7B0ACD4E4B75E
 */
export function cancelStuntJump(): void;

/**
 * ```
 * Maximum value is 1.  
 * At a value of 0 the game will still run at a minimum time scale.  
 * Slow Motion 1: 0.6  
 * Slow Motion 2: 0.4  
 * Slow Motion 3: 0.2  
 * ```
 * @param timeScale - 
 * @returns void
 * @remarks Hash: 0x1D408577D440E81E
 */
export function setTimeScale(timeScale: number): void;

/**
 * ## Parameters
 * *
 * @param amplitude - 
 * @returns void
 * @remarks Hash: 0x405591EC8FD9096D
 */
export function waterOverrideSetOceanwaveamplitude(amplitude: number): void;

/**
 * ```
 * I looked through the PC scripts that this site provides you with a link to find. It shows the last param mainly uses, (0, 2, 6, 16, and 17) so I am going to assume it is a type of flag.  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0xDD9B9B385AAC7F5B
 */
export function clearAreaOfObjects(x: number, y: number, z: number, radius: number, flags: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0xFF1BED81BFDC0FE0
 */
export function setExplosiveMeleeThisFrame(player: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB51B9AB9EF81868C
 */
export function 0xb51b9ab9ef81868c(toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x397BAA01068BAA96
 */
export function 0x397baa01068baa96(): number;

/**
 * ```
 * SET_INCIDENT_*
 * ```
 * @param incidentId - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xD261BA3E7E998072
 */
export function SetIncidentUnk(incidentId: number, p1: number): void;

/**
 * Shoots a bullet from the first vector to the second vector. The weapon used as weaponHash should already be loaded via REQUEST_WEAPON_ASSET, otherwise the bullet may fail to materialise.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param damage - 
 * @param pureAccuracy - 
 * @param weaponHash - 
 * @param ownerPed - 
 * @param isAudible - 
 * @param isInvisible - 
 * @param speed - 
 * @returns void
 * @remarks Hash: 0x867654CBC7606F2C
 */
export function shootSingleBulletBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, pureAccuracy: number, weaponHash: number, ownerPed: number, isAudible: number, isInvisible: number, speed: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @param distance - 
 * @param outCoords - 
 * @param outProjectile - 
 * @param ownedByPlayer - 
 * @returns number
 * @remarks Hash: 0x82FDE6A57EE4EE44
 */
export function GetProjectileNearPed(ped: number, weaponHash: number, distance: number, outCoords: { x: number, y: number, z: number }, outProjectile: number, ownedByPlayer: number): number;

/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#_0x29B487C359E19889) for weather types.
 * @param weatherType - 
 * @returns number
 * @remarks Hash: 0x2FAA3A30BEC0F25D
 */
export function isNextWeatherType(weatherType: string): number;

/**
 * ```
 * Returns true if the current frontend menu is FE_MENU_VERSION_LANDING_MENU
 * ```
 * @returns number
 * @remarks Hash: 0x3BBBD13E5041A79E
 */
export function LandingMenuIsActive(): number;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @returns void
 * @remarks Hash: 0x8951EB9C6906D3C8
 */
export function 0x8951eb9c6906d3c8(): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xEB2DB0CAD13154B3
 */
export function resetDispatchTimeBetweenSpawnAttempts(p0: any): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x6856EC3D35C81EA4
 */
export function getTotalSuccessfulStuntJumps(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0xEDB1232C5BEAE62F
 */
export function registerTextLabelToSave(p0: any, name: string): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x2B626A0150E4D449
 */
export function getReplayStatMissionType(): number;

/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#_0x29B487C359E19889) for weather types.
 * @param weatherType - 
 * @returns void
 * @remarks Hash: 0xA43D5C6FE51ADBEF
 */
export function setOverrideWeather(weatherType: string): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x2B5E102E4A42F2BF
 */
export function getStatusOfMissionRepeatSave(): number;

/**
 * ```
 * spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called  
 * ```
 * @returns void
 * @remarks Hash: 0x7472BB270D7B4F3E
 */
export function populateNow(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x44F7CBC1BEB3327D
 */
export function setDispatchTimeBetweenSpawnAttempts(p0: any, p1: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xAA391C728106F7AF
 */
export function setThisScriptCanBePaused(toggle: number): void;

/**
 * ```
 * if (MISC::IS_AUSSIE_VERSION()) {
 *     sub_127a9(&l_31, 1024); // l_31 |= 1024
 *     l_129 = 3;
 *     sub_129d2("AUSSIE VERSION IS TRUE!?!?!"); // DEBUG
 * }
 * Used to block some of the prostitute stuff due to laws in Australia.
 * ```
 * @returns number
 * @remarks Hash: 0x9F1935CA1F724008
 */
export function isAussieVersion(): number;

/**
 * See [`IS_POINT_IN_ANGLED_AREA`](#_0x2A70BAE8883E4C81) for the definition of an angled area.
 * 
 * ```
 * NativeDB Removed Parameter 7: float p7
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param width - 
 * @param p7 - 
 * @returns number
 * @remarks Hash: 0xF0BC12401061DEA0
 */
export function isProjectileTypeInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, p7: number): number;

/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#_0x29B487C359E19889) for weather types.
 * @param weatherType1 - 
 * @param weatherType2 - 
 * @param percentWeather2 - 
 * @returns void
 * @remarks Hash: 0xF3BBE884A14BB413
 */
export function GetWeatherTypeTransition(weatherType1: number, weatherType2: number, percentWeather2: number): void;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns number
 * @remarks Hash: 0xF0D31AD191A74F87
 */
export function absi(value: number): number;

/**
 * ## Parameters
 * *
 * @param maxBumpiness - 
 * @returns void
 * @remarks Hash: 0x9F5E6BB6B34540DA
 */
export function waterOverrideSetRipplemaxbumpiness(maxBumpiness: number): void;

/**
 * ## Parameters
 * *
 * @param maxAmplitude - 
 * @returns void
 * @remarks Hash: 0xA7A1127490312C36
 */
export function waterOverrideSetShorewavemaxamplitude(maxAmplitude: number): void;

/**
 * ## Parameters
 * *
 * @param var - 
 * @param rangeStart - 
 * @param rangeEnd - 
 * @returns number
 * @remarks Hash: 0x53158863FCC0893A
 */
export function getBitsInRange(var: number, rangeStart: number, rangeEnd: number): number;

/**
 * @returns void
 * @remarks Hash: 0xAC7BFD5C1D83EA75
 */
export function resetDispatchSpawnBlockingAreas(): void;

/**
 * Related to tennis mode. Checks for `0x0FCED5ADF = swung`
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xE95B0C7D5BA3B96B
 */
export function 0xe95b0c7d5ba3b96b(ped: number): number;

/**
 * Sets the maximum prop density and changes a loading screen flag from 'loading story mode' to 'loading GTA Online'. It causes a loading screen to show as it reloads map data.
 * @returns void
 * @remarks Hash: 0x9BAE5AD2508DF078
 */
export function setInstancePriorityMode(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x69240733738C19A0
 */
export function isAutoSaveInProgress(): number;

/**
 * ## Return value
 * Hard-coded to always return 1.
 * @returns number
 * @remarks Hash: 0x48AF36444B965238
 */
export function isPcVersion(): number;

/**
 * @returns void
 * @remarks Hash: 0xA23E821FBDF8A5F2
 */
export function endReplayStats(): void;

/**
 * Sets the the raw wind speed value. The wind speed will stay persistent until it is reset (see examples).
 * @param speed - 
 * @returns void
 * @remarks Hash: 0xAC3A74E8384A9919
 */
export function setWind(speed: number): void;

/**
 * ```
 * Sets bit 3 in GtaThread+0x150
 * 
 * SET_T*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6F2135B6129620C1
 */
export function 0x6f2135b6129620c1(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0x7CAEC29ECB5DFEBB
 */
export function registerFloatToSave(p0: any, name: string): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x17DF68D720AA77F8
 */
export function getTennisSwingAnimComplete(ped: number): number;

/**
 * ```
 * Sets GtaThread+0x14A
 * 
 * SET_S*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x65D2EBB47E1CEC21
 */
export function 0x65d2ebb47e1cec21(toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0xA1183BCFEE0F93D1
 */
export function SetForcePlayerToJump(player: number): void;

/**
 * ```
 * NativeDB Added Parameter 6: Any p5
 * NativeDB Added Parameter 7: Any p6
 * ```
 * @param dispatchService - 
 * @param ped - 
 * @param numUnits - 
 * @param radius - 
 * @param outIncidentID - 
 * @returns number
 * @remarks Hash: 0x05983472F0494E60
 */
export function createIncidentWithEntity(dispatchService: number, ped: number, numUnits: number, radius: number, outIncidentID: number): number;

/**
 * ```
 * Adds a point related to CTacticalAnalysis
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xB8721407EE9C3FF6
 */
export function AddTacticalAnalysisPoint(x: number, y: number, z: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA33CDCCDA663159E
 */
export function getMissionFlag(): number;

/**
 * ```
 * HAS_*
 * ```
 * @returns number
 * @remarks Hash: 0x2107A3773771186D
 */
export function 0x2107a3773771186d(): number;

/**
 * ## Return value
 * Hard-coded to always return 0.
 * @returns number
 * @remarks Hash: 0xCCA1072C29D096C2
 */
export function isPs3Version(): number;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @param p11 - 
 * @param p12 - 
 * @returns any
 * @remarks Hash: 0x39455BF4F4F55186
 */
export function 0x39455bf4f4f55186(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any): any;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x31125FD509D9043F
 */
export function 0x31125fd509d9043f(p0: any): void;

/**
 * Closes the onscreen keyboard on console versions of the game.
 * @returns void
 * @remarks Hash: 0x58A39BE597CE99CD
 */
export function cancelOnscreenKeyboard(): void;

/**
 * ```
 * Although we don't have a jenkins hash for this one, the name is 100% confirmed.
 * ```
 * @returns number
 * @remarks Hash: 0x9689123E3F213AA5
 */
export function GetIsPlayerInAnimalForm(): number;

/**
 * ```
 * entity - entity to ignore  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 15: Any p14
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param damage - 
 * @param p7 - 
 * @param weaponHash - 
 * @param ownerPed - 
 * @param isAudible - 
 * @param isInvisible - 
 * @param speed - 
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xE3A7742E0B7A2F8B
 */
export function shootSingleBulletBetweenCoordsIgnoreEntity(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, p7: number, weaponHash: number, ownerPed: number, isAudible: number, isInvisible: number, speed: number, entity: number): void;

/**
 * @returns void
 * @remarks Hash: 0xA2716D40842EAF79
 */
export function ClearRestartCustomPosition(): void;

/**
 * Clears an area of projectiles at the given coordinates and radius.
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0x0A1CB9094635D1A6
 */
export function clearAreaOfProjectiles(x: number, y: number, z: number, radius: number): void;

/**
 * ```
 * Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.  
 * If all checks have passed successfully, the return value will be set to whatever strtol(string, 0i64, 10); returns.  
 * ```
 * @param string - 
 * @param outInteger - 
 * @returns number
 * @remarks Hash: 0x5A5F40FE637EB584
 */
export function stringToInt(string: string, outInteger: number): number;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xEBD3205A207939ED
 */
export function 0xebd3205a207939ed(p0: any): void;

/**
 * ```
 * If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.  
 * Does nothing if the mission flag is set.  
 * ```
 * @returns void
 * @remarks Hash: 0x971927086CFD2158
 */
export function setRandomEventFlag(): void;

/**
 * ```
 * GET_C*
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x21C235BC64831E5A
 */
export function 0x21c235bc64831e5a(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number): { x: number, y: number, z: number };

/**
 * ```
 * Finds a position ahead of the player by predicting the players next actions.  
 * The positions match path finding node positions.  
 * When roads diverge, the position may rapidly change between two or more positions. This is due to the engine not being certain of which path the player will take.  
 * ```
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param dirX - 
 * @param dirY - 
 * @param dirZ - 
 * @param distance - 
 * @param spawnPoint - 
 * @returns number
 * @remarks Hash: 0x6874E2190B0C1972
 */
export function findSpawnPointInDirection(posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, distance: number, spawnPoint: { x: number, y: number, z: number }): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xA09F896CE912481F
 */
export function getSizeOfSaveData(p0: number): number;

/**
 * ```
 * Returns duration of how long the game has been in power-saving mode (aka "constrained") in milliseconds.
 * ```
 * @returns number
 * @remarks Hash: 0xABB2FA71C83A1B72
 */
export function GetPowerSavingModeDuration(): number;

/**
 * Displays the text input box with support for input with 500 characters.
 * @param keyboardType - 
 * @param windowTitle - 
 * @returns void
 * @remarks Hash: 0xCA78CFA0366592FE
 */
export function displayOnscreenKeyboardWithLongerInitialString(keyboardType: number, windowTitle: string): void;

/**
 * This native gets the ground level (ground elevation) and returns the Z coordinate that represents it.
 * Note: This native can only calculate the elevation when the coordinates are within the render distance of the client.
 * 
 * ```
 * NativeDB Added Parameter 6: BOOL p5
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param groundZ - 
 * @param includeWater - 
 * @returns number
 * @remarks Hash: 0xC906A7DAB05C8D2B
 */
export function getGroundZFor3dCoord(x: number, y: number, z: number, groundZ: number, includeWater: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0x10C2FA78D0E128A1
 */
export function registerEnumToSave(p0: any, name: string): void;

/**
 * Creates and opens a new activity feed post to start filling in.
 * @param captionString - 
 * @param condensedCaptionString - 
 * @returns void
 * @remarks Hash: 0x4DCDF92BF64236CD
 */
export function activityFeedCreate(captionString: string, condensedCaptionString: string): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0x34C9EE5986258415
 */
export function registerIntToSave(p0: any, name: string): void;

/**
 * ```
 * This sets bit [offset] of [address] to on.
 * The offsets used are different bits to be toggled on and off, typically there is only one address used in a script.
 * Example:
 * MISC::SET_BIT(&bitAddress, 1);
 * To check if this bit has been enabled:
 * MISC::IS_BIT_SET(bitAddress, 1); // will return 1 afterwards
 * Please note, this method may assign a value to [address] when used.
 * ```
 * @param address - 
 * @param offset - 
 * @returns void
 * @remarks Hash: 0x933D6A9EEC1BACD0
 */
export function setBit(address: number, offset: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x996DD1E1E02F1008
 */
export function getNumSuccessfulStuntJumps(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xA9575F812C6A7997
 */
export function startSaveData(p0: any, p1: any, p2: number): void;

/**
 * ```
 * Returns true if profile setting 208 is equal to 0.
 * ```
 * @returns number
 * @remarks Hash: 0x6E04F06094C87047
 */
export function getIsAutoSaveOff(): number;

/**
 * ```
 * CLEAR_*
 * ```
 * @returns void
 * @remarks Hash: 0x06462A961E94B67C
 */
export function 0x06462a961e94b67c(): void;

/**
 * ## Parameters
 * *
 * @param id - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE6869BECDD8F2403
 */
export function removePopMultiplierSphere(id: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param amplitude - 
 * @returns void
 * @remarks Hash: 0xB8F87EAD7533B176
 */
export function waterOverrideSetShorewaveamplitude(amplitude: number): void;

/**
 * ## Parameters
 * *
 * @param bumpiness - 
 * @returns void
 * @remarks Hash: 0x7C9C0B1EEB1F9072
 */
export function waterOverrideSetRipplebumpiness(bumpiness: number): void;

/**
 * Sets the current weather type to persist indefinitely until changed.
 * @param weatherType - 
 * @returns void
 * @remarks Hash: 0x704983DF373B198F
 */
export function setWeatherTypePersist(weatherType: string): void;

/**
 * ```
 * Hardcoded to always return true.
 * ```
 * @returns number
 * @remarks Hash: 0x14832BF2ABA53FC5
 */
export function HasAsyncInstallFinished(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xD642319C54AADEB6
 */
export function 0xd642319c54aadeb6(): any;

/**
 * ```
 * Possibly used to clear scenario points.
 * 
 * CLEAR_*
 * ```
 * @returns void
 * @remarks Hash: 0x7EC6F9A478A6A512
 */
export function 0x7ec6f9a478a6a512(): void;

/**
 * ```
 * This native appears on the cheat_controller script and tracks a combination of buttons, which may be used to toggle cheats in-game. Credits to ThreeSocks for the info. The hash contains the combination, while the "amount" represents the amount of buttons used in a combination. The following page can be used to make a button combination: gta5offset.com/ts/hash/
 * INT_SCORES_SCORTED was a hash collision
 * ```
 * @param hash - 
 * @param amount - 
 * @returns number
 * @remarks Hash: 0x071E2A839DE82D90
 */
export function HasButtonCombinationJustBeenEntered(hash: number, amount: number): number;

/**
 * ## Parameters
 * *
 * @param index - 
 * @returns number
 * @remarks Hash: 0x8098C8D6597AAE18
 */
export function getReplayStatAtIndex(index: number): number;

/**
 * For a full list, see [here](https://gist.github.com/4mmonium/f76f3ecef649ed275b260b433ea84494).
 * @param scriptName - 
 * @returns void
 * @remarks Hash: 0x9DC711BC69C548DF
 */
export function terminateAllScriptsWithThisName(scriptName: string): void;

/**
 * This native converts its past string to hash. It is hashed using jenkins one at a time method.
 * @param string - 
 * @returns number
 * @remarks Hash: 0xD24D37CC275948CC
 */
export function getHashKey(string: string): number;

/**
 * @returns void
 * @remarks Hash: 0x693478ACBD7F18E7
 */
export function 0x693478acbd7f18e7(): void;

/**
 * Clears an area of peds at the given coordinates and radius.
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0xBE31FD6CE464AC59
 */
export function clearAreaOfPeds(x: number, y: number, z: number, radius: number): void;

/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#_0x29B487C359E19889) for weather types.
 * @param weatherType - 
 * @param time - 
 * @returns void
 * @remarks Hash: 0xFB5045B7C42B75BF
 */
export function setWeatherTypeOvertimePersist(weatherType: string, time: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x4F548CABEAE553BC
 */
export function setSaveHouse(p0: any, p1: number, p2: number): void;

/**
 * Controls rain, rain sounds and the creation of puddles.
 * 
 * With an `level` higher than `0.5f`, only the creation of puddles gets faster, rain and rain sound won't increase after that.
 * 
 * With an `level` of `0.0f` rain and rain sounds are disabled and there won't be any new puddles.
 * 
 * To use the rain level of the current weather, call this native with `-1f` as `level`.
 * @param level - 
 * @returns void
 * @remarks Hash: 0x643E26EA6E024D92
 */
export function SetRainLevel(level: number): void;

/**
 * ## Parameters
 * *
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0xB335F761606DB47C
 */
export function GetBaseElementMetadata(p1: any, p2: any, p3: any, p4: number): number;

/**
 * ```
 * NativeDB Introduced: 2545
 * ```
 * @returns number
 * @remarks Hash: 0xB8C0BB75D8A77DB3
 */
export function isJapaneseVersion(): number;

/**
 * Using this native will clamp the wind speed value to a range of 0.0 - 12.0. The wind speed will stay persistent until it is reset (see examples).
 * @param speed - 
 * @returns void
 * @remarks Hash: 0xEE09ECEDBABE47FC
 */
export function setWindSpeed(speed: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xD2D57F1D764117B1
 */
export function getRandomEventFlag(): number;

/**
 * ```
 * If toggle is true, the ped's head is shown in the pause menu
 * If toggle is false, the ped's head is not shown in the pause menu
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x4EBB7E87AA0DBED4
 */
export function SetPlayerIsInAnimalForm(toggle: number): void;

/**
 * ```
 * HAS_*
 * Probably something like "has game been started for the first time".
 * ```
 * @returns number
 * @remarks Hash: 0x6FDDF453C0C756EC
 */
export function 0x6fddf453c0c756ec(): number;

/**
 * ```
 * Seems to have the same functionality as REGISTER_TEXT_LABEL_TO_SAVE?
 * MISC::_6F7794F28C6B2535(&a_0._f1, "tlPlateText");
 * MISC::_6F7794F28C6B2535(&a_0._f1C, "tlPlateText_pending");
 * MISC::_6F7794F28C6B2535(&a_0._f10B, "tlCarAppPlateText");
 * "tl" prefix sounds like "Text Label"
 * ```
 * @param p0 - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0x6F7794F28C6B2535
 */
export function RegisterTextLabelToSave2(p0: any, name: string): void;

/**
 * ```
 * Found in the scripts:
 * MISC::_11B56FBBF7224868("CONTRAILS");
 * ```
 * @param name - 
 * @returns void
 * @remarks Hash: 0x11B56FBBF7224868
 */
export function preloadCloudHat(name: string): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param animDict - 
 * @param animName - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0xE266ED23311F24D4
 */
export function playTennisSwingAnim(ped: number, animDict: string, animName: string, p3: number, p4: number, p5: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns number
 * @remarks Hash: 0xE54E209C35FFA18D
 */
export function isPointObscuredByAMissionEntity(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: any): number;

/**
 * Enables or disables the specified 'dispatch service' type. 'Dispatch services' are used for spawning AI response peds/vehicles for events such as a fire in the street (type 3 - DT_FireDepartment), or gunfire in a gang area (type 11 - DT_Gangs).
 * 
 * List of dispatch services:
 * 
 * ```c
 * enum eDispatchType
 * {
 * 	DT_Invalid = 0,
 * 	DT_PoliceAutomobile = 1,
 * 	DT_PoliceHelicopter = 2,
 * 	DT_FireDepartment = 3,
 * 	DT_SwatAutomobile = 4,
 * 	DT_AmbulanceDepartment = 5,
 * 	DT_PoliceRiders = 6,
 * 	DT_PoliceVehicleRequest = 7,
 * 	DT_PoliceRoadBlock = 8,
 * 	DT_PoliceAutomobileWaitPulledOver = 9,
 * 	DT_PoliceAutomobileWaitCruising = 10,
 * 	DT_Gangs = 11,
 * 	DT_SwatHelicopter = 13,
 * 	DT_PoliceBoat = 14,
 * 	DT_ArmyVehicle = 15,
 * 	DT_BikerBackup = 15
 * };
 * ```
 * 
 * Note that 'dispatch service' has nothing to do with the police scanner (audio), to toggle that, use [SET_AUDIO_FLAG](#_0xB9EFD5C25018725A) with `'PoliceScannerDisabled'`.
 * @param dispatchService - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDC0F817884CDD856
 */
export function enableDispatchService(dispatchService: number, toggle: number): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xEB078CA2B5E82ADD
 */
export function 0xeb078ca2b5e82add(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param disturb - 
 * @returns void
 * @remarks Hash: 0xB9854DFDE0D833D6
 */
export function waterOverrideSetRippledisturb(disturb: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param heading - 
 * @returns void
 * @remarks Hash: 0x706B5EDCAA7FA663
 */
export function SetRestartCustomPosition(x: number, y: number, z: number, heading: number): void;

/**
 * Allows modification of the cloud opacity. It can also be used in other contexts, such as when the player is in a switch state [`IS_PLAYER_SWITCH_IN_PROGRESS`](#_0xD9D2CFFF49FAB35F).
 * @param opacity - 
 * @returns void
 * @remarks Hash: 0xF36199225D6D8C86
 */
export function setCloudsAlpha(opacity: number): void;

/**
 * ```
 * From the scripts:
 * MISC::_54F157E0336A3822(sub_aa49(a_0), "ForcedStopDirection", v_E);
 * Related to tennis mode.
 * SET_*
 * ```
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x54F157E0336A3822
 */
export function 0x54f157e0336a3822(ped: number, p1: string, p2: number): void;

/**
 * ## Parameters
 * *
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param ownedByPlayer - 
 * @returns number
 * @remarks Hash: 0xDE0F6D7450D37351
 */
export function isBulletInBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, ownedByPlayer: number): number;

/**
 * ```
 * aka "constrained"
 * ```
 * @returns number
 * @remarks Hash: 0x684A41975F077262
 */
export function IsInPowerSavingMode(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC3C221ADDDE31A11
 */
export function waterOverrideFadeOut(p0: number): void;

/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#_0x29B487C359E19889) for weather types.
 * @returns number
 * @remarks Hash: 0x564B884A05EC45A3
 */
export function getPrevWeatherTypeHashName(): number;

/**
 * Used for hunting in singleplayer and for golfing in both sp and online. The [`GET_HEADING_FROM_VECTOR_2D`](#_0x2FFB6B224F4B2926) native can be used to get the wind heading from the direction.
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x1F400FEF721170DA
 */
export function getWindDirection(): { x: number, y: number, z: number };

/**
 * ```
 * This seems to edit the water wave, intensity around your current location.  
 * 0.0f = Normal  
 * 1.0f = So Calm and Smooth, a boat will stay still.  
 * 3.0f = Really Intense.  
 * ```
 * @param strength - 
 * @returns void
 * @remarks Hash: 0xC54A08C85AE4D410
 */
export function waterOverrideSetStrength(strength: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xA8434F1DFF41D6E7
 */
export function waterOverrideFadeIn(p0: number): void;

/**
 * Activates riot mode. All NPCs are being hostile to each other (including player). Also the game will give weapons (pistols, smgs) to random NPCs.
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2587A48BC88DFADF
 */
export function setRiotModeEnabled(toggle: number): void;

/**
 * Does nothing (it's a nullsub). Seems to be PS4 specific.
 * 
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x916CA67D26FD1E37
 */
export function 0x916ca67d26fd1e37(p0: string): void;

/**
 * ```
 * Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.  
 * ownedByPlayer = only projectiles fired by the player will be detected.  
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param ownedByPlayer - 
 * @returns number
 * @remarks Hash: 0x5270A8FBC098C3F8
 */
export function isProjectileInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, ownedByPlayer: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x20AC25E781AE4A84
 */
export function GetCloudHatOpacity(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xD10282B6E3751BA0
 */
export function 0xd10282b6e3751ba0(): any;

/**
 * ```
 * creates single lightning+thunder at random position  
 * ```
 * @returns void
 * @remarks Hash: 0xF6062E089251C898
 */
export function forceLightningFlash(): void;

/**
 * Determines the highest ground Z-coordinate directly below a specified 3D coordinate, excluding any objects at that point. Optionally, water can be considered as ground when determining the highest point.
 * 
 * ```
 * NativeDB Added Parameter 6: BOOL ignoreDistToWaterLevelCheck - If set to true, the distance to the water level will be ignored when checking for water as ground. 
 * ```
 * 
 * ```
 * NativeDB Introduced: v505
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param groundZ - 
 * @param waterAsGround - 
 * @returns number
 * @remarks Hash: 0x9E82F0F362881B29
 */
export function getGroundZExcludingObjectsFor3dCoord(x: number, y: number, z: number, groundZ: number, waterAsGround: number): number;

/**
 * ```
 * NativeDB Introduced: 2545
 * ```
 * @returns number
 * @remarks Hash: 0x0A27B2B6282F7169
 */
export function isSteamVersion(): number;

/**
 * ```
 * ignoreVehicle - bypasses vehicle check of the local player (it will not open if you are in a vehicle and this is set to false)
 * ```
 * @param ignoreVehicle - 
 * @returns void
 * @remarks Hash: 0xC9BF75D28165FF77
 */
export function setSaveMenuActive(ignoreVehicle: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param ownedByPlayer - 
 * @returns number
 * @remarks Hash: 0x3F2023999AD51C1F
 */
export function isBulletInArea(x: number, y: number, z: number, radius: number, ownedByPlayer: number): number;

/**
 * @returns void
 * @remarks Hash: 0x8B05F884CF7E8020
 */
export function setRandomWeatherType(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param size - 
 * @param structName - 
 * @returns void
 * @remarks Hash: 0xBF737600CDDBEADD
 */
export function startSaveStructWithSize(p0: any, size: number, structName: string): void;

/**
 * ```
 * Example: 		CLEAR_AREA_OF_VEHICLES(0, 0, 0, 10000, false, false, false, false, false);  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 10: BOOL p9
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @returns void
 * @remarks Hash: 0x01C7B9B38428AEB6
 */
export function clearAreaOfVehicles(x: number, y: number, z: number, radius: number, p4: number, p5: number, p6: number, p7: number, p8: number): void;

/**
 * ```
 * Begins with RESET_*. Next character in the name is either D or E.
 * ```
 * @returns void
 * @remarks Hash: 0x437138B6A830166A
 */
export function ResetBenchmarkRecording(): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0x11879CDD803D30F4
 */
export function setFireAmmoThisFrame(player: number): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @param p11 - 
 * @param p12 - 
 * @param p13 - 
 * @returns any
 * @remarks Hash: 0xA0AD167E4B39D9A2
 */
export function 0xa0ad167e4b39d9a2(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any): any;

/**
 * The BOOL parameters that are documented have not been confirmed. They are just documented from what I've found during testing. They may not work as expected in all cases.
 * @param x - 
 * @param y - 
 * @param z - 
 * @param range - 
 * @param p4 - 
 * @param checkVehicles - 
 * @param checkPeds - 
 * @param p7 - 
 * @param p8 - 
 * @param ignoreEntity - 
 * @param p10 - 
 * @returns number
 * @remarks Hash: 0xADCDE75E1C60F32D
 */
export function isPositionOccupied(x: number, y: number, z: number, range: number, p4: number, checkVehicles: number, checkPeds: number, p7: number, p8: number, ignoreEntity: number, p10: number): number;

/**
 * ## Parameters
 * *
 * @param profileSetting - 
 * @returns number
 * @remarks Hash: 0xC488FF2356EA7791
 */
export function getProfileSetting(profileSetting: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF14878FC50BEC6EE
 */
export function usingMissionCreator(toggle: number): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @returns void
 * @remarks Hash: 0x23227DF0B2115469
 */
export function 0x23227df0b2115469(): void;

/**
 * Quits the game.
 * @returns void
 * @remarks Hash: 0xEB6891F03362FB12
 */
export function quitGame(): void;

/**
 * ```
 * sets something to 1  
 * ```
 * @returns void
 * @remarks Hash: 0xE3D969D2785FFB5E
 */
export function 0xe3d969d2785ffb5e(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xCBAD6729F7B1F4FC
 */
export function getIndexOfCurrentLevel(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x6FE601A64180D423
 */
export function setDispatchIdealSpawnDistance(p0: number): void;

/**
 * ```
 * Disables the spawn point at the police house on the specified index.
 * policeIndex: The police house index.
 * toggle: true to enable the spawn point, false to disable.
 * - Nacorpio
 * ```
 * @param policeIndex - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x23285DED6EBD7EA3
 */
export function disablePoliceRestart(policeIndex: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE0E500246FF73D66
 */
export function beginReplayStats(p0: any, p1: any): void;

/**
 * ```
 * Determines whether there is a sniper bullet within the specified coordinates. The coordinates form an axis-aligned bounding box.  
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @returns number
 * @remarks Hash: 0xFEFCF11B01287125
 */
export function isSniperBulletInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;

/**
 * @returns void
 * @remarks Hash: 0x1FF6BF9A63E5757F
 */
export function scriptRaceShutdown(): void;

/**
 * ```
 * This function is hard-coded to always return 0.  
 * ```
 * @returns number
 * @remarks Hash: 0x61A23B7EDA9BDA24
 */
export function isSniperInverted(): number;

/**
 * Suppresses or enables a specific type of random event for the current frame.
 * 
 * ```c
 * enum eEventType {
 *     RC_PED_STEAL_VEHICLE = 0,
 *     RC_PED_JAY_WALK_LIGHT = 1,
 *     RC_COP_PURSUE = 2,
 *     RC_COP_PURSUE_VEHICLE_FLEE_SPAWNED = 3,
 *     RC_COP_VEHICLE_DRIVING_FAST = 4,
 *     RC_COP_VEHICLE_DRIVING_SLOW = 5,
 *     RC_DRIVER_RECKLESS = 6,
 *     RC_DRIVER_PRO = 7,
 *     RC_PED_PURSUE_WHEN_HIT_BY_CAR = 8
 * }
 * ```
 * @param eventType - 
 * @param enable - 
 * @returns void
 * @remarks Hash: 0x1EAE0A6E978894A2
 */
export function supressRandomEventThisFrame(eventType: number, enable: number): void;

/**
 * ## Parameters
 * *
 * @param stackSize - 
 * @returns number
 * @remarks Hash: 0xFEAD16FC8F9DFC0F
 */
export function getNumberOfFreeStacksOfThisSize(stackSize: number): number;

/**
 * ```
 * Returns pointer to an empty string.
 * GET_C*
 * ```
 * @returns string
 * @remarks Hash: 0x24DA7D7667FD7B09
 */
export function GetGlobalCharBuffer(): string;

/**
 * ## Parameters
 * *
 * @param id - 
 * @returns number
 * @remarks Hash: 0x1327E2FE9746BAEE
 */
export function doesPopMultiplierAreaExist(id: number): number;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param startRange - 
 * @param endRange - 
 * @returns number
 * @remarks Hash: 0xF2D49816A804D134
 */
export function GetRandomIntInRange2(startRange: number, endRange: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0x438822C279B73B93
 */
export function SetBeastModeActive(player: number): void;

/**
 * ## Return value
 * Hard-coded to always return 0.
 * @returns number
 * @remarks Hash: 0xF6201B4DAF662A9D
 */
export function isXbox360Version(): number;

/**
 * Normally, blips can only be removed by the script or resource that created them. However, this native function allows a script to bypass this logic and remove blips from any script.
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB98236CAAECEF897
 */
export function setThisScriptCanRemoveBlipsCreatedByAnyScript(toggle: number): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xBA4B8D83BDC75551
 */
export function 0xba4b8d83bdc75551(p0: any): void;

/**
 * ```
 * Another unknown label type...
 * MISC::_FAA457EF263E8763(a_0, "Thumb_label");
 * MISC::_FAA457EF263E8763(&a_0._f10, "Photo_label");
 * MISC::_FAA457EF263E8763(a_0, "GXTlabel");
 * MISC::_FAA457EF263E8763(&a_0._f21, "StringComp");
 * MISC::_FAA457EF263E8763(&a_0._f43, "SecondStringComp");
 * MISC::_FAA457EF263E8763(&a_0._f53, "ThirdStringComp");
 * MISC::_FAA457EF263E8763(&a_0._f32, "SenderStringComp");
 * MISC::_FAA457EF263E8763(&a_0._f726[v_1A/*16*/], &v_20); // where v_20 is "LastJobTL_0_1" thru "LastJobTL_2_1", gets saved in a struct called "LAST_JobGamer_TL"
 * MISC::_FAA457EF263E8763(&a_0._f4B, "PAID_PLAYER");
 * MISC::_FAA457EF263E8763(&a_0._f5B, "RADIO_STATION");
 * ```
 * @param p0 - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0xFAA457EF263E8763
 */
export function 0xfaa457ef263e8763(p0: any, name: string): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x8B3CA62B1EF19B62
 */
export function getAllocatedStackSize(): number;

/**
 * ```
 * Sets a visually fake wanted level on the user interface. Used by Rockstar's scripts to "override" regular wanted levels and make custom ones while the real wanted level and multipliers are still in effect.
 * Max is 6, anything above this makes it just 6. Also the mini-map gets the red & blue flashing effect.
 * ```
 * @param fakeWantedLevel - 
 * @returns void
 * @remarks Hash: 0x1454F2448DE30163
 */
export function setFakeWantedLevel(fakeWantedLevel: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x5D5479D115290C3F
 */
export function isTennisMode(ped: number): number;

/**
 * ```
 * Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused which means you will lose control and the game remains in paused mode until you exit GTA5.exe  
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x577D1284D6873711
 */
export function setGamePaused(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD79185689F8FD5DF
 */
export function setStuntJumpsCanTrigger(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x264AC28B01B353A5
 */
export function removeDispatchSpawnBlockingArea(p0: any): void;

/**
 * ## Parameters
 * *
 * @param x1 - 
 * @param y1 - 
 * @param x2 - 
 * @param y2 - 
 * @returns any
 * @remarks Hash: 0x2D4259F1FEB81DA9
 */
export function AddDispatchSpawnBlockingArea(x1: number, y1: number, x2: number, y2: number): any;

/**
 * Records that a player has successfully passed a checkpoint during a scripted race in GTA:Online. This native should be used after initializing the race with [`SCRIPT_RACE_INIT`](#_0x0A60017F841A54F2).
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param ped - 
 * @param checkpoint - 
 * @param lap - 
 * @param time - 
 * @returns void
 * @remarks Hash: 0x1BB299305C3E8C13
 */
export function scriptRacePlayerHitCheckpoint(ped: number, checkpoint: number, lap: number, time: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x9CD27B0045628463
 */
export function getGameTimer(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xEB2104E905C6F2E9
 */
export function 0xeb2104e905c6f2e9(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xA5272EBEDD4747F6
 */
export function disableStuntJumpSet(p0: number): void;

/**
 * ## Parameters
 * *
 * @param minAmplitude - 
 * @returns void
 * @remarks Hash: 0xF751B16FB32ABC1D
 */
export function waterOverrideSetOceanwaveminamplitude(minAmplitude: number): void;

/**
 * @returns void
 * @remarks Hash: 0x77A84429DD9F0A15
 */
export function resetDispatchIdealSpawnDistance(): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x21FFB63D8C615361
 */
export function ignoreNextRestart(toggle: number): void;

/**
 * Shows the screen which is visible before you redo a mission? The game will make a restoration point where you will cameback when the mission is over.
 * @returns number
 * @remarks Hash: 0x44A0BDC559B35F6E
 */
export function queueMissionRepeatSave(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @param p11 - 
 * @param p12 - 
 * @returns number
 * @remarks Hash: 0xA61B4DF533DCB56E
 */
export function isAreaOccupied(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number, p11: any, p12: number): number;

/**
 * ```
 * Sets whether the game should fade out after the player is arrested.  
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1E0B4DC0D990A4E7
 */
export function setFadeOutAfterArrest(toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC5868A966E5BE3AE
 */
export function getSnowLevel(): number;

/**
 * ```
 * NativeDB Added Parameter 8: Any p7
 * NativeDB Added Parameter 9: Any p8
 * ```
 * @param dispatchService - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param numUnits - 
 * @param radius - 
 * @param outIncidentID - 
 * @returns number
 * @remarks Hash: 0x3F892CAF67444AE7
 */
export function createIncident(dispatchService: number, x: number, y: number, z: number, numUnits: number, radius: number, outIncidentID: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x2B4A15E44DE0F478
 */
export function isMinigameInProgress(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x2272B0A1343129F4
 */
export function isStuntJumpMessageShowing(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x8A75CE2956274ADD
 */
export function isMemoryCardInUse(): number;

/**
 * ```
 * SET_*
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE532EC1A63231B4F
 */
export function 0xe532ec1a63231b4f(p0: number, p1: number): void;

/**
 * Immediately changes the game's weather to the specified type, which will then persist for one cycle before the game resumes its natural weather progression.
 * @param weatherType - 
 * @returns void
 * @remarks Hash: 0x29B487C359E19889
 */
export function setWeatherTypeNow(weatherType: string): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x1178E104409FE58C
 */
export function 0x1178e104409fe58c(p0: any, p1: any): void;

/**
 * ```
 * Delete an incident with a given id.  
 * =======================================================  
 * Correction, I have change this to int, instead of int*  
 * as it doesn't use a pointer to the createdIncident.  
 * If you try it you will crash (or) freeze.  
 * =======================================================  
 * ```
 * @param incidentId - 
 * @returns void
 * @remarks Hash: 0x556C1AA270D5A207
 */
export function deleteIncident(incidentId: number): void;

/**
 * Initializes a script race in GTA:Online and sets up the helper split time system.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param numCheckpoints - 
 * @param numLaps - 
 * @param numPlayers - 
 * @param localPlayer - 
 * @returns void
 * @remarks Hash: 0x0A60017F841A54F2
 */
export function scriptRaceInit(numCheckpoints: number, numLaps: number, numPlayers: number, localPlayer: number): void;

/**
 * ## Parameters
 * *
 * @param seed - 
 * @returns void
 * @remarks Hash: 0x444D98F98C11F3EC
 */
export function setRandomSeed(seed: number): void;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns number
 * @remarks Hash: 0xC843060B5765DCE7
 */
export function asin(value: number): number;

/**
 * ```
 * Returns value of the '-benchmarkPass' command line option.
 * ```
 * @returns number
 * @remarks Hash: 0x1B2366C3F2A5C8DF
 */
export function GetBenchmarkPassFromCommandLine(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @returns number
 * @remarks Hash: 0x1162EA8AE9D24EEA
 */
export function overrideSaveHouse(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: { x: number, y: number, z: number }, p7: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @returns number
 * @remarks Hash: 0x7F8F6405F4777AF6
 */
export function 0x7f8f6405f4777af6(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number): number;

/**
 * ```
 * Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.  
 * ```
 * @returns string
 * @remarks Hash: 0x8362B09B91893647
 */
export function getOnscreenKeyboardResult(): string;

/**
 * @returns void
 * @remarks Hash: 0xB3CD58CCA6CDA852
 */
export function ClearTacticalAnalysisPoints(): void;

/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#_0x29B487C359E19889) for weather types.
 * @param weatherType - 
 * @returns number
 * @remarks Hash: 0x44F28F86433B10A9
 */
export function isPrevWeatherType(weatherType: string): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @returns number
 * @remarks Hash: 0xDC8C5D7CFEAB8394
 */
export function hasBulletImpactedInBox(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number): number;

/**
 * ```
 * If true, the player can't save the game.   
 * If the parameter is true, sets the mission flag to true, if the parameter is false, the function does nothing at all.  
 * ^ also, if the mission flag is already set, the function does nothing at all  
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC4301E5121A0ED73
 */
export function setMissionFlag(toggle: number): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x703CC7F60CBB2B57
 */
export function 0x703cc7f60cbb2b57(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x48838ED9937A15D1
 */
export function setDispatchTimeBetweenSpawnAttemptsMultiplier(p0: any, p1: number): void;

/**
 * ```
 * Makes the ped jump around like they're in a tennis match  
 * ```
 * @param ped - 
 * @param toggle - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x28A04B411933F8A6
 */
export function enableTennisMode(ped: number, toggle: number, p2: number): void;

/**
 * Gets the high precision frame time of the last frame in seconds.
 * 
 * _note: the example above is way less precise._
 * @returns number
 * @remarks Hash: 0x15C40837039FFAF7
 */
export function getFrameTime(): number;

/**
 * ```
 * Hardcoded to return false.
 * ```
 * @returns number
 * @remarks Hash: 0xE8B9C0EC9E183F35
 */
export function HasResumedFromSuspend(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0xA735353C77334EA0
 */
export function RegisterInt64ToSave(p0: any, name: string): void;

/**
 * ```
 * Returns bit's boolean state from [offset] of [address].
 * Example:
 * MISC::IS_BIT_SET(bitAddress, 1);
 * To enable and disable bits, see:
 * MISC::SET_BIT(&bitAddress, 1);   // enable
 * MISC::CLEAR_BIT(&bitAddress, 1); // disable
 * ```
 * @param address - 
 * @param offset - 
 * @returns number
 * @remarks Hash: 0xA921AA820C25702F
 */
export function isBitSet(address: number, offset: number): number;

/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#_0x29B487C359E19889) for weather types.
 * @param weatherType - 
 * @returns void
 * @remarks Hash: 0xED712CA327900C8A
 */
export function setWeatherTypeNowPersist(weatherType: string): void;

/**
 * ## Parameters
 * *
 * @param string - 
 * @returns number
 * @remarks Hash: 0xF22B6C47C6EAB066
 */
export function isStringNull(string: string): number;

/**
 * ## Parameters
 * *
 * @param x1 - 
 * @param y1 - 
 * @param x2 - 
 * @param y2 - 
 * @returns number
 * @remarks Hash: 0x186FC4BE848E1C92
 */
export function getAngleBetween2dVectors(x1: number, y1: number, x2: number, y2: number): number;

/**
 * @returns void
 * @remarks Hash: 0x1B1AB132A16FDA55
 */
export function clearReplayStats(): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @returns void
 * @remarks Hash: 0x5896F2BD5683A4E1
 */
export function ResetDispatchSpawnLocation(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x632106CC96E82E91
 */
export function tan(p0: number): number;

/**
 * ```
 * Only found 2 times in decompiled scripts. Not a whole lot to go off of.
 * MISC::_8269816F6CFD40F8(&a_0._f1F5A._f6[0/*8*/], "TEMPSTAT_LABEL"); // gets saved in a struct called "g_SaveData_STRING_ScriptSaves"
 * MISC::_8269816F6CFD40F8(&a_0._f4B4[v_1A/*8*/], &v_5); // where v_5 is "Name0" thru "Name9", gets saved in a struct called "OUTFIT_Name"
 * ```
 * @param p0 - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0x8269816F6CFD40F8
 */
export function 0x8269816f6cfd40f8(p0: any, name: string): void;

/**
 * ## Parameters
 * *
 * @param id - 
 * @returns number
 * @remarks Hash: 0x171BAFB3C60389F4
 */
export function doesPopMultiplierSphereExist(id: number): number;

/**
 * @returns void
 * @remarks Hash: 0x338D2E3477711050
 */
export function clearOverrideWeather(): void;

/**
 * Allows the player to perform super jumps. This function must be called every frame for it to work.
 * It basically OR's a flag for a single frame, allowing the ped to perform a super jump only when the flag is set.
 * @param player - 
 * @returns void
 * @remarks Hash: 0x57FFF03E423A4C0B
 */
export function setSuperJumpThisFrame(player: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x8927CBF9D22261A4
 */
export function atan2(p0: number, p1: number): number;

/**
 * ```
 * Sets whether the game should fade in after the player dies or is arrested.  
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDA66D2796BA33F12
 */
export function setFadeInAfterDeathArrest(toggle: number): void;

/**
 * ```
 * Begins with STOP_*. Next character in the name is either D or E.
 * ```
 * @returns void
 * @remarks Hash: 0xC7DB36C24634F52B
 */
export function StopBenchmarkRecording(): void;

/**
 * ## Parameters
 * *
 * @param minBumpiness - 
 * @returns void
 * @remarks Hash: 0x6216B116083A7CB4
 */
export function waterOverrideSetRippleminbumpiness(minBumpiness: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x4C9296CBCD1B971E
 */
export function getFakeWantedLevel(): number;

/**
 * ## Parameters
 * *
 * @param minAmplitude - 
 * @returns void
 * @remarks Hash: 0xC3EAD29AB273ECE8
 */
export function waterOverrideSetShorewaveminamplitude(minAmplitude: number): void;

/**
 * ```
 * Sets whether the game should fade out after the player dies.  
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x4A18E01DF2C87B86
 */
export function setFadeOutAfterDeath(toggle: number): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0x50C375537449F369
 */
export function EnableScriptCullModelThisFrame(): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x7ECDF98587E92DEC
 */
export function 0x7ecdf98587e92dec(p0: any): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA6575914D2A0B450
 */
export function getRoomKeyForGameViewport(): number;

/**
 * ```
 * Returns the handle of the interior that the entity is in. Returns 0 if outside.  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x2107BA504071A6BB
 */
export function getInteriorFromEntity(entity: number): number;

/**
 * ```
 * Does something similar to INTERIOR::DISABLE_INTERIOR.  
 * You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside.  
 * ```
 * @param interior - 
 * @returns void
 * @remarks Hash: 0x261CCE7EED010641
 */
export function unpinInterior(interior: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xBC72B5D7A1CBD54D
 */
export function isInteriorScene(): number;

/**
 * ```
 * Exemple of use(carmod_shop.c4)  
 * INTERIOR::_AF348AFCB575A441("V_CarModRoom");  
 * ```
 * @param roomName - 
 * @returns void
 * @remarks Hash: 0xAF348AFCB575A441
 */
export function 0xaf348afcb575a441(roomName: string): void;

/**
 * ## Parameters
 * *
 * @param interior - 
 * @returns number
 * @remarks Hash: 0x26B0E73D7EAAF4D3
 */
export function isValidInterior(interior: number): number;

/**
 * Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns number
 * @remarks Hash: 0xEEA5AC2EDA7C33E8
 */
export function isCollisionMarkedOutside(x: number, y: number, z: number): number;

/**
 * ```
 * Usage: INTERIOR::_0x405DC2AEF6AF95B9(INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(PLAYER::PLAYER_PED_ID()));  
 * ```
 * @param roomHashKey - 
 * @returns void
 * @remarks Hash: 0x405DC2AEF6AF95B9
 */
export function 0x405dc2aef6af95b9(roomHashKey: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x38C1CB1CB119A016
 */
export function 0x38c1cb1cb119a016(p0: any, p1: any): void;

/**
 * ```
 * Only used once in the entire game scripts.
 * Does not actually return anything.
 * ```
 * @param interior - 
 * @returns any
 * @remarks Hash: 0x4C2330E61D3DEB56
 */
export function 0x4c2330e61d3deb56(interior: number): any;

/**
 * ## Parameters
 * *
 * @param interior - 
 * @returns void
 * @remarks Hash: 0x2CA429C029CCF247
 */
export function pinInteriorInMemory(interior: number): void;

/**
 * ## Parameters
 * *
 * @param interior - 
 * @param entitySetName - 
 * @returns number
 * @remarks Hash: 0x35F7DD45E8C0A16D
 */
export function isInteriorEntitySetActive(interior: number, entitySetName: string): number;

/**
 * ```
 * More info: http://gtaforums.com/topic/836367-adding-props-to-interiors/  
 * ```
 * @param interior - 
 * @param entitySetName - 
 * @returns void
 * @remarks Hash: 0x55E86AF2712B36A1
 */
export function activateInteriorEntitySet(interior: number, entitySetName: string): void;

/**
 * ```
 * Forces the particular room in an interior to load incase not teleporting into the portal.
 * ```
 * @param entity - 
 * @param interior - 
 * @param roomHashKey - 
 * @returns void
 * @remarks Hash: 0x52923C4710DD9907
 */
export function forceRoomForEntity(entity: number, interior: number, roomHashKey: number): void;

/**
 * ```
 * Returns the group ID of the specified interior. For example, regular interiors have group 0, subway interiors have group 1. There are a few other groups too.  
 * ```
 * @param interior - 
 * @returns number
 * @remarks Hash: 0xE4A84ABF135EF91A
 */
export function getInteriorGroupId(interior: number): number;

/**
 * ```
 * Jenkins hash _might_ be 0xFC227584.
 * ```
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x7241CCB7D020DB69
 */
export function 0x7241ccb7d020db69(entity: number, toggle: number): void;

/**
 * ```
 * Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x47C2A06D4F5F424B
 */
export function getRoomKeyFromEntity(entity: number): number;

/**
 * ## Parameters
 * *
 * @param interior - 
 * @param entitySetName - 
 * @param color - 
 * @returns void
 * @remarks Hash: 0xC1F1920BAF281317
 */
export function SetInteriorEntitySetColor(interior: number, entitySetName: string, color: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns number
 * @remarks Hash: 0xEC4CF9FCB29A4424
 */
export function getInteriorFromCollision(x: number, y: number, z: number): number;

/**
 * ```
 * Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns number
 * @remarks Hash: 0xF0F77ADB9F67E79D
 */
export function getInteriorAtCoordsWithTypehash(x: number, y: number, z: number): number;

/**
 * @returns void
 * @remarks Hash: 0x483ACA1176CA93F1
 */
export function 0x483aca1176ca93f1(): void;

/**
 * ```
 * Returns the interior ID representing the requested interior at that location (if found?). The supplied interior string is not the same as the one used to load the interior.  
 * Use: INTERIOR::UNPIN_INTERIOR(INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interior))  
 * Interior types include: "V_Michael", "V_Franklins", "V_Franklinshouse", etc.. you can find them in the scripts.  
 * Not a very useful native as you could just use GET_INTERIOR_AT_COORDS instead and get the same result, without even having to specify the interior type.  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param interiorType - 
 * @returns number
 * @remarks Hash: 0x05B7A89BD78797FC
 */
export function getInteriorAtCoordsWithType(x: number, y: number, z: number, interiorType: string): number;

/**
 * ## Parameters
 * *
 * @param interior - 
 * @param entitySetName - 
 * @returns void
 * @remarks Hash: 0x420BD37289EEE162
 */
export function deactivateInteriorEntitySet(interior: number, entitySetName: string): void;

/**
 * ```
 * Does something similar to INTERIOR::DISABLE_INTERIOR  
 * ```
 * @param interiorID - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD9175F941610DB54
 */
export function capInterior(interiorID: number, toggle: number): void;

/**
 * Immediately removes entity from an interior. Like sets entity to `limbo` room.
 * 
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x85D5422B2039A70D
 */
export function ClearInteriorForEntity(entity: number): void;

/**
 * ```
 * This is the native that is used to hide the exterior of GTA Online apartment buildings when you are inside an apartment.
 * ```
 * @param mapObjectHash - 
 * @returns void
 * @remarks Hash: 0xA97F257D0151A6AB
 */
export function enableExteriorCullModelThisFrame(mapObjectHash: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @returns number
 * @remarks Hash: 0xE7D267EC6CA966C3
 */
export function getInteriorFromPrimaryView(): number;

/**
 * ```
 * Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x399685DB942336BC
 */
export function getKeyForEntityInRoom(entity: number): number;

/**
 * ## Parameters
 * *
 * @param pickup - 
 * @param roomName - 
 * @returns void
 * @remarks Hash: 0x3F6167F351168730
 */
export function addPickupToInteriorRoomByName(pickup: number, roomName: string): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param interiorID - 
 * @returns void
 * @remarks Hash: 0x82EBB79E258FA2B7
 */
export function 0x82ebb79e258fa2b7(entity: number, interiorID: number): void;

/**
 * ## Parameters
 * *
 * @param interior - 
 * @returns number
 * @remarks Hash: 0xBC5115A5A939DD15
 */
export function isInteriorDisabled(interior: number): number;

/**
 * ```
 * Example:   
 * This removes the interior from the strip club and when trying to walk inside the player just falls:  
 * INTERIOR::DISABLE_INTERIOR(118018, true);  
 * ```
 * @param interiorID - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6170941419D7D8EC
 */
export function disableInterior(interiorID: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param interiorID - 
 * @returns number
 * @remarks Hash: 0x6726BDCCC1932F0E
 */
export function isInteriorReady(interiorID: number): number;

/**
 * ## Parameters
 * *
 * @param interior - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x9E3B3E6D66F6E22F
 */
export function getOffsetFromInteriorInWorldCoords(interior: number, x: number, y: number, z: number): { x: number, y: number, z: number };

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param interior - 
 * @returns number
 * @remarks Hash: 0xF49B58631D9E22D9
 */
export function getInteriorHeading(interior: number): number;

/**
 * ## Parameters
 * *
 * @param interiorID - 
 * @returns number
 * @remarks Hash: 0x92BAC8ACF88CEC26
 */
export function isInteriorCapped(interiorID: number): number;

/**
 * @returns void
 * @remarks Hash: 0x23B59D8912F94246
 */
export function clearRoomForGameViewport(): void;

/**
 * ## Parameters
 * *
 * @param interiorID - 
 * @param roomHashKey - 
 * @returns void
 * @remarks Hash: 0x920D853F3E17F1DA
 */
export function forceRoomForGameViewport(interiorID: number, roomHashKey: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xB365FC0C4E27FFA7
 */
export function clearRoomForEntity(entity: number): void;

/**
 * ```
 * Returns interior ID from specified coordinates. If coordinates are outside, then it returns 0.  
 * Example for VB.NET  
 * Dim interiorID As Integer = Native.Function.Call(Of Integer)(Hash.GET_INTERIOR_AT_COORDS, X, Y, Z)  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns number
 * @remarks Hash: 0xB0F7F8663821D9C3
 */
export function getInteriorAtCoords(x: number, y: number, z: number): number;

/**
 * ```
 * DISABLE_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9E6542F0CE8E70A3
 */
export function 0x9e6542f0ce8e70a3(toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param interior - 
 * @param position - 
 * @param nameHash - 
 * @returns void
 * @remarks Hash: 0x252BDC06B73FA6EA
 */
export function getInteriorLocationAndNamehash(interior: number, position: { x: number, y: number, z: number }, nameHash: number): void;

/**
 * ## Parameters
 * *
 * @param interiorID - 
 * @returns void
 * @remarks Hash: 0x41F37C3427C75AE0
 */
export function refreshInterior(interiorID: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @returns any
 * @remarks Hash: 0xE5E9746A66359F9D
 */
export function 0xe5e9746a66359f9d(): any;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @returns any
 * @remarks Hash: 0x690B76BD2763E068
 */
export function 0x690b76bd2763e068(): any;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @returns any
 * @remarks Hash: 0x84B418E93894AC1C
 */
export function 0x84b418e93894ac1c(): any;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @param controlGroup - 
 * @param p2 - 
 * @returns string
 * @remarks Hash: 0x80C2FD58D720C801
 */
export function getControlGroupInstructionalButton(padIndex: number, controlGroup: number, p2: number): string;

/**
 * ```
 * Returns profile setting 225.
 * ```
 * @returns number
 * @remarks Hash: 0x0F70731BACCFBB96
 */
export function getIsUsingAlternateDriveby(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x5B73C77D9EB66E24
 */
export function 0x5b73c77d9eb66e24(p0: number): void;

/**
 * Hardcoded to return false.
 * @param padIndex - 
 * @returns number
 * @remarks Hash: 0x23F09EADC01449D6
 */
export function 0x23f09eadc01449d6(padIndex: number): number;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @param control - 
 * @returns number
 * @remarks Hash: 0xEC3C9B8D5327B563
 */
export function getControlNormal(padIndex: number, control: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xA0CEFCEA390AAB9B
 */
export function 0xa0cefcea390aab9b(p0: any): void;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @returns number
 * @remarks Hash: 0xA571D46727E2B718
 */
export function IsUsingKeyboard(padIndex: number): number;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xF239400E16C23E08
 */
export function 0xf239400e16c23e08(padIndex: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @param control - 
 * @returns void
 * @remarks Hash: 0xEDE476E5EE29EDB1
 */
export function setInputExclusive(padIndex: number, control: number): void;

/**
 * ```
 * formerly called _GET_CONTROL_ACTION_NAME incorrectly  
 * p2 appears to always be true.  
 * p2 is unused variable in function.  
 * EG:  
 * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 201, 1) /*INPUT_FRONTEND_ACCEPT (e.g. Enter button)*/  
 * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 202, 1) /*INPUT_FRONTEND_CANCEL (e.g. ESC button)*/  
 * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 51, 1) /*INPUT_CONTEXT (e.g. E button)*/  
 * gtaforums.com/topic/819070-c-draw-instructional-buttons-scaleform-movie/#entry1068197378  
 * 0, 1 and 2 used in the scripts. 0 is by far the most common of them.  
 * ```
 * @param padIndex - 
 * @param control - 
 * @returns string
 * @remarks Hash: 0x0499D7B09FC9B407
 */
export function getControlInstructionalButton(padIndex: number, control: number): string;

/**
 * [Control values and meaning](https://docs.fivem.net/docs/game-references/controls/#controls)
 * 
 * Example: `CONTROLS::DISABLE_CONTROL_ACTION(2, 19, true)` disables the switching UI from appearing both when using a keyboard and Xbox 360 controller. Needs to be executed each frame.
 * Control group 1 and 0 gives the same results as 2. Same results for all players.
 * @param padIndex - 
 * @param control - 
 * @param disable - 
 * @returns void
 * @remarks Hash: 0xFE99B66D079CF6BC
 */
export function disableControlAction(padIndex: number, control: number, disable: number): void;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @returns void
 * @remarks Hash: 0x8290252FFF36ACB5
 */
export function SetControlLightEffectColor(padIndex: number, red: number, green: number, blue: number): void;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @returns number
 * @remarks Hash: 0x6CD79468A1E595C6
 */
export function 0x6cd79468a1e595c6(padIndex: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x798FDEB5B1575088
 */
export function setPlayerpadShakesWhenControllerDisabled(toggle: number): void;

/**
 * Returns whether a control is currently _not_ pressed.
 * @param padIndex - 
 * @param control - 
 * @returns number
 * @remarks Hash: 0x648EE3E7F38877DD
 */
export function isControlReleased(padIndex: number, control: number): number;

/**
 * ```
 * Used with IS_LOOK_INVERTED() and negates its affect.
 * --
 * Not sure how the person above got that description, but here's an actual example:
 * if (PAD::_GET_LAST_INPUT_METHOD(2)) {
 *     if (a_5) {
 *         if (PAD::IS_LOOK_INVERTED()) {
 *             a_3 *= -1;
 *         }
 *         if (PAD::_E1615EC03B3BB4FD()) {
 *             a_3 *= -1;
 *         }
 *     }
 * }
 * ```
 * @returns number
 * @remarks Hash: 0xE1615EC03B3BB4FD
 */
export function 0xe1615ec03b3bb4fd(): number;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @param control - 
 * @returns number
 * @remarks Hash: 0x11E65974A982637C
 */
export function getDisabledControlNormal(padIndex: number, control: number): number;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @param control - 
 * @returns number
 * @remarks Hash: 0x1CEA6BFDF248E5D9
 */
export function isControlEnabled(padIndex: number, control: number): number;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @param control - 
 * @returns number
 * @remarks Hash: 0x305C8DCD79DA8B0F
 */
export function isDisabledControlJustReleased(padIndex: number, control: number): number;

/**
 * ```c
 * enum ePadType {
 *   PLAYER_CONTROL = 0,
 *   CAMERA_CONTROL = 1,
 *   FRONTEND_CONTRO = 2
 * };
 * ```
 * @param padIndex - 
 * @returns void
 * @remarks Hash: 0xA5FFE9B05F199DE7
 */
export function enableAllControlActions(padIndex: number): void;

/**
 * ```
 * S*
 * ```
 * @returns void
 * @remarks Hash: 0x643ED62D5EA3BEBD
 */
export function ResetInputMappingScheme(): void;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @returns void
 * @remarks Hash: 0x5F4B6931816E599B
 */
export function disableAllControlActions(padIndex: number): void;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @param control - 
 * @returns number
 * @remarks Hash: 0xE2587F8CBBD87B1D
 */
export function isDisabledControlPressed(padIndex: number, control: number): number;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @returns void
 * @remarks Hash: 0x38C16A305E8CDC8D
 */
export function stopPadShake(padIndex: number): void;

/**
 * Returns whether a control was newly released since the last check.
 * @param padIndex - 
 * @param control - 
 * @returns number
 * @remarks Hash: 0x50F940259D3841E6
 */
export function isControlJustReleased(padIndex: number, control: number): number;

/**
 * Returns whether a control was newly pressed since the last check.
 * @param padIndex - 
 * @param control - 
 * @returns number
 * @remarks Hash: 0x580417101DDB492F
 */
export function isControlJustPressed(padIndex: number, control: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @returns number
 * @remarks Hash: 0xFC695459D4D0E219
 */
export function SetCursorLocation(x: number, y: number): number;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x14D29BB12D47F68C
 */
export function 0x14d29bb12d47f68c(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * Seems to return values between -1 and 1 for controls like gas and steering.
 * ```
 * @param padIndex - 
 * @param control - 
 * @returns number
 * @remarks Hash: 0x5B84D09CEC5209C5
 */
export function getControlUnboundNormal(padIndex: number, control: number): number;

/**
 * ```
 * Used in carsteal3 script with p0 = "Carsteal4_spycar".
 * S*
 * ```
 * @param name - 
 * @returns number
 * @remarks Hash: 0x3D42B92563939375
 */
export function SwitchToInputMappingScheme(name: string): number;

/**
 * Returns whether a control is currently pressed.
 * @param padIndex - 
 * @param control - 
 * @returns number
 * @remarks Hash: 0xF3A21BCD95725A4A
 */
export function isControlPressed(padIndex: number, control: number): number;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @param control - 
 * @returns number
 * @remarks Hash: 0x4F8A26A890FD62FB
 */
export function getDisabledControlUnboundNormal(padIndex: number, control: number): number;

/**
 * This is for simulating player input.
 * @param padIndex - 
 * @param control - 
 * @param amount - 
 * @returns number
 * @remarks Hash: 0xE8A25867FBA3B05E
 */
export function SetControlNormal(padIndex: number, control: number, amount: number): number;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @returns number
 * @remarks Hash: 0x13337B38DB572509
 */
export function IsUsingKeyboard2(padIndex: number): number;

/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * @returns any
 * @remarks Hash: 0x25AAA32BDC98F2A3
 */
export function 0x25aaa32bdc98f2a3(): any;

/**
 * Returns the local player's targeting mode. See [`SET_PLAYER_TARGETING_MODE`](#_0xB1906895227793F3).
 * @returns number
 * @remarks Hash: 0xBB41AFBBBC0A0287
 */
export function getLocalPlayerAimState(): number;

/**
 * ```
 * control values and meaning: https://github.com/scripthookvdotnet/scripthookvdotnet/blob/47f8bb02a50e27d4bb982f43a78091feac59b21c/source/scripting_v3/GTA/Control.cs
 * and  
 * https://docs.fivem.net/game-references/controls/
 * 0, 1 and 2 used in the scripts.  
 * Control values from the decompiled scripts:   
 * 0,1,2,3,4,5,6,8,9,10,11,14,15,16,17,19,21,22,24,25,26,30,31,32,33,34,35,36,  
 * 37,44,46,47,59,60,65,68,69,70,71,72,73,74,75,76,79,80,81,82,86,95,98,99,100  
 * ,101,114,140,141,143,172,173,174,175,176,177,178,179,180,181,187,188,189,19  
 * 0,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,217,218,219,2  
 * 20,221,225,228,229,230,231,234,235,236,237,238,239,240,241,242,245,246,257,  
 * 261,262,263,264,286,287,288,289,337,338,339,340,341,342,343  
 * INPUTGROUP_MOVE  
 * INPUTGROUP_LOOK  
 * INPUTGROUP_WHEEL  
 * INPUTGROUP_CELLPHONE_NAVIGATE  
 * INPUTGROUP_CELLPHONE_NAVIGATE_UD  
 * INPUTGROUP_CELLPHONE_NAVIGATE_LR  
 * INPUTGROUP_FRONTEND_DPAD_ALL  
 * INPUTGROUP_FRONTEND_DPAD_UD  
 * INPUTGROUP_FRONTEND_DPAD_LR  
 * INPUTGROUP_FRONTEND_LSTICK_ALL  
 * INPUTGROUP_FRONTEND_RSTICK_ALL  
 * INPUTGROUP_FRONTEND_GENERIC_UD  
 * INPUTGROUP_FRONTEND_GENERIC_LR  
 * INPUTGROUP_FRONTEND_GENERIC_ALL  
 * INPUTGROUP_FRONTEND_BUMPERS  
 * INPUTGROUP_FRONTEND_TRIGGERS  
 * INPUTGROUP_FRONTEND_STICKS  
 * INPUTGROUP_SCRIPT_DPAD_ALL  
 * INPUTGROUP_SCRIPT_DPAD_UD  
 * INPUTGROUP_SCRIPT_DPAD_LR  
 * INPUTGROUP_SCRIPT_LSTICK_ALL  
 * INPUTGROUP_SCRIPT_RSTICK_ALL  
 * INPUTGROUP_SCRIPT_BUMPERS  
 * INPUTGROUP_SCRIPT_TRIGGERS  
 * INPUTGROUP_WEAPON_WHEEL_CYCLE  
 * INPUTGROUP_FLY  
 * INPUTGROUP_SUB  
 * INPUTGROUP_VEH_MOVE_ALL  
 * INPUTGROUP_CURSOR  
 * INPUTGROUP_CURSOR_SCROLL  
 * INPUTGROUP_SNIPER_ZOOM_SECONDARY  
 * INPUTGROUP_VEH_HYDRAULICS_CONTROL  
 * Took those in IDA Pro.Not sure in which order they go  
 * ```
 * @param padIndex - 
 * @param control - 
 * @param enable - 
 * @returns void
 * @remarks Hash: 0x351220255D64C155
 */
export function enableControlAction(padIndex: number, control: number, enable: number): void;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @param control - 
 * @returns number
 * @remarks Hash: 0x91AEF906BCA88877
 */
export function isDisabledControlJustPressed(padIndex: number, control: number): number;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @param control - 
 * @returns number
 * @remarks Hash: 0xD95E79E8686D2C27
 */
export function getControlValue(padIndex: number, control: number): number;

/**
 * ```
 * Returns profile setting 17.
 * ```
 * @returns number
 * @remarks Hash: 0xFC859E2374407556
 */
export function getAllowMovementWhileZoomed(): number;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @returns void
 * @remarks Hash: 0xCB0360EFEFB2580D
 */
export function 0xcb0360efefb2580d(padIndex: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x77B612531280010D
 */
export function isLookInverted(): number;

/**
 * ```
 * p0 always seems to be 0  
 * duration in milliseconds   
 * frequency should range from about 10 (slow vibration) to 255 (very fast)  
 * example:  
 * SET_PAD_SHAKE(0, 100, 200);  
 * ```
 * @param padIndex - 
 * @param duration - 
 * @param frequency - 
 * @returns void
 * @remarks Hash: 0x48B3886C1358D0D5
 */
export function setPadShake(padIndex: number, duration: number, frequency: number): void;

/**
 * ```
 * Same as 0x3D42B92563939375
 * 
 * S*
 * ```
 * @param name - 
 * @returns number
 * @remarks Hash: 0x4683149ED1DDE7A1
 */
export function SwitchToInputMappingScheme2(name: string): number;

/**
 * ```
 * The number of milliseconds since last padIndex registered pressed
 * ```
 * @param padIndex - 
 * @returns number
 * @remarks Hash: 0xD7D22F5592AED8BA
 */
export function GetTimeSinceLastInput(padIndex: number): number;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @returns void
 * @remarks Hash: 0x7F4724035FDCA1DD
 */
export function DisableInputGroup(padIndex: number): void;

/**
 * Same behavior as [`GET_LOCAL_PLAYER_AIM_STATE`](#_0xBB41AFBBBC0A0287) but will also return if player using a keyboard.
 * @returns number
 * @remarks Hash: 0x59B9A7AF4C95133C
 */
export function getLocalPlayerGamepadAimState(): number;

/**
 * ## Parameters
 * *
 * @param padIndex - 
 * @param control - 
 * @returns number
 * @remarks Hash: 0xFB6C4072E9A32E92
 */
export function IsDisabledControlReleased(padIndex: number, control: number): number;

/**
 * ## Return value
 * Hard-coded to always return 1.
 * @returns number
 * @remarks Hash: 0xA213B11DFF526300
 */
export function 0xa213b11dff526300(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x8D30F648014A92B5
 */
export function GetExtraContentPackHasBeenInstalled(): number;

/**
 * GET_IS_LOADING_*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @returns number
 * @remarks Hash: 0xC4637A6D03C24CC3
 */
export function 0xc4637a6d03c24cc3(): number;

/**
 * ```
 * Unloads GROUP_MAP (GTAO/MP) DLC data and loads GROUP_MAP_SP DLC. Neither are loaded by default, 0888C3502DBBEEF5 is a cognate to this function and loads MP DLC (and unloads SP DLC by extension).
 * The original (and wrong) definition is below:
 * This unload the GTA:O DLC map parts (like high end garages/apartments).
 * Works in singleplayer.
 * ```
 * @returns void
 * @remarks Hash: 0xD7C10C4A637992C9
 */
export function onEnterSp(): void;

/**
 * ## Return value
 * Hard-coded to always return 0.
 * @returns number
 * @remarks Hash: 0x9489659372A81585
 */
export function 0x9489659372a81585(): number;

/**
 * ```
 * This loads the GTA:O dlc map parts (high end garages, apartments).
 * Works in singleplayer.
 * In order to use GTA:O heist IPL's you have to call this native with the following params: SET_INSTANCE_PRIORITY_MODE(1);
 * ```
 * @returns void
 * @remarks Hash: 0x0888C3502DBBEEF5
 */
export function onEnterMp(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x10D0A8F259E93EC9
 */
export function getIsLoadingScreenActive(): number;

/**
 * ```
 * Example:
 * DLC::IS_DLC_PRESENT($\mpbusiness2\);
 * ($ = gethashkey)
 * bruteforce these:
 * 0xB119F6D
 * 0x96F02EE6
 * ```
 * @param dlcHash - 
 * @returns number
 * @remarks Hash: 0x812595A0644CE1DE
 */
export function isDlcPresent(dlcHash: number): number;

/**
 * ```
 * Only used once in scripts, in maintransition.
 * maintransition.c4, line ~82432:
 * if (PED::_7350823473013C02(PLAYER::PLAYER_PED_ID()) && (DECORATOR::_241FCA5B1AA14F75() == 0)) {
 *     g_2542A5 = a_1; // 'g_2542A5' used in 'building_controller.ysc' for IPL stuff?
 *     return 1;
 * }
 * Likely used solely for the players ped. The function it's in seems to only be used for initialization/quitting. Called among natives to discard scaleforms, disable frontend, fading in/out, etc. Neighboring strings to some calls include "HUD_JOINING", "HUD_QUITTING".
 * Most likely ARE_*
 * ```
 * @returns number
 * @remarks Hash: 0x241FCA5B1AA14F75
 */
export function 0x241fca5b1aa14f75(): number;

/**
 * ## Return value
 * Hard-coded to always return 1.
 * @returns number
 * @remarks Hash: 0xF2E07819EF1A5289
 */
export function 0xf2e07819ef1a5289(): number;

/**
 * ```
 * Sets the value of the specified variable to 0.
 * Always returns true.
 * ```
 * @returns number
 * @remarks Hash: 0x46E2B844905BC5F0
 */
export function hasCloudRequestsFinished(): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param propertyName - 
 * @returns number
 * @remarks Hash: 0xDACE671663F2F5DB
 */
export function decorGetBool(entity: number, propertyName: string): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param propertyName - 
 * @returns number
 * @remarks Hash: 0x6524A2F114706F43
 */
export function decorGetFloat(entity: number, propertyName: string): number;

/**
 * ```
 * This function sets metadata of type bool to specified entity.  
 * ```
 * @param entity - 
 * @param propertyName - 
 * @param value - 
 * @returns number
 * @remarks Hash: 0x6B1E8E2ED1335B71
 */
export function decorSetBool(entity: number, propertyName: string, value: number): number;

/**
 * ```c
 * enum eDecorType
 * {
 *     DECOR_TYPE_FLOAT = 1,
 *     DECOR_TYPE_BOOL = 2,
 *     DECOR_TYPE_INT = 3,
 *     DECOR_TYPE_STRING = 4,
 *     DECOR_TYPE_TIME = 5
 * };
 * ```
 * @param propertyName - 
 * @param type - 
 * @returns void
 * @remarks Hash: 0x9FD90732F56403CE
 */
export function decorRegister(propertyName: string, type: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param propertyName - 
 * @param value - 
 * @returns number
 * @remarks Hash: 0x211AB1DD8D0F363A
 */
export function decorSetFloat(entity: number, propertyName: string, value: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param propertyName - 
 * @param timestamp - 
 * @returns number
 * @remarks Hash: 0x95AED7B8E39ECAA4
 */
export function decorSetTime(entity: number, propertyName: string, timestamp: number): number;

/**
 * ```
 * Returns whether or not the specified property is set for the entity.  
 * ```
 * @param entity - 
 * @param propertyName - 
 * @returns number
 * @remarks Hash: 0x05661B80A8C9165F
 */
export function decorExistOn(entity: number, propertyName: string): number;

/**
 * ## Parameters
 * *
 * @param propertyName - 
 * @param type - 
 * @returns number
 * @remarks Hash: 0x4F14F9F870D6FBC8
 */
export function decorIsRegisteredAsType(propertyName: string, type: number): number;

/**
 * ```
 * Sets property to int.  
 * ```
 * @param entity - 
 * @param propertyName - 
 * @param value - 
 * @returns number
 * @remarks Hash: 0x0CE3AA5E1CA19E10
 */
export function decorSetInt(entity: number, propertyName: string, value: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param propertyName - 
 * @returns number
 * @remarks Hash: 0x00EE9F297C738720
 */
export function decorRemove(entity: number, propertyName: string): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param propertyName - 
 * @returns number
 * @remarks Hash: 0xA06C969B02A97298
 */
export function decorGetInt(entity: number, propertyName: string): number;

/**
 * ```
 * Called after all decorator type initializations.  
 * ```
 * @returns void
 * @remarks Hash: 0xA9D14EEA259F9248
 */
export function decorRegisterLock(): void;

/**
 * ## Parameters
 * *
 * @param zoneId - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xBA5ECEEA120E5611
 */
export function setZoneEnabled(zoneId: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param zoneId - 
 * @returns number
 * @remarks Hash: 0x4334BC40AA0CB4BB
 */
export function getZonePopschedule(zoneId: number): number;

/**
 * ```
 * Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.  
 * Modified example from "am_imp_exp.c4", line 6418:  
 * /* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));  
 * etc.  
 * */  
 * STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash);  
 * ZONE::CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(popSchedules[index]);  
 * ```
 * @param scheduleId - 
 * @returns void
 * @remarks Hash: 0x5C0DE367AA0D911C
 */
export function clearPopscheduleOverrideVehicleModel(scheduleId: number): void;

/**
 * ```
 * Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.  
 * Modified example from "am_imp_exp.c4", line 6406:  
 * /* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));  
 * etc.  
 * */  
 * ZONE::OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(popSchedules[index], vehicleHash);  
 * STREAMING::REQUEST_MODEL(vehicleHash);  
 * ```
 * @param scheduleId - 
 * @param vehicleHash - 
 * @returns void
 * @remarks Hash: 0x5F7D596BAC2E7777
 */
export function overridePopscheduleVehicleModel(scheduleId: number, vehicleHash: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns number
 * @remarks Hash: 0x27040C25DE6CB2F4
 */
export function getZoneAtCoords(x: number, y: number, z: number): number;

/**
 * ```
 * AIRP = Los Santos International Airport  
 * ALAMO = Alamo Sea  
 * ALTA = Alta  
 * ARMYB = Fort Zancudo  
 * BANHAMC = Banham Canyon Dr  
 * BANNING = Banning  
 * BEACH = Vespucci Beach  
 * BHAMCA = Banham Canyon  
 * BRADP = Braddock Pass  
 * BRADT = Braddock Tunnel  
 * BURTON = Burton  
 * CALAFB = Calafia Bridge  
 * CANNY = Raton Canyon  
 * CCREAK = Cassidy Creek  
 * CHAMH = Chamberlain Hills  
 * CHIL = Vinewood Hills  
 * CHU = Chumash  
 * CMSW = Chiliad Mountain State Wilderness  
 * CYPRE = Cypress Flats  
 * DAVIS = Davis  
 * DELBE = Del Perro Beach  
 * DELPE = Del Perro  
 * DELSOL = La Puerta  
 * DESRT = Grand Senora Desert  
 * DOWNT = Downtown  
 * DTVINE = Downtown Vinewood  
 * EAST_V = East Vinewood  
 * EBURO = El Burro Heights  
 * ELGORL = El Gordo Lighthouse  
 * ELYSIAN = Elysian Island  
 * GALFISH = Galilee  
 * GOLF = GWC and Golfing Society  
 * GRAPES = Grapeseed  
 * GREATC = Great Chaparral  
 * HARMO = Harmony  
 * HAWICK = Hawick  
 * HORS = Vinewood Racetrack  
 * HUMLAB = Humane Labs and Research  
 * JAIL = Bolingbroke Penitentiary  
 * KOREAT = Little Seoul  
 * LACT = Land Act Reservoir  
 * LAGO = Lago Zancudo  
 * LDAM = Land Act Dam  
 * LEGSQU = Legion Square  
 * LMESA = La Mesa  
 * LOSPUER = La Puerta  
 * MIRR = Mirror Park  
 * MORN = Morningwood  
 * MOVIE = Richards Majestic  
 * MTCHIL = Mount Chiliad  
 * MTGORDO = Mount Gordo  
 * MTJOSE = Mount Josiah  
 * MURRI = Murrieta Heights  
 * NCHU = North Chumash  
 * NOOSE = N.O.O.S.E  
 * OCEANA = Pacific Ocean  
 * PALCOV = Paleto Cove  
 * PALETO = Paleto Bay  
 * PALFOR = Paleto Forest  
 * PALHIGH = Palomino Highlands  
 * PALMPOW = Palmer-Taylor Power Station  
 * PBLUFF = Pacific Bluffs  
 * PBOX = Pillbox Hill  
 * PROCOB = Procopio Beach  
 * RANCHO = Rancho  
 * RGLEN = Richman Glen  
 * RICHM = Richman  
 * ROCKF = Rockford Hills  
 * RTRAK = Redwood Lights Track  
 * SANAND = San Andreas  
 * SANCHIA = San Chianski Mountain Range  
 * SANDY = Sandy Shores  
 * SKID = Mission Row  
 * SLAB = Stab City  
 * STAD = Maze Bank Arena  
 * STRAW = Strawberry  
 * TATAMO = Tataviam Mountains  
 * TERMINA = Terminal  
 * TEXTI = Textile City  
 * TONGVAH = Tongva Hills  
 * TONGVAV = Tongva Valley  
 * VCANA = Vespucci Canals  
 * VESP = Vespucci  
 * VINE = Vinewood  
 * WINDF = Ron Alternates Wind Farm  
 * WVINE = West Vinewood  
 * ZANCUDO = Zancudo River  
 * ZP_ORT = Port of South Los Santos  
 * ZQ_UAR = Davis Quartz  
 * PROL = Prologue / North Yankton
 * ISHeist = Cayo Perico Island
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns string
 * @remarks Hash: 0xCD90657D4C30E1CA
 */
export function getNameOfZone(x: number, y: number, z: number): string;

/**
 * ```
 * Returns a hash representing which part of the map the given coords are located.  
 * Possible return values:  
 * (Hash of) city -> -289320599  
 * (Hash of) countryside -> 2072609373  
 * C# Example :  
 * Ped player = Game.Player.Character;  
 * Hash h = Function.Call<Hash>(Hash.GET_HASH_OF_MAP_AREA_AT_COORDS, player.Position.X, player.Position.Y, player.Position.Z);  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns number
 * @remarks Hash: 0x7EE64D51E8498728
 */
export function getHashOfMapAreaAtCoords(x: number, y: number, z: number): number;

/**
 * Gets the zone scumminess level, used to calculate the cellphone signal strength.
 * 
 * ```c
 * enum eZoneScumminess
 * {
 *     SCUMMINESS_POSH = 0,
 *     SCUMMINESS_NICE = 1,
 *     SCUMMINESS_ABOVE_AVERAGE = 2,
 *     SCUMMINESS_BELOW_AVERAGE = 3,
 *     SCUMMINESS_CRAP = 4,
 *     SCUMMINESS_SCUM = 5
 * }
 * ```
 * @param zoneId - 
 * @returns number
 * @remarks Hash: 0x5F7B268D15BA0739
 */
export function getZoneScumminess(zoneId: number): number;

/**
 * ```
 * 'zoneName' corresponds to an entry in 'popzone.ipl'.  
 * AIRP = Los Santos International Airport  
 * ALAMO = Alamo Sea  
 * ALTA = Alta  
 * ARMYB = Fort Zancudo  
 * BANHAMC = Banham Canyon Dr  
 * BANNING = Banning  
 * BEACH = Vespucci Beach  
 * BHAMCA = Banham Canyon  
 * BRADP = Braddock Pass  
 * BRADT = Braddock Tunnel  
 * BURTON = Burton  
 * CALAFB = Calafia Bridge  
 * CANNY = Raton Canyon  
 * CCREAK = Cassidy Creek  
 * CHAMH = Chamberlain Hills  
 * CHIL = Vinewood Hills  
 * CHU = Chumash  
 * CMSW = Chiliad Mountain State Wilderness  
 * CYPRE = Cypress Flats  
 * DAVIS = Davis  
 * DELBE = Del Perro Beach  
 * DELPE = Del Perro  
 * DELSOL = La Puerta  
 * DESRT = Grand Senora Desert  
 * DOWNT = Downtown  
 * DTVINE = Downtown Vinewood  
 * EAST_V = East Vinewood  
 * EBURO = El Burro Heights  
 * ELGORL = El Gordo Lighthouse  
 * ELYSIAN = Elysian Island  
 * GALFISH = Galilee  
 * GOLF = GWC and Golfing Society  
 * GRAPES = Grapeseed  
 * GREATC = Great Chaparral  
 * HARMO = Harmony  
 * HAWICK = Hawick  
 * HORS = Vinewood Racetrack  
 * HUMLAB = Humane Labs and Research  
 * JAIL = Bolingbroke Penitentiary  
 * KOREAT = Little Seoul  
 * LACT = Land Act Reservoir  
 * LAGO = Lago Zancudo  
 * LDAM = Land Act Dam  
 * LEGSQU = Legion Square  
 * LMESA = La Mesa  
 * LOSPUER = La Puerta  
 * MIRR = Mirror Park  
 * MORN = Morningwood  
 * MOVIE = Richards Majestic  
 * MTCHIL = Mount Chiliad  
 * MTGORDO = Mount Gordo  
 * MTJOSE = Mount Josiah  
 * MURRI = Murrieta Heights  
 * NCHU = North Chumash  
 * NOOSE = N.O.O.S.E  
 * OCEANA = Pacific Ocean  
 * PALCOV = Paleto Cove  
 * PALETO = Paleto Bay  
 * PALFOR = Paleto Forest  
 * PALHIGH = Palomino Highlands  
 * PALMPOW = Palmer-Taylor Power Station  
 * PBLUFF = Pacific Bluffs  
 * PBOX = Pillbox Hill  
 * PROCOB = Procopio Beach  
 * RANCHO = Rancho  
 * RGLEN = Richman Glen  
 * RICHM = Richman  
 * ROCKF = Rockford Hills  
 * RTRAK = Redwood Lights Track  
 * SANAND = San Andreas  
 * SANCHIA = San Chianski Mountain Range  
 * SANDY = Sandy Shores  
 * SKID = Mission Row  
 * SLAB = Stab City  
 * STAD = Maze Bank Arena  
 * STRAW = Strawberry  
 * TATAMO = Tataviam Mountains  
 * TERMINA = Terminal  
 * TEXTI = Textile City  
 * TONGVAH = Tongva Hills  
 * TONGVAV = Tongva Valley  
 * VCANA = Vespucci Canals  
 * VESP = Vespucci  
 * VINE = Vinewood  
 * WINDF = Ron Alternates Wind Farm  
 * WVINE = West Vinewood  
 * ZANCUDO = Zancudo River  
 * ZP_ORT = Port of South Los Santos  
 * ZQ_UAR = Davis Quartz  
 * ```
 * @param zoneName - 
 * @returns number
 * @remarks Hash: 0x98CD1D2934B76CC1
 */
export function getZoneFromNameId(zoneName: string): number;

/**
 * Performs the same type of trace as START_SHAPE_TEST_CAPSULE, but with some different hardcoded parameters.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param radius - 
 * @param flags - 
 * @param entity - 
 * @param p9 - 
 * @returns number
 * @remarks Hash: 0xE6AC6C45FBE83004
 */
export function startShapeTestSweptSphere(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entity: number, p9: number): number;

/**
 * Asynchronously starts a line-of-sight (raycast) world probe shape test.
 * 
 * ```c
 * enum eTraceFlags
 * {
 *   None = 0,
 *   IntersectWorld = 1,
 *   IntersectVehicles = 2,
 *   IntersectPeds = 4,
 *   IntersectRagdolls = 8,
 *   IntersectObjects = 16,
 *   IntersectPickup = 32,
 *   IntersectGlass = 64,
 *   IntersectRiver = 128,
 *   IntersectFoliage = 256,
 * 
 *   IntersectEverything = 511
 * }
 * ```
 * 
 * ```c
 * enum eTraceOptionFlags
 * {
 *   None = 0,
 *   OptionIgnoreGlass = 1,
 *   OptionIgnoreSeeThrough = 2,
 *   OptionIgnoreNoCollision = 4,
 * 
 *   OptionDefault = 7
 * }
 * ```
 * 
 * NOTE: Raycasts that intersect with mission_entites (flag = 2) has limited range and will not register for far away entites. The range seems to be about 30 metres.  
 * 
 * Use the handle with [GET_SHAPE_TEST_RESULT](#_0x3D87450E15D98694) or [GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL](#_0x65287525D951F6BE) until it returns 0 or 2.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param traceFlags - 
 * @param entity - 
 * @param optionFlags - 
 * @returns number
 * @remarks Hash: 0x7EE9F5D83DD4F90E
 */
export function startShapeTestLosProbe(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, traceFlags: number, entity: number, optionFlags: number): number;

/**
 * Raycast from point to point, where the ray has a radius.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param radius - 
 * @param flags - 
 * @param entity - 
 * @param p9 - 
 * @returns number
 * @remarks Hash: 0x28579D1B8F8AAC80
 */
export function startShapeTestCapsule(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entity: number, p9: number): number;

/**
 * See [`START_SHAPE_TEST_LOS_PROBE`](#_0x7EE9F5D83DD4F90E) for flags.
 * @param entity - 
 * @param flags1 - 
 * @param flags2 - 
 * @returns number
 * @remarks Hash: 0x37181417CE7C8900
 */
export function startShapeTestBound(entity: number, flags1: number, flags2: number): number;

/**
 * Returns the result of a shape test, also returning the material of any touched surface.
 * 
 * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
 * 
 * Unless the return value is 2, the other return values are undefined.
 * @param shapeTestHandle - 
 * @param hit - 
 * @param endCoords - 
 * @param surfaceNormal - 
 * @param materialHash - 
 * @param entityHit - 
 * @returns number
 * @remarks Hash: 0x65287525D951F6BE
 */
export function getShapeTestResultIncludingMaterial(shapeTestHandle: number, hit: number, endCoords: { x: number, y: number, z: number }, surfaceNormal: { x: number, y: number, z: number }, materialHash: number, entityHit: number): number;

/**
 * See [`START_SHAPE_TEST_LOS_PROBE`](#_0x7EE9F5D83DD4F90E) for flags.
 * @param entity - 
 * @param flags1 - 
 * @param flags2 - 
 * @returns number
 * @remarks Hash: 0x052837721A854EC7
 */
export function startShapeTestBoundingBox(entity: number, flags1: number, flags2: number): number;

/**
 * Does the same as [START_SHAPE_TEST_LOS_PROBE](#_0x7EE9F5D83DD4F90E), except blocking until the shape test completes.
 * 
 * Use [START_SHAPE_TEST_LOS_PROBE](#_0x7EE9F5D83DD4F90E) instead. Literally. Rockstar named this correctly: it's expensive, and it's synchronous.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param flags - 
 * @param entity - 
 * @param p8 - 
 * @returns number
 * @remarks Hash: 0x377906D8A31E5586
 */
export function startExpensiveSynchronousShapeTestLosProbe(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, entity: number, p8: number): number;

/**
 * Since it is only used in the PC version, likely some mouse-friendly shape test. Uses
 * @param pVec1 - 
 * @param pVec2 - 
 * @param flag - 
 * @param entity - 
 * @param flag2 - 
 * @returns number
 * @remarks Hash: 0xFF6BE494C7987F34
 */
export function StartShapeTestSurroundingCoords(pVec1: { x: number, y: number, z: number }, pVec2: { x: number, y: number, z: number }, flag: number, entity: number, flag2: number): number;

/**
 * Invalidates the entity handle passed by removing the fwScriptGuid from the entity. This should be used when receiving an
 * ambient entity from shape testing natives, but can also be used for other natives returning an 'irrelevant' entity handle.
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x2B3334BCA57CD799
 */
export function releaseScriptGuidFromEntity(entity: number): void;

/**
 * Returns the result of a shape test.
 * 
 * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
 * 
 * Unless the return value is 2, the other return values are undefined.
 * @param shapeTestHandle - 
 * @param hit - 
 * @param endCoords - 
 * @param surfaceNormal - 
 * @param entityHit - 
 * @returns number
 * @remarks Hash: 0x3D87450E15D98694
 */
export function getShapeTestResult(shapeTestHandle: number, hit: number, endCoords: { x: number, y: number, z: number }, surfaceNormal: { x: number, y: number, z: number }, entityHit: number): number;

/**
 * For more information, see [`START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE`](#_0x377906D8A31E5586) and [`START_SHAPE_TEST_LOS_PROBE`](#_0x7EE9F5D83DD4F90E).
 * @param x - 
 * @param y - 
 * @param z - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param p9 - 
 * @param flags - 
 * @param entity - 
 * @param p12 - 
 * @returns number
 * @remarks Hash: 0xFE466162C4401D18
 */
export function startShapeTestBox(x: number, y: number, z: number, x1: number, y1: number, z1: number, rotX: number, rotY: number, rotZ: number, p9: number, flags: number, entity: number, p12: number): number;

/**
 * ```
 * On accelerating, spins the driven wheels with the others braked, so you don't go anywhere.  
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xFB8794444A7D60FB
 */
export function setVehicleBurnout(vehicle: number, toggle: number): void;

/**
 * ```
 * NativeDB Added Parameter 1: Vehicle vehicle
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @returns void
 * @remarks Hash: 0xDCE97BDF8A0EABC8
 */
export function 0xdce97bdf8a0eabc8(): void;

/**
 * ```
 * Sets a vehicle on the ground on all wheels.  Returns whether or not the operation was successful.  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 2: float p1
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x49733E92263139D1
 */
export function setVehicleOnGroundProperly(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xAEA8FD591FAD4106
 */
export function isPlaybackUsingAiGoingOnForVehicle(vehicle: number): number;

/**
 * ```c
 * enum eVehicleWheelType
 * {
 *     VWT_SPORT = 0,
 *     VWT_MUSCLE = 1,
 *     VWT_LOWRIDER = 2,
 *     VWT_SUV = 3,
 *     VWT_OFFROAD = 4,
 *     VWT_TUNER = 5,
 *     VWT_BIKE = 6,
 *     VWT_HIEND = 7,
 *     // Benny's Original
 *     VWT_SUPERMOD1 = 8,
 *     // Benny's Bespoke
 *     VWT_SUPERMOD2 = 9,
 *     // Open Wheel
 *     VWT_SUPERMOD3 = 10,
 *     // Street
 *     VWT_SUPERMOD4 = 11,
 *     // Track
 *     VWT_SUPERMOD5 = 12,
 * };
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xB3ED1BFB4BE636DC
 */
export function getVehicleWheelType(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0xEAE6DCC7EEE3DB1D
 */
export function setParkedVehicleDensityMultiplierThisFrame(multiplier: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0x2FA9923062DD396C
 */
export function addVehicleStuckCheckWithWarp(p0: any, p1: number, p2: any, p3: number, p4: number, p5: number, p6: any): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x42BC05C27A946054
 */
export function getCurrentPlaybackForVehicle(vehicle: number): number;

/**
 * ```
 * From the driver's perspective, is the right headlight broken.  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xA7ECB73355EB2F20
 */
export function getIsRightVehicleHeadlightDamaged(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param recording - 
 * @returns number
 * @remarks Hash: 0x0E48D1C262390950
 */
export function getTotalDurationOfVehicleRecording(recording: number): number;

/**
 * ```
 * Returns true when in a vehicle, false whilst entering/exiting.  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xAE31E7DF9B5B132E
 */
export function getIsVehicleEngineRunning(vehicle: number): number;

/**
 * Sets the specified door index open on the passed vehicle. See [`IS_VEHICLE_DOOR_FULLY_OPEN`](#_0x3E933CFF7B111C22).
 * @param vehicle - 
 * @param doorIndex - 
 * @param loose - 
 * @param openInstantly - 
 * @returns void
 * @remarks Hash: 0x7C65DAC73C35C862
 */
export function setVehicleDoorOpen(vehicle: number, doorIndex: number, loose: number, openInstantly: number): void;

/**
 * ```
 * Gets the trailer of a vehicle and puts it into the trailer parameter.  
 * ```
 * @param vehicle - 
 * @param trailer - 
 * @returns number
 * @remarks Hash: 0x1CDD6BADC297830D
 */
export function getVehicleTrailerVehicle(vehicle: number, trailer: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE851E480B814D4BA
 */
export function 0xe851e480b814d4ba(vehicle: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param color - 
 * @returns void
 * @remarks Hash: 0x6089CDF6A57F326C
 */
export function SetVehicleDashboardColor(vehicle: number, color: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xAB04325045427AAE
 */
export function 0xab04325045427aae(vehicle: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param speed - 
 * @returns void
 * @remarks Hash: 0x6683AB880E427778
 */
export function setPlaybackSpeed(vehicle: number, speed: number): void;

/**
 * ## Parameters
 * *
 * @param cargobob - 
 * @param vehicle - 
 * @param vehicleBoneIndex - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x4127F1D84E347769
 */
export function attachVehicleToCargobob(cargobob: number, vehicle: number, vehicleBoneIndex: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x28D37D4F71AC5C58
 */
export function getVehicleLayoutHash(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param player - 
 * @returns number
 * @remarks Hash: 0xF6AF6CB341349015
 */
export function getVehicleDoorsLockedForPlayer(vehicle: number, player: number): number;

/**
 * ```
 * Can be used with GET_TOTAL_DURATION_OF_VEHICLE_RECORDING{_ID} to compute a percentage.
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x5746F3A7AB7FE544
 */
export function getTimePositionInRecording(vehicle: number): number;

/**
 * ```
 * Sets the wanted state of this vehicle.  
 * ```
 * @param vehicle - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0xF7EC25A3EBEEC726
 */
export function setVehicleIsWanted(vehicle: number, state: number): void;

/**
 * ## Parameters
 * *
 * @param id - 
 * @param time - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xF0F2103EFAF8CBA7
 */
export function getRotationOfVehicleRecordingIdAtTime(id: number, time: number): { x: number, y: number, z: number };

/**
 * Does not work for vehicle of type: CBike, CBmx, CBoat, CTrain, CSubmarine.
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x3DE51E9C80B116CF
 */
export function IsVehicleParachuteActive(vehicle: number): number;

/**
 * ```
 * Returns the text label of a mod type for a given vehicle  
 * Use _GET_LABEL_TEXT to get the part name in the game's language  
 * ```
 * @param vehicle - 
 * @param modType - 
 * @param modValue - 
 * @returns string
 * @remarks Hash: 0x8935624F8C5592CC
 */
export function getModTextLabel(vehicle: number, modType: number, modValue: number): string;

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#_0x93D9BD300D7789E5)
 * @param veh - 
 * @param doorID - 
 * @returns number
 * @remarks Hash: 0xB8E181E559464527
 */
export function isVehicleDoorDamaged(veh: number, doorID: number): number;

/**
 * ```
 * Retracts the hook on the cargobob.  
 * Note: after you retract it the natives for dropping the hook no longer work  
 * ```
 * @param cargobob - 
 * @returns void
 * @remarks Hash: 0x9768CF648F54C804
 */
export function removePickUpRopeForCargobob(cargobob: number): void;

/**
 * ```
 * SET_VEHICLE_D*
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x4E20D2A627011E8E
 */
export function SetVehicleDamageModifier(vehicle: number, p1: number): any;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x6325D1A044AE510D
 */
export function getVehicleModKit(vehicle: number): number;

/**
 * ```
 * Sets the turn signal enabled for a vehicle.  
 * Set turnSignal to 1 for left light, 0 for right light.  
 * ```
 * @param vehicle - 
 * @param turnSignal - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB5D45264751B7DF0
 */
export function setVehicleIndicatorLights(vehicle: number, turnSignal: number, toggle: number): void;

/**
 * ```
 * From the driver's perspective, is the left headlight broken.  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x5EF77C9ADD3B11A3
 */
export function getIsLeftVehicleHeadlightDamaged(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns number
 * @remarks Hash: 0x61E1DD6125A3EEE6
 */
export function isAnyVehicleNearPoint(x: number, y: number, z: number, radius: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param health - 
 * @returns void
 * @remarks Hash: 0xFE205F38AAA58E5B
 */
export function SetHeliTailRotorHealth(vehicle: number, health: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xF7F203E31F96F6A1
 */
export function isSeatWarpOnly(vehicle: number): number;

/**
 * ```
 * Only called once inside main_persitant with the parameters, 0  
 * ```
 * @param trackIndex - 
 * @param frequency - 
 * @returns void
 * @remarks Hash: 0x21973BBF8D17EDFA
 */
export function setTrainTrackSpawnFrequency(trackIndex: number, frequency: number): void;

/**
 * ```
 * Finds the vehicle that is carrying this entity with a handler frame.
 * The model of the entity must be prop_contr_03b_ld or the function will return 0.
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x375E7FC44F21C8AB
 */
export function FindVehicleCarryingThisEntity(entity: number): number;

/**
 * Queries whether the control panels of a plane are intact. This native is used to determine the operational status of a plane's cockpit controls, which can affect the plane's flyability.
 * @param vehicle - 
 * @param checkForZeroHealth - 
 * @returns number
 * @remarks Hash: 0xF78F94D60248C737
 */
export function arePlaneControlPanelsIntact(vehicle: number, checkForZeroHealth: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xFC40CBF7B90CA77C
 */
export function setCarBootOpen(vehicle: number): void;

/**
 * ```
 * It switch to highbeam when p1 is set to true.  
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x8B7FD87F0DDB421E
 */
export function setVehicleFullbeam(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x465BF26AB9684352
 */
export function setDisableVehiclePetrolTankFires(vehicle: number, toggle: number): void;

/**
 * ```
 * Returns an int  
 * Vehicle Classes:  
 * 0: Compacts  
 * 1: Sedans  
 * 2: SUVs  
 * 3: Coupes  
 * 4: Muscle  
 * 5: Sports Classics  
 * 6: Sports  
 * 7: Super  
 * 8: Motorcycles  
 * 9: Off-road  
 * 10: Industrial  
 * 11: Utility  
 * 12: Vans  
 * 13: Cycles  
 * 14: Boats  
 * 15: Helicopters  
 * 16: Planes  
 * 17: Service  
 * 18: Emergency  
 * 19: Military  
 * 20: Commercial  
 * 21: Trains  
 * 22: Open Wheel
 * char buffer[128];  
 * std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS(vehicle));  
 * char* className = UI::_GET_LABEL_TEXT(buffer);  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x29439776AAA00A62
 */
export function getVehicleClass(vehicle: number): number;

/**
 * Usex in decompiled scripts in combination with [`_GET_VEHICLE_SUSPENSION_BOUNDS`](#_0xDF7E3EEB29642C38).
 * 
 * NativeDB Introduced: v1180
 * 
 * ```
 * // Example from fm_bj_race_controller.c
 * if (!VEHICLE::_0x51F30DB60626A20E(uParam0->f_26, uParam0->f_12.f_3, uParam0->f_12, 2, 1) && !func_282(uParam0->f_6))
 * {
 *     VEHICLE::_GET_VEHICLE_SUSPENSION_BOUNDS(*uParam0, &vVar15, &uVar16);
 *     VEHICLE::_GET_VEHICLE_SUSPENSION_BOUNDS(uParam0->f_26, &vVar17, &uVar18);
 *     fVar19 = SYSTEM::VDIST2(0f, 0f, vVar15.z, 0f, 0f, vVar17.z);
 *     uParam0->f_12.f_3.f_2 = (uParam0->f_12.f_3.f_2 + fVar19);
 *     if (!VEHICLE::_0x51F30DB60626A20E(uParam0->f_26, uParam0->f_12.f_3, uParam0->f_12, 2, 1))
 *     {
 *         uParam0->f_12.f_3 = { uParam0->f_6 };
 *         uParam0->f_12 = { uParam0->f_9 };
 *     }
 * }
 * ```
 * @param vehicle - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param p7 - 
 * @param p8 - 
 * @returns number
 * @remarks Hash: 0x51F30DB60626A20E
 */
export function 0x51f30db60626a20e(vehicle: number, x: number, y: number, z: number, rotX: number, rotY: number, rotZ: number, p7: number, p8: any): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x9BDDC73CC6A115D4
 */
export function 0x9bddc73cc6a115d4(vehicle: number, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x62CA17B74C435651
 */
export function isAnyEntityAttachedToHandlerFrame(vehicle: number): number;

/**
 * ```
 * returns a string which is the codename of the vehicle's currently selected primary color  
 * p1 is always 0  
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @returns string
 * @remarks Hash: 0xB45085B721EFD38C
 */
export function getVehicleModColor1Name(vehicle: number, p1: number): string;

/**
 * Last named native above this one is `TRACK_VEHICLE_VISIBILITY` and first named native below is `UNCUFF_PED`. 
 * Unknown what it does, couldn't find good examples in the decompiled scripts.
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns any
 * @remarks Hash: 0x725012A415DBA050
 */
export function 0x725012a415dba050(p0: any, p1: any, p2: any): any;

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#_0x93D9BD300D7789E5)
 * @param vehicle - 
 * @param doorIndex - 
 * @param forceClose - 
 * @param lock - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xA5A9653A8D2CAF48
 */
export function setVehicleDoorLatched(vehicle: number, doorIndex: number, forceClose: number, lock: number, p4: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param plateText - 
 * @returns void
 * @remarks Hash: 0x95A88F0B409CDA47
 */
export function setVehicleNumberPlateText(vehicle: number, plateText: string): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param front - 
 * @returns number
 * @remarks Hash: 0x468056A6BB6F3846
 */
export function isVehicleBumperBrokenOff(vehicle: number, front: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param angle - 
 * @returns void
 * @remarks Hash: 0x9AA47FFF660CB932
 */
export function setVehicleFlightNozzlePositionImmediate(vehicle: number, angle: number): void;

/**
 * See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#_0x46E571A0E20D01F1).
 * @param vehicle - 
 * @param windowIndex - 
 * @returns void
 * @remarks Hash: 0x602E548F46E24D59
 */
export function rollUpWindow(vehicle: number, windowIndex: number): void;

/**
 * @returns void
 * @remarks Hash: 0xAA3F739ABDDCF21F
 */
export function ClearVehiclePhoneExplosiveDevice(): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x84436EC293B1415F
 */
export function setRandomBoats(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param active - 
 * @returns void
 * @remarks Hash: 0x81E1552E35DC3839
 */
export function SetVehicleRocketBoostActive(vehicle: number, active: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB68CFAF83A02768D
 */
export function 0xb68cfaf83a02768d(vehicle: number, toggle: number): void;

/**
 * ```
 * Deletes a vehicle.  
 * The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);  
 * eg how to use:  
 * SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);  
 * DELETE_VEHICLE(&vehicle);  
 * Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.  
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xEA386986E786A54F
 */
export function deleteVehicle(vehicle: number): void;

/**
 * ```
 * GET_VEHICLE_MODEL_*
 * 9.8 * thrust if air vehicle, else 0.38 + drive force?
 * ```
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x53409B5163D5B846
 */
export function GetVehicleModelEstimatedAgility(modelHash: number): number;

/**
 * Sets whether the vehicle's lights can be broken.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1AA8A837D2169D94
 */
export function setVehicleHasUnbreakableLights(vehicle: number, toggle: number): void;

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#_0x93D9BD300D7789E5)
 * @param vehicle - 
 * @param doorIndex - 
 * @param deleteDoor - 
 * @returns void
 * @remarks Hash: 0xD4D4F6A4AB575A33
 */
export function setVehicleDoorBroken(vehicle: number, doorIndex: number, deleteDoor: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x28B18377EB6E25F6
 */
export function SetHydraulicRaised(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x1312DDD8385AEE4E
 */
export function 0x1312ddd8385aee4e(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x6D6AF961B72728AE
 */
export function clearVehicleRouteHistory(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param cargobob - 
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x0E21D3DF1051399D
 */
export function detachVehicleFromCargobob(cargobob: number, vehicle: number): void;

/**
 * ```
 * p1 is always 0  
 * ```
 * @param train - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xBBE7648349B49BE8
 */
export function setMissionTrainAsNoLongerNeeded(train: number, p1: number): void;

/**
 * ```
 * Max value is 32767
 * ```
 * @param vehicle - 
 * @param range - 
 * @returns void
 * @remarks Hash: 0x79DF7E806202CE01
 */
export function setVehicleExtendedRemovalRange(vehicle: number, range: number): void;

/**
 * ```
 * Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.  
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x31B927BBC44156CD
 */
export function setVehicleIsConsideredByPlayer(vehicle: number, toggle: number): void;

/**
 * Enables spawning random trains on the preset tracks. 
 * 
 * Requires [`SWITCH_TRAIN_TRACK`](#_0xFD813BB7DB977F20) and [`SET_TRAIN_TRACK_SPAWN_FREQUENCY`](#_0x21973BBF8D17EDFA) to be set.
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x80D9F74197EA47D9
 */
export function setRandomTrains(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xA7C4F2C6E744A550
 */
export function getVehicleMaxNumberOfPassengers(vehicle: number): number;

/**
 * ```
 * For a full enum, see here : pastebin.com/i2GGAjY0
 * char buffer[128];
 * std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS_FROM_NAME (hash));
 * const char* className = HUD::_GET_LABEL_TEXT(buffer);
 * ```
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0xDEDF1C8BD47C2200
 */
export function getVehicleClassFromName(modelHash: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x1DA0DA9CB3F0C8BF
 */
export function GetIsWheelsLoweredStateActive(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xC53EB42A499A7E90
 */
export function removeVehicleUpsidedownCheck(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x0EE21293DAD47C95
 */
export function getVehicleWindowTint(vehicle: number): number;

/**
 * Enables or disables the ability for a helicopter's tail boom to break off.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param heli - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x3EC8BF18AA453FE9
 */
export function setHeliTailBoomCanBreakOff(heli: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x8ABA6AF54B942B95
 */
export function setVehicleUndriveable(vehicle: number, toggle: number): void;

/**
 * Despite its name, this works on Helicopters and Planes.
 * 
 * Sets the speed of the helicopter blades to full speed.
 * 
 * This is equivalent to calling `SetHeliBladesSpeed(vehicleHandle, 1.0);`
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xA178472EBB8AE60D
 */
export function setHeliBladesFullSpeed(vehicle: number): void;

/**
 * Transforms the `stormberg` to its "water vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
 * @param vehicle - 
 * @param instantly - 
 * @returns void
 * @remarks Hash: 0xBE4C854FFDB6EEBE
 */
export function transformToSubmarine(vehicle: number, instantly: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0x0D5F65A8F4EBDAB5
 */
export function setCargobobPickupRopeType(vehicle: number, state: number): void;

/**
 * ```
 * Adds some kind of shadow to the vehicle.
 * -1 disables the effect.
 * DISABLE_*
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xF0E4BA16D1DB546C
 */
export function SetVehicleShadowEffect(vehicle: number, p1: number, p2: number): void;

/**
 * Set a specific offset for helis chasing target in combat
 * 
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param vehicle - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x0A3F820A9A9A9AC5
 */
export function setHeliCombatOffset(vehicle: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns void
 * @remarks Hash: 0xB64CF2CCA9D95F52
 */
export function getVehicleCustomPrimaryColour(vehicle: number, r: number, g: number, b: number): void;

/**
 * Use [_SET_VEHICLE_HEADLIGHTS_COLOUR](#_0xE41033B25D003A07) to set the headlights color for the vehicle.
 * 
 * You must enable xenon headlights for this native to work properly.
 * 
 * ```c
 * enum eHeadlightColors {
 *     Default = 255,
 *     White = 0,
 *     Blue = 1,
 *     ElectricBlue = 2,
 *     MintGreen = 3,
 *     LimeGreen = 4,
 *     Yellow = 5,
 *     GoldenShower = 6,
 *     Orange = 7,
 *     Red = 8,
 *     PonyPink = 9,
 *     HotPink = 10,
 *     Purple = 11,
 *     Blacklight = 12
 * }
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x3DFF319A831E0CDB
 */
export function GetVehicleXenonLightsColor(vehicle: number): number;

/**
 * ```
 * If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives  
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x3E8C8727991A8A0B
 */
export function setVehicleStrong(vehicle: number, toggle: number): void;

/**
 * Enables individual propeller on a propeller plane. This native is the inverse of [`DISABLE_INDIVIDUAL_PLANE_PROPELLER`](#_0x500873A45724C863).
 * 
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param plane - 
 * @param propeller - 
 * @returns void
 * @remarks Hash: 0xDC05D2777F855F44
 */
export function EnableIndividualPlanePropeller(plane: number, propeller: number): void;

/**
 * ```
 * in the decompiled scripts, seems to be always called on the vehicle right after being attached to a trailer.
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x95CF53B3D687F9FA
 */
export function setTrailerLegsRaised(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x02398B627547189C
 */
export function setVehicleHasBeenDrivenFlag(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x89F149B6131E57DA
 */
export function setVehicleGravity(vehicle: number, toggle: number): void;

/**
 * ```c
 * // eVehicleModType values modified to conform to script native reorganization (see 0x140D25327 in 1604).
 * enum eVehicleModType
 * {
 * 	VMT_SPOILER = 0,
 * 	VMT_BUMPER_F = 1,
 * 	VMT_BUMPER_R = 2,
 * 	VMT_SKIRT = 3,
 * 	VMT_EXHAUST = 4,
 * 	VMT_CHASSIS = 5,
 * 	VMT_GRILL = 6,
 * 	VMT_BONNET = 7,
 * 	VMT_WING_L = 8,
 * 	VMT_WING_R = 9,
 * 	VMT_ROOF = 10,
 * 	VMT_ENGINE = 11,
 * 	VMT_BRAKES = 12,
 * 	VMT_GEARBOX = 13,
 * 	VMT_HORN = 14,
 * 	VMT_SUSPENSION = 15,
 * 	VMT_ARMOUR = 16,
 * 	VMT_NITROUS = 17,
 * 	VMT_TURBO = 18,
 * 	VMT_SUBWOOFER = 19,
 * 	VMT_TYRE_SMOKE = 20,
 * 	VMT_HYDRAULICS = 21,
 * 	VMT_XENON_LIGHTS = 22,
 * 	VMT_WHEELS = 23,
 * 	VMT_WHEELS_REAR_OR_HYDRAULICS = 24,
 * 	VMT_PLTHOLDER = 25,
 * 	VMT_PLTVANITY = 26,
 * 	VMT_INTERIOR1 = 27,
 * 	VMT_INTERIOR2 = 28,
 * 	VMT_INTERIOR3 = 29,
 * 	VMT_INTERIOR4 = 30,
 * 	VMT_INTERIOR5 = 31,
 * 	VMT_SEATS = 32,
 * 	VMT_STEERING = 33,
 * 	VMT_KNOB = 34,
 * 	VMT_PLAQUE = 35,
 * 	VMT_ICE = 36,
 * 	VMT_TRUNK = 37,
 * 	VMT_HYDRO = 38,
 * 	VMT_ENGINEBAY1 = 39,
 * 	VMT_ENGINEBAY2 = 40,
 * 	VMT_ENGINEBAY3 = 41,
 * 	VMT_CHASSIS2 = 42,
 * 	VMT_CHASSIS3 = 43,
 * 	VMT_CHASSIS4 = 44,
 * 	VMT_CHASSIS5 = 45,
 * 	VMT_DOOR_L = 46,
 * 	VMT_DOOR_R = 47,
 * 	VMT_LIVERY_MOD = 48,
 * 	VMT_LIGHTBAR = 49,
 * };
 * ```
 * @param vehicle - 
 * @param modType - 
 * @param modIndex - 
 * @param customTires - 
 * @returns void
 * @remarks Hash: 0x6AF0636DDEDCB6DD
 */
export function setVehicleMod(vehicle: number, modType: number, modIndex: number, customTires: number): void;

/**
 * @returns void
 * @remarks Hash: 0x0F87E938BDF29D66
 */
export function stopAllGarageActivity(): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x786A4EB67B01BF0B
 */
export function explodeVehicleInCutscene(vehicle: number, p1: number): void;

/**
 * Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
 * Radius of effect damage applied in a sphere at impact location
 * When `focusOnModel` set to `true`, the damage sphere will travel towards the vehicle from the given point, thus guaranteeing an impact
 * @param vehicle - 
 * @param xOffset - 
 * @param yOffset - 
 * @param zOffset - 
 * @param damage - 
 * @param radius - 
 * @param focusOnModel - 
 * @returns void
 * @remarks Hash: 0xA1DD317EA8FD4F29
 */
export function setVehicleDamage(vehicle: number, xOffset: number, yOffset: number, zOffset: number, damage: number, radius: number, focusOnModel: number): void;

/**
 * ```
 * To check if the model is an amphibious car, see gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-33#entry1069317363 (for build 944 and above only!)  
 * ```
 * @param model - 
 * @returns number
 * @remarks Hash: 0x7F6DB52EEFC96DF8
 */
export function isThisModelACar(model: number): number;

/**
 * Sets the anchor state for a boat.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param boat - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x75DBEC174AEEAD10
 */
export function setBoatAnchor(boat: number, toggle: number): void;

/**
 * ```
 * Also includes some "turnOffBones" when vehicle mods are installed.
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x42A4BEB35D372407
 */
export function GetVehicleNumberOfBrokenOffBones(vehicle: number): number;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x211E95CE9903940C
 */
export function SetDisableVehicleUnk2(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2E0A74E1002380B1
 */
export function setVehicleTimedExplosion(vehicle: number, ped: number, toggle: number): void;

/**
 * Gets hash related to task happening with seat index
 * Native name: GET_I*
 * @param vehicle - 
 * @param seatIndex - 
 * @returns number
 * @remarks Hash: 0xA01BC64DD4BFBBAC
 */
export function 0xa01bc64dd4bfbbac(vehicle: number, seatIndex: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param modType - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x758F49C24925568A
 */
export function preloadVehicleMod(p0: any, modType: number, p2: any): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param vehicle - 
 * @param propeller - 
 * @returns void
 * @remarks Hash: 0x500873A45724C863
 */
export function disableIndividualPlanePropeller(vehicle: number, propeller: number): void;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns void
 * @remarks Hash: 0xCAA15F13EBD417FF
 */
export function setNumberOfParkedVehicles(value: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xC0ED6438E6D39BA8
 */
export function 0xc0ed6438e6d39ba8(p0: any, p1: any, p2: any): void;

/**
 * Checks whether the specified boat vehicle is capsized, meaning it has overturned or is upside down in the water.
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xBA91D045575699AD
 */
export function getIsBoatCapsized(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param color - 
 * @returns void
 * @remarks Hash: 0xB7635E80A5C31BFF
 */
export function GetVehicleDashboardColor(vehicle: number, color: number): void;

/**
 * ## Parameters
 * *
 * @param id - 
 * @param time - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x92523B76657A517D
 */
export function getPositionOfVehicleRecordingIdAtTime(id: number, time: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x428BACCDF5E26EAD
 */
export function setVehicleCanSaveInGarage(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicleClass - 
 * @returns number
 * @remarks Hash: 0x2F83E7E45D9EA7AE
 */
export function getVehicleClassMaxAcceleration(vehicleClass: number): number;

/**
 * Returns the display name/text label (`gameName` in `vehicles.meta`) for the specified vehicle model.
 * @param modelHash - 
 * @returns string
 * @remarks Hash: 0xB215AAC32D25D019
 */
export function getDisplayNameFromVehicleModel(modelHash: number): string;

/**
 * ```
 * makes the train all jumbled up and derailed as it moves on the tracks (though that wont stop it from its normal operations)  
 * ```
 * @param train - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x317B11A312DF5534
 */
export function setRenderTrainAsDerailed(train: number, toggle: number): void;

/**
 * Refer to [GET_VEHICLE_WHEEL_TYPE](#_0xB3ED1BFB4BE636DC) for wheel types.
 * @param vehicle - 
 * @param wheelType - 
 * @returns void
 * @remarks Hash: 0x487EB21CC7295BA1
 */
export function setVehicleWheelType(vehicle: number, wheelType: number): void;

/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x203B527D1B77904C
 */
export function SetVehicleDoorsLockedForUnk(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xE7CF3C4F9F489F0C
 */
export function isVehicleAttachedToTrailer(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x97CE68CB032583F0
 */
export function setForceHdVehicle(vehicle: number, toggle: number): void;

/**
 * ```
 * Locks the vehicle's steering to the desired angle, explained below.  
 * Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.  
 * Steer bias:  
 * -1.0 = full right  
 * 0.0 = centered steering  
 * 1.0 = full left  
 * ```
 * @param vehicle - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x42A8EC77D5150CBE
 */
export function setVehicleSteerBias(vehicle: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param percentage - 
 * @returns void
 * @remarks Hash: 0xFEB2DDED3509562E
 */
export function SetVehicleRocketBoostPercentage(vehicle: number, percentage: number): void;

/**
 * ```
 * SET_VEHICLE_AL*
 * ```
 * @param vehicle - 
 * @param canBeLockedOn - 
 * @param unk - 
 * @returns void
 * @remarks Hash: 0x1DDA078D12879EEE
 */
export function SetVehicleCanBeLockedOn(vehicle: number, canBeLockedOn: number, unk: number): void;

/**
 * ```
 * Inverts vehicle's controls. So INPUT_VEH_ACCELERATE will be INPUT_VEH_BRAKE and vise versa (same for A/D controls)
 * Doesn't work for planes/helis.
 * ```
 * @param vehicle - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0x5B91B229243351A8
 */
export function SetVehicleControlsInverted(vehicle: number, state: number): void;

/**
 * ```
 * Only used for wheels(ModType = 23/24) Returns true if the wheels are custom wheels
 * ```
 * @param vehicle - 
 * @param modType - 
 * @returns number
 * @remarks Hash: 0xB3924ECD70E095DC
 */
export function getVehicleModVariation(vehicle: number, modType: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x99AD4CCCB128CBC9
 */
export function addVehiclePhoneExplosiveDevice(vehicle: number): void;

/**
 * ```
 * 0.0 = Lowest 1.0 = Highest. This is best to be used if you wanna pick-up a car since un-realistically on GTA V forklifts can't pick up much of anything due to vehicle mass. If you put this under a car then set it above 0.0 to a 'lifted-value' it will raise the car with no issue lol
 * ```
 * @param vehicle - 
 * @param height - 
 * @returns void
 * @remarks Hash: 0x37EBBF3117BD6A25
 */
export function setForkliftForkHeight(vehicle: number, height: number): void;

/**
 * ## Parameters
 * *
 * @param model - 
 * @returns number
 * @remarks Hash: 0x633F6F44A537EBB6
 */
export function IsThisModelAnAmphibiousCar(model: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xAE3FEE8709B39DCB
 */
export function 0xae3fee8709b39dcb(vehicle: number): number;

/**
 * ```
 * <1.0 - Decreased torque
 * =1.0 - Default torque
 * >1.0 - Increased torque
 * Negative values will cause the vehicle to go backwards instead of forwards while accelerating.
 * value - is between 0.2 and 1.8 in the decompiled scripts.
 * This needs to be called every frame to take effect.
 * ```
 * @param vehicle - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xB59E4BD37AE292DB
 */
export function setVehicleCheatPowerIncrease(vehicle: number, value: number): void;

/**
 * ```
 * Returns max speed (without mods) of the specified vehicle model in m/s.
 * ```
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0xF417C2502FFFED43
 */
export function getVehicleModelEstimatedMaxSpeed(modelHash: number): number;

/**
 * ## Parameters
 * *
 * @param plane - 
 * @returns number
 * @remarks Hash: 0x5991A01434CE9677
 */
export function ArePlaneWingsIntact(plane: number): number;

/**
 * ```
 * SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
 * ```
 * @param vehicle - 
 * @param time - 
 * @returns void
 * @remarks Hash: 0x9438F7AD68771A20
 */
export function skipTimeInPlaybackRecordedVehicle(vehicle: number, time: number): void;

/**
 * ```
 * what does this do?  
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xCFD778E7904C255E
 */
export function 0xcfd778e7904c255e(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x9BECD4B9FEF3F8A6
 */
export function 0x9becd4b9fef3f8a6(vehicle: number, p1: number): void;

/**
 * ```
 * Tested on the player's current vehicle. Unless you kill the driver, the vehicle doesn't loose control, however, if enabled, explodeOnImpact is still active. The moment you crash, boom.  
 * ```
 * @param vehicle - 
 * @param killDriver - 
 * @param explodeOnImpact - 
 * @returns void
 * @remarks Hash: 0xF19D095E42D430CC
 */
export function setVehicleOutOfControl(vehicle: number, killDriver: number, explodeOnImpact: number): void;

/**
 * Returns the plates a vehicle has.
 * 
 * ```c
 * enum eVehiclePlateType
 * {
 * 	VPT_FRONT_AND_BACK_PLATES = 0,
 * 	VPT_FRONT_PLATES = 1,
 * 	VPT_BACK_PLATES = 2,
 * 	VPT_NONE = 3,
 * };
 * ```
 * 
 * Motorcycles with no visible plates will sometimes return a 2 for unknown reasons.
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x9CCC9525BF2408E0
 */
export function getVehiclePlateType(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x1C8A4C2C19E68EEC
 */
export function isPlaybackGoingOnForVehicle(vehicle: number): number;

/**
 * Calling this native will keep a vehicle's engine running after exiting.
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB8FBC8B1330CA9B4
 */
export function setVehicleKeepEngineOnWhenAbandoned(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xACFB2463CC22BED2
 */
export function setLastDrivenVehicle(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x92922A607497B14D
 */
export function GetNumberOfVehicleDoors(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0xBFBA3BA79CFF7EBF
 */
export function getVehicleModelMaxBrakingMaxMods(modelHash: number): number;

/**
 * This native checks if the given vehicle is stopped at a red or amber traffic light junction, provided the driver's personality is set to not run amber lights.
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x2959F696AE390A99
 */
export function isVehicleStoppedAtTrafficLights(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE6F13851780394DA
 */
export function setHeliTurbulenceScalar(vehicle: number, p1: number): void;

/**
 * Used to delete mission trains created with [`CREATE_MISSION_TRAIN`](#_0x63C6CCA8E68AE8C8).
 * @param train - 
 * @returns void
 * @remarks Hash: 0x5B76B14AE875C795
 */
export function deleteMissionTrain(train: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xE495D1EF4C91FD20
 */
export function getVehicleCauseOfDestruction(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x55E1D2758F34E437
 */
export function clearVehicleCustomPrimaryColour(vehicle: number): void;

/**
 * ```
 * Stops CTaskBringVehicleToHalt
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x7C06330BFDDA182E
 */
export function StopBringVehicleToHalt(vehicle: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x5AC79C98C5C17F05
 */
export function SetDriftTyresEnabled(vehicle: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xAD464F2E18836BFC
 */
export function IsMissionTrain(vehicle: number): number;

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#_0x93D9BD300D7789E5)
 * @param vehicle - 
 * @param doorIndex - 
 * @param speed - 
 * @param angle - 
 * @returns void
 * @remarks Hash: 0xF2BFA0430F0A0FCB
 */
export function setVehicleDoorControl(vehicle: number, doorIndex: number, speed: number, angle: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x107A473D7A6647A9
 */
export function 0x107a473d7a6647a9(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x634148744F385576
 */
export function isHeliLandingAreaBlocked(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x796A877E459B99EA
 */
export function 0x796a877e459b99ea(p0: any, p1: number, p2: number, p3: number): void;

/**
 * ```
 * Allows creation of CEventShockingPlaneFlyby, CEventShockingHelicopterOverhead, and other(?) Shocking events
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x279D50DE5652D935
 */
export function setVehicleGeneratesEngineShockingEvents(vehicle: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xAE71FB656C600587
 */
export function HideVehicleTombstone(vehicle: number, toggle: number): void;

/**
 * Returns true when the bomb bay doors of this plane are open. False if they're closed.
 * @param aircraft - 
 * @returns number
 * @remarks Hash: 0xD0917A423314BBA8
 */
export function AreBombBayDoorsOpen(aircraft: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xBB2333BB87DDD87F
 */
export function 0xbb2333bb87ddd87f(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param vehicle - 
 * @param outIndex - 
 * @returns number
 * @remarks Hash: 0xB09D25E77C33EB3F
 */
export function IsPedExclusiveDriverOfVehicle(ped: number, vehicle: number, outIndex: number): number;

/**
 * Enables or disables the opening of a vehicle's rear doors in the event of a sticky bomb explosion. This native is effective for armored vehicles, such as the Stockade (Brinks vehicle), allowing the rear doors to be opened through controlled explosions, which might otherwise remain locked due to the vehicle nature.
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1B212B26DD3C04DF
 */
export function setOpenRearDoorsOnExplosion(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xE16142B94664DEFD
 */
export function setPlaneResistToExplosion(vehicle: number, toggle: number): void;

/**
 * Retrieves a static value representing the maximum drive force of specific a vehicle, including any vehicle mods. This value does not change dynamically during gameplay. This value provides an approximation and should be considered alongside other performance metrics like top speed for a more comprehensive understanding of the vehicle's capabilities.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x5DD35C8D074E57AE
 */
export function getVehicleAcceleration(vehicle: number): number;

/**
 * Returns a number of available rooftop liveries, or -1 if vehicle has no rooftop liveries available.
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x5ECB40269053C0D4
 */
export function GetVehicleRoofLiveryCount(vehicle: number): number;

/**
 * ```
 * Seems related to vehicle health, like the one in IV.  
 * Max 1000, min 0.  
 * Vehicle does not necessarily explode or become undrivable at 0.  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xF271147EB7B40F12
 */
export function getVehicleBodyHealth(vehicle: number): number;

/**
 * ```
 * Related to monster trucks in native scripts.
 * ```
 * 
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2970EAA18FD5E42F
 */
export function SetVehicleWheelsDealDamage(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xEFC13B1CE30D755D
 */
export function SetVehicleRampLaunchModifier(vehicle: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param weaponSlot - 
 * @returns void
 * @remarks Hash: 0x86B4B6212CB8B627
 */
export function SetVehicleWeaponsDisabled(vehicle: number, weaponSlot: number): void;

/**
 * ## Parameters
 * *
 * @param vehicleClass - 
 * @returns number
 * @remarks Hash: 0xDBC86D85C5059461
 */
export function getVehicleClassMaxTraction(vehicleClass: number): number;

/**
 * ## Parameters
 * *
 * @param model - 
 * @returns number
 * @remarks Hash: 0xDCE4334788AF94EA
 */
export function isThisModelAHeli(model: number): number;

/**
 * Similar to [`_SET_AIRCRAFT_BOMB_COUNT`](#_0xF4B2ED59DEB5D774), this sets the amount of countermeasures that are present on this vehicle.
 * 
 * Use [`_GET_AIRCRAFT_COUNTERMEASURE_COUNT`](#_0xF846AA63DF56B804) to get the current amount.
 * @param aircraft - 
 * @param count - 
 * @returns void
 * @remarks Hash: 0x9BDA23BF666F0855
 */
export function SetVehicleCountermeasureCount(aircraft: number, count: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x6501129C9E0FFA05
 */
export function 0x6501129c9e0ffa05(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x8386BFB614D06749
 */
export function removeVehicleStuckCheck(vehicle: number): void;

/**
 * ```
 * 1000 is max health  
 * Begins leaking gas at around 650 health  
 * ```
 * @param vehicle - 
 * @param health - 
 * @returns void
 * @remarks Hash: 0x70DB57649FA8D0D8
 */
export function setVehiclePetrolTankHealth(vehicle: number, health: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param scalar - 
 * @returns void
 * @remarks Hash: 0x9007A2F21DC108D4
 */
export function setVehicleSteeringBiasScalar(vehicle: number, scalar: number): void;

/**
 * Only used with the "akula" in the decompiled native scripts.
 * 
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xAEF12960FA943792
 */
export function AreHeliStubWingsDeployed(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x1F25887F3C104278
 */
export function isVehicleHighDetail(vehicle: number): number;

/**
 * ```
 * Appears to return true if the vehicle has any damage, including cosmetically.
 * GET_*
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xBCDC5017D3CE1E9E
 */
export function IsVehicleDamaged(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x9F243D3919F442FE
 */
export function isBigVehicle(vehicle: number): number;

/**
 * Seat indices range from -1 to [`GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS`](#_0xA7C4F2C6E744A550) minus one.
 * 
 * ```c
 * // CTaskExitVehicleSeat::eSeatPosition - 1
 * enum eSeatPosition
 * {
 *     SF_FrontDriverSide = -1,
 *     SF_FrontPassengerSide = 0,
 *     SF_BackDriverSide = 1,
 *     SF_BackPassengerSide = 2,
 *     SF_AltFrontDriverSide = 3,
 *     SF_AltFrontPassengerSide = 4,
 *     SF_AltBackDriverSide = 5,
 *     SF_AltBackPassengerSide = 6,
 * };
 * ```
 * 
 * ```
 * NativeDB Added Parameter 3: BOOL isTaskRunning
 * 
 * isTaskRunning = on true the function returns already false while a task on the target seat is running (TASK_ENTER_VEHICLE/TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT) - on false only when a ped is finally sitting in the seat.
 * ```
 * @param vehicle - 
 * @param seatIndex - 
 * @returns number
 * @remarks Hash: 0x22AC59A870E6A669
 */
export function isVehicleSeatFree(vehicle: number, seatIndex: number): number;

/**
 * ```
 * NativeDB Introduced: v3258
 * ```
 * @param vehicleModel - 
 * @returns number
 * @remarks Hash: 0x1423725069EE1D14
 */
export function GetVehicleDrivetrainType(vehicleModel: number): number;

/**
 * Starts or stops the engine on the specified vehicle.
 * From what I've tested when I do this to a helicopter the propellers turn off after the engine has started.
 * @param vehicle - 
 * @param value - 
 * @param instantly - 
 * @param disableAutoStart - 
 * @returns void
 * @remarks Hash: 0x2497C4717C8B881E
 */
export function setVehicleEngineOn(vehicle: number, value: number, instantly: number, disableAutoStart: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x6A973569BA094650
 */
export function 0x6a973569ba094650(vehicle: number, p1: any): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param active - 
 * @returns void
 * @remarks Hash: 0x0BFFB028B3DD0A97
 */
export function SetVehicleParachuteActive(vehicle: number, active: number): void;

/**
 * ```
 * Usually used alongside other vehicle door natives.
 * ```
 * @param vehicle - 
 * @param doorIndex - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x3B458DDB57038F08
 */
export function 0x3b458ddb57038f08(vehicle: number, doorIndex: number, toggle: number): void;

/**
 * ```
 * Reduces grip significantly so it's hard to go anywhere.  
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x222FF6A823D122E2
 */
export function setVehicleReduceGrip(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE5810AC70602F2F5
 */
export function 0xe5810ac70602f2f5(vehicle: number, p1: number): void;

/**
 * ```
 * parachuteModel = 230075693  
 * ```
 * @param vehicle - 
 * @param modelHash - 
 * @returns void
 * @remarks Hash: 0x4D610C6B56031351
 */
export function SetVehicleParachuteModel(vehicle: number, modelHash: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xAB31EF4DE6800CE9
 */
export function 0xab31ef4de6800ce9(p0: any, p1: any): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param vehicle - 
 * @param wheelIndex - 
 * @returns number
 * @remarks Hash: 0x55EAB010FAEE9380
 */
export function GetTyreHealth(vehicle: number, wheelIndex: number): number;

/**
 * ```
 * Hardcoded to not work in multiplayer.  
 * ```
 * @param vehicle - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0x52BBA29D5EC69356
 */
export function setCanResprayVehicle(vehicle: number, state: number): void;

/**
 * ```
 * Returns max number of passengers (including the driver) for the specified vehicle model.
 * ```
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x2AD93716F184EDA4
 */
export function getVehicleModelNumberOfSeats(modelHash: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x5AFEEDD9BB2899D7
 */
export function setVehicleProvidesCover(vehicle: number, toggle: number): void;

/**
 * This native sets whether a specific vehicle influences the player's wanted level when it is involved in an incident that typically triggers a wanted response, such as being marked as a "victim" vehicle.
 * 
 * This is particularly useful when utilizing the wanted system from GTA, and you want to prevent a vehicle from affecting the wanted level when it is stolen. In the decompiled scripts this native is only used to disable the influence of the vehicle on the wanted level.
 * @param vehicle - 
 * @param influenceWantedLevel - 
 * @returns void
 * @remarks Hash: 0x0AD9E8F87FF7C16F
 */
export function setVehicleInfluencesWantedLevel(vehicle: number, influenceWantedLevel: number): void;

/**
 * Gets the amount of bombs that this vehicle has. As far as I know, this does _not_ impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane. 
 * 
 * In decompiled scripts this is used to check if the vehicle has enough bombs before a bomb can be dropped (bombs are dropped by using [`_SHOOT_SINGLE_BULLET_BETWEEN_COORDS_WITH_EXTRA_PARAMS`](#_0xBFE5756E7407064A)). 
 * 
 * Use [`_SET_AIRCRAFT_BOMB_COUNT`](#_0xF4B2ED59DEB5D774) to set the amount of bombs on that vehicle.
 * @param aircraft - 
 * @returns number
 * @remarks Hash: 0xEA12BD130D7569A1
 */
export function GetVehicleBombCount(aircraft: number): number;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x59C3757B3B7408E8
 */
export function 0x59c3757b3b7408e8(vehicle: number, toggle: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param frontBumper - 
 * @returns number
 * @remarks Hash: 0x27B926779DEB502D
 */
export function isVehicleBumperBouncing(vehicle: number, frontBumper: number): number;

/**
 * Gets the color of the neon lights of the specified vehicle.  
 * 
 * See [`_SET_VEHICLE_NEON_LIGHTS_COLOUR`](#_0x8E0A582209A62695) for more information
 * @param vehicle - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns void
 * @remarks Hash: 0x7619EEE8C886757F
 */
export function GetVehicleNeonLightsColour(vehicle: number, r: number, g: number, b: number): void;

/**
 * ## Parameters
 * *
 * @param vehicleGenerator - 
 * @returns number
 * @remarks Hash: 0xF6086BC836400876
 */
export function doesScriptVehicleGeneratorExist(vehicleGenerator: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x54833611C17ABDEA
 */
export function stopPlaybackRecordedVehicle(vehicle: number): void;

/**
 * ```
 * SET_VEHICLE_AL*
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x7D6F9A3EF26136A0
 */
export function 0x7d6f9a3ef26136a0(vehicle: number, toggle: number, p2: number): void;

/**
 * ```
 * Corrected p1. it's basically the 'carriage/trailer number'. So if the train has 3 trailers you'd call the native once with a var or 3 times with 1, 2, 3.  
 * ```
 * @param train - 
 * @param trailerNumber - 
 * @returns number
 * @remarks Hash: 0x08AAFD0814722BC3
 */
export function getTrainCarriage(train: number, trailerNumber: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x83F813570FF519DE
 */
export function DisableVehicleNeonLights(vehicle: number, toggle: number): void;

/**
 * ```
 * Returns true if the vehicle has the FLAG_JUMPING_CAR flag set.
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x9078C0C5EF8C19E9
 */
export function GetCanVehicleJump(vehicle: number): number;

/**
 * Checks if a boat can be anchored at its present position without possibly intersecting collision later.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param boat - 
 * @returns number
 * @remarks Hash: 0x26C10ECBDA5D043B
 */
export function canAnchorBoatHere(boat: number): number;

/**
 * ```
 * Example usage  
 * VEHICLE::GET_CLOSEST_VEHICLE(x, y, z, radius, hash, unknown leave at 70)   
 * x, y, z: Position to get closest vehicle to.  
 * radius: Max radius to get a vehicle.  
 * modelHash: Limit to vehicles with this model. 0 for any.  
 * flags: The bitwise flags altering the function's behaviour.  
 * Does not return police cars or helicopters.  
 * It seems to return police cars for me, does not seem to return helicopters, planes or boats for some reason  
 * Only returns non police cars and motorbikes with the flag set to 70 and modelHash to 0. ModelHash seems to always be 0 when not a modelHash in the scripts, as stated above.   
 * These flags were found in the b617d scripts: 0,2,4,6,7,23,127,260,2146,2175,12294,16384,16386,20503,32768,67590,67711,98309,100359.  
 * Converted to binary, each bit probably represents a flag as explained regarding another native here: gtaforums.com/topic/822314-guide-driving-styles  
 * Conversion of found flags to binary: pastebin.com/kghNFkRi  
 * At exactly 16384 which is 0100000000000000 in binary and 4000 in hexadecimal only planes are returned.   
 * It's probably more convenient to use worldGetAllVehicles(int *arr, int arrSize) and check the shortest distance yourself and sort if you want by checking the vehicle type with for example VEHICLE::IS_THIS_MODEL_A_BOAT
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param modelHash - 
 * @param flags - 
 * @returns number
 * @remarks Hash: 0xF73EB622C4F1689B
 */
export function getClosestVehicle(x: number, y: number, z: number, radius: number, modelHash: number, flags: number): number;

/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * 
 * Prevents the plane from exploding when taking body damage if the inflictor is an AI-controlled vehicle. Only works for planes.
 * @param plane - 
 * @param disable - 
 * @returns void
 * @remarks Hash: 0xB0B7DF5CB876FF5E
 */
export function SetDisableExplodeFromBodyDamageReceivedByAiVehicle(plane: number, disable: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x2C8CBFE1EA5FC631
 */
export function GetVehicleNumberOfBrokenBones(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param paintType - 
 * @param color - 
 * @returns void
 * @remarks Hash: 0x81592BE4E3878728
 */
export function getVehicleModColor2(vehicle: number, paintType: number, color: number): void;

/**
 * This only works for planes.
 * 
 * Prevents a vehicle from exploding upon sustaining body damage from physical collisions. 
 * 
 * For helicopters, you might want to check [`SET_DISABLE_HELI_EXPLODE_FROM_BODY_DAMAGE`](#_0xEDBC8405B3895CC9) instead.
 * 
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x26E13D440E7F6064
 */
export function setDisableExplodeFromBodyDamageOnCollision(vehicle: number): void;

/**
 * Only ever used once in decompiled scripts:
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xEC69ADF931AAE0C3
 */
export function IsVehicleEngineOnFire(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param color - 
 * @returns void
 * @remarks Hash: 0xF40DD601A65F7F19
 */
export function SetVehicleInteriorColor(vehicle: number, color: number): void;

/**
 * ## Parameters
 * *
 * @param distance - 
 * @returns void
 * @remarks Hash: 0xBC3CCA5844452B06
 */
export function setLightsCutoffDistanceTweak(distance: number): void;

/**
 * Identical to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER with 0 as arguments for p1 and p3.
 * @param vehicle - 
 * @param drivingStyle - 
 * @returns void
 * @remarks Hash: 0xA549C3B37EA28131
 */
export function setPlaybackToUseAi(vehicle: number, drivingStyle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param position - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x56B94C6D7127DFBA
 */
export function setVehicleTankTurretPosition(vehicle: number, position: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param extraId - 
 * @returns number
 * @remarks Hash: 0xD2E6822DBFD6C8BD
 */
export function isVehicleExtraTurnedOn(vehicle: number, extraId: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param pearlescentColor - 
 * @param wheelColor - 
 * @returns void
 * @remarks Hash: 0x3BC4245933A166F7
 */
export function getVehicleExtraColours(vehicle: number, pearlescentColor: number, wheelColor: number): void;

/**
 * See [REQUEST_VEHICLE_RECORDING](#_0xAF514CABE74CBF15)
 * @param recording - 
 * @param script - 
 * @returns void
 * @remarks Hash: 0xF1160ACCF98A3FC8
 */
export function removeVehicleRecording(recording: number, script: string): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x4AF9BD80EEBEB453
 */
export function isVehicleStolen(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x65B080555EA48149
 */
export function 0x65b080555ea48149(p0: any): void;

/**
 * Detaches the specified entity currently being carried by a Cargobob.
 * @param vehicle - 
 * @param entity - 
 * @returns any
 * @remarks Hash: 0xAF03011701811146
 */
export function detachEntityFromCargobob(vehicle: number, entity: number): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xED5EDE9E676643C9
 */
export function 0xed5ede9e676643c9(p0: any, p1: any): void;

/**
 * Sets the arm position of a bulldozer. Position must be a value between 0.0 and 1.0. Ignored when `p2` is set to false, instead incrementing arm position by 0.1 (or 10%).
 * @param vehicle - 
 * @param position - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xF8EBCCC96ADB9FB7
 */
export function setVehicleBulldozerArmPosition(vehicle: number, position: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x87E7F24270732CB1
 */
export function openBombBayDoors(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param cargobob - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xED8286F71A819BAA
 */
export function setCargobobPickupMagnetPullStrength(cargobob: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x41290B40FA63E6DA
 */
export function 0x41290b40fa63e6da(p0: any): void;

/**
 * ```
 * Returns `nMonetaryValue` from handling.meta for specific model, which is the vehicle's monetary value.
 * ```
 * @returns number
 * @remarks Hash: 0x5873C14A52D74236
 */
export function getVehicleModelValue(): number;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param vehicle - 
 * @param wheelId - 
 * @returns number
 * @remarks Hash: 0x0BB5CBDDD0F25AE3
 */
export function GetHydraulicWheelValue(vehicle: number, wheelId: number): number;

/**
 * See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#_0x46E571A0E20D01F1).
 * @param vehicle - 
 * @param windowIndex - 
 * @returns void
 * @remarks Hash: 0xA711568EEDB43069
 */
export function removeVehicleWindow(vehicle: number, windowIndex: number): void;

/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param vehicle - 
 * @param wheelIndex - 
 * @returns number
 * @remarks Hash: 0x6E387895952F4F71
 */
export function GetTyreWearMultiplier(vehicle: number, wheelIndex: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x25ECB9F8017D98E0
 */
export function doesVehicleHaveWeapons(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x8F5EBAB1F260CFCE
 */
export function getVehicleLockOnTarget(vehicle: number, entity: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xA247F9EF01D8082E
 */
export function 0xa247f9ef01d8082e(p0: any): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x6636C535F6CC2725
 */
export function getBoatBoomPositionRatio(vehicle: number): number;

/**
 * This native it's a debug native. Won't do anything.
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xB264C4D2F2B0A78B
 */
export function allowAmbientVehiclesToAvoidAdverseConditions(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xD3301660A57C9272
 */
export function 0xd3301660a57c9272(p0: any): void;

/**
 * ```
 * Sets some health value. Looks like it's used for helis.
 * ```
 * @param vehicle - 
 * @param health - 
 * @returns void
 * @remarks Hash: 0x5EE5632F47AE9695
 */
export function 0x5ee5632f47ae9695(vehicle: number, health: number): void;

/**
 * Returns whether the vehicle's lights and sirens are on.
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x4C9BF537BE2634B2
 */
export function isVehicleSirenOn(vehicle: number): number;

/**
 * ```c
 * enum eVehicleWheels
 * {
 * 	WHEEL_LF = 0, // Vehicle Left front
 * 	WHEEL_RF = 1, // Vehicle Right front
 * 	WHEEL_LM = 2, // Vehicle Left middle
 * 	WHEEL_RM = 3, // Vehicle Right middle
 * 	WHEEL_LR = 4, // Vehicle Left rear
 * 	WHEEL_RR = 5, // Vehicle Right rear
 * 	WHEEL_BF = 6, // Bike front
 * 	WHEEL_BR = 7, // Bike rear
 * 	MAX_WHEELS = 8
 * };
 * ```
 * @param vehicle - 
 * @param wheelID - 
 * @param isBurstToRim - 
 * @returns number
 * @remarks Hash: 0xBA291848A0815CA9
 */
export function isVehicleTyreBurst(vehicle: number, wheelID: number, isBurstToRim: number): number;

/**
 * ## Parameters
 * *
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param unk - 
 * @returns void
 * @remarks Hash: 0x46A1E1A299EC4BBA
 */
export function removeVehiclesFromGeneratorsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, unk: any): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xBC2042F090AF6AD3
 */
export function setVehicleInteriorlight(vehicle: number, toggle: number): void;

/**
 * Specifies an area of interest where cargens will focus on spawning vehicles
 * 
 * You can clear the area of interest with [`CLEAR_VEHICLE_GENERATOR_AREA_OF_INTEREST`](#_0x0A436B8643716D14)
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0x9A75585FB2E54FAD
 */
export function setVehicleGeneratorAreaOfInterest(x: number, y: number, z: number, radius: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x25BC98A59C2EA962
 */
export function getVehicleDoorLockStatus(vehicle: number): number;

/**
 * ```
 * "To burst tyres VEHICLE::SET_VEHICLE_TYRE_BURST(vehicle, 0, true, 1000.0)  
 * to burst all tyres type it 8 times where p1 = 0 to 7.  
 * p3 seems to be how much damage it has taken. 0 doesn't deflate them, 1000 completely deflates them.  
 * '0 = wheel_lf / bike, plane or jet front  
 * '1 = wheel_rf  
 * '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left  
 * '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right  
 * '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left  
 * '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right  
 * '45 = 6 wheels trailer mid wheel left  
 * '47 = 6 wheels trailer mid wheel right  
 * ```
 * @param vehicle - 
 * @param index - 
 * @param onRim - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xEC6A202EE4960385
 */
export function setVehicleTyreBurst(vehicle: number, index: number, onRim: number, p3: number): void;

/**
 * Detaches the vehicle's windscreen.
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x6D645D59FB5F5AD3
 */
export function popOutVehicleWindscreen(vehicle: number): void;

/**
 * ```
 * NativeDB Introduced: 3095
 * ```
 * 
 * Activates or deactivates the nitrous system in the specified vehicle, based on the boolean value provided.
 * You can clear the nitrous with [`CLEAR_NITROUS`](#_0xC889AE921400E1ED), if you want to have more control on the nitrous and those settings, use [`SET_OVERRIDE_NITROUS_LEVEL`](#_0xC8E9B6B71B8E660D)
 * @param vehicle - 
 * @param isActive - 
 * @returns void
 * @remarks Hash: 0x465EEA70AF251045
 */
export function setNitrousIsActive(vehicle: number, isActive: number): void;

/**
 * ```
 * Gets a random vehicle in a sphere at the specified position, of the specified radius.  
 * x: The X-component of the position of the sphere.  
 * y: The Y-component of the position of the sphere.  
 * z: The Z-component of the position of the sphere.  
 * radius: The radius of the sphere. Max is 9999.9004.  
 * modelHash: The vehicle model to limit the selection to. Pass 0 for any model.  
 * flags: The bitwise flags that modifies the behaviour of this function.  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param modelHash - 
 * @param flags - 
 * @returns number
 * @remarks Hash: 0x386F6CE5BAF6091C
 */
export function getRandomVehicleInSphere(x: number, y: number, z: number, radius: number, modelHash: number, flags: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xA2F80B8D040727CC
 */
export function setVehicleDoorsLockedForAllPlayers(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x99C82F8A139F3E4E
 */
export function setVehicleKersAllowed(vehicle: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xAA653AE61924B0A0
 */
export function 0xaa653ae61924b0a0(vehicle: number, toggle: number): void;

/**
 * Allows locking the hover/non-hover mode of a vehicle, such as the flying mode of the `Deluxo`. In the decompiled scripts, this native is used on `oppressor2` but couldn't get it to work on it.
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF1211889DF15A763
 */
export function setSpecialFlightModeAllowed(vehicle: number, toggle: number): void;

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#_0x93D9BD300D7789E5)
 * @param vehicle - 
 * @param doorIndex - 
 * @returns number
 * @remarks Hash: 0x645F4B6E8499F632
 */
export function GetIsDoorValid(vehicle: number, doorIndex: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xE4E2FD323574965C
 */
export function setVehicleBrake(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x300504B23BD3B711
 */
export function setVehicleCanBeUsedByFleeingPeds(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param plane - 
 * @returns number
 * @remarks Hash: 0x4198AB0022B15F87
 */
export function isPlaneLandingGearIntact(plane: number): number;

/**
 * Enable/Disables global slipstream physics
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xE6C0C80B8C867537
 */
export function setEnableVehicleSlipstreaming(toggle: number): void;

/**
 * Retrieves the manufacturer's name for a specified vehicle.
 * 
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param modelHash - 
 * @returns string
 * @remarks Hash: 0xF7AF4F159FF99F97
 */
export function getMakeNameFromVehicleModel(modelHash: number): string;

/**
 * ## Parameters
 * *
 * @param model - 
 * @returns number
 * @remarks Hash: 0xB50C0B0CEDC6CE84
 */
export function isThisModelABike(model: number): number;

/**
 * Gets the ped in the specified seat of the passed vehicle.
 * 
 * If there is no ped in the seat, and the game considers the vehicle as ambient population, this will create a random occupant ped in the seat, which may be cleaned up by the game fairly soon if not marked as script-owned mission entity.
 * @param vehicle - 
 * @param seatIndex - 
 * @returns number
 * @remarks Hash: 0xBB40DD2270B65366
 */
export function getPedInVehicleSeat(vehicle: number, seatIndex: number): number;

/**
 * ## Parameters
 * *
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param p6 - 
 * @param p7 - 
 * @returns void
 * @remarks Hash: 0xC12321827687FE4D
 */
export function setAllVehicleGeneratorsActiveInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p6: number, p7: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns number
 * @remarks Hash: 0xB50807EABE20A8DC
 */
export function getRandomVehicleBackBumperInSphere(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): number;

/**
 * Checks if a Submarine has any air leaks, when there is more than 4 the player will drown.
 * 
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param submarine - 
 * @returns number
 * @remarks Hash: 0x093D6DDCA5B8FBAE
 */
export function getSubmarineNumberOfAirLeaks(submarine: number): number;

/**
 * ```
 * in script hook .net   
 * Vehicle v = ...;  
 * Function.Call(Hash.TRACK_VEHICLE_VISIBILITY, v.Handle);  
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x64473AEFDCF47DCA
 */
export function trackVehicleVisibility(vehicle: number): void;

/**
 * ```
 * REQUEST_VEHICLE_ASSET(GET_HASH_KEY(cargobob3), 3);  
 * vehicle found that have asset's:  
 * cargobob3  
 * submersible  
 * blazer  
 * ```
 * @param vehicleHash - 
 * @param vehicleAsset - 
 * @returns void
 * @remarks Hash: 0x81A15811460FAB3A
 */
export function requestVehicleAsset(vehicleHash: number, vehicleAsset: number): void;

/**
 * ```c
 * enum eVehiclePlateIndicies {
 * 	SanAndreasCursive = 0,
 * 	SanAndreasBlack = 1,
 * 	SanAndreasBlue = 2,
 * 	SanAndreasPlain = 3,
 * 	SRExcept = 4,
 * 	NorthYankton = 5,
 * 	// All indicies below this require b3095
 * 	ECola = 6,
 * 	LasVenturas = 7,
 * 	LiberyCity = 8,
 * 	LSCarMeet = 9,
 * 	LSPanic = 10,
 * 	LSPounders = 11,
 * 	Sprunk = 12,
 * }
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xF11BC2DD9A3E7195
 */
export function getVehicleNumberPlateTextIndex(vehicle: number): number;

/**
 * ```
 * Actually number of color combinations  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x3B963160CD65D41E
 */
export function getNumberOfVehicleColours(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xADF7BE450512C12F
 */
export function detachVehicleFromAnyCargobob(vehicle: number): number;

/**
 * ```
 * Makes the vehicle accept no passengers.  
 * ```
 * @param veh - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x5D14D4154BFE7B2C
 */
export function setVehicleAllowNoPassengersLockon(veh: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x99093F60746708CA
 */
export function GetEntityAttachedToCargobob(vehicle: number): number;

/**
 * ```
 * Returns max traction of the specified vehicle model.
 * ```
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x539DE94D44FDFD0D
 */
export function getVehicleModelMaxTraction(modelHash: number): number;

/**
 * Disables wings for `Deluxo` and `Oppressor MK II`. For the Deluxo, it retracts the wings immediately, preventing flight. For the Oppressor Mk II, the wings retract after landing and take-off is not possible, though it can still glide if launched into the air.
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2D55FE374D5FDB91
 */
export function setDisableHoverModeFlight(vehicle: number, toggle: number): void;

/**
 * R* used it to "remove" vehicle windows when "nightshark" had some mod, which adding some kind of armored windows. When enabled, you can't break vehicles glass. All your bullets wiil shoot through glass. You also will not able to break the glass with any other way (hitting and etc)
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1087BC8EC540DAEB
 */
export function SetDisableVehicleWindowCollisions(vehicle: number, toggle: number): void;

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#_0x93D9BD300D7789E5)
 * @param vehicle - 
 * @param doorIndex - 
 * @returns number
 * @remarks Hash: 0x218297BF0CFD853B
 */
export function getPedUsingVehicleDoor(vehicle: number, doorIndex: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xBC9CFF381338CB4F
 */
export function GetVehicleHasParachute(vehicle: number): number;

/**
 * For FiveM, use [`GET_GAME_POOL`](#_0x2B9D4F50).
 * @returns number
 * @remarks Hash: 0x9B8E1BF04B51F2E8
 */
export function getAllVehicles(): number;

/**
 * ```c
 * enum eWindowId {
 * 	VEH_EXT_WINDOW_LF = 0,
 * 	VEH_EXT_WINDOW_RF = 1,
 * 	VEH_EXT_WINDOW_LR = 2,
 * 	VEH_EXT_WINDOW_RR = 3,
 * 	VEH_EXT_WINDOW_LM = 4,
 * 	VEH_EXT_WINDOW_RM = 5,
 * 	VEH_EXT_WINDSCREEN = 6,
 * 	VEH_EXT_WINDSCREEN_R = 7,
 * }
 * ```
 * @param vehicle - 
 * @param windowIndex - 
 * @returns number
 * @remarks Hash: 0x46E571A0E20D01F1
 */
export function isVehicleWindowIntact(vehicle: number, windowIndex: number): number;

/**
 * Despite its name, this works on Helicopters and Planes.
 * 
 * Sets the speed of the helicopter blades in percentage of the full speed.
 * @param vehicle - 
 * @param speed - 
 * @returns void
 * @remarks Hash: 0xFD280B4D7F3ABC4D
 */
export function setHeliBladesSpeed(vehicle: number, speed: number): void;

/**
 * Often used in conjunction with: [SET_VEHICLE_REDUCE_GRIP](#_0x222FF6A823D122E2).
 * 
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x6DEE944E1EE90CFB
 */
export function SetVehicleReduceTraction(vehicle: number): void;

/**
 * ```
 * Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.  
 * Minimum: -4000  
 * Maximum: 1000  
 * -4000: Engine is destroyed  
 * 0 and below: Engine catches fire and health rapidly declines  
 * 300: Engine is smoking and losing functionality  
 * 1000: Engine is perfect  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xC45D23BAF168AAB8
 */
export function getVehicleEngineHealth(vehicle: number): number;

/**
 * Returns index of the current vehicle's rooftop livery.
 * A getter for [_SET_VEHICLE_ROOF_LIVERY](#_0xA6D3A8750DC73270).
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x60190048C0764A26
 */
export function GetVehicleRoofLivery(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0x4C7028F78FFD3681
 */
export function setVehicleCanBeVisiblyDamaged(vehicle: number, state: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x756AE6E962168A04
 */
export function SetVehicleRampUpwardsLaunchMotion(vehicle: number, toggle: number): void;

/**
 * ```
 * Gets the height of the vehicle's suspension.  
 * The higher the value the lower the suspension. Each 0.002 corresponds with one more level lowered.  
 * 0.000 is the stock suspension.  
 * 0.008 is Ultra Suspension.  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x53952FD2BAA19F17
 */
export function GetVehicleSuspensionHeight(vehicle: number): number;

/**
 * ```
 * Activate siren on vehicle (Only works if the vehicle has a siren).  
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF4924635A19EB37D
 */
export function setVehicleSiren(vehicle: number, toggle: number): void;

/**
 * Raises the roof on a convertible vehicle, utilizing any available animations for the action. This native is particularly useful for creating a realistic interaction with convertible vehicles by animating the process of raising the roof.
 * 
 * You can check if the vehicle has an convertible roof using [`IS_VEHICLE_A_CONVERTIBLE`](#_0x52F357A30698BCCE).
 * 
 * To lower the convertible roof, you can use [`LOWER_CONVERTIBLE_ROOF`](#_0xDED51F703D0FA83D).
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param vehicle - 
 * @param instantlyRaise - 
 * @returns void
 * @remarks Hash: 0x8F5FB35D7E88FC70
 */
export function raiseConvertibleRoof(vehicle: number, instantlyRaise: number): void;

/**
 * ```
 * Inverse of 0x95CF53B3D687F9FA
 * ```
 * 
 * ```
 * NativeDB Added Parameter 1: Vehicle vehicle
 * ```
 * @returns void
 * @remarks Hash: 0x878C75C09FBDB942
 */
export function SetTrailerLegsLowered(): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x192547247864DFDD
 */
export function setVehicleCanLeakPetrol(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x88BC673CA9E0AE99
 */
export function 0x88bc673ca9e0ae99(vehicle: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x6EAAEFC76ACC311F
 */
export function 0x6eaaefc76acc311f(p0: any): any;

/**
 * ```
 * Returns attached vehicle (Vehicle in parameter must be cargobob)  
 * ```
 * @param cargobob - 
 * @returns number
 * @remarks Hash: 0x873B82D42AC2B9E5
 */
export function getVehicleAttachedToCargobob(cargobob: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param color - 
 * @returns void
 * @remarks Hash: 0x7D1464D472D32136
 */
export function GetVehicleInteriorColor(vehicle: number, color: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2B6747FAA9DB9D6B
 */
export function setVehicleDisableTowing(vehicle: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x8F0D5BA1C2CC91D7
 */
export function 0x8f0d5ba1c2cc91d7(toggle: number): void;

/**
 * Only used with the "akula" and "annihilator2" in the decompiled native scripts.
 * 
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @param deploy - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xB251E0B33E58B424
 */
export function SetDeployHeliStubWings(vehicle: number, deploy: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param isStolen - 
 * @returns void
 * @remarks Hash: 0x67B2C79AA7FF5738
 */
export function setVehicleIsStolen(vehicle: number, isStolen: number): void;

/**
 * ```
 * REQUEST_VEHICLE_*  
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xDBA3C090E3D74690
 */
export function RequestVehicleDashboardScaleformMovie(vehicle: number): void;

/**
 * Checks the angle of the door mapped from 0.0 - 1.0 where 0.0 is fully closed and 1.0 is fully open.
 * 
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#_0x93D9BD300D7789E5)
 * @param vehicle - 
 * @param doorIndex - 
 * @returns number
 * @remarks Hash: 0xFE3F9C29F7B32BD5
 */
export function getVehicleDoorAngleRatio(vehicle: number, doorIndex: number): number;

/**
 * Sets the vehicle lights state. Allowing for different lighting modes.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * 
 * ```c
 * enum eVehicleLightSetting {
 *     // Normal light behavior. Lights cycle through off, then low beams, then high beams.
 *     // Note: It's affected by day or night; high beams don't exist in daytime.
 *     NO_VEHICLE_LIGHT_OVERRIDE = 0,
 *     // Vehicle doesn't have lights, always off.
 *     FORCE_VEHICLE_LIGHTS_OFF  = 1, 
 *     // Vehicle has always-on lights.
 *     // During day: Cycles between low beams and high beams. 
 *     // At night: Cycles between low beams, low beams, and high beams.
 *     FORCE_VEHICLE_LIGHTS_ON   = 2,
 *     // Sets vehicle lights on. Behaves like normal lights (same as 0).
 *     SET_VEHICLE_LIGHTS_ON     = 3,
 *     // Sets vehicle lights off. Behaves like normal lights (same as 0).
 *     SET_VEHICLE_LIGHTS_OFF    = 4 
 * };
 * ```
 * @param vehicle - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0x34E710FF01247C5A
 */
export function setVehicleLights(vehicle: number, state: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param modType - 
 * @returns string
 * @remarks Hash: 0x51F0FEB9F6AE98C0
 */
export function getModSlotName(vehicle: number, modType: number): string;

/**
 * ```
 * paintType:  
 * 0: Normal  
 * 1: Metallic  
 * 2: Pearl  
 * 3: Matte  
 * 4: Metal  
 * 5: Chrome  
 * color: number of the color.  
 * p3 seems to always be 0.  
 * ```
 * @param vehicle - 
 * @param paintType - 
 * @param color - 
 * @param pearlescentColor - 
 * @returns void
 * @remarks Hash: 0x43FEB945EE7F85B8
 */
export function setVehicleModColor1(vehicle: number, paintType: number, color: number, pearlescentColor: number): void;

/**
 * ```
 * p1 is always 0 in the scripts.  
 * p1 = check if vehicle is on fire  
 * ```
 * @param vehicle - 
 * @param isOnFireCheck - 
 * @returns number
 * @remarks Hash: 0x4C241E39B23DF959
 */
export function isVehicleDriveable(vehicle: number, isOnFireCheck: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x80E3357FDEF45C21
 */
export function 0x80e3357fdef45c21(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param decorator - 
 * @returns number
 * @remarks Hash: 0x956B409B984D9BF7
 */
export function doesVehicleExistWithDecorator(decorator: string): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x25367DE49D64CF16
 */
export function setDisablePretendOccupants(vehicle: number, toggle: number): void;

/**
 * ```
 * HAS_*
 * ```
 * @returns number
 * @remarks Hash: 0x91D6DD290888CBAB
 */
export function HasFilledVehiclePopulation(): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD8050E0EB60CF274
 */
export function setVehicleHasMutedSirens(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x3441CAD2F2231923
 */
export function 0x3441cad2f2231923(vehicle: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @param p2 - 
 * @returns any
 * @remarks Hash: 0x8BA6F76BC53A1493
 */
export function setVehicleAutomaticallyAttaches(vehicle: number, p1: number, p2: any): any;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x8F719973E1445BA2
 */
export function setBoatSinksWhenWrecked(vehicle: number): void;

/**
 * ```
 * Has something to do with trains. Always precedes SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED.  
 * ============================================  
 * May be true that it can be used with trains not sure, but not specifically for trains. Go find Xbox360 decompiled scripts and search for 'func_1333' in freemode.c it isn't used just for trains. Thanks for the info tho.  
 * Btw, func_1333 ends up calling this func which uses this native,  
 * void func_1338(int iParam0)//Position   
 * {  
 * 	ENTITY::FREEZE_ENTITY_POSITION(iParam0, true);  
 * 	ENTITY::SET_ENTITY_COLLISION(iParam0, false, 0);  
 * 	ENTITY::SET_ENTITY_INVINCIBLE(iParam0, true);  
 * 	VEHICLE::_0xDF594D8D(iParam0, true);  
 * }  
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1CF38D529D7441D9
 */
export function SetVehicleSt(vehicle: number, toggle: number): void;

/**
 * Sets the amount of bombs that this vehicle has. As far as I know, this does _not_ impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane. 
 * 
 * In decompiled scripts this is used to deduct from or add to the count whenever bombs are dropped or purchased/restocked. 
 * 
 * Use [`_GET_AIRCRAFT_BOMB_COUNT`](#_0xEA12BD130D7569A1) to get the amount of bombs on that vehicle.
 * @param aircraft - 
 * @param bombCount - 
 * @returns void
 * @remarks Hash: 0xF4B2ED59DEB5D774
 */
export function SetVehicleBombCount(aircraft: number, bombCount: number): void;

/**
 * ## Parameters
 * *
 * @param cargobob - 
 * @param strength - 
 * @returns void
 * @remarks Hash: 0xBCBFCD9D1DAC19E2
 */
export function setCargobobPickupMagnetStrength(cargobob: number, strength: number): void;

/**
 * ## Parameters
 * *
 * @param recording - 
 * @param time - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x2058206FBE79A8AD
 */
export function getRotationOfVehicleRecordingAtTime(recording: number, time: number): { x: number, y: number, z: number };

/**
 * ```
 * -1 = no livery  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x2BB9230590DA5E8A
 */
export function getVehicleLivery(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x632A689BF42301B1
 */
export function pausePlaybackRecordedVehicle(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param cargobob - 
 * @returns void
 * @remarks Hash: 0xCF1182F682F65307
 */
export function setCargobobPickupRopeDampingMultiplier(cargobob: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param weaponIndex - 
 * @returns number
 * @remarks Hash: 0x8181CE2F25CB9BB7
 */
export function getVehicleWeaponRestrictedAmmo(vehicle: number, weaponIndex: number): number;

/**
 * Returns the acceleration of the specified model.
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x8C044C5C84505B6A
 */
export function getVehicleModelAcceleration(modelHash: number): number;

/**
 * ```
 * NativeDB Introduced: v3095
 * ```
 * 
 * Enables or disables the use of the vehicle's horn button for activating the nitrous system.
 * @param vehicle - 
 * @param bToggle - 
 * @returns void
 * @remarks Hash: 0x1980F68872CC2C3D
 */
export function SetVehicleUseHornButtonForNitrous(vehicle: number, bToggle: number): void;

/**
 * ```
 * Controls how fast the tires wear out.
 * Default values from Rockstar's Open Wheel Race JSON's:
 * "owrtss" (Soft): 2.2
 * "owrtsm" (Medium): 1.7
 * "owrtsh" (Hard): 1.2
 * Usable wheels:
 * 0: wheel_lf
 * 1: wheel_rf
 * 2: wheel_lm1
 * 3: wheel_rm1
 * 4: wheel_lr
 * 5: wheel_rr
 * ```
 * 
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param vehicle - 
 * @param wheelIndex - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0x392183BB9EA57697
 */
export function SetTyreSoftnessMultiplier(vehicle: number, wheelIndex: number, multiplier: number): void;

/**
 * ```
 * vehicle must be a plane
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xCAC66558B944DA67
 */
export function setVehicleUsesLargeRearRamp(vehicle: number, toggle: number): void;

/**
 * Used to control train speed, can be used to start and stop its movement as well.
 * @param train - 
 * @param speed - 
 * @returns void
 * @remarks Hash: 0x16469284DB8C62B5
 */
export function setTrainCruiseSpeed(train: number, speed: number): void;

/**
 * Remove the weird shadow applied by [_SET_VEHICLE_SHADOW_EFFECT](#_0x2A70BAE8883E4C81)
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xF87D9F2301F7D206
 */
export function RemoveVehicleShadowEffect(vehicle: number): void;

/**
 * ```
 * Returns whether this vehicle is currently disabled by an EMP mine.
 * 
 * NativeDB Introduced: v1604
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x0506ED94363AD905
 */
export function GetIsVehicleEmpDisabled(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param model - 
 * @returns number
 * @remarks Hash: 0x45A9187928F4B9E3
 */
export function isThisModelABoat(model: number): number;

/**
 * Sets the boat boom position for the `TR3` trailer.
 * 
 * Ratio value is between `0.0` and `1.0`, where `0.0` is 90 degrees to the left of the boat, and `1.0` is just slightly to the right/back of the boat.
 * 
 * To get the current boom position ratio, use [GET_BOAT_BOOM_POSITION_RATIO](#_0x6636C535F6CC2725).
 * @param vehicle - 
 * @param ratio - 
 * @returns void
 * @remarks Hash: 0xF488C566413B4232
 */
export function SetBoatBoomPositionRatio(vehicle: number, ratio: number): void;

/**
 * ```
 * indices:  
 * 0 = Left  
 * 1 = Right  
 * 2 = Front  
 * 3 = Back  
 * ```
 * @param vehicle - 
 * @param index - 
 * @returns number
 * @remarks Hash: 0x8C4B92553E4766A5
 */
export function IsVehicleNeonLightEnabled(vehicle: number, index: number): number;

/**
 * ## Parameters
 * *
 * @param recording - 
 * @returns number
 * @remarks Hash: 0x300D614A4C785FC4
 */
export function hasVehicleRecordingBeenLoaded(recording: number): number;

/**
 * Sets the vehicle headlight shadow flags.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * 
 * ```c
 * enum eVehicleHeadlightShadowFlags {
 *     // Default (Lights can be toggled between off, normal and high beams)
 *     NO_HEADLIGHT_SHADOWS = 0,
 *     // Lights Disabled (Lights are fully disabled, cannot be toggled)
 *     HEADLIGHTS_CAST_DYNAMIC_SHADOWS = 1,
 *     // Always On (Lights can be toggled between normal and high beams)
 *     HEADLIGHTS_CAST_STATIC_SHADOWS = 2,
 *     HEADLIGHTS_CAST_FULL_SHADOWS = 3 
 * };
 * ```
 * @param vehicle - 
 * @param flag - 
 * @returns void
 * @remarks Hash: 0x1FD09E7390A74D54
 */
export function setVehicleHeadlightShadows(vehicle: number, flag: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x21115BCD6E44656A
 */
export function setVehicleActiveForPedNavigation(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicleClass - 
 * @returns number
 * @remarks Hash: 0x4BF54C16EC8FEC03
 */
export function getVehicleClassMaxBraking(vehicleClass: number): number;

/**
 * ```
 * Public Function isVehicleOnAllWheels(vh As Vehicle) As Boolean  
 * Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ON_ALL_WHEELS, vh)  
 * 		    End Function  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xB104CD1BABF302E2
 */
export function isVehicleOnAllWheels(vehicle: number): number;

/**
 * This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.
 * 
 * See [`REQUEST_VEHICLE_RECORDING`](#_0xAF514CABE74CBF15).
 * @param recording - 
 * @param time - 
 * @param script - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xD242728AA6F0FBA2
 */
export function getPositionOfVehicleRecordingAtTime(recording: number, time: number, script: string): { x: number, y: number, z: number };

/**
 * ```
 * Usage:  
 * public bool isCopInRange(Vector3 Location, float Range)  
 *         {  
 *             return Function.Call<bool>(Hash.IS_COP_PED_IN_AREA_3D, Location.X - Range, Location.Y - Range, Location.Z - Range, Location.X + Range, Location.Y + Range, Location.Z + Range);  
 *         }  
 * ```
 * @param x1 - 
 * @param x2 - 
 * @param y1 - 
 * @param y2 - 
 * @param z1 - 
 * @param z2 - 
 * @returns number
 * @remarks Hash: 0x7EEF65D5F153E26A
 */
export function isCopVehicleInArea3d(x1: number, x2: number, y1: number, y2: number, z1: number, z2: number): number;

/**
 * ## Parameters
 * *
 * @param plane - 
 * @param height - 
 * @returns void
 * @remarks Hash: 0xB893215D8D4C015B
 */
export function setTaskVehicleGotoPlaneMinHeightAboveTerrain(plane: number, height: number): void;

/**
 * ## Parameters
 * *
 * @param train - 
 * @param speed - 
 * @returns void
 * @remarks Hash: 0xAA0BC91BE0B796E3
 */
export function setTrainSpeed(train: number, speed: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC45C27EF50F36ADC
 */
export function setVehicleUsePlayerLightSettings(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1201E8A3290A3B98
 */
export function SetCamberedWheelsDisabled(vehicle: number, toggle: number): void;

/**
 * ```
 * Appears to return false if any window is broken.  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x11D862A3E977A9EF
 */
export function areAllVehicleWindowsIntact(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0xD3E51C0AB8C26EEE
 */
export function 0xd3e51c0ab8c26eee(p0: any, p1: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x35BB21DE06784373
 */
export function 0x35bb21de06784373(p0: any, p1: any): void;

/**
 * ```
 * Only used in R* Script fm_content_cargo
 * ```
 * 
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xEF9D388F8D377F44
 */
export function 0xef9d388f8d377f44(vehicle: number, p1: number): void;

/**
 * ```
 * Only works on bikes, both X and Y work in the -1 - 1 range.
 * X forces the bike to turn left or right (-1, 1)
 * Y forces the bike to lean to the left or to the right (-1, 1)
 * Example with X -1/Y 1
 * http://i.imgur.com/TgIuAPJ.jpg
 * ```
 * @param vehicle - 
 * @param x - 
 * @param y - 
 * @returns void
 * @remarks Hash: 0x9CFA4896C3A53CBB
 */
export function setBikeOnStand(vehicle: number, x: number, y: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x50634E348C8D44EF
 */
export function getVehicleHasKers(vehicle: number): number;

/**
 * ```
 * Money pickups are created around cars when they explode. Only works when the vehicle model is a car. A single pickup is between 1 and 18 dollars in size. All car models seem to give the same amount of money.
 * youtu.be/3arlUxzHl5Y
 * i.imgur.com/WrNpYFs.jpg
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x068F64F2470F9656
 */
export function setVehicleDropsMoneyWhenBlownUp(vehicle: number, toggle: number): void;

/**
 * Toggles whether ambient trains can spawn on the specified track or not.
 * 
 * | trackId | File | Description |
 * |
 * @param trackId - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0xFD813BB7DB977F20
 */
export function switchTrainTrack(trackId: number, state: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns any
 * @remarks Hash: 0xE023E8AC4EF7C117
 */
export function setVehicleUseCutsceneWheelCompression(p0: number, p1: number, p2: number, p3: number): any;

/**
 * ```
 * GET_VEHICLE_MODEL_*
 * Function pertains only to aviation vehicles.
 * ```
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0xC6AD107DDC9054CC
 */
export function GetVehicleModelMaxKnots(modelHash: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x7504C0F113AB50FC
 */
export function isTaxiLightOn(vehicle: number): number;

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#_0x93D9BD300D7789E5)
 * @param vehicle - 
 * @param doorIndex - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xC0572928C0ABFDA3
 */
export function GetEntryPositionOfDoor(vehicle: number, doorIndex: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x32CAEDF24A583345
 */
export function DisableVehicleTurretMovementThisFrame(vehicle: number): void;

/**
 * ```
 * seems to make the vehicle stop spawning naturally in traffic. Here's an essential example:  
 * VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(GAMEPLAY::GET_HASH_KEY("taco"), true);  
 * ```
 * @param model - 
 * @param suppressed - 
 * @returns void
 * @remarks Hash: 0x0FC2D89AC25A5814
 */
export function setVehicleModelIsSuppressed(model: number, suppressed: number): void;

/**
 * ## Parameters
 * *
 * @param cargobob - 
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xE301BD63E9E13CF0
 */
export function setCargobobPickupMagnetReducedStrength(cargobob: number, vehicle: number): void;

/**
 * ```
 * Returns the number of *types* of licence plates, enumerated below in SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX.  
 * ```
 * @returns number
 * @remarks Hash: 0x4C4D6B2644F458CB
 */
export function getNumberOfVehicleNumberPlates(): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param health - 
 * @returns void
 * @remarks Hash: 0x4056EA1105F5ABD7
 */
export function SetHeliMainRotorHealth(vehicle: number, health: number): void;

/**
 * ```
 * p1 can be anywhere from 0 to 3 in the scripts. p2 is generally somewhere in the 1000 to 10000 range.  
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x679BE1DAF71DA874
 */
export function isVehicleStuckTimerUp(vehicle: number, p1: number, p2: number): number;

/**
 * See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#_0x46E571A0E20D01F1).
 * 
 * This function is coded to not work on vehicles of type: `CBike`, `Bmx`, `CBoat`, `CTrain`, and `CSubmarine`.
 * @param vehicle - 
 * @param windowIndex - 
 * @returns void
 * @remarks Hash: 0x772282EBEB95E682
 */
export function fixVehicleWindow(vehicle: number, windowIndex: number): void;

/**
 * ```c
 * enum eColourBitField {
 *     HAS_BODY_COLOUR1 = 1,
 *     HAS_BODY_COLOUR2 = 2,
 *     HAS_BODY_COLOUR3 = 4,
 *     HAS_BODY_COLOUR4 = 8,
 *     HAS_BODY_COLOUR5 = 16
 * }
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xEEBFC7A7EFDC35B4
 */
export function getVehicleColoursWhichCanBeSet(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0x45A561A9421AB6AD
 */
export function SetVehicleUnkDamageMultiplier(vehicle: number, multiplier: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x3556041742A0DC74
 */
export function closeBombBayDoors(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicleAsset - 
 * @returns number
 * @remarks Hash: 0x1BBE0523B8DB9A21
 */
export function hasVehicleAssetLoaded(vehicleAsset: number): number;

/**
 * ## Parameters
 * *
 * @param cargobob - 
 * @param vehicleAttached - 
 * @returns number
 * @remarks Hash: 0xD40148F22E81A1D9
 */
export function isVehicleAttachedToCargobob(cargobob: number, vehicleAttached: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x06582AFF74894C75
 */
export function setVehicleInactiveDuringPlayback(vehicle: number, toggle: number): void;

/**
 * ```
 * Returns true if vehicle is halted by BRING_VEHICLE_TO_HALT
 * _IS_VEHICLE_*
 * ```
 * 
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xC69BB1D832A710EF
 */
export function IsVehicleBeingHalted(vehicle: number): number;

/**
 * Examples with a besra:
 * 
 * - [fade value `0.0`](https://i.imgur.com/DXNk63e.jpg)
 * - [fade value `0.5`](https://i.imgur.com/2Vb35fq.jpg)
 * - [fade value `1.0`](https://i.imgur.com/aa8cxaD.jpg)
 * 
 * The parameter fade is a value from 0-1, where 0 is fresh paint.
 * @param vehicle - 
 * @param fade - 
 * @returns void
 * @remarks Hash: 0x3AFDC536C3D01674
 */
export function setVehicleEnveffScale(vehicle: number, fade: number): void;

/**
 * ## Parameters
 * *
 * @param aircraft - 
 * @returns number
 * @remarks Hash: 0xDA62027C8BDB326E
 */
export function getVehicleFlightNozzlePosition(aircraft: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9737A37136F07E75
 */
export function setVehicleDoorsLockedForNonScriptPlayers(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0xA1A9FC1C76A6730D
 */
export function IsThisModelAnAmphibiousQuadbike(): number;

/**
 * Disables collision for this vehicle (maybe it also supports other entities, not sure).
 * Only world/building/fixed world objects will have their collisions disabled, props, peds, or any other entity still collides with the vehicle.
 * 
 * [Example video](https://streamable.com/6n45d5)
 * 
 * Not sure if there is a native (and if so, which one) that resets the collisions.
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x75627043C6AA90AD
 */
export function DisableVehicleWorldCollision(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param range - 
 * @returns void
 * @remarks Hash: 0x90B6DA738A9A25DA
 */
export function setAmbientVehicleRangeMultiplierThisFrame(range: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x28D034A93FE31BF5
 */
export function SetVehicleReceivesRampDamage(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x5FFBDEEC3E8E2009
 */
export function clearVehicleCustomSecondaryColour(vehicle: number): void;

/**
 * Transforms the `stormberg` to its "road vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
 * @param vehicle - 
 * @param instantly - 
 * @returns void
 * @remarks Hash: 0x2A69FFD1B42BFF9E
 */
export function transformToCar(vehicle: number, instantly: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x09606148B6C71DEF
 */
export function setVehicleRudderBroken(vehicle: number, toggle: number): void;

/**
 * ```
 * Implemented only for Trains.
 * ```
 * 
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xEC0C1D4922AF9754
 */
export function NetworkUseHighPrecisionVehicleBlending(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param speed - 
 * @returns void
 * @remarks Hash: 0x1093408B4B9D1146
 */
export function setVehicleTurretSpeedThisFrame(vehicle: number, speed: number): void;

/**
 * ```
 * Returns last vehicle that was rammed by the given vehicle using the shunt boost.
 * 
 * NativeDB Introduced: v1604
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x04F2FA6E234162F7
 */
export function GetLastRammedVehicle(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns number
 * @remarks Hash: 0xC5574E0AEB86BA68
 */
export function getRandomVehicleFrontBumperInSphere(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x206BC5DC9D1AC70A
 */
export function SetVehicleCanEngineOperateOnFire(vehicle: number, toggle: number): void;

/**
 * Retrieves a static value representing the estimated max speed of a specific vehicle, including any vehicle mods. This value does not change dynamically during gameplay.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x53AF99BAA671CA47
 */
export function getVehicleEstimatedMaxSpeed(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xFBA550EA44404EE6
 */
export function setVehicleNeedsToBeHotwired(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicleClass - 
 * @returns number
 * @remarks Hash: 0x00C09F246ABEDD82
 */
export function getVehicleClassEstimatedMaxSpeed(vehicleClass: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xA17BAD153B51547E
 */
export function setCargobobPickupMagnetEffectRadius(vehicle: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param modType - 
 * @returns number
 * @remarks Hash: 0x84B233A8C8FC8AE7
 */
export function isToggleModOn(vehicle: number, modType: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x21D2E5662C1F6FED
 */
export function resetVehicleWheels(vehicle: number, toggle: number): void;

/**
 * ```
 * Controls how much traction the wheel loses.
 * Default values from Rockstar's Open Wheel Race JSON's:
 * "owrtds" (Soft): 0.05
 * "owrtdm" (Medium): 0.45
 * "owrtdh" (Hard): 0.8
 * Usable wheels:
 * 0: wheel_lf
 * 1: wheel_rf
 * 2: wheel_lm1
 * 3: wheel_rm1
 * 4: wheel_lr
 * 5: wheel_rr
 * ```
 * 
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param vehicle - 
 * @param wheelIndex - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0xC970D0E0FC31D768
 */
export function SetTyreTractionLossMultiplier(vehicle: number, wheelIndex: number, multiplier: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x8533CAFDE1F0F336
 */
export function 0x8533cafde1f0f336(p0: any): any;

/**
 * Stops cargobob from being able to detach the attached vehicle.
 * @param cargobob - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x571FEB383F629926
 */
export function setCargobobForceDontDetachVehicle(cargobob: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param speed - 
 * @param p5 - 
 * @returns number
 * @remarks Hash: 0x2CE544C68FB812A0
 */
export function addRoadNodeSpeedZone(x: number, y: number, z: number, radius: number, speed: number, p5: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xFC058F5121E54C32
 */
export function getVehicleModKitType(vehicle: number): number;

/**
 * ```
 * p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)  
 * ```
 * @param vehicle - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns void
 * @remarks Hash: 0x36CED73BFED89754
 */
export function setVehicleCustomSecondaryColour(vehicle: number, r: number, g: number, b: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xA4A9A4C40E615885
 */
export function 0xa4a9a4c40e615885(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x5BA68A0840D546AC
 */
export function 0x5ba68a0840d546ac(p0: any, p1: any): any;

/**
 * ```
 * Changes the secondary paint type and color  
 * paintType:  
 * 0: Normal  
 * 1: Metallic  
 * 2: Pearl  
 * 3: Matte  
 * 4: Metal  
 * 5: Chrome  
 * color: number of the color  
 * ```
 * @param vehicle - 
 * @param paintType - 
 * @param color - 
 * @returns void
 * @remarks Hash: 0x816562BADFDEC83E
 */
export function setVehicleModColor2(vehicle: number, paintType: number, color: number): void;

/**
 * ```
 * min: 1.9f, max: 100.0f
 * ```
 * @param cargobob - 
 * @param length1 - 
 * @param length2 - 
 * @returns void
 * @remarks Hash: 0x877C1EAEAC531023
 */
export function setPickupRopeLengthForCargobob(cargobob: number, length1: number, length2: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x445D79F995508307
 */
export function releasePreloadMods(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0xD4196117AF7BB974
 */
export function 0xd4196117af7bb974(p0: any, p1: any): any;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x90532EDF0D2BDD86
 */
export function detachVehicleFromTrailer(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x51DB102F4A3BA5E0
 */
export function 0x51db102f4a3ba5e0(toggle: number): void;

/**
 * Will disable a plane or a helicopter's need to swerve around object in its heightmap when using TASK_PLANE_MISSION or other AI / Pilot behavior.  Will ensure plane flys directly to it's destination or die trying! This native does NOT need to be called every frame, but instead, just called once on the vehicle (NOT THE PED) you're trying to disable avoidance for!
 * @param vehicle - 
 * @param avoidObstacles - 
 * @returns void
 * @remarks Hash: 0x8AA9180DE2FEDD45
 */
export function EnableAircraftObstacleAvoidance(vehicle: number, avoidObstacles: number): void;

/**
 * ```
 * Returns true if the vehicle's current speed is less than, or equal to 0.0025f.
 * For some vehicles it returns true if the current speed is <= 0.00039999999.
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x5721B434AD84D57A
 */
export function isVehicleStopped(vehicle: number): number;

/**
 * ```
 * Only works during nighttime.
 * ```
 * @param heli - 
 * @param toggle - 
 * @param canBeUsedByAI - 
 * @returns void
 * @remarks Hash: 0x14E85C5EE7A4D542
 */
export function setVehicleSearchlight(heli: number, toggle: number, canBeUsedByAI: number): void;

/**
 * ```
 * True stops vtols from switching modes. Doesn't stop the sound though.
 * ```
 * 
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xCE2B43770B655F8F
 */
export function SetDisableVehicleFlightNozzlePosition(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param seatIndex - 
 * @returns number
 * @remarks Hash: 0xE33FFA906CE74880
 */
export function isTurretSeat(vehicle: number, seatIndex: number): number;

/**
 * Checks if a boat can be anchored at its present position, ignoring any players standing on the boat.
 * 
 * ```
 * NativeDB Introduced: v678
 * ```
 * @param boat - 
 * @returns number
 * @remarks Hash: 0x24F4121D07579880
 */
export function canAnchorBoatHereIgnorePlayers(boat: number): number;

/**
 * Determines whether the specified vehicle is equipped with a searchlight.
 * 
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x99015ED7DBEA5113
 */
export function doesVehicleHaveSearchlight(vehicle: number): number;

/**
 * Allows vehicles with the FLAG_JUMPING_CAR flag to jump higher (i.e. Ruiner 2000).
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF06A16CA55D138D8
 */
export function SetUseHigherVehicleJumpForce(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x33F2E3FE70EAAE1D
 */
export function getNumModKits(vehicle: number): number;

/**
 * ```
 * This fixes the deformation of a vehicle but the vehicle health doesn't improve  
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x953DA1E1B12C0491
 */
export function setVehicleDeformationFixed(vehicle: number): void;

/**
 * This multiplier has no limit, by default the game has this set to `1.0`.
 * @param vehicle - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0xB385454F8791F57C
 */
export function setVehicleLightMultiplier(vehicle: number, multiplier: number): void;

/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param plane - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xFC40CBF7B90CA77C
 */
export function SetPlaneAvoidsOthers(plane: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v3095
 * ```
 * 
 * Recharges the nitrous system of the specified vehicle to its maximum capacity. This action sets the nitrous charge duration to the maximum limit defined by previous settings applied through [`SET_OVERRIDE_NITROUS_LEVEL`](#_0xC8E9B6B71B8E660D).
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x1A2BCC8C636F9226
 */
export function fullyChargeNitrous(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x517AAF684BB50CD1
 */
export function setVehicleDoorsLockedForPlayer(vehicle: number, player: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x0419B167EE128F33
 */
export function 0x0419b167ee128f33(p0: any, p1: any): any;

/**
 * ```
 * Returns a float value between 0.0 and 3.0 related to its slipstream draft (boost/speedup).
 * GET_VEHICLE_*
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x36492C2F0D134C56
 */
export function GetVehicleCurrentSlipstreamDraft(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x983765856F2564F9
 */
export function setVehicleEngineCanDegrade(vehicle: number, toggle: number): void;

/**
 * colorPrimary & colorSecondary are the paint indexes for the vehicle.  
 * 
 * For a list of valid paint indexes, view: pastebin.com/pwHci0xK
 * @param vehicle - 
 * @param colorPrimary - 
 * @param colorSecondary - 
 * @returns void
 * @remarks Hash: 0x4F1D4BE3A7F24601
 */
export function setVehicleColours(vehicle: number, colorPrimary: number, colorSecondary: number): void;

/**
 * Set state to true to extend the wings, false to retract them.
 * @param vehicle - 
 * @param extend - 
 * @returns void
 * @remarks Hash: 0x544996C0081ABDEB
 */
export function SetOppressorTransformState(vehicle: number, extend: number): void;

/**
 * ```
 * Returns false if the vehicle has the FLAG_NO_RESPRAY flag set.
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x8D474C8FAEFF6CDE
 */
export function isVehicleSprayable(vehicle: number): number;

/**
 * ```
 * If set to TRUE, it seems to suppress door noises and doesn't allow the horn to be continuous.  
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9D44FCCE98450843
 */
export function SetVehicleSilent(vehicle: number, toggle: number): void;

/**
 * A getter for [`SET_VEHICLE_DIRT_LEVEL`](#_0x79D3B596FE44EE8B).
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x8F17BC8BA08DA62B
 */
export function getVehicleDirtLevel(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC4B3347BD68BD609
 */
export function 0xc4b3347bd68bd609(p0: any): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x6EBFB22D646FFC18
 */
export function 0x6ebfb22d646ffc18(vehicle: number, p1: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x5BBCF35BF6E456F7
 */
export function 0x5bbcf35bf6e456f7(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE05DD0E9707003A3
 */
export function 0xe05dd0e9707003a3(p0: any, p1: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x71AFB258CCED3A27
 */
export function GetDoesVehicleHaveTombstone(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @param depth1 - 
 * @param depth2 - 
 * @param depth3 - 
 * @returns void
 * @remarks Hash: 0xC59872A5134879C7
 */
export function setSubmarineCrushDepths(vehicle: number, toggle: number, depth1: number, depth2: number, depth3: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x73561D4425A021A2
 */
export function 0x73561d4425a021a2(p0: any, p1: any): void;

/**
 * ```
 * AI abides by the provided driving style (e.g., stopping at red lights or waiting behind traffic) while executing the specificed vehicle recording.
 * 
 * 0x1F2E4E06DEA8992B is a related native that deals with the AI physics for such recordings.
 * ```
 * @param vehicle - 
 * @param recording - 
 * @returns void
 * @remarks Hash: 0x29DE5FA52D00428C
 */
export function startPlaybackRecordedVehicleUsingAi(vehicle: number, recording: number): void;

/**
 * ```
 * Seems to be related to the metal parts, not tyres (like i was expecting lol)  
 * Must be called every tick.  
 * ```
 * @param vehicle - 
 * @param friction - 
 * @returns void
 * @remarks Hash: 0x1837AF7C627009BA
 */
export function setVehicleFrictionOverride(vehicle: number, friction: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param lightsOn - 
 * @param highbeamsOn - 
 * @returns number
 * @remarks Hash: 0xB91B4C20085BD12F
 */
export function getVehicleLightsState(vehicle: number, lightsOn: number, highbeamsOn: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xE30524E1871F481D
 */
export function removeVehicleCombatAvoidanceArea(p0: any): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x26324F33423F3CC3
 */
export function setFarDrawVehicles(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xAA0A52D24FB98293
 */
export function isVehicleVisible(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB055A34527CB8FD7
 */
export function setVehicleForceAfterburner(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x57715966069157AD
 */
export function isEntityAttachedToHandlerFrame(vehicle: number, entity: number): number;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param heli - 
 * @returns number
 * @remarks Hash: 0xAE8CE82A4219AC8C
 */
export function getHeliTailRotorHealth(heli: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x0CDDA42F9E360CA6
 */
export function setVehicleCanDeformWheels(vehicle: number, toggle: number): void;

/**
 * Enables or disables the convertible roof on vehicles that support old-style GTA IV roofs, which are not animated. Setting `toggle` to true will apply the roof to the vehicle, and setting it to false will remove the roof, assuming the vehicle has versions with and without a roof.
 * 
 * If you want to lock or unlock the roof mechanism, use [`SET_CONVERTIBLE_ROOF_LATCH_STATE`](#_0x1A78AD3D8240536F).
 * 
 * You can check if the vehicle has a roof with [`DOES_VEHICLE_HAVE_ROOF`](#_0x8AC862B0B32C5B80).
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF39C4F538B5124C2
 */
export function setConvertibleRoof(vehicle: number, toggle: number): void;

/**
 * ```
 * Related to locking the vehicle or something similar.  
 * In the decompiled scripts, its always called after  
 * VEHICLE::_SET_EXCLUSIVE_DRIVER(a_0, 0, 0);  
 * VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(a_0, 1);  
 * VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(a_0, PLAYER::PLAYER_ID(), 0);  
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xDBC631F109350B8C
 */
export function 0xdbc631f109350b8c(vehicle: number, p1: number): void;

/**
 * ```
 * Returns true if the vehicle has the FLAG_ALLOWS_RAPPEL flag set.
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x4E417C547182C84D
 */
export function DoesVehicleAllowRappel(vehicle: number): number;

/**
 * ```
 * Set modKit to 0 if you plan to call SET_VEHICLE_MOD. That's what the game does. Most body modifications through SET_VEHICLE_MOD will not take effect until this is set to 0.
 * ```
 * @param vehicle - 
 * @param modKit - 
 * @returns void
 * @remarks Hash: 0x1F2AA07F00B3217A
 */
export function setVehicleModKit(vehicle: number, modKit: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x7BBE7FF626A591FE
 */
export function 0x7bbe7ff626a591fe(p0: any): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x6A842D197F845D56
 */
export function getVehicleColourCombination(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xB9562064627FF9DB
 */
export function 0xb9562064627ff9db(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xA132FB5370554DB0
 */
export function getVehicleMaxTraction(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xDCA174A42133F08C
 */
export function GetHasRetractableWheels(vehicle: number): number;

/**
 * Determines whether the specified Cargobob can pick up a given entity.
 * @param cargobob - 
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x2C1D8B3B19E517CC
 */
export function canCargobobPickUpEntity(cargobob: number, entity: number): number;

/**
 * ```
 * Won't attract or magnetize to any helicopters or planes of course, but that's common sense.  
 * ```
 * @param cargobob - 
 * @param isActive - 
 * @returns void
 * @remarks Hash: 0x9A665550F8DA349B
 */
export function setCargobobPickupMagnetActive(cargobob: number, isActive: number): void;

/**
 * ```
 * Closes all doors of a vehicle:  
 * ```
 * @param vehicle - 
 * @param closeInstantly - 
 * @returns void
 * @remarks Hash: 0x781B3D62BB013EF5
 */
export function setVehicleDoorsShut(vehicle: number, closeInstantly: number): void;

/**
 * See [`SET_VEHICLE_CUSTOM_PRIMARY_COLOUR`](#_0x7141766F91D15BEA) and [`SET_VEHICLE_CUSTOM_SECONDARY_COLOUR`](#_0x36CED73BFED89754).
 * @param vehicle - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns void
 * @remarks Hash: 0xF3CC740D36221548
 */
export function getVehicleColor(vehicle: number, r: number, g: number, b: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x9F3F689B814F2599
 */
export function 0x9f3f689b814f2599(vehicle: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x4319E335B71FFF34
 */
export function isVehicleAlarmActivated(vehicle: number): number;

/**
 * Disables the additional physics forces applied to BMX bikes that enable them to perform tricks.
 * 
 * ```
 * NativeDB Introduced: v463
 * ```
 * @returns void
 * @remarks Hash: 0x26D99D5A82FD18E8
 */
export function setDisableBmxExtraTrickForces(): void;

/**
 * ## Parameters
 * *
 * @param train - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x591CA673AA6AB736
 */
export function setMissionTrainCoords(train: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1D97D1E3A70A649F
 */
export function setVehicleUseAlternateHandling(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param towTruck - 
 * @returns number
 * @remarks Hash: 0xEFEA18DCF10F8F75
 */
export function getEntityAttachedToTowTruck(towTruck: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xBD32E46AA95C1DD2
 */
export function SetBoatIsSinking(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xD0E9CE05A1E68CD8
 */
export function detachVehicleFromAnyTowTruck(vehicle: number): number;

/**
 * ```
 * This has not yet been tested - it's just an assumption of what the types could be.  
 * ```
 * @param vehicle - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0x3750146A28097A82
 */
export function setVehicleCanBeTargetted(vehicle: number, state: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param model - 
 * @returns number
 * @remarks Hash: 0x423E8DE37D934D89
 */
export function isVehicleModel(vehicle: number, model: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xA7DCDF4DED40A8F4
 */
export function 0xa7dcdf4ded40a8f4(vehicle: number, p1: number): void;

/**
 * ```
 * Does nothing. It's a nullsub.
 * 
 * NativeDB Introduced: v1604
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x36DE109527A2C0C4
 */
export function 0x36de109527a2c0c4(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x48C633E94A8142A7
 */
export function IsVehicleSlipstreamLeader(vehicle: number): number;

/**
 * ```
 * tyreIndex = 0 to 4 on normal vehicles  
 * '0 = wheel_lf / bike, plane or jet front  
 * '1 = wheel_rf  
 * '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left  
 * '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right  
 * '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left  
 * '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right  
 * '45 = 6 wheels trailer mid wheel left  
 * '47 = 6 wheels trailer mid wheel right  
 * ```
 * @param vehicle - 
 * @param tyreIndex - 
 * @returns void
 * @remarks Hash: 0x6E13FC662B882D1D
 */
export function setVehicleTyreFixed(vehicle: number, tyreIndex: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xF660602546D27BA8
 */
export function RaiseRetractableWheels(vehicle: number): void;

/**
 * Returns the convertible state of the specified vehicle.
 * 
 * 
 * 
 * ```c
 * enum eRoofState {
 *     RAISED = 0,
 *     LOWERING = 1,
 *     LOWERED = 2,
 *     RAISING = 3,
 *     CLOSING_BOOT = 4,
 *     ROOF_STUCK_RAISED = 5,
 *     ROOF_STUCK_LOWERED = 6
 * }
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xF8C397922FC03F41
 */
export function getConvertibleRoofState(vehicle: number): number;

/**
 * Checks if the vehicle is electric.
 * 
 * ```
 * NativeDB Introduced: v3258
 * ```
 * @param vehicleModel - 
 * @returns number
 * @remarks Hash: 0x1FCB07FE230B6639
 */
export function GetIsVehicleElectric(vehicleModel: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xB497F06B288DCFDF
 */
export function isVehicleStuckOnRoof(vehicle: number): number;

/**
 * Sets the distance from the player at which anchored boats switch between high and low LOD (Level of Detail) buoyancy mode.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param boat - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xE842A9398079BD82
 */
export function setBoatLowLodAnchorDistance(boat: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x5845066D8A1EA7F7
 */
export function 0x5845066d8a1ea7f7(vehicle: number, x: number, y: number, z: number, p4: any): void;

/**
 * Lowers the vehicle's stance. Only works for vehicles that support this feature.
 * 
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param vehicle - 
 * @param enable - 
 * @returns void
 * @remarks Hash: 0x3A375167F5782A65
 */
export function SetReduceDriftVehicleSuspension(vehicle: number, enable: number): void;

/**
 * Sets the dirt level of the passed vehicle.
 * @param vehicle - 
 * @param dirtLevel - 
 * @returns void
 * @remarks Hash: 0x79D3B596FE44EE8B
 */
export function setVehicleDirtLevel(vehicle: number, dirtLevel: number): void;

/**
 * Drops the Hook/Magnet on a cargobob  
 * 
 * ```c
 * enum eCargobobHook  
 * {  
 * 	CARGOBOB_HOOK = 0,  
 * 	CARGOBOB_MAGNET = 1,  
 * };  
 * ```
 * @param cargobob - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0x7BEB0C7A235F6F3B
 */
export function createPickUpRopeForCargobob(cargobob: number, state: number): void;

/**
 * ```
 * how does this work?  
 * ```
 * @param disabled - 
 * @param weaponHash - 
 * @param vehicle - 
 * @param owner - 
 * @returns void
 * @remarks Hash: 0xF4FC6A6F67D8D856
 */
export function disableVehicleWeapon(disabled: number, weaponHash: number, vehicle: number, owner: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x56EB5E94318D3FB6
 */
export function 0x56eb5e94318d3fb6(vehicle: number, p1: number): void;

/**
 * Forces a submarine to maintain neutral buoyancy for a specified duration, preventing it from rising when unoccupied or without a driver.
 * 
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param submarine - 
 * @param time - 
 * @returns void
 * @remarks Hash: 0xC67DB108A9ADE3BE
 */
export function forceSubmarineNeurtalBuoyancy(submarine: number, time: number): void;

/**
 * ```
 * Returns the license plate text from a vehicle.  8 chars maximum.  
 * ```
 * @param vehicle - 
 * @returns string
 * @remarks Hash: 0x7CE1CCB9B293020E
 */
export function getVehicleNumberPlateText(vehicle: number): string;

/**
 * ```
 * Returns true only when the hook is active, will return false if the magnet is active  
 * ```
 * @param cargobob - 
 * @returns number
 * @remarks Hash: 0x1821D91AD4B56108
 */
export function doesCargobobHavePickUpRope(cargobob: number): number;

/**
 * ```
 * SET_VEHICLE_LI*
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xC50CE861B55EAB8B
 */
export function 0xc50ce861b55eab8b(vehicle: number, p1: number): void;

/**
 * Locks the doors of a specified vehicle to a defined lock state, affecting how players and NPCs can interact with the vehicle.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * 
 * ```c
 * enum eVehicleLockState {
 *     // No specific lock state, vehicle behaves according to the game's default settings.
 *     VEHICLELOCK_NONE = 0,
 *     // Vehicle is fully unlocked, allowing free entry by players and NPCs.
 *     VEHICLELOCK_UNLOCKED = 1,
 *     // Vehicle is locked, preventing entry by players and NPCs.
 *     VEHICLELOCK_LOCKED = 2,
 *     // Vehicle locks out only players, allowing NPCs to enter.
 *     VEHICLELOCK_LOCKOUT_PLAYER_ONLY = 3,
 *     // Vehicle is locked once a player enters, preventing others from entering.
 *     VEHICLELOCK_LOCKED_PLAYER_INSIDE = 4,
 *     // Vehicle starts in a locked state, but may be unlocked through game events.
 *     VEHICLELOCK_LOCKED_INITIALLY = 5,
 *     // Forces the vehicle's doors to shut and lock.
 *     VEHICLELOCK_FORCE_SHUT_DOORS = 6,
 *     // Vehicle is locked but can still be damaged.
 *     VEHICLELOCK_LOCKED_BUT_CAN_BE_DAMAGED = 7,
 *     // Vehicle is locked, but its trunk/boot remains unlocked.
 *     VEHICLELOCK_LOCKED_BUT_BOOT_UNLOCKED = 8,
 *     // Vehicle is locked and does not allow passengers, except for the driver.
 *     VEHICLELOCK_LOCKED_NO_PASSENGERS = 9,
 *     // Vehicle is completely locked, preventing entry entirely, even if previously inside.
 *     VEHICLELOCK_CANNOT_ENTER = 10 
 * };
 * 
 * ```
 * @param vehicle - 
 * @param doorLockStatus - 
 * @returns void
 * @remarks Hash: 0xB664292EAECF7FA6
 */
export function setVehicleDoorsLocked(vehicle: number, doorLockStatus: number): void;

/**
 * Disables turret movement when called in a loop. You can still fire and aim. You cannot shoot backwards though.
 * 
 * ```
 * NativeDB Introduced: v1365
 * ```
 * @param vehicle - 
 * @param turretIdx - 
 * @returns void
 * @remarks Hash: 0xE615BB7A7752C76A
 */
export function SetDisableTurretMovementThisFrame(vehicle: number, turretIdx: number): void;

/**
 * ```
 * colorIndex = 0 - 7
 * ```
 * @param vehicle - 
 * @param textureVariation - 
 * @returns void
 * @remarks Hash: 0xA74AD2439468C883
 */
export function SetVehicleParachuteTextureVariation(vehicle: number, textureVariation: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x92B35082E0B42F66
 */
export function setVehicleBrakeLights(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param model - 
 * @returns number
 * @remarks Hash: 0x39DAC362EE65FA28
 */
export function isThisModelAQuadbike(model: number): number;

/**
 * Gets the position of the cargobob hook, in world coords.
 * @param cargobob - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xCBDB9B923CACC92D
 */
export function GetCargobobHookPosition(cargobob: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param entity - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x374706271354CB18
 */
export function stabiliseEntityAttachedToHeli(vehicle: number, entity: number, p2: number): void;

/**
 * ```
 * Check if Vehicle Secondary is avaliable for customize  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x910A32E7AAD2656C
 */
export function getIsVehicleSecondaryColourCustom(vehicle: number): number;

/**
 * Check if a entry point for a certain seat is clear, useful for checking if a vehicle seat is accesible.
 * If you park your vehicle near a wall and the ped cannot enter/exit this side, the return value toggles from true (not blocked) to false (blocked).
 * 
 * Keep in mind, with checkSide set to true, that only certain vehicles have entry points on both sides for the same seat, like motorcycles, most normal vehicles don't have this and if the native doesn't find a entry point with the given parameters it will always return false. So for most normal usecases leaving checkSide set to false would result in the expected behavior.
 * @param ped - 
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x639431E895B9AA57
 */
export function isEntryPointForSeatClear(ped: number, vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param seatIndex - 
 * @returns number
 * @remarks Hash: 0x83F969AA1EE2A664
 */
export function getLastPedInVehicleSeat(vehicle: number, seatIndex: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xD565F438137F0E10
 */
export function 0xd565f438137f0e10(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param vehicleAsset - 
 * @returns void
 * @remarks Hash: 0xACE699C71AB9DEB5
 */
export function removeVehicleAsset(vehicleAsset: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x91A0BD635321F145
 */
export function setDisableVehicleEngineFires(vehicle: number, toggle: number): void;

/**
 * See [`REQUEST_VEHICLE_RECORDING`](#_0xAF514CABE74CBF15).
 * @param recording - 
 * @param script - 
 * @returns number
 * @remarks Hash: 0x21543C612379DB3C
 */
export function getVehicleRecordingId(recording: number, script: string): number;

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#_0x93D9BD300D7789E5)
 * @param vehicle - 
 * @param doorIndex - 
 * @param isBreakable - 
 * @returns void
 * @remarks Hash: 0x2FA133A4A9D37ED8
 */
export function SetVehicleDoorCanBreak(vehicle: number, doorIndex: number, isBreakable: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param vehicle - 
 * @param color - 
 * @returns void
 * @remarks Hash: 0xB93B2867F7B479D1
 */
export function SetVehicleNeonLightsColor2(vehicle: number, color: number): void;

/**
 * ```
 * Returns false if every seat is occupied.  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x2D34FC3BC4ADB780
 */
export function areAnyVehicleSeatsFree(vehicle: number): number;

/**
 * Lowers the roof on a convertible vehicle, utilizing any available animations for the action. This native is particularly useful for creating a realistic interaction with convertible vehicles by animating the process of lowering the roof.
 * 
 * You can check if the vehicle has an convertible roof using [`IS_VEHICLE_A_CONVERTIBLE`](#_0x52F357A30698BCCE).
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param vehicle - 
 * @param instantlyLower - 
 * @returns void
 * @remarks Hash: 0xDED51F703D0FA83D
 */
export function lowerConvertibleRoof(vehicle: number, instantlyLower: number): void;

/**
 * This native is used to simulate a high-speed impact for a vehicle when it collides with a breakable object (frag). It's particularly useful in scripted sequences where a vehicle is required to break through a barrier but might not actually be moving at a sufficient speed to do so realistically. Note that this setting is temporary and will reset after one frame, so it needs to be called every frame for a lasting effect.
 * @param vehicle - 
 * @param actHighSpeed - 
 * @returns void
 * @remarks Hash: 0x1F9FB66F3A3842D2
 */
export function setVehicleActAsIfHighSpeedForFragSmashing(vehicle: number, actHighSpeed: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param paintType - 
 * @param color - 
 * @param pearlescentColor - 
 * @returns void
 * @remarks Hash: 0xE8D65CA700C9A693
 */
export function getVehicleModColor1(vehicle: number, paintType: number, color: number, pearlescentColor: number): void;

/**
 * ```
 * p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)  
 * ```
 * @param vehicle - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns void
 * @remarks Hash: 0x7141766F91D15BEA
 */
export function setVehicleCustomPrimaryColour(vehicle: number, r: number, g: number, b: number): void;

/**
 * Sets the specified door index shut on the passed vehicle.
 * 
 * ```c
 * enum eDoorId
 * {
 * 	VEH_EXT_DOOR_DSIDE_F = 0,
 * 	VEH_EXT_DOOR_DSIDE_R = 1,
 * 	VEH_EXT_DOOR_PSIDE_F = 2,
 * 	VEH_EXT_DOOR_PSIDE_R = 3,
 * 	VEH_EXT_BONNET = 4,
 * 	VEH_EXT_BOOT = 5,
 * 	// 0x872E72B8 = 0xFFFFFFFF,
 * }
 * ```
 * @param vehicle - 
 * @param doorIndex - 
 * @param closeInstantly - 
 * @returns void
 * @remarks Hash: 0x93D9BD300D7789E5
 */
export function setVehicleDoorShut(vehicle: number, doorIndex: number, closeInstantly: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param team - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB81F6D4A8F5EEBA8
 */
export function setVehicleDoorsLockedForTeam(vehicle: number, team: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param cargobob - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x6D8EAC07506291FB
 */
export function setCargobobPickupMagnetPullRopeLength(cargobob: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xAF60E6A2936F982A
 */
export function 0xaf60e6a2936f982a(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param model - 
 * @returns number
 * @remarks Hash: 0xAB935175B22E822B
 */
export function isThisModelATrain(model: number): number;

/**
 * Used to set the tornado custom (convertible) rooftop livery.
 * 
 * Livery value that works for tornado custom is between 0 and 9 from what i can tell. Maybe 0-8 even.
 * 
 * Might work on other custom vehicles but im not sure what those might be, only confirmed it working with the tornado custom.
 * @param vehicle - 
 * @param livery - 
 * @returns void
 * @remarks Hash: 0xA6D3A8750DC73270
 */
export function SetVehicleRoofLivery(vehicle: number, livery: number): void;

/**
 * This native makes the vehicle stop immediately, as it happens when we enter a multiplayer garage.
 * @param vehicle - 
 * @param distance - 
 * @param duration - 
 * @param bControlVerticalVelocity - 
 * @returns void
 * @remarks Hash: 0x260BE8F09E326A20
 */
export function bringVehicleToHalt(vehicle: number, distance: number, duration: number, bControlVerticalVelocity: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x407DC5E97DB1A4D3
 */
export function 0x407dc5e97db1a4d3(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param model - 
 * @returns number
 * @remarks Hash: 0xBF94DD42F63BDED2
 */
export function isThisModelABicycle(model: number): number;

/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xF8B49F5BA7F850E7
 */
export function 0xf8b49f5ba7f850e7(vehicle: number, p1: number): void;

/**
 * ```
 * flags requires further research, e.g., 0x4/0x8 are related to the AI driving task and 0x20 is internally set and interacts with dynamic entity components.
 * time, often zero and capped at 500, is related to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER
 * ```
 * @param vehicle - 
 * @param recording - 
 * @param script - 
 * @param flags - 
 * @param time - 
 * @param drivingStyle - 
 * @returns void
 * @remarks Hash: 0x7D80FD645D4DA346
 */
export function startPlaybackRecordedVehicleWithFlags(vehicle: number, recording: number, script: string, flags: number, time: number, drivingStyle: number): void;

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#_0x93D9BD300D7789E5)
 * @param vehicle - 
 * @param doorIndex - 
 * @returns number
 * @remarks Hash: 0xCA4AC3EAAE46EC7B
 */
export function getVehicleIndividualDoorLockStatus(vehicle: number, doorIndex: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x10655FAB9915623D
 */
export function SetVehicleHandlingHashForAi(vehicle: number): void;

/**
 * Sets the color of the neon lights on the specified vehicle.
 * 
 * RGB values and colour names taken from the decompiled scripts:
 * 
 * | Colour         |  R  |  G  |  B  |
 * |---------------|:---:|:---:|:---:|
 * | White         | 222 | 222 | 255 |
 * | Blue          | 2   | 21  | 255 |
 * | Electric Blue | 3   | 83  | 255 |
 * | Mint Green    | 0   | 255 | 140 |
 * | Lime Green    | 94  | 255 | 1   |
 * | Yellow        | 255 | 255 | 0   |
 * | Golden Shower | 255 | 150 | 0   |
 * | Orange        | 255 | 62  | 0   |
 * | Red           | 255 | 1   | 1   |
 * | Pony Pink     | 255 | 50  | 100 |
 * | Hot Pink      | 255 | 5   | 190 |
 * | Purple        | 35  | 1   | 255 |
 * | Blacklight    | 15  | 3   | 255 |
 * @param vehicle - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns void
 * @remarks Hash: 0x8E0A582209A62695
 */
export function SetVehicleNeonLightsColour(vehicle: number, r: number, g: number, b: number): void;

/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param plane - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDD8A2D3337F04196
 */
export function setPlaneControlSectionsShouldBreakOffFromExplosions(plane: number, toggle: number): void;

/**
 * Sets whether a boat should remain anchored even when a player is driving it.
 * @param boat - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xE3EBAAE484798530
 */
export function setBoatRemainsAnchoredWhilePlayerIsDriver(boat: number, toggle: number): void;

/**
 * ```
 * GET_H*
 * 
 * NativeDB Introduced: v1604
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xE8718FAF591FD224
 */
export function 0xe8718faf591fd224(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param handler - 
 * @param container - 
 * @returns void
 * @remarks Hash: 0x6A98C2ECF57FA5D4
 */
export function AttachContainerToHandlerFrame(handler: number, container: number): void;

/**
 * ```
 * SCALE: Setting the speed to 30 would result in a speed of roughly 60mph, according to speedometer.  
 * Speed is in meters per second  
 * You can convert meters/s to mph here:  
 * http://www.calculateme.com/Speed/MetersperSecond/ToMilesperHour.htm  
 * ```
 * @param vehicle - 
 * @param speed - 
 * @returns void
 * @remarks Hash: 0xAB54A438726D25D5
 */
export function setVehicleForwardSpeed(vehicle: number, speed: number): void;

/**
 * ```
 * Sets vehicle wheel hydraulic states transition. Known states:
 * 0 - reset
 * 1 - raise wheel (uses value arg, works just like _SET_VEHICLE_HYDRAULIC_WHEEL_VALUE)
 * 2 - jump using wheel
 * ```
 * @param vehicle - 
 * @param wheelId - 
 * @param state - 
 * @param value - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xC24075310A8B9CD1
 */
export function SetHydraulicWheelStateTransition(vehicle: number, wheelId: number, state: number, value: number, p4: number): void;

/**
 * ## Parameters
 * *
 * @param plane - 
 * @returns number
 * @remarks Hash: 0x755D6D5267CBBD7E
 */
export function arePlanePropellersIntact(plane: number): number;

/**
 * This native is used to latch or unlatch the convertible roof of a vehicle. It allows for direct control over the roof's mechanism without actually opening or closing the roof. This can be useful for scenarios where you need to prepare a vehicle's roof to be opened or closed by another action or to ensure it remains fixed in its current state regardless of other interactions.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param vehicle - 
 * @param bLatched - 
 * @returns void
 * @remarks Hash: 0x1A78AD3D8240536F
 */
export function setConvertibleRoofLatchState(vehicle: number, bLatched: number): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param vehicle - 
 * @param wheelIndex - 
 * @param health - 
 * @returns void
 * @remarks Hash: 0x74C68EF97645E79D
 */
export function SetTyreHealth(vehicle: number, wheelIndex: number, health: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param colorPrimary - 
 * @param colorSecondary - 
 * @returns void
 * @remarks Hash: 0xA19435F193E081AC
 */
export function getVehicleColours(vehicle: number, colorPrimary: number, colorSecondary: number): void;

/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xFC40CBF7B90CA77C
 */
export function IsVehicleOnBoostPad(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x36D782F68B309BDA
 */
export function GetHasRocketBoost(vehicle: number): number;

/**
 * ```
 * Time is number of milliseconds before reverting, zero for indefinitely.
 * ```
 * @param vehicle - 
 * @param time - 
 * @param drivingStyle - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x6E63860BBB190730
 */
export function setPlaybackToUseAiTryToRevertBackLater(vehicle: number, time: number, drivingStyle: number, p3: number): void;

/**
 * Determines if the submarine is operating below its designated crush depth.
 * 
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param submarine - 
 * @returns number
 * @remarks Hash: 0x3E71D0B300B7AA79
 */
export function getSubmarineIsUnderDesignDepth(submarine: number): number;

/**
 * ```
 * Note: only some vehicle have extras  
 * extra ids are from 1 - 9 depending on the vehicle
 * @param vehicle - 
 * @param extraId - 
 * @param disable - 
 * @returns void
 * @remarks Hash: 0x7EE3A3C5E4A40CC9
 */
export function setVehicleExtra(vehicle: number, extraId: number, disable: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2A8F319B392E7B3F
 */
export function setTrailerInverseMassScale(vehicle: number, p1: number): void;

/**
 * Incorrectly named `SET_VEHICLE_EXCLUSIVE_DRIVER`; likely `SET_VEHICLE_ALLOW_*`.
 * 
 * Toggles a flag related to `SET_VEHICLE_EXCLUSIVE_DRIVER`, however, doesn't enable that feature (or trigger script events related to it).
 * 
 * See [`_SET_VEHICLE_EXCLUSIVE_DRIVER_2`](#_0xB5C51B5502E85E83).
 * 
 * ```
 * NativeDB Removed Parameter 2: int index
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x41062318F23ED854
 */
export function setVehicleExclusiveDriver(vehicle: number): void;

/**
 * ```
 * Toggles specific flag on turret
 * ```
 * 
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @param index - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC60060EB0D8AC7B1
 */
export function SetVehicleTurretUnk(vehicle: number, index: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x06F43E5175EB6D96
 */
export function hasPreloadModsFinished(p0: any): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x737E398138550FFF
 */
export function 0x737e398138550fff(vehicle: number, toggle: number): void;

/**
 * Similar to [`_GET_AIRCRAFT_BOMB_COUNT`](#_0xEA12BD130D7569A1), this gets the amount of countermeasures that are present on this vehicle.
 * 
 * Use [`_SET_AIRCRAFT_COUNTERMEASURE_COUNT`](#_0x9BDA23BF666F0855) to set the current amount.
 * @param aircraft - 
 * @returns number
 * @remarks Hash: 0xF846AA63DF56B804
 */
export function GetVehicleCountermeasureCount(aircraft: number): number;

/**
 * @returns void
 * @remarks Hash: 0xF25E02CB9C5818F8
 */
export function 0xf25e02cb9c5818f8(): void;

/**
 * ```
 * if true, axles won't bend.  
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x92F0CF722BC4202F
 */
export function setVehicleHasStrongAxles(vehicle: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x430A7631A84C9BE7
 */
export function 0x430a7631a84c9be7(p0: any): void;

/**
 * @returns void
 * @remarks Hash: 0x34AD89078831A4BC
 */
export function setAllVehicleGeneratorsActive(): void;

/**
 * ```
 * The only example I can find of this function in the scripts, is this:  
 * struct _s = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(rPtr((A_0) + 4), 1.21f, 6.15f, 0.3f);
 * @param vehicle - 
 * @param offsetX - 
 * @param offsetY - 
 * @param offsetZ - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x4EC6CFBC7B2E9536
 */
export function getVehicleDeformationAtPos(vehicle: number, offsetX: number, offsetY: number, offsetZ: number): { x: number, y: number, z: number };

/**
 * @returns void
 * @remarks Hash: 0xEF49CF0270307CBE
 */
export function detonateVehiclePhoneExplosiveDevice(): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9849DE24FCF23CCC
 */
export function 0x9849de24fcf23ccc(vehicle: number, toggle: number): void;

/**
 * ```
 * returns a string which is the codename of the vehicle's currently selected secondary color  
 * ```
 * @param vehicle - 
 * @returns string
 * @remarks Hash: 0x4967A516ED23A5A1
 */
export function getVehicleModColor2Name(vehicle: number): string;

/**
 * Returns whether the outrigger legs are deployed for the vehicle.
 * The Chernobog is one of the few vehicles with outrigger legs.
 * 
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x3A9128352EAC9E85
 */
export function AreOutriggerLegsDeployed(vehicle: number): number;

/**
 * ```
 * NativeDB Introduced: 3095
 * ```
 * 
 * Determines if the nitrous is currently activated in the specified vehicle.
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x491E822B2C464FE4
 */
export function isNitrousActive(vehicle: number): number;

/**
 * ```
 * Sets the neon lights of the specified vehicle on/off.  
 * Indices:  
 * 0 = Left  
 * 1 = Right  
 * 2 = Front  
 * 3 = Back  
 * ```
 * @param vehicle - 
 * @param index - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2AA720E4287BF269
 */
export function SetVehicleNeonLightEnabled(vehicle: number, index: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x065D03A9D6B2C6B5
 */
export function 0x065d03a9d6b2c6b5(p0: any, p1: any): void;

/**
 * ```
 * Returns true only when the magnet is active, will return false if the hook is active  
 * ```
 * @param cargobob - 
 * @returns number
 * @remarks Hash: 0x6E08BF5B3722BAC9
 */
export function doesCargobobHavePickupMagnet(cargobob: number): number;

/**
 * ```
 * Scripts verify that towTruck is the first parameter, not the second.  
 * ```
 * @param towTruck - 
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x146DF9EC4C4B9FD4
 */
export function isVehicleAttachedToTowTruck(towTruck: number, vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xBCDF8BAF56C87B6A
 */
export function setPlayersLastVehicle(vehicle: number): void;

/**
 * ```
 * The inner function has a switch on the second parameter. It's the stuck timer index.  
 * Here's some pseudo code I wrote for the inner function:  
 * void __fastcall NATIVE_RESET_VEHICLE_STUCK_TIMER_INNER(CUnknown* unknownClassInVehicle, int timerIndex)  
 * {  
 * 	switch (timerIndex)  
 * 	{  
 * 	case 0:  
 * unknownClassInVehicle->FirstStuckTimer = (WORD)0u;  
 * 	case 1:  
 * unknownClassInVehicle->SecondStuckTimer = (WORD)0u;  
 * 	case 2:  
 * unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;  
 * 	case 3:  
 * unknownClassInVehicle->FourthStuckTimer = (WORD)0u;  
 * 	case 4:  
 * unknownClassInVehicle->FirstStuckTimer = (WORD)0u;  
 * unknownClassInVehicle->SecondStuckTimer = (WORD)0u;  
 * unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;  
 * unknownClassInVehicle->FourthStuckTimer = (WORD)0u;  
 * break;  
 * 	};  
 * }  
 * ```
 * @param vehicle - 
 * @param nullAttributes - 
 * @returns void
 * @remarks Hash: 0xD7591B0065AFAA7A
 */
export function resetVehicleStuckTimer(vehicle: number, nullAttributes: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xF051D9BFB6BA39C0
 */
export function 0xf051d9bfb6ba39c0(p0: any): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param trailer - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0x3C7D42D58F770B54
 */
export function attachVehicleToTrailer(vehicle: number, trailer: number, radius: number): void;

/**
 * Sets whether the trailer can attach to vehicles
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x2FA2494B47FDD009
 */
export function setTrailerAttachmentEnabled(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x66E3AAFACE2D1EB8
 */
export function 0x66e3aaface2d1eb8(p0: any, p1: any, p2: any): void;

/**
 * This native sets the turbulence multiplier. It only works for planes.
 * 0.0 = no turbulence at all.
 * 1.0 = heavy turbulence.
 * 
 * Works by just calling it once, does not need to be called every tick.
 * @param vehicle - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0xAD2D28A1AFDFF131
 */
export function setPlaneTurbulenceMultiplier(vehicle: number, multiplier: number): void;

/**
 * Changes the key used to transform a vehicle into submarine mode. When set to true, the transformation key switches from the default raise/lower convertible roof key (usually 'H') to the special vehicle transformation key (usually 'X').
 * 
 * ```
 * NativeDB Introduced: v1365
 * ```
 * @param vehicle - 
 * @param useAlternateInput - 
 * @returns void
 * @remarks Hash: 0x41B9FB92EDED32A6
 */
export function setTransformToSubmarineUsesAlternateInput(vehicle: number, useAlternateInput: boolean): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x9A83F5F9963775EF
 */
export function haveVehicleModsStreamedIn(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x7C0043FDFF6436BC
 */
export function detachContainerFromHandlerFrame(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param modType - 
 * @returns void
 * @remarks Hash: 0x92D619E420858204
 */
export function removeVehicleMod(vehicle: number, modType: number): void;

/**
 * ```
 * Outputs 2 Vector3's.
 * Scripts check if out2.x - out1.x > something.x
 * Could be suspension related, as in max suspension height and min suspension height, considering the natives location.
 * ```
 * @param vehicle - 
 * @param out1 - 
 * @param out2 - 
 * @returns void
 * @remarks Hash: 0xDF7E3EEB29642C38
 */
export function GetVehicleSuspensionBounds(vehicle: number, out1: { x: number, y: number, z: number }, out2: { x: number, y: number, z: number }): void;

/**
 * See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#_0x46E571A0E20D01F1).
 * @param vehicle - 
 * @param windowIndex - 
 * @returns void
 * @remarks Hash: 0x7AD9E6CE657D69E3
 */
export function rollDownWindow(vehicle: number, windowIndex: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1BBAC99C0BC53656
 */
export function SetVehicleRampSidewaysLaunchMotion(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x51BB2D88D31A914B
 */
export function setVehicleCanLeakOil(vehicle: number, toggle: number): void;

/**
 * ```
 * formerly known as _GET_VEHICLE_PAINT_FADE
 * The result is a value from 0-1, where 0 is fresh paint.
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xA82819CAC9C4C403
 */
export function getVehicleEnveffScale(vehicle: number): number;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x8664170EF165C4A6
 */
export function 0x8664170ef165c4a6(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x23428FC53C60919C
 */
export function disablePlaneAileron(vehicle: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x2310A8F9421EBF43
 */
export function 0x2310a8f9421ebf43(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param vehicle - 
 * @param scale - 
 * @returns any
 * @remarks Hash: 0x84D7FFD223CAAFFD
 */
export function SetVehicleExplosiveDamageScale(vehicle: number, scale: number): any;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x59BF8C3D52C92F66
 */
export function setVehicleCanBreak(vehicle: number, toggle: number): void;

/**
 * ```
 * Stops the cargobob from being able to attach any vehicle
 * ```
 * 
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x94A68DA412C4007D
 */
export function SetCargobobHookCanAttach(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xB72E26D81006005B
 */
export function addVehicleUpsidedownCheck(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xB5CC40FBCB586380
 */
export function isVehicleSirenAudioOn(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x33506883545AC0DF
 */
export function forceSubmarineSurfaceMode(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0xB3B3359379FE77D3
 */
export function setRandomVehicleDensityMultiplierThisFrame(multiplier: number): void;

/**
 * Vehicle must be a plane.
 * Native name is between SET_VEHICLE_BRAKE_LIGHTS and SET_VEHICLE_BULLDOZER_ARM_POSITION alphabetically.
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xC361AA040D6637A8
 */
export function 0xc361aa040d6637a8(vehicle: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param enabled - 
 * @returns void
 * @remarks Hash: 0x29B18B4FD460CA8F
 */
export function setVehicleWheelsCanBreak(vehicle: number, enabled: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param modType - 
 * @param modIndex - 
 * @returns number
 * @remarks Hash: 0x00834EAC4A96E010
 */
export function isVehicleModGen9Exclusive(vehicle: number, modType: number, modIndex: number): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x8821196D91FA2DE5
 */
export function 0x8821196d91fa2de5(vehicle: number, toggle: number): void;

/**
 * ```
 * SET_VEHICLE_*
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x76D26A22750E849E
 */
export function 0x76d26a22750e849e(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param entity - 
 * @param p2 - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xA1DD82F3CCF9A01E
 */
export function attachEntityToCargobob(vehicle: number, entity: number, p2: number, x: number, y: number, z: number): void;

/**
 * ```
 * Not present in the retail version! It's just a nullsub.  
 * p0 always true (except in one case)  
 * p1 a random vehicle hash loaded in memory  
 * successIndicator: 0 if success, -1 if failed
 * ```
 * @param p0 - 
 * @param modelHash - 
 * @param successIndicator - 
 * @returns void
 * @remarks Hash: 0x055BF0AC0C34F4FD
 */
export function getRandomVehicleModelInMemory(p0: number, modelHash: number, successIndicator: number): void;

/**
 * Paint index goes from 0 to 12.
 * 
 * You can find the list of colors and ids here: [_GET_VEHICLE_HEADLIGHTS_COLOUR](#_0x3DFF319A831E0CDB)
 * @param vehicle - 
 * @param color - 
 * @returns void
 * @remarks Hash: 0xE41033B25D003A07
 */
export function SetVehicleXenonLightsColor(vehicle: number, color: number): void;

/**
 * ## Parameters
 * *
 * @param active - 
 * @returns void
 * @remarks Hash: 0x608207E7A8FB787C
 */
export function setAllLowPriorityVehicleGeneratorsActive(active: number): void;

/**
 * ```
 * Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
 * For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" (e.g., in native GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID) corresponds to a unique identifier within the recording streaming module.
 * Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
 * ```
 * @param recording - 
 * @param script - 
 * @returns void
 * @remarks Hash: 0xAF514CABE74CBF15
 */
export function requestVehicleRecording(recording: number, script: string): void;

/**
 * This method is utilized solely for debugging purposes and is functional only in debug builds of the game. Please note that its functionality may not be available in the retail version.
 * @param vehicle - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0xBFDF984E2C22B94F
 */
export function setVehicleNameDebug(vehicle: number, name: string): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x143921E45EC44D62
 */
export function SetDisableVehicleUnk(toggle: number): void;

/**
 * ```
 * Possibly: Returns whether the searchlight (found on police vehicles) is toggled on.  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xC0F97FCE55094987
 */
export function isVehicleSearchlightOn(vehicle: number): number;

/**
 * ```
 * They use the same color indexs as SET_VEHICLE_COLOURS.  
 * ```
 * @param vehicle - 
 * @param pearlescentColor - 
 * @param wheelColor - 
 * @returns void
 * @remarks Hash: 0x2036F561ADD12E33
 */
export function setVehicleExtraColours(vehicle: number, pearlescentColor: number, wheelColor: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns any
 * @remarks Hash: 0x54B0F614960F4A5F
 */
export function addVehicleCombatAngledAvoidanceArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): any;

/**
 * Train models must be [requested](#_0x963D27A58DF860AC) before use. See trains.xml (located in `Grand Theft Auto V\update\update.rpf\common\data\levels\gta5\trains.xml`) for freight and metro variations.
 * 
 * Model names to request can be found by searching `model_name` in the file.
 * 
 * The `Lua` usage example provided down below has been provided in such way so users can test each and every train variation.
 * @param variation - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param direction - 
 * @returns number
 * @remarks Hash: 0x63C6CCA8E68AE8C8
 */
export function createMissionTrain(variation: number, x: number, y: number, z: number, direction: number): number;

/**
 * ```
 * Creates a script vehicle generator at the given coordinates. Most parameters after the model hash are unknown.  
 * Parameters:  
 * a/w/s - Generator position  
 * heading - Generator heading  
 * p4 - Unknown (always 5.0)  
 * p5 - Unknown (always 3.0)  
 * modelHash - Vehicle model hash  
 * p7/8/9/10 - Unknown (always -1)  
 * p11 - Unknown (usually TRUE, only one instance of FALSE)  
 * p12/13 - Unknown (always FALSE)  
 * p14 - Unknown (usally FALSE, only two instances of TRUE)  
 * p15 - Unknown (always TRUE)  
 * p16 - Unknown (always -1)  
 * Vector3 coords = GET_ENTITY_COORDS(PLAYER_PED_ID(), 0);	CREATE_SCRIPT_VEHICLE_GENERATOR(coords.x, coords.y, coords.z, 1.0f, 5.0f, 3.0f, GET_HASH_KEY("adder"), -1. -1, -1, -1, -1, true, false, false, false, true, -1);  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param heading - 
 * @param p4 - 
 * @param p5 - 
 * @param modelHash - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @param p11 - 
 * @param p12 - 
 * @param p13 - 
 * @param p14 - 
 * @param p15 - 
 * @param p16 - 
 * @returns number
 * @remarks Hash: 0x9DEF883114668116
 */
export function createScriptVehicleGenerator(x: number, y: number, z: number, heading: number, p4: number, p5: number, modelHash: number, p7: number, p8: number, p9: number, p10: number, p11: number, p12: number, p13: number, p14: number, p15: number, p16: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x3D34E80EED4AE3BE
 */
export function IsVehicleRocketBoostActive(vehicle: number): number;

/**
 * Affects the playback speed of the submarine car conversion animations. Does not affect hardcoded animations such as the wheels being retracted. In decompiled scripts the only value used for transformRate is 2.5.
 * @param vehicle - 
 * @param transformRate - 
 * @returns void
 * @remarks Hash: 0x498218259FB7C72D
 */
export function setTransformRateForAnimation(vehicle: number, transformRate: number): void;

/**
 * ```
 * Allows you to toggle bulletproof tires.  
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xEB9DC3C7D8596C46
 */
export function setVehicleTyresCanBurst(vehicle: number, toggle: number): void;

/**
 * This native allows opening or closing the wings of the Deluxo/Oppressor. For the Deluxo, wing deployment depends on sufficient altitude.
 * @param vehicle - 
 * @param ratio - 
 * @returns void
 * @remarks Hash: 0x70A252F60A3E036B
 */
export function setHoverModeWingRatio(vehicle: number, ratio: number): void;

/**
 * ```
 * HookOffset defines where the hook is attached. leave at 0 for default attachment.
 * ```
 * @param towTruck - 
 * @param vehicle - 
 * @param rear - 
 * @param hookOffsetX - 
 * @param hookOffsetY - 
 * @param hookOffsetZ - 
 * @returns void
 * @remarks Hash: 0x29A16F8D621C4508
 */
export function attachVehicleToTowTruck(towTruck: number, vehicle: number, rear: number, hookOffsetX: number, hookOffsetY: number, hookOffsetZ: number): void;

/**
 * ```
 * Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x1F2E4E06DEA8992B
 */
export function forcePlaybackRecordedVehicleUpdate(vehicle: number, p1: number): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param vehicle - 
 * @param togle - 
 * @returns void
 * @remarks Hash: 0x4AD280EB48B2D8E6
 */
export function 0x4ad280eb48b2d8e6(vehicle: number, togle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param trailer - 
 * @param offsetX - 
 * @param offsetY - 
 * @param offsetZ - 
 * @param coordsX - 
 * @param coordsY - 
 * @param coordsZ - 
 * @param rotationX - 
 * @param rotationY - 
 * @param rotationZ - 
 * @param disableColls - 
 * @returns void
 * @remarks Hash: 0x16B5E274BDE402F8
 */
export function attachVehicleOnToTrailer(vehicle: number, trailer: number, offsetX: number, offsetY: number, offsetZ: number, coordsX: number, coordsY: number, coordsZ: number, rotationX: number, rotationY: number, rotationZ: number, disableColls: number): void;

/**
 * @returns void
 * @remarks Hash: 0x48ADC8A773564670
 */
export function instantlyFillVehiclePopulation(): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xE38CB9D7D39FDBCC
 */
export function EjectJb700Roof(vehicle: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param time - 
 * @returns void
 * @remarks Hash: 0xE00F2AB100B76E89
 */
export function SetVehicleRocketBoostRefillTime(vehicle: number, time: number): void;

/**
 * ```
 * Max 1000.
 * At -100 both helicopter rotors will stall.
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xAC51915D27E4A5F7
 */
export function getHeliTailBoomHealth(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x291E373D483E7EE7
 */
export function isAnyPedRappellingFromHeli(vehicle: number): number;

/**
 * Removes the cargen area of interest and resumes normal cargen spawning.
 * 
 * You can set the area of interest with [`SET_VEHICLE_GENERATOR_AREA_OF_INTEREST`](#_0x9A75585FB2E54FAD)
 * @returns void
 * @remarks Hash: 0x0A436B8643716D14
 */
export function clearVehicleGeneratorAreaOfInterest(): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xF095C0405307B21B
 */
export function getIsVehiclePrimaryColourCustom(vehicle: number): number;

/**
 * ```
 * Sets the tire smoke's color of this vehicle.  
 * vehicle: The vehicle that is the target of this method.  
 * r: The red level in the RGB color code.  
 * g: The green level in the RGB color code.  
 * b: The blue level in the RGB color code.  
 * Note:  
 * setting r,g,b to 0 will give the car independance day tyre smoke  
 * ```
 * @param vehicle - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns void
 * @remarks Hash: 0xB5BA80F839791C0F
 */
export function setVehicleTyreSmokeColor(vehicle: number, r: number, g: number, b: number): void;

/**
 * ## Parameters
 * *
 * @param outVec - 
 * @param p1 - 
 * @param outVec1 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @returns number
 * @remarks Hash: 0xA4822F1CF23F4810
 */
export function 0xa4822f1cf23f4810(outVec: { x: number, y: number, z: number }, p1: { x: number, y: number, z: number }, outVec1: { x: number, y: number, z: number }, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): number;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x97841634EF7DF1D6
 */
export function 0x97841634ef7df1d6(vehicle: number, toggle: number): void;

/**
 * ```
 * Toggles to render distant vehicles. They may not be vehicles but images to look like vehicles.  
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF796359A959DF65D
 */
export function setDistantCarsEnabled(toggle: number): void;

/**
 * ```c
 * enum WindowTints  
 * {  
 * 	WINDOWTINT_NONE = 0,
 * 	WINDOWTINT_PURE_BLACK = 1,
 * 	WINDOWTINT_DARKSMOKE = 2,
 * 	WINDOWTINT_LIGHTSMOKE = 3,
 * 	WINDOWTINT_STOCK = 4,
 * 	WINDOWTINT_LIMO = 5,
 * 	WINDOWTINT_GREEN = 6
 * };  
 * ```
 * @param vehicle - 
 * @param tint - 
 * @returns void
 * @remarks Hash: 0x57C51E6BAD752696
 */
export function setVehicleWindowTint(vehicle: number, tint: number): void;

/**
 * Smashes a vehicles window. See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#_0x46E571A0E20D01F1).
 * @param vehicle - 
 * @param windowIndex - 
 * @returns void
 * @remarks Hash: 0x9E5B5E4D2CCD2259
 */
export function smashVehicleWindow(vehicle: number, windowIndex: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0xF3B0E0AED097A3F5
 */
export function 0xf3b0e0aed097a3f5(p0: any, p1: any): any;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param modType - 
 * @returns number
 * @remarks Hash: 0x772960298DA26FDB
 */
export function getVehicleMod(vehicle: number, modType: number): number;

/**
 * ```
 * Works only on vehicles that support hydraulic.
 * ```
 * @param vehicle - 
 * @param wheelId - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x84EA99C62CB3EF0C
 */
export function SetHydraulicWheelValue(vehicle: number, wheelId: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xAB8E2EDA0C0A5883
 */
export function skipToEndAndStopPlaybackRecordedVehicle(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD4B8E3D1917BC86B
 */
export function setDisableRandomTrainsThisFrame(toggle: number): void;

/**
 * ```
 * NativeDB Introduced: 3095
 * ```
 * 
 * Retrieves the remaining duration of nitrous boost available for the specified vehicle.
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xBEC4B8653462450E
 */
export function GetRemainingNitrousDuration(vehicle: number): number;

/**
 * ```
 * SET_*
 * ```
 * @param vehicle - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x428AD3E26C8D9EB0
 */
export function 0x428ad3e26c8d9eb0(vehicle: number, x: number, y: number, z: number, p4: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xA77DC70BD689A1E5
 */
export function isVehicleInSubmarineMode(vehicle: number): number;

/**
 * ```
 * 1000 is max health  
 * Begins leaking gas at around 650 health  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x7D5DABE888D2D074
 */
export function getVehiclePetrolTankHealth(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x5E569EC46EC21CAE
 */
export function 0x5e569ec46ec21cae(vehicle: number, toggle: number): void;

/**
 * ```
 * NativeDB Added Parameter 2: float maxEngineHealth
 * NativeDB Added Parameter 3: float maxPetrolTankHealth
 * NativeDB Added Parameter 4: float maxBodyHealth
 * NativeDB Added Parameter 5: float maxMainRotorHealth
 * NativeDB Added Parameter 6: float maxTailRotorHealth
 * NativeDB Added Parameter 7: float maxUnkHealth
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xB8EF61207C2393A9
 */
export function getVehicleHealthPercentage(vehicle: number): number;

/**
 * Sounds the horn for the specified vehicle. Note that if a player is in the vehicle, it will only sound briefly.
 * @param vehicle - 
 * @param duration - 
 * @param mode - 
 * @param forever - 
 * @returns void
 * @remarks Hash: 0x9C8C6504B5B63D2C
 */
export function startVehicleHorn(vehicle: number, duration: number, mode: number, forever: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x684785568EF26A22
 */
export function setVehicleHandbrake(vehicle: number, toggle: number): void;

/**
 * ```
 * SET_VEHICLE_W* (next character is either H or I)
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2C4A1590ABF43E8B
 */
export function 0x2c4a1590abf43e8b(vehicle: number, p1: number): void;

/**
 * ```
 * Maximum amount of vehicles with vehicle stuck check appears to be 16.  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x57E4C39DE5EE8470
 */
export function doesVehicleHaveStuckVehicleCheck(vehicle: number): number;

/**
 * Adjusts the scale of damage applied to a specified section of a plane.
 * In the decompiled scripts the `damageScale` is always set to `0f` (maybe to disable damages on the specified section)
 * 
 * ```c
 * enum ePlaneDamageSection {
 *     WING_L = 0,
 *     WING_R = 1,
 *     TAIL = 2,
 *     ENGINE_L = 3,
 *     ENGINE_R = 4,
 *     ELEVATOR_L = 5,
 *     ELEVATOR_R = 6,
 *     AILERON_L = 7,
 *     AILERON_R = 8,
 *     RUDDER = 9,
 *     RUDDER_2 = 10,
 *     AIRBRAKE_L = 11,
 *     AIRBRAKE_R = 12
 * }
 * ```
 * 
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @param damageSection - 
 * @returns void
 * @remarks Hash: 0x0BBB9A7A8FFE931B
 */
export function setPlaneSectionDamageScale(vehicle: number, damageSection: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param doorIndex - 
 * @param doorLockStatus - 
 * @returns void
 * @remarks Hash: 0xBE70724027F85BCD
 */
export function setVehicleIndividualDoorsLocked(vehicle: number, doorIndex: number, doorLockStatus: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x0F3B4D4E43177236
 */
export function GetBoatBoomPositionRatio3(vehicle: number, p1: number): void;

/**
 * Please refer to [`GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX`](#_0xF11BC2DD9A3E7195) for plate indicies.
 * @param vehicle - 
 * @param plateIndex - 
 * @returns void
 * @remarks Hash: 0x9088EB5A43FFB0A1
 */
export function setVehicleNumberPlateTextIndex(vehicle: number, plateIndex: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0xBC74B4BE25EB6C8A
 */
export function isHeliPartBroken(vehicle: number, p1: number, p2: number, p3: number): number;

/**
 * Prevents a specified entity from being detached from a Cargobob, even in the event of collisions.
 * @param cargobob - 
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x1F34B0626C594380
 */
export function setCargobobExcludeFromPickupEntity(cargobob: number, entity: number): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xE43701C36CAFF1A4
 */
export function DoesVehicleHaveLandingGear(vehicle: number): number;

/**
 * ```
 * Checks via CVehicleModelInfo  
 * ```
 * @param vehicle - 
 * @param extraId - 
 * @returns number
 * @remarks Hash: 0x1262D55792428154
 */
export function doesExtraExist(vehicle: number, extraId: number): number;

/**
 * ```
 * Something to do with "high speed bump severity"?  
 * if (!sub_87a46("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER")) {  
 *     VEHICLE::_84FD40F56075E816(0.0);  
 *     sub_8795b("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER", 1);  
 * }  
 * ```
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0x84FD40F56075E816
 */
export function SetCarHighSpeedBumpSeverityMultiplier(multiplier: number): void;

/**
 * ```
 * First two parameters swapped. Scripts verify that towTruck is the first parameter, not the second.  
 * ```
 * @param towTruck - 
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xC2DB6B6708350ED8
 */
export function detachVehicleFromTowTruck(towTruck: number, vehicle: number): void;

/**
 * p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).
 * 
 * See [`REQUEST_VEHICLE_RECORDING`](#_0xAF514CABE74CBF15).
 * @param vehicle - 
 * @param recording - 
 * @param script - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x3F878F92B3A7A071
 */
export function startPlaybackRecordedVehicle(vehicle: number, recording: number, script: string, p3: number): void;

/**
 * ```
 * 1000 is max health
 * Begins leaking gas at around 650 health
 * -999.90002441406 appears to be minimum health, although nothing special occurs <- false statement
 * @param vehicle - 
 * @param health - 
 * @returns void
 * @remarks Hash: 0x45F6D8EEF34ABEF1
 */
export function setVehicleEngineHealth(vehicle: number, health: number): void;

/**
 * ## Parameters
 * *
 * @param id - 
 * @returns number
 * @remarks Hash: 0x102D125411A7B6E6
 */
export function getTotalDurationOfVehicleRecordingId(id: number): number;

/**
 * ```
 * Checks if model is a boat, then checks for FLAG_IS_JETSKI.
 * ```
 * @param model - 
 * @returns number
 * @remarks Hash: 0x9537097412CF75FE
 */
export function IsThisModelAJetski(model: number): number;

/**
 * ```
 * A vehicle recording playback flag only used in jewelry_heist
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x063AE2B2CC273588
 */
export function 0x063ae2b2cc273588(vehicle: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDFFCEF48E511DB48
 */
export function setVehicleActiveDuringPlayback(vehicle: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x8235F1BEAD557629
 */
export function 0x8235f1bead557629(vehicle: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xA2459F72C14E2E8D
 */
export function GetIsVehicleShuntBoostActive(vehicle: number): number;

/**
 * ```
 * Distance traveled in the vehicles current recording.
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x2DACD605FC681475
 */
export function getPositionInRecording(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0x8EA86DF356801C7D
 */
export function SetHydraulicWheelState(vehicle: number, state: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xA37B9A517B133349
 */
export function setVehicleWheelsCanBreakOffWhenBlowUp(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x685D5561680D088B
 */
export function setCargobobPickupMagnetFalloff(vehicle: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0xCDE5E70C1DDB954C
 */
export function setVehicleAlarm(vehicle: number, state: number): void;

/**
 * This works on helicopters and planes.
 * 
 * Prevents a helicopter from exploding due to relatively minor body damage. 
 * 
 * ```
 * NativeDB Introduced: v1103
 * ```
 * @param helicopter - 
 * @returns void
 * @remarks Hash: 0xEDBC8405B3895CC9
 */
export function setDisableHeliExplodeFromBodyDamage(helicopter: number): void;

/**
 * ```
 * CLEAR_VEHICLE_*
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x4419966C9936071A
 */
export function 0x4419966c9936071a(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x678B9BB8C3F58FEB
 */
export function getVehicleTyresCanBurst(vehicle: number): number;

/**
 * ```
 * Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.  
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x71B0892EC081D60A
 */
export function setVehicleExplodesOnHighExplosionDamage(vehicle: number, toggle: number): void;

/**
 * According to decompiled scripts this should work with the `deluxo` and `oppressor2` vehicles.
 * Does nothing when used on `oppressor2`.
 * 
 * For the deluxo:
 * - Set `state` to `0.0`: Fully transform to a 'road' vehicle (non-hover mode).
 * - Set `state` to `1.0`: Fully transform to a 'flying' vehicle (hover mode).
 * 
 * If you set it to something like 0.5, then something [weird happens](https://streamable.com/p6wmr), you end up in some 50% hover mode, 50% not hover mode.
 * 
 * This doesn't need to be called every tick, just once and the vehicle will transform to that state at the usual transform speed. It'll just stop transforming when it reaches the state you provided.
 * 
 * Once this native is used then players will just be able to hit the vehicle transform key to toggle the transformation cycle; it won't block users from using the key.
 * @param vehicle - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0x438B3D7CA026FE91
 */
export function setSpecialFlightModeTargetRatio(vehicle: number, state: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x99CAD8E7AFDB60FA
 */
export function 0x99cad8e7afdb60fa(vehicle: number, p1: number, p2: number): void;

/**
 * Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
 * @param sourceVehicle - 
 * @param targetVehicle - 
 * @returns void
 * @remarks Hash: 0xE44A982368A4AF23
 */
export function copyVehicleDamages(sourceVehicle: number, targetVehicle: number): void;

/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#_0x93D9BD300D7789E5)
 * @param vehicle - 
 * @param doorIndex - 
 * @returns number
 * @remarks Hash: 0x3E933CFF7B111C22
 */
export function isVehicleDoorFullyOpen(vehicle: number, doorIndex: number): number;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDA5E12F728DB30CA
 */
export function SetRandomBoatsInMp(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param modType - 
 * @param modIndex - 
 * @returns number
 * @remarks Hash: 0x90A38E9838E0A8C1
 */
export function getVehicleModModifierValue(vehicle: number, modType: number, modIndex: number): number;

/**
 * Used alongside [`SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO`](#_0x438B3D7CA026FE91), this function initiates hover transformation for vehicles with a hover mode, like the `Deluxo`, based on a specified ratio (0.0 to 1.0). Incorrect values can glitch the vehicle. Without pairing, vehicles revert to car mode. Ineffective on the `oppressor2`
 * @param vehicle - 
 * @param ratio - 
 * @returns void
 * @remarks Hash: 0xD138FA15C9776837
 */
export function setSpecialFlightModeRatio(vehicle: number, ratio: number): void;

/**
 * ```
 * p1 (toggle) was always 1 (true) except in one case in the b678 scripts.  
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x07116E24E9D1929D
 */
export function setVehicleIsRacing(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x5335BE58C083E74E
 */
export function LowerRetractableWheels(vehicle: number): void;

/**
 * Native is significantly more complicated than simply generating a random vector & length.
 * 
 * The 'point' is either 400.0 or 250.0 units away from the Ped's current coordinates; and paths into functions like rage::grcViewport___IsSphereVisible.
 * 
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param ped - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x8DC9675797123522
 */
export function FindRandomPointInSpace(ped: number): { x: number, y: number, z: number };

/**
 * ```
 * Previously named GET_VEHICLE_DEFORMATION_GET_TREE (hash collision)
 * from Decrypted Scripts I found
 * VEHICLE::SET_VEHICLE_CEILING_HEIGHT(l_BD9[2/*2*/], 420.0);
 * ```
 * @param vehicle - 
 * @param height - 
 * @returns void
 * @remarks Hash: 0xA46413066687A328
 */
export function setVehicleCeilingHeight(vehicle: number, height: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x870B8B7A766615C8
 */
export function 0x870b8b7a766615c8(p0: any, p1: any, p2: any): void;

/**
 * ```
 * Returns how many possible mods a vehicle has for a given mod type  
 * ```
 * @param vehicle - 
 * @param modType - 
 * @returns number
 * @remarks Hash: 0xE38E9162A2500646
 */
export function getNumVehicleMods(vehicle: number, modType: number): number;

/**
 * @returns void
 * @remarks Hash: 0xE01903C47C7AC89E
 */
export function clearLastDrivenVehicle(): void;

/**
 * ```
 * Works for vehicles with a retractable landing gear  
 * landing gear states:  
 * 0: Deployed  
 * 1: Closing  
 * 2: Opening  
 * 3: Retracted  
 * ```
 * @param vehicle - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0xCFC8BE9A5E1FE575
 */
export function controlLandingGear(vehicle: number, state: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param seatIndex - 
 * @returns number
 * @remarks Hash: 0x30785D90C956BF35
 */
export function canShuffleSeat(vehicle: number, seatIndex: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x182F266C2D9E2BEB
 */
export function 0x182f266c2d9e2beb(vehicle: number, p1: number): void;

/**
 * ```
 * Returns max braking of the specified vehicle model.
 * ```
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0xDC53FD41B4ED944C
 */
export function getVehicleModelMaxBraking(modelHash: number): number;

/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x887FA38787DE8C72
 */
export function 0x887fa38787de8c72(vehicle: number): void;

/**
 * Determines if a vehicle is a convertible with an animatable roof. This native checks if the specified vehicle model features a convertible roof that can be lowered or raised through an animation.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param vehicle - 
 * @param checkRoofExtras - 
 * @returns number
 * @remarks Hash: 0x52F357A30698BCCE
 */
export function isVehicleAConvertible(vehicle: number, checkRoofExtras: number): number;

/**
 * Determines whether a specific vehicle is equipped with a roof.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x8AC862B0B32C5B80
 */
export function doesVehicleHaveRoof(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x563B65A643ED072E
 */
export function IsVehicleWeaponDisabled(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x35E0654F4BAD7971
 */
export function 0x35e0654f4bad7971(p0: number): void;

/**
 * ```
 * Does nothing. It's a nullsub.
 * 
 * NativeDB Introduced: v1604
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x99A05839C46CE316
 */
export function 0x99a05839c46ce316(toggle: number): void;

/**
 * ```
 * Roll down all the windows of the vehicle passed through the first parameter.  
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x85796B0549DDE156
 */
export function rollDownWindows(vehicle: number): void;

/**
 * ```
 * Same call as VEHICLE::_0x0F3B4D4E43177236
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xC1F981A6F74F0C23
 */
export function GetBoatBoomPositionRatio2(vehicle: number, p1: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x9640E30A7F395E4B
 */
export function 0x9640e30a7f395e4b(vehicle: number, p1: any, p2: any, p3: any, p4: any): void;

/**
 * Sets flag on vehicle that changes behaviour in relation to when player gets wanted level
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x4E74E62E0A97E901
 */
export function setPoliceFocusWillTrackVehicle(vehicle: number, p1: number): void;

/**
 * ```
 * Commands the driver of an armed vehicle (p0) to shoot its weapon at a target (p1). p3, p4 and p5 are the coordinates of the target. Example:  
 * WEAPON::SET_CURRENT_PED_VEHICLE_WEAPON(pilot,GAMEPLAY::GET_HASH_KEY("VEHICLE_WEAPON_PLANE_ROCKET"));VEHICLE::SET_VEHICLE_SHOOT_AT_TARGET(pilot, target, targPos.x, targPos.y, targPos.z);  
 * ```
 * @param driver - 
 * @param entity - 
 * @param xTarget - 
 * @param yTarget - 
 * @param zTarget - 
 * @returns void
 * @remarks Hash: 0x74CD9A9327A282EA
 */
export function setVehicleShootAtTarget(driver: number, entity: number, xTarget: number, yTarget: number, zTarget: number): void;

/**
 * ```
 * Landing gear states:  
 * 0: Deployed  
 * 1: Closing (Retracting)
 * 3: Opening (Deploying)
 * 4: Retracted  
 * 5: Broken
 * ```
 * 
 * Landing gear state 2 is never used.
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x9B0F3DCA3DB0F4CD
 */
export function getLandingGearState(vehicle: number): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x0205F5365292D2EB
 */
export function 0x0205f5365292d2eb(vehicle: number, p1: number): void;

/**
 * Checks if a boat is currently anchored.
 * 
 * This native is a getter for [SET_BOAT_ANCHOR](#_0x75DBEC174AEEAD10).
 * 
 * 
 * ```
 * NativeDB Introduced: v573
 * ```
 * @param boat - 
 * @returns number
 * @remarks Hash: 0xB0AD1238A709B1A2
 */
export function isBoatAnchored(boat: number): number;

/**
 * ```
 * Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x24CB2137731FFE89
 */
export function getVehicleNumberOfPassengers(vehicle: number): number;

/**
 * ```
 * Works just like SET_VEHICLE_ENGINE_HEALTH, didn't saw any difference. But this native works only for planes.
 * ```
 * @param vehicle - 
 * @param health - 
 * @returns void
 * @remarks Hash: 0x2A86A0475B6A1434
 */
export function SetPlaneEngineHealth(vehicle: number, health: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xA6E9FDCB2C76785E
 */
export function requestVehicleHighDetailModel(vehicle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x9D1224004B3A6707
 */
export function getNumVehicleWindowTints(): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x93A3996368C94158
 */
export function modifyVehicleTopSpeed(vehicle: number, value: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * NativeDB Added Parameter 2 (2060): float durationMod : A multiplier applied to the default nitrous duration (default is 3 seconds). 
 * NativeDB Added Parameter 3 (2060): float power : A multiplier applied to the default nitrous power multiplier (default is 3).
 * NativeDB Added Parameter 4 (2060): float rechargeTime : A multiplier applied to the default nitrous recharge rate.
 * NativeDB Added Parameter 5 (2060): BOOL disableSound : A boolean to disable the default nitrous sound when the nitrous is active.
 * ```
 * 
 * Overrides the default settings of a vehicle's nitrous system, allowing custom control over its performance characteristics.
 * @param vehicle - 
 * @param override - 
 * @returns void
 * @remarks Hash: 0xC8E9B6B71B8E660D
 */
export function setOverrideNitrousLevel(vehicle: number, override: number): void;

/**
 * ```
 * value between 0.0 and 1.0  
 * ```
 * @param helicopter - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0x6E0859B530A365CC
 */
export function SetHelicopterRollPitchYawMult(helicopter: number, multiplier: number): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param vehicle - 
 * @param wheelIndex - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0x01894E2EDE923CA2
 */
export function SetTyreWearMultiplier(vehicle: number, wheelIndex: number, multiplier: number): void;

/**
 * ## Parameters
 * *
 * @param vehicleClass - 
 * @returns number
 * @remarks Hash: 0x4F930AD022D6DE3B
 */
export function getVehicleClassMaxAgility(vehicleClass: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x78CEEE41F49F421F
 */
export function 0x78ceee41f49f421f(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0x93AE6A61BE015BF1
 */
export function setVehicleLodMultiplier(vehicle: number, multiplier: number): void;

/**
 * Sets a limited number of ammo for a particular vehicle weapon index on a vehicle.  
 * 
 * Information about weapon indexes can be found in `handling.meta`. 
 * 
 * In the example given below, `uWeaponHash` defines weapon hashes for the vehicle. Each `<Item>` corresponds to an index starting from `0`.
 * 
 * ```
 * <uWeaponHash>
 *     <Item>VEHICLE_WEAPON_PLAYER_BUZZARD</Item>  <!-- Index: 0 -->
 *     <Item>VEHICLE_WEAPON_SPACE_ROCKET</Item>    <!-- Index: 1 -->
 *     <Item>VEHICLE_WEAPON_SEARCHLIGHT</Item>     <!-- Index: 2 -->
 * </uWeaponHash>
 * ```
 * @param vehicle - 
 * @param weaponIndex - 
 * @param ammoCount - 
 * @returns void
 * @remarks Hash: 0x44CD1F493DB2A0A6
 */
export function setVehicleWeaponRestrictedAmmo(vehicle: number, weaponIndex: number, ammoCount: number): void;

/**
 * ```
 * paintType:
 * 0: Normal
 * 1: Metallic
 * 2: Pearl
 * 3: Matte
 * 4: Metal
 * 5: Chrome
 * ```
 * @param paintType - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xA551BE18C11A476D
 */
export function getNumModColors(paintType: number, p1: number): number;

/**
 * ```
 * Checks if vehicle tyre at index exists. Also returns false if tyre was removed.
 * ```
 * 
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param vehicle - 
 * @param tyreIndex - 
 * @returns number
 * @remarks Hash: 0x534E36D4DB9ECC5D
 */
export function DoesVehicleTyreExist(vehicle: number, tyreIndex: number): number;

/**
 * ```
 * Returns a value depending on the lock-on state of vehicle weapons.
 * 0: not locked on
 * 1: locking on
 * 2: locked on
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xE6B0E8CFC3633BF0
 */
export function getVehicleHomingLockonState(vehicle: number): number;

/**
 * @returns void
 * @remarks Hash: 0x736A718577F39C7D
 */
export function deleteAllTrains(): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns void
 * @remarks Hash: 0x8389CD56CA8072DC
 */
export function getVehicleCustomSecondaryColour(vehicle: number, r: number, g: number, b: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x00689CDE5F7C6787
 */
export function removeVehicleHighDetailModel(vehicle: number): void;

/**
 * Makes a helicopter resistant to multiple explosions. When enabled, helicopters can survive two or more explosions.
 * 
 * ```
 * NativeDB Introduced: 2545
 * ```
 * @param helicopter - 
 * @param bResistToExplosion - 
 * @returns void
 * @remarks Hash: 0x8074CC1886802912
 */
export function setHeliResistToExplosion(helicopter: number, bResistToExplosion: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x4D9D109F63FEE1D4
 */
export function 0x4d9d109f63fee1d4(p0: any, p1: number): void;

/**
 * ```
 * Returns whether the specified vehicle is currently in a burnout.  
 * vb.net  
 * Public Function isVehicleInBurnout(vh As Vehicle) As Boolean  
 *         Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_IN_BURNOUT, vh)  
 *     End Function  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x1297A88E081430EB
 */
export function isVehicleInBurnout(vehicle: number): number;

/**
 * ```
 * Returns -1 if the vehicle has no livery  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x87B63E25A529D526
 */
export function getVehicleLiveryCount(vehicle: number): number;

/**
 * ```
 * Second Param = LiveryIndex  
 * example   
 * int count = VEHICLE::GET_VEHICLE_LIVERY_COUNT(veh);  
 * for (int i = 0; i < count; i++)    
 * 	{  
 * char* LiveryName = VEHICLE::GET_LIVERY_NAME(veh, i);  
 * 	}  
 * this example will work fine to fetch all names   
 * for example for Sanchez we get   
 * SANC_LV1  
 * SANC_LV2  
 * SANC_LV3  
 * SANC_LV4  
 * SANC_LV5  
 * Use _GET_LABEL_TEXT, to get the localized livery name.  
 * ```
 * 
 * NOTE: You may need to set the vehicle's modKit to 0 by using this function [SET_VEHICLE_MOD_KIT](#_0x1F2AA07F00B3217A) before getting the name, otherwise this native may return NULL.
 * @param vehicle - 
 * @param liveryIndex - 
 * @returns string
 * @remarks Hash: 0xB4C7A93837C91A1F
 */
export function getLiveryName(vehicle: number, liveryIndex: number): string;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xB8FF7AB45305C345
 */
export function startVehicleAlarm(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns void
 * @remarks Hash: 0xB635392A4938B3C3
 */
export function getVehicleTyreSmokeColor(vehicle: number, r: number, g: number, b: number): void;

/**
 * **Usage:**
 * 
 * - Use this native inside a looped function.
 * - Values:
 *   - `0.0` = no vehicles on streets
 *   - `1.0` = normal vehicles on streets
 * 
 * `1.0` Seems to be the maximum.
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0x245A6883D966D537
 */
export function setVehicleDensityMultiplierThisFrame(multiplier: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x8879EE09268305D5
 */
export function unpausePlaybackRecordedVehicle(vehicle: number): void;

/**
 * Enables or disables a vehicle mod by index (`modType`) for a given vehicle.  
 * 
 * `eVehicleModType` enum, used for `modType` index can be found under [`SET_VEHICLE_MOD`](#_0x6AF0636DDEDCB6DD).
 * @param vehicle - 
 * @param modType - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2A1F4F37F95BAD08
 */
export function toggleVehicleMod(vehicle: number, modType: number, toggle: number): void;

/**
 * To reset the max speed, set the `speed` value to `0.0` or lower.
 * @param vehicle - 
 * @param speed - 
 * @returns void
 * @remarks Hash: 0xBAA045B4E42F3C06
 */
export function SetVehicleMaxSpeed(vehicle: number, speed: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2311DD7159F00582
 */
export function 0x2311dd7159f00582(vehicle: number, p1: number): void;

/**
 * ```
 * This is not tested - it's just an assumption.  
 * Doesn't seem to work.  I'll try with an int instead. --JT  
 * Read the scripts, im dumpass.   
 * Doesn't work at all, wether with an bool neither an int  
 *                             if (!VEHICLE::IS_TAXI_LIGHT_ON(l_115)) {  
 *                                 VEHICLE::SET_TAXI_LIGHTS(l_115, 1);  
 *                             }  
 * ```
 * @param vehicle - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0x598803E85E8448D9
 */
export function setTaxiLights(vehicle: number, state: number): void;

/**
 * Fix a given vehicle.
 * If the vehicle's engine's broken then you cannot fix it with this native.
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x115722B1B9C14C1C
 */
export function setVehicleFixed(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param livery - 
 * @returns void
 * @remarks Hash: 0x60BF608F1B8CD1B6
 */
export function setVehicleLivery(vehicle: number, livery: number): void;

/**
 * ```
 * Explodes a selected vehicle.  
 * Vehicle vehicle = Vehicle you want to explode.  
 * BOOL isAudible = If explosion makes a sound.  
 * BOOL isInvisible = If the explosion is invisible or not.  
 * First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.  
 * ```
 * @param vehicle - 
 * @param isAudible - 
 * @param isInvisible - 
 * @returns void
 * @remarks Hash: 0xBA71116ADF5B514C
 */
export function explodeVehicle(vehicle: number, isAudible: number, isInvisible: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xFAF2A78061FD9EF4
 */
export function 0xfaf2a78061fd9ef4(p0: any, p1: number, p2: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param model - 
 * @returns number
 * @remarks Hash: 0xA0948AB42D7BA0DE
 */
export function isThisModelAPlane(model: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2AFD795EEAC8D30D
 */
export function setGarbageTrucks(toggle: number): void;

/**
 * ```
 * p2 often set to 1000.0 in the decompiled scripts.  
 * ```
 * @param vehicle - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xB77D05AC8C78AADB
 */
export function setVehicleBodyHealth(vehicle: number, value: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x6ADAABD3068C5235
 */
export function hasVehiclePhoneExplosiveDevice(): number;

/**
 * ## Parameters
 * *
 * @param handler - 
 * @param container - 
 * @returns number
 * @remarks Hash: 0x89D630CF5EA96D23
 */
export function IsHandlerFrameAboveContainer(handler: number, container: number): number;

/**
 * ## Parameters
 * *
 * @param cargobob - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x66979ACF5102FD2F
 */
export function setCargobobPickupMagnetReducedFalloff(cargobob: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param speedzone - 
 * @returns number
 * @remarks Hash: 0x1033371FC8E842A7
 */
export function removeRoadNodeSpeedZone(speedzone: number): number;

/**
 * Creates a vehicle with the specified model at the specified position. This vehicle will initially be owned by the creating
 * script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
 * 
 * ```
 * NativeDB Added Parameter 8: BOOL p7
 * ```
 * @param modelHash - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param heading - 
 * @param isNetwork - 
 * @param netMissionEntity - 
 * @returns number
 * @remarks Hash: 0xAF35D0D2583051B0
 */
export function createVehicle(modelHash: number, x: number, y: number, z: number, heading: number, isNetwork: number, netMissionEntity: number): number;

/**
 * ```
 * Only called once in the decompiled scripts. Presumably activates the specified generator.  
 * ```
 * @param vehicleGenerator - 
 * @param enabled - 
 * @returns void
 * @remarks Hash: 0xD9D620E0AC6DC4B0
 */
export function setScriptVehicleGenerator(vehicleGenerator: number, enabled: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x9D30687C57BAA0BB
 */
export function 0x9d30687c57baa0bb(p0: any): void;

/**
 * ```
 * Can be used for IS_DLC_VEHICLE_MOD and _0xC098810437312FFF
 * ```
 * @param vehicle - 
 * @param modType - 
 * @param modIndex - 
 * @returns number
 * @remarks Hash: 0x4593CF82AA179706
 */
export function getVehicleModIdentifierHash(vehicle: number, modType: number, modIndex: number): number;

/**
 * ```
 * Sets how much the crane on the tow truck is raised, where 0.0 is fully lowered and 1.0 is fully raised.  
 * ```
 * @param vehicle - 
 * @param position - 
 * @returns void
 * @remarks Hash: 0xFE54B92A344583CA
 */
export function setVehicleTowTruckArmPosition(vehicle: number, position: number): void;

/**
 * ```
 * RESET_*
 * 
 * Resets the effect of 0x428AD3E26C8D9EB0
 * ```
 * @returns void
 * @remarks Hash: 0xE2F53F172B45EDE1
 */
export function 0xe2f53f172b45ede1(): void;

/**
 * Sets whether a boat should remain in the non-physical, low LOD anchor mode even when a player is driving it.
 * @param boat - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB28B1FE5BFADD7F5
 */
export function setForceLowLodAnchorMode(boat: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xAD7E85FC227197C4
 */
export function getVehicleMaxBraking(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x37C8252A7C92D017
 */
export function setDisableVehiclePetrolTankDamage(vehicle: number, toggle: number): void;

/**
 * Sets the selected vehicle's colors to their default value (specific variant specified using the colorCombination parameter).
 * 
 * Range of possible values for colorCombination is currently unknown, I couldn't find where these values are stored either (Disquse's guess was vehicles.meta but I haven't seen it in there.)
 * @param vehicle - 
 * @param colorCombination - 
 * @returns void
 * @remarks Hash: 0x33E8CD3322E2FE31
 */
export function setVehicleColourCombination(vehicle: number, colorCombination: number): void;

/**
 * Removes a scripted vehicle generator.
 * @param vehicleGenerator - 
 * @returns void
 * @remarks Hash: 0x22102C9ABFCF125D
 */
export function deleteScriptVehicleGenerator(vehicleGenerator: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x72BECCF4B829522E
 */
export function 0x72beccf4b829522e(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param owned - 
 * @returns void
 * @remarks Hash: 0x2B5F9D2AF1F1722D
 */
export function setVehicleHasBeenOwnedByPlayer(vehicle: number, owned: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xCF9159024555488C
 */
export function 0xcf9159024555488c(p0: any): void;

/**
 * ```
 * NativeDB Introduced: 3095
 * ```
 * 
 * Resets or clears the nitrous system for a specified vehicle. You can check if a vehicle has nitrous with [`IS_NITROUS_ACTIVE`](#_0x491E822B2C464FE4)
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xC889AE921400E1ED
 */
export function clearNitrous(vehicle: number): void;

/**
 * Returns whether the specified vehicle is designated as a mercenary vehicle
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xD4C4642CB7F50B5D
 */
export function getVehicleIsMercenary(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xBE5C1255A1830FF5
 */
export function 0xbe5c1255a1830ff5(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x0A6A279F3AA4FD70
 */
export function setBoatDisableAvoidance(vehicle: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x0581730AB9380412
 */
export function 0x0581730ab9380412(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;

/**
 * ## Parameters
 * *
 * @param plane - 
 * @param health - 
 * @returns void
 * @remarks Hash: 0x4C815EB175086F84
 */
export function SetPlanePropellersHealth(plane: number, health: number): void;

/**
 * ```
 * Does nothing. It's a nullsub.
 * 
 * NativeDB Introduced: v1604
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x82E0AC411E41A5B4
 */
export function 0x82e0ac411e41a5b4(toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xB2D06FAEDE65B577
 */
export function getLastDrivenVehicle(): number;

/**
 * The
 * @param vehicle - 
 * @param ped - 
 * @param index - 
 * @returns void
 * @remarks Hash: 0xB5C51B5502E85E83
 */
export function SetVehicleExclusiveDriver2(vehicle: number, ped: number, index: number): void;

/**
 * Retrieves the agility for a specific boat model, including any vehicle mods. Unlike other vehicles where Rockstar Games typically assess performance based on traction, boats use agility as a measure. This static value is distinct from the traction metrics used for other vehicle types.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x5AA3F878A178C4FC
 */
export function getBoatVehicleModelAgility(modelHash: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xB088E9A47AE6EDD5
 */
export function SetDisableSuperdummyMode(vehicle: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xA916396DF4154EE3
 */
export function GetVehicleCanActivateParachute(vehicle: number): number;

/**
 * ```
 * Max 1000.  
 * At 0 the main rotor will stall.  
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xE4CB7541F413D2C5
 */
export function getHeliMainRotorHealth(vehicle: number): number;

/**
 * ```
 * SET_C*
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB2E0C0D6922D31F2
 */
export function 0xb2e0c0d6922d31f2(vehicle: number, toggle: number): void;

/**
 * ```
 * garageName example "Michael - Beverly Hills"
 * ```
 * @param garageName - 
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xCEE4490CD57BB3C2
 */
export function isVehicleInGarageArea(garageName: string, vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param angleRatio - 
 * @returns void
 * @remarks Hash: 0x30D779DE7C4F6DD3
 */
export function setVehicleFlightNozzlePosition(vehicle: number, angleRatio: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x2F5A72430E78C8D3
 */
export function GetDriftTyresEnabled(vehicle: number): number;

/**
 * ```
 * BRAIN::ADD_SCRIPT_TO_RANDOM_PED("pb_prostitute", ${s_f_y_hooker_01}, 100, 0);
 * - Nacorpio
 * @param name - 
 * @param model - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x4EE5367468A65CCC
 */
export function addScriptToRandomPed(name: string, model: number, p2: number, p3: number): void;

/**
 * ```
 * Possible values:  
 * act_cinema  
 * am_mp_carwash_launch  
 * am_mp_carwash_control  
 * am_mp_property_ext  
 * chop  
 * fairgroundHub  
 * launcher_BasejumpHeli  
 * launcher_BasejumpPack  
 * launcher_CarWash  
 * launcher_golf  
 * launcher_Hunting_Ambient  
 * launcher_MrsPhilips  
 * launcher_OffroadRacing  
 * launcher_pilotschool  
 * launcher_Racing  
 * launcher_rampage  
 * launcher_rampage  
 * launcher_range  
 * launcher_stunts  
 * launcher_stunts  
 * launcher_tennis  
 * launcher_Tonya  
 * launcher_Triathlon  
 * launcher_Yoga  
 * ob_mp_bed_low  
 * ob_mp_bed_med  
 * ```
 * @param action - 
 * @returns void
 * @remarks Hash: 0x6D6840CEE8845831
 */
export function 0x6d6840cee8845831(action: string): void;

/**
 * ```
 * Something like flush_all_scripts   
 * Most of time comes after NETWORK_END_TUTORIAL_SESSION() or before TERMINATE_THIS_THREAD()  
 * ```
 * @returns void
 * @remarks Hash: 0x4D953DF78EBF8158
 */
export function 0x4d953df78ebf8158(): void;

/**
 * @returns void
 * @remarks Hash: 0x0B40ED49D7D6FF84
 */
export function 0x0b40ed49d7d6ff84(): void;

/**
 * ## Parameters
 * *
 * @param object - 
 * @returns number
 * @remarks Hash: 0xCCBA154209823057
 */
export function isObjectWithinBrainActivationRange(object: number): number;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0x3CDC7136613284BD
 */
export function registerWorldPointScriptBrain(): void;

/**
 * ```
 * Looks like a cousin of above function _6D6840CEE8845831 as it was found among them. Must be similar  
 * Here are possible values of argument -   
 * "ob_tv"  
 * "launcher_Darts"  
 * ```
 * @param action - 
 * @returns void
 * @remarks Hash: 0x6E91B04E08773030
 */
export function 0x6e91b04e08773030(action: string): void;

/**
 * ## Parameters
 * *
 * @param brainSet - 
 * @returns void
 * @remarks Hash: 0x67AA4D73F0CFA86B
 */
export function enableScriptBrainSet(brainSet: number): void;

/**
 * ```
 * Gets whether the world point the calling script is registered to is within desired range of the player.  
 * ```
 * @returns number
 * @remarks Hash: 0xC5042CC6F5E3D450
 */
export function isWorldPointWithinBrainActivationRange(): number;

/**
 * ```
 * Registers a script for any object with a specific model hash.
 * BRAIN::REGISTER_OBJECT_SCRIPT_BRAIN("ob_telescope", ${prop_telescope_01}, 100, 4.0, -1, 9);
 * ```
 * @param scriptName - 
 * @param modelHash - 
 * @param p2 - 
 * @param activationRange - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x0BE84C318BA6EC22
 */
export function registerObjectScriptBrain(scriptName: string, modelHash: number, p2: number, activationRange: number, p4: number, p5: number): void;

/**
 * ## Parameters
 * *
 * @param brainSet - 
 * @returns void
 * @remarks Hash: 0x14D8518E9760F08F
 */
export function disableScriptBrainSet(brainSet: number): void;

/**
 * @returns void
 * @remarks Hash: 0x95C5D356CDA6E85F
 */
export function appSaveData(): void;

/**
 * @returns void
 * @remarks Hash: 0xE8E3FCF72EAC0EF8
 */
export function appCloseBlock(): void;

/**
 * ## Parameters
 * *
 * @param blockName - 
 * @returns void
 * @remarks Hash: 0x262AB456A3D21F93
 */
export function appSetBlock(blockName: string): void;

/**
 * @returns void
 * @remarks Hash: 0x5FE1DF3342DB7DBA
 */
export function appClearBlock(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC9853A2BE3DED1A6
 */
export function appGetDeletedFileStatus(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x71EEE69745088DA0
 */
export function appHasLinkedSocialClubAccount(): number;

/**
 * ## Parameters
 * *
 * @param appName - 
 * @returns number
 * @remarks Hash: 0xCA52279A7271517F
 */
export function appHasSyncedData(appName: string): number;

/**
 * @returns void
 * @remarks Hash: 0xE41C65E07A5F05FC
 */
export function appCloseApp(): void;

/**
 * ## Parameters
 * *
 * @param property - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x607E8E3D3E4F9611
 */
export function appSetInt(property: string, value: number): void;

/**
 * ## Parameters
 * *
 * @param property - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x25D7687C68E0DAA4
 */
export function appSetFloat(property: string, value: number): void;

/**
 * ## Parameters
 * *
 * @param appName - 
 * @returns number
 * @remarks Hash: 0x44151AEA95C8A003
 */
export function appDeleteAppData(appName: string): number;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0xD3A58A12C77D9D4B
 */
export function appGetInt(): number;

/**
 * ## Parameters
 * *
 * @param property - 
 * @returns string
 * @remarks Hash: 0x749B023950D2311C
 */
export function appGetString(property: string): string;

/**
 * ```
 * Called in the gamescripts like:  
 * APP::APP_SET_APP("car");  
 * APP::APP_SET_APP("dog");  
 * ```
 * @param appName - 
 * @returns void
 * @remarks Hash: 0xCFD0406ADAF90D2B
 */
export function appSetApp(appName: string): void;

/**
 * ## Parameters
 * *
 * @param property - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x3FF2FCEC4B7721B4
 */
export function appSetString(property: string, value: string): void;

/**
 * ## Parameters
 * *
 * @param property - 
 * @returns number
 * @remarks Hash: 0x1514FB24C02C2322
 */
export function appGetFloat(property: string): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x846AA8E7D55EE5B6
 */
export function appDataValid(): number;

/**
 * ## Parameters
 * *
 * @param weaponObject - 
 * @returns void
 * @remarks Hash: 0xF7D82B0D66777611
 */
export function removeWeaponComponentFromWeaponObject(weaponObject: number): void;

/**
 * If `explode` true, then removal is done through exploding the projectile. Basically the same as EXPLODE_PROJECTILES but without defining the owner ped.
 * @param weaponHash - 
 * @param explode - 
 * @returns void
 * @remarks Hash: 0xFC52E0F37E446528
 */
export function removeAllProjectilesOfType(weaponHash: number, explode: number): void;

/**
 * ```
 * WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0)  
 * From decompiled scripts  
 * Returns total ammo in weapon  
 * GTALua Example :  
 * natives.WEAPON.GET_AMMO_IN_PED_WEAPON(plyPed, WeaponHash)  
 * ```
 * @param ped - 
 * @param weaponhash - 
 * @returns number
 * @remarks Hash: 0x015A522136D7F951
 */
export function getAmmoInPedWeapon(ped: number, weaponhash: number): number;

/**
 * Checks if the ped is currently equipped with a weapon matching a bit specified using a bitwise-or in typeFlags.
 * 
 * | Bit value | Effect            |
 * |-----------|-------------------|
 * | 1         | Melee weapons     |
 * | 2         | Explosive weapons |
 * | 4         | Any other weapons |
 * 
 * Not specifying any bit will lead to the native *always* returning 'false', and for example specifying '4 | 2' will check for any weapon except fists and melee weapons.
 * @param ped - 
 * @param typeFlags - 
 * @returns number
 * @remarks Hash: 0x475768A975D5AD17
 */
export function isPedArmed(ped: number, typeFlags: number): number;

/**
 * List of all available loadouts:
 * ```
 * LOADOUT_DEFAULT
 * LOADOUT_ANIMAL
 * LOADOUT_COUGAR
 * LOADOUT_HILLBILLY
 * LOADOUT_CULT
 * LOADOUT_CHEAT_0
 * LOADOUT_CHEAT_1
 * LOADOUT_GUARD
 * LOADOUT_NETWORK_BOT
 * LOADOUT_LOST
 * LOADOUT_LOST_L1
 * LOADOUT_LOST_L2
 * LOADOUT_LOST_L3
 * LOADOUT_MEXICAN
 * LOADOUT_MEXICAN_L1
 * LOADOUT_MEXICAN_L2
 * LOADOUT_MEXICAN_L3
 * LOADOUT_FAMILY
 * LOADOUT_ASIAN
 * LOADOUT_SECUR
 * LOADOUT_POLICE_GUARD
 * LOADOUT_COP
 * LOADOUT_COP_L1
 * LOADOUT_COP_L2
 * LOADOUT_COP_L3
 * LOADOUT_SWAT
 * LOADOUT_SWAT_NO_LASER
 * LOADOUT_COP_SHOTGUN
 * LOADOUT_FIREMAN
 * LOADOUT_COP_HELI
 * LOADOUT_COP_BOAT
 * LOADOUT_ARMY
 * LOADOUT_ANIMAL_RETRIEVER
 * LOADOUT_SMALL_DOG
 * LOADOUT_TIGER_SHARK
 * LOADOUT_HAMMERHEAD_SHARK
 * LOADOUT_KILLER_WHALE
 * LOADOUT_BOAR
 * LOADOUT_PIG
 * LOADOUT_COYOTE
 * LOADOUT_DEER
 * LOADOUT_HEN
 * LOADOUT_RABBIT
 * LOADOUT_CAT
 * LOADOUT_COW
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x68F8BE6AF5CDF8A6
 */
export function GiveLoadoutToPed(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x4B7620C47217126C
 */
export function isFlashLightOn(ped: number): number;

/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param vehicle - 
 * @param seat - 
 * @returns number
 * @remarks Hash: 0xD0AD348FFD7A6868
 */
export function GetVehicleWeaponReloadTime(vehicle: number, seat: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x9FE5633880ECD8ED
 */
export function SetPedWeaponLiveryColor(ped: number): void;

/**
 * ```
 * SET_WEAPON_OBJECT_*
 * ```
 * @param weaponObject - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x977CA98939E82E4B
 */
export function 0x977ca98939e82e4b(weaponObject: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param zoneId - 
 * @returns number
 * @remarks Hash: 0x0ABF535877897560
 */
export function RemoveAirDefenseZone(zoneId: number): number;

/**
 * ## Parameters
 * *
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0x937C71165CF334B3
 */
export function isWeaponValid(weaponHash: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xB80CA294F2F26749
 */
export function isPedWeaponReadyToShoot(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @param ammo - 
 * @returns number
 * @remarks Hash: 0x2E1202248937775C
 */
export function getAmmoInClip(ped: number, weaponHash: number, ammo: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0x1017582BCD3832DC
 */
export function getCurrentPedVehicleWeapon(ped: number, weaponHash: number): number;

/**
 * ## Parameters
 * *
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0x36E353271F0E90EE
 */
export function hasWeaponAssetLoaded(weaponHash: number): number;

/**
 * Enables/disables flashlight on ped's weapon.
 * 
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x988DB6FE9B3AC000
 */
export function SetFlashLightEnabled(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x840F03E9041E2C9C
 */
export function getLockonDistanceOfCurrentPedWeapon(ped: number): number;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x6558AC7C17BFEF58
 */
export function GetWeaponComponentVariantExtraComponentCount(): number;

/**
 * ## Parameters
 * *
 * @param distance - 
 * @returns any
 * @remarks Hash: 0xCEA66DAD478CD39B
 */
export function setFlashLightFadeDistance(distance: number): any;

/**
 * ```
 * NativeDB Added Parameter 4: BOOL p3
 * ```
 * @param ped - 
 * @param weaponHash - 
 * @param ammo - 
 * @returns void
 * @remarks Hash: 0x14E56BC5B5DB6A19
 */
export function setPedAmmo(ped: number, weaponHash: number, ammo: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xF0A60040BE558F2D
 */
export function GetPedWeaponLiveryColor(ped: number): number;

/**
 * ## Parameters
 * *
 * @param weaponObject - 
 * @returns number
 * @remarks Hash: 0xB3EA4FEABF41464B
 */
export function GetWeaponObjectLiveryColor(weaponObject: number): number;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param weaponHash - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0x4AE5AC8B852D642C
 */
export function SetWeaponExplosionRadiusMultiplier(weaponHash: number, multiplier: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @param componentHash - 
 * @returns void
 * @remarks Hash: 0xD966D51AA5B28BB9
 */
export function giveWeaponComponentToPed(ped: number, weaponHash: number, componentHash: number): void;

/**
 * ```
 * Has 5 parameters since latest patches.  
 * ```
 * @param ped - 
 * @param visible - 
 * @param deselectWeapon - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x0725A4CCFDED9A70
 */
export function setPedCurrentWeaponVisible(ped: number, visible: number, deselectWeapon: number, p3: number, p4: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param ammo - 
 * @returns void
 * @remarks Hash: 0xA4EFEF9440A5B0EF
 */
export function setPedAmmoToDrop(ped: number, ammo: number): void;

/**
 * ```
 * addonHash:
 * (use WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL() to get hash value)
 * ${component_at_ar_flsh}, ${component_at_ar_supp}, ${component_at_pi_flsh}, ${component_at_scope_large}, ${component_at_ar_supp_02}
 * ```
 * @param weaponObject - 
 * @param addonHash - 
 * @returns void
 * @remarks Hash: 0x33E179436C0B31DB
 */
export function giveWeaponComponentToWeaponObject(weaponObject: number, addonHash: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xE4DCEC7FD5B739A5
 */
export function 0xe4dcec7fd5b739a5(ped: number): void;

/**
 * ```
 * Returns the base/default ammo type of the specified ped's specified weapon.
 * 
 * Use GET_PED_AMMO_TYPE_FROM_WEAPON if you want current ammo type (like AMMO_MG_INCENDIARY/AMMO_MG_TRACER while using MkII magazines) and use this if you want base ammo type. (AMMO_MG)
 * ```
 * @param ped - 
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0xF489B44DD5AF4BD9
 */
export function GetPedAmmoTypeFromWeapon2(ped: number, weaponHash: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @param xOffset - 
 * @param yOffset - 
 * @param zOffset - 
 * @param ammoCount - 
 * @returns void
 * @remarks Hash: 0x208A1888007FC0E6
 */
export function setPedDropsInventoryWeapon(ped: number, weaponHash: number, xOffset: number, yOffset: number, zOffset: number, ammoCount: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @param ammoCount - 
 * @param isHidden - 
 * @param bForceInHand - 
 * @returns void
 * @remarks Hash: 0xBF0FD6E56C964FCB
 */
export function giveWeaponToPed(ped: number, weaponHash: number, ammoCount: number, isHidden: number, bForceInHand: number): void;

/**
 * ```
 * It determines what weapons caused damage:  
 * If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0  
 * If you want to define any melee weapon, second parameter=0, third parameter=1.  
 * If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.  
 * ```
 * @param ped - 
 * @param weaponHash - 
 * @param weaponType - 
 * @returns number
 * @remarks Hash: 0x2D343D2219CD027A
 */
export function hasPedBeenDamagedByWeapon(ped: number, weaponHash: number, weaponType: number): number;

/**
 * ```
 * Enables laser sight on any weapon.  
 * It doesn't work. Neither on tick nor OnKeyDown  
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC8B46D7727D864AA
 */
export function enableLaserSightRendering(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x814C9D19DFD69679
 */
export function getMaxRangeOfCurrentPedWeapon(ped: number): number;

/**
 * ```
 * p2 is mostly 1 in the scripts.  
 * ```
 * @param ped - 
 * @param weaponHash - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xA38DCFFCEA8962FA
 */
export function getMaxAmmoInClip(ped: number, weaponHash: number, p2: number): number;

/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param vehicle - 
 * @param seat - 
 * @param ammo - 
 * @returns number
 * @remarks Hash: 0x873906720EE842C3
 */
export function SetAmmoInVehicleWeaponClip(vehicle: number, seat: number, ammo: number): number;

/**
 * @returns void
 * @remarks Hash: 0x1E45B34ADEBEE48E
 */
export function RemoveAllAirDefenseZones(): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @param ammo - 
 * @returns void
 * @remarks Hash: 0x78F0424C34306220
 */
export function addAmmoToPed(ped: number, weaponHash: number, ammo: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x0A6DB4965674D243
 */
export function getSelectedPedWeapon(ped: number): number;

/**
 * ```
 * The return value seems to indicate returns true if the hash of the weapon object weapon equals the weapon hash.  
 * p2 seems to be 1 most of the time; and is not implemented.
 * ```
 * @param ped - 
 * @param weaponHash - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x3A87E44BB9A01D54
 */
export function getCurrentPedWeapon(ped: number, weaponHash: number, p2: number): number;

/**
 * Disables selecting the given weapon. Ped isn't forced to put the gun away. However you can't reselect the weapon if you holster then unholster. Weapon is also grayed out on the weapon wheel.
 * @param ped - 
 * @param weaponHash - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB4771B9AAF4E68E4
 */
export function SetCanPedEquipWeapon(ped: number, weaponHash: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x585847C5E4E11709
 */
export function GetMaxAmmoByType(ped: number): number;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x3B390A939AF0B5FC
 */
export function getCurrentPedWeaponEntityIndex(ped: number): number;

/**
 * ```
 * tintIndex can be the following:  
 * 0 : Default/Black
 * 1 : Green
 * 2 : Gold
 * 3 : Pink
 * 4 : Army
 * 5 : LSPD
 * 6 : Orange
 * 7 : Platinum
 * 
 * tintIndex for MK2 weapons :
 * 0 : Classic Black
 * 1 : Classic Gray
 * 2 : Classic Two-Tone
 * 3 : Classic White
 * 4 : Classic Beige
 * 5 : Classic Green
 * 6 : Classic Blue
 * 7 : Classic Earth
 * 8 : Classic Brown & Black
 * 9 : Red Contrast
 * 10 : Blue Contrast
 * 11 : Yellow Contrast
 * 12 : Orange Contrast
 * 13 : Bold Pink
 * 14 : Bold Purple & Yellow
 * 15 : Bold Orange
 * 16 : Bold Green & Purple
 * 17 : Bold Red Features
 * 18 : Bold Green Features
 * 19 : Bold Cyan Features
 * 20 : Bold Yellow Features
 * 21 : Bold Red & White
 * 22 : Bold Blue & White
 * 23 : Metallic Gold
 * 24 : Metallic Platinum
 * 25 : Metallic Gray & Lilac
 * 26 : Metallic Purple & Lime
 * 27 : Metallic Red
 * 28 : Metallic Green
 * 29 : Metallic Blue
 * 30 : Metallic White & Aqua
 * 31 : Metallic Orange & Yellow
 * 32 : Mettalic Red and Yellow
 * ```
 * @param ped - 
 * @param weaponHash - 
 * @param tintIndex - 
 * @returns void
 * @remarks Hash: 0x50969B9B89ED5738
 */
export function setPedWeaponTintIndex(ped: number, weaponHash: number, tintIndex: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param xBias - 
 * @param yBias - 
 * @returns void
 * @remarks Hash: 0x8378627201D5497D
 */
export function setPedChanceOfFiringBlanks(ped: number, xBias: number, yBias: number): void;

/**
 * Does the same as [`_SET_CAN_PED_SELECT_WEAPON`](#_0xB4771B9AAF4E68E4) except for all weapons.
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xEFF296097FF1E509
 */
export function SetCanPedEquipAllWeapons(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x39D22031557946C1
 */
export function getPedAmmoByType(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @param componentHash - 
 * @returns number
 * @remarks Hash: 0x0D78DE0572D3969E
 */
export function isPedWeaponComponentActive(ped: number, weaponHash: number, componentHash: number): number;

/**
 * ## Parameters
 * *
 * @param weapon - 
 * @param addonHash - 
 * @returns number
 * @remarks Hash: 0x76A18844E743BF91
 */
export function hasWeaponGotWeaponComponent(weapon: number, addonHash: number): number;

/**
 * This native does not return damages of weapons from the melee and explosive group.
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0x3133B907D8B32053
 */
export function getWeaponDamage(weaponHash: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x6B7513D9966FBEC0
 */
export function setPedDropsWeapon(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @param bForceInHand - 
 * @returns void
 * @remarks Hash: 0xADF692B254977C0C
 */
export function setCurrentPedWeapon(ped: number, weaponHash: number, bForceInHand: number): void;

/**
 * ```
 * This native removes a specified weapon from your selected ped.  
 * Weapon Hashes: pastebin.com/0wwDZgkF  
 * Example:  
 * C#:  
 * Function.Call(Hash.REMOVE_WEAPON_FROM_PED, Game.Player.Character, 0x99B507EA);  
 * C++:  
 * WEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), 0x99B507EA);  
 * The code above removes the knife from the player.  
 * ```
 * @param ped - 
 * @param weaponHash - 
 * @returns void
 * @remarks Hash: 0x4899CB088EDF59B8
 */
export function removeWeaponFromPed(ped: number, weaponHash: number): void;

/**
 * Start a reload for a vehicle's weapon.
 * 
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param vehicle - 
 * @param seat - 
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x5B1513F27F279A44
 */
export function TriggerVehicleWeaponReload(vehicle: number, seat: number, ped: number): number;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x24C024BA8379A70A
 */
export function 0x24c024ba8379a70a(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xAC678E40BE7C74D2
 */
export function clearEntityLastWeaponDamage(entity: number): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x4D1CB8DC40208A17
 */
export function GetWeaponComponentVariantExtraComponentModel(): number;

/**
 * ```
 * Hides the players weapon during a cutscene.  
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6F6981D2253C208F
 */
export function hidePedWeaponForScriptedCutscene(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x8C0D57EA686FAD87
 */
export function refillAmmoInstantly(ped: number): number;

/**
 * ```
 * Returns handle of the projectile.
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xB4C8D77C80C0421E
 */
export function setPedShootOrdnanceWeapon(ped: number, p1: number): number;

/**
 * ## Parameters
 * *
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0x4215460B9B8B7FA0
 */
export function getWeapontypeSlot(weaponHash: number): number;

/**
 * Does NOT seem to work with HAS_PED_BEEN_DAMAGED_BY_WEAPON. Use CLEAR_ENTITY_LAST_WEAPON_DAMAGE and HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON instead.
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x0E98F88A24C5F4B8
 */
export function clearPedLastWeaponDamage(ped: number): void;

/**
 * ```
 * p1/gadgetHash was always 0xFBAB5776 ("GADGET_PARACHUTE").  
 * p2 is always true.  
 * ```
 * @param ped - 
 * @param gadgetHash - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xD0D7B1E680ED4A1A
 */
export function setPedGadget(ped: number, gadgetHash: number, p2: number): void;

/**
 * ```
 * Returns the model of any weapon.  
 * Can also take an ammo hash?  
 * sub_6663a(&l_115B, WEAPON::GET_WEAPONTYPE_MODEL(${ammo_rpg}));  
 * ```
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0xF46CDC33180FDA94
 */
export function getWeapontypeModel(weaponHash: number): number;

/**
 * ## Parameters
 * *
 * @param zoneId - 
 * @returns number
 * @remarks Hash: 0xCD79A550999D7D4F
 */
export function DoesAirDefenseZoneExist(zoneId: number): number;

/**
 * Both coordinates are from objects in the decompiled scripts.
 * 
 * Native related to [_0xECDC202B25E5CF48](#_0xECDC202B25E5CF48) p1 value. The only weapon hash used in the decompiled scripts is weapon_air_defence_gun. These two natives are used by the yacht script, decompiled scripts suggest it and the weapon hash used (valkyrie's rockets) are also used by yachts.
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns number
 * @remarks Hash: 0x91EF34584710BE99
 */
export function createAirDefenceSphere(x: number, y: number, z: number): number;

/**
 * ```
 * 0=unknown (or incorrect weaponHash)  
 * 1= no damage (flare,snowball, petrolcan)  
 * 2=melee  
 * 3=bullet  
 * 4=force ragdoll fall  
 * 5=explosive (RPG, Railgun, grenade)  
 * 6=fire(molotov)  
 * 8=fall(WEAPON_HELI_CRASH)  
 * 10=electric  
 * 11=barbed wire  
 * 12=extinguisher  
 * 13=gas  
 * 14=water cannon(WEAPON_HIT_BY_WATER_CANNON)  
 * ```
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0x3BE0BB12D25FB305
 */
export function getWeaponDamageType(weaponHash: number): number;

/**
 * ```
 * It determines what weapons caused damage:
 * If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
 * If you want to define any melee weapon, second parameter=0, third parameter=1.
 * If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
 * ```
 * @param entity - 
 * @param weaponHash - 
 * @param weaponType - 
 * @returns number
 * @remarks Hash: 0x131D401334815E94
 */
export function hasEntityBeenDamagedByWeapon(entity: number, weaponHash: number, weaponType: number): number;

/**
 * ```
 * Pass ped. Pass address of Vector3.  
 * The coord will be put into the Vector3.  
 * The return will determine whether there was a coord found or not.  
 * ```
 * @param ped - 
 * @param coords - 
 * @returns number
 * @remarks Hash: 0x6C4D0409BA1A2BC2
 */
export function getPedLastWeaponImpactCoord(ped: number, coords: { x: number, y: number, z: number }): number;

/**
 * ## Parameters
 * *
 * @param srcCoord1X - 
 * @param srcCoord1Y - 
 * @param srcCoord1Z - 
 * @param srcCoord2X - 
 * @param srcCoord2Y - 
 * @param srcCoord2Z - 
 * @param fWidth - 
 * @param weaponPositionX - 
 * @param weaponPositionY - 
 * @param weaponPositionZ - 
 * @returns number
 * @remarks Hash: 0x9DA58CDBF6BDBC08
 */
export function createAirDefenceAngledArea(srcCoord1X: number, srcCoord1Y: number, srcCoord1Z: number, srcCoord2X: number, srcCoord2Y: number, srcCoord2Z: number, fWidth: number, weaponPositionX: number, weaponPositionY: number, weaponPositionZ: number): number;

/**
 * ```
 * gadgetHash - was always 0xFBAB5776 ("GADGET_PARACHUTE").  
 * ```
 * @param ped - 
 * @param gadgetHash - 
 * @returns number
 * @remarks Hash: 0xF731332072F5156C
 */
export function getIsPedGadgetEquipped(ped: number, gadgetHash: number): number;

/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param vehicle - 
 * @param seat - 
 * @returns number
 * @remarks Hash: 0x8062F07153F4446F
 */
export function HasWeaponReloadingInVehicle(vehicle: number, seat: number): number;

/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param vehicle - 
 * @param seat - 
 * @returns number
 * @remarks Hash: 0xC8C6F4B1CDEB40EF
 */
export function GetTimeBeforeVehicleWeaponReloadFinishes(vehicle: number, seat: number): number;

/**
 * ```
 * Returns the current ammo type of the specified ped's specified weapon.
 * 
 * MkII magazines will change the return value, like Pistol MkII returning AMMO_PISTOL without any components and returning AMMO_PISTOL_TRACER after Tracer Rounds component is attached.
 * 
 * Use 0xF489B44DD5AF4BD9 if you always want AMMO_PISTOL.
 * ```
 * @param ped - 
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0x7FEAD38B326B9F74
 */
export function getPedAmmoTypeFromWeapon(ped: number, weaponHash: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xA2C9AC24B4061285
 */
export function 0xa2c9ac24b4061285(ped: number): number;

/**
 * Restricts weapon selection when cycling through weapons, to select only vehicle weapons.
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x50276EF8172F5F12
 */
export function setPedCycleVehicleWeaponsOnly(ped: number): void;

/**
 * Create a weapon object that cannot be attached to a ped. If you want to create a weapon object that can be attached to a ped, use [`CREATE_OBJECT`](#_0x509D5878EB39E842) instead.
 * 
 * ```
 * NativeDB Added Parameter 9: BOOL bRegisterAsNetworkObject
 * NativeDB Added Parameter 10: BOOL bScriptHostObject
 * ```
 * @param weaponHash - 
 * @param ammoCount - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param bCreateDefaultComponents - 
 * @param scale - 
 * @param customModelHash - 
 * @returns number
 * @remarks Hash: 0x9541D3CF0D398F36
 */
export function createWeaponObject(weaponHash: number, ammoCount: number, x: number, y: number, z: number, bCreateDefaultComponents: number, scale: number, customModelHash: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x183DADC6AA953186
 */
export function setPedInfiniteAmmoClip(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x476AE72C1D19D1A8
 */
export function setPedDropsWeaponsWhenDead(ped: number, toggle: number): void;

/**
 * Changes the selected ped aiming animation style, you can find the list of animations below.
 * 
 * These are stored in the `weaponanimations.meta` file located in `Grand Theft Auto V\update\update.rpf\common\data\ai\weaponanimations.meta`.
 * 
 * For Lua, it's best if you send the animation using [compile-time jenkins](https://cookbook.fivem.net/2019/06/23/lua-support-for-compile-time-jenkins-hashes/) hashes to avoid overhead. An example is shown down below.
 * @param ped - 
 * @param animStyle - 
 * @returns void
 * @remarks Hash: 0x1055AC3A667F09D9
 */
export function setWeaponAnimationOverride(ped: number, animStyle: number): void;

/**
 * ## Parameters
 * *
 * @param weaponHash - 
 * @param componentHash - 
 * @returns number
 * @remarks Hash: 0x5CEE3DF569CECAB0
 */
export function doesWeaponTakeWeaponComponent(weaponHash: number, componentHash: number): number;

/**
 * ```
 * Gives a weapon to PED with a delay, example:
 * WEAPON::GIVE_DELAYED_WEAPON_TO_PED(PED::PLAYER_PED_ID(), MISC::GET_HASH_KEY("WEAPON_PISTOL"), 1000, false)
 * ```
 * @param ped - 
 * @param weaponHash - 
 * @param ammoCount - 
 * @param bForceInHand - 
 * @returns void
 * @remarks Hash: 0xB282DC6EBD803C75
 */
export function giveDelayedWeaponToPed(ped: number, weaponHash: number, ammoCount: number, bForceInHand: number): void;

/**
 * ## Parameters
 * *
 * @param weaponHash - 
 * @returns void
 * @remarks Hash: 0xAA08EF13F341C8FC
 */
export function removeWeaponAsset(weaponHash: number): void;

/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param vehicle - 
 * @param seat - 
 * @param ammo - 
 * @returns number
 * @remarks Hash: 0x2857938C5D407AFA
 */
export function GetAmmoInVehicleWeaponClip(vehicle: number, seat: number, ammo: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @param componentHash - 
 * @returns number
 * @remarks Hash: 0xC593212475FAE340
 */
export function hasPedGotWeaponComponent(ped: number, weaponHash: number, componentHash: number): number;

/**
 * ```
 * p2 should be FALSE, otherwise it seems to always return FALSE  
 * Bool does not check if the weapon is current equipped, unfortunately.  
 * ```
 * @param ped - 
 * @param weaponHash - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x8DECB02F88F428BC
 */
export function hasPedGotWeapon(ped: number, weaponHash: number, p2: number): number;

/**
 * Gets and returns the hash of the group of the specified weapon (group names can be found/changed under "Group" in the weapons' meta file).
 * Note that the group is
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0xC3287EE3050FB74C
 */
export function getWeapontypeGroup(weaponHash: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param SphereIndex - 
 * @returns number
 * @remarks Hash: 0xDAB963831DBFD3F4
 */
export function IsAnyAirDefenseZoneInsideSphere(x: number, y: number, z: number, radius: number, SphereIndex: number): number;

/**
 * Parameter `p1` does not seem to be used or referenced in game binaries.
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xF25DF915FA38C5F3
 */
export function removeAllPedWeapons(ped: number, p1: number): void;

/**
 * Forces a ped to reload only if they are able to; if they have a full magazine, they will not reload.
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x20AE33F3AC9C0033
 */
export function makePedReload(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @param componentHash - 
 * @returns void
 * @remarks Hash: 0x1E8BE90C74FB4C09
 */
export function removeWeaponComponentFromPed(ped: number, weaponHash: number, componentHash: number): void;

/**
 * ```
 * // Returns the size of the default weapon component clip.  
 * Use it like this:  
 * char cClipSize[32];  
 * Hash cur;  
 * if (WEAPON::GET_CURRENT_PED_WEAPON(playerPed, &cur, 1))  
 * {  
 *     if (WEAPON::IS_WEAPON_VALID(cur))  
 *     {  
 *         int iClipSize = WEAPON::GET_WEAPON_CLIP_SIZE(cur);  
 *         sprintf_s(cClipSize, "ClipSize: %.d", iClipSize);  
 *         vDrawString(cClipSize, 0.5f, 0.5f);  
 *     }  
 * }  
 * ```
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0x583BE370B1EC6EB4
 */
export function getWeaponClipSize(weaponHash: number): number;

/**
 * ```
 * this returns if you can use the weapon while using a parachute  
 * ```
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0xBC7BE5ABC0879F74
 */
export function canUseWeaponOnParachute(weaponHash: number): number;

/**
 * ```
 * Third Parameter = unsure, but pretty sure it is weapon hash  
 * --> get_hash_key("weapon_stickybomb")  
 * Fourth Parameter = unsure, almost always -1  
 * ```
 * @param driver - 
 * @param vehicle - 
 * @param weaponHash - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x717C8481234E3B88
 */
export function hasVehicleGotProjectileAttached(driver: number, vehicle: number, weaponHash: number, p3: any): number;

/**
 * ```
 * Nearly every instance of p1 I found was 31. Nearly every instance of p2 I found was 0.  
 * REQUEST_WEAPON_ASSET(iLocal_1888, 31, 26);  
 * ```
 * @param weaponHash - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x5443438F033E29C3
 */
export function requestWeaponAsset(weaponHash: number, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x2472622CE1F2D45F
 */
export function AddAmmoToPedByType(ped: number): void;

/**
 * ```
 * WEAPON::EXPLODE_PROJECTILES(PLAYER::PLAYER_PED_ID(), func_221(0x00000003), 0x00000001);  
 * ```
 * @param ped - 
 * @param weaponHash - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xFC4BD125DE7611E4
 */
export function explodeProjectiles(ped: number, weaponHash: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x5FD1E1F011E76D7E
 */
export function setPedAmmoByType(ped: number): void;

/**
 * ```
 * Drops the current weapon and returns the object  
 * Unknown behavior when unarmed.  
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xCAE1DC9A0E22A16D
 */
export function getWeaponObjectFromPed(ped: number, p1: number): number;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE6D2CEDD370FF98E
 */
export function 0xe6d2cedd370ff98e(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param weaponObject - 
 * @returns void
 * @remarks Hash: 0x5DA825A85D0EA6E6
 */
export function SetWeaponObjectLiveryColor(weaponObject: number): void;

/**
 * ## Parameters
 * *
 * @param weapon - 
 * @returns number
 * @remarks Hash: 0xCD183314F7CD2E57
 */
export function getWeaponObjectTintIndex(weapon: number): number;

/**
 * ## Parameters
 * *
 * @param zoneId - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x44F1012B69313374
 */
export function FireAirDefenseWeapon(zoneId: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @param ammo - 
 * @returns number
 * @remarks Hash: 0xDC16122C7A20C933
 */
export function getMaxAmmo(ped: number, weaponHash: number, ammo: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param ignoreAmmoCount - 
 * @returns number
 * @remarks Hash: 0x8483E98E8B888AE2
 */
export function getBestPedWeapon(ped: number, ignoreAmmoCount: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param zoneId - 
 * @param enable - 
 * @returns void
 * @remarks Hash: 0xECDC202B25E5CF48
 */
export function SetPlayerAirDefenseZoneFlag(player: number, zoneId: number, enable: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @param ammo - 
 * @returns number
 * @remarks Hash: 0xDCD2A934D65CB497
 */
export function setAmmoInClip(ped: number, weaponHash: number, ammo: number): number;

/**
 * ## Parameters
 * *
 * @param componentHash - 
 * @returns number
 * @remarks Hash: 0x0DB57B41EC1DB083
 */
export function getWeaponComponentTypeModel(componentHash: number): number;

/**
 * ```
 * This native returns a true or false value.  
 * Ped ped = The ped whose weapon you want to check.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x65F0C5AE05943EC7
 */
export function isPedCurrentWeaponSilenced(ped: number): number;

/**
 * ## Parameters
 * *
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0x5DCF6C5CAB2E9BF7
 */
export function getWeaponTintCount(weaponHash: number): number;

/**
 * ## Parameters
 * *
 * @param componentHash - 
 * @param outData - 
 * @returns number
 * @remarks Hash: 0xB3CAF387AE12E9F8
 */
export function getWeaponComponentHudStats(componentHash: number, outData: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponSlot - 
 * @returns number
 * @remarks Hash: 0xEFFED78E9011134D
 */
export function getPedWeapontypeInSlot(ped: number, weaponSlot: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xE620FD3512A04F18
 */
export function setPickupAmmoAmountScaler(p0: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0x2B9EEDC07BD06B9F
 */
export function getPedWeaponTintIndex(ped: number, weaponHash: number): number;

/**
 * ```
 * // members should be aligned to 8 bytes by default but it's best to use alignas here, just to be sure  
 * struct WeaponHudStatsData  
 * {  
 * 	alignas(8) uint8_t hudDamage; // 0x0000  
 * 	alignas(8) uint8_t hudSpeed; // 0x0008  
 * 	alignas(8) uint8_t hudCapacity; // 0x0010  
 * 	alignas(8) uint8_t hudAccuracy; // 0x0018  
 * 	alignas(8) uint8_t hudRange; // 0x0020  
 * };  
 * Usage:  
 * WeaponHudStatsData data;  
 * if (GET_WEAPON_HUD_STATS(weaponHash, (Any*)&data))  
 * {  
 *     // uint8_t damagePercentage = data.hudDamage etc...  
 * }  
 * ```
 * @param weaponHash - 
 * @param outData - 
 * @returns number
 * @remarks Hash: 0xD92C739EE34C9EBA
 */
export function getWeaponHudStats(weaponHash: number, outData: any): number;

/**
 * ## Parameters
 * *
 * @param weapon - 
 * @param tintIndex - 
 * @returns void
 * @remarks Hash: 0xF827589017D4E4A9
 */
export function setWeaponObjectTintIndex(weapon: number, tintIndex: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @param weaponHash - 
 * @returns void
 * @remarks Hash: 0x3EDCB0505123623B
 */
export function setPedInfiniteAmmo(ped: number, toggle: number, weaponHash: number): void;

/**
 * ## Parameters
 * *
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0x065D2AACAD8CF7A4
 */
export function GetWeaponTimeBetweenShots(weaponHash: number): number;

/**
 * ## Parameters
 * *
 * @param weaponObject - 
 * @returns void
 * @remarks Hash: 0x48164DBB970AC3F0
 */
export function requestWeaponHighDetailModel(weaponObject: number): void;

/**
 * ## Parameters
 * *
 * @param weaponObject - 
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xB1FA61371AF7C4B7
 */
export function giveWeaponObjectToPed(weaponObject: number, ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param weaponHash - 
 * @returns number
 * @remarks Hash: 0x75C55983C2C39DAA
 */
export function setCurrentPedVehicleWeapon(ped: number, weaponHash: number): number;

/**
 * Changes the weapon damage output by the given multiplier value.
 * Does NOT need to be called every frame.
 * @param weaponHash - 
 * @param damageMultiplier - 
 * @returns void
 * @remarks Hash: 0x4757F00BC6323CFE
 */
export function SetWeaponDamageModifier(weaponHash: number, damageMultiplier: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x7A197E2521EE2BAB
 */
export function getIndexedItemInItemset(p0: any, p1: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xDE18220B1C183EDA
 */
export function destroyItemset(p0: any): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x35AD299F50D91B24
 */
export function createItemset(): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @returns any
 * @remarks Hash: 0xD9127E83ABF7C631
 */
export function getItemsetSize(x: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x25E68244B0177686
 */
export function removeFromItemset(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xB1B1EA596344DFAB
 */
export function isItemsetValid(p0: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x41BC0D722FC04221
 */
export function cleanItemset(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x2D0FC594D1E9C107
 */
export function isInItemset(p0: any, p1: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xE3945201F14637DD
 */
export function addToItemset(p0: any, p1: any): number;

/**
 * @returns void
 * @remarks Hash: 0x440AF51A3462B86F
 */
export function removeCutscene(): void;

/**
 * See [`SET_PED_PROP_INDEX`](#_0x93376B65A266EB5F)
 * @param cutsceneEntName - 
 * @param componentId - 
 * @param drawableId - 
 * @param textureId - 
 * @param modelHash - 
 * @returns void
 * @remarks Hash: 0x0546524ADE2E9723
 */
export function setCutscenePedPropVariation(cutsceneEntName: string, componentId: number, drawableId: number, textureId: number, modelHash: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x4FCD976DA686580C
 */
export function 0x4fcd976da686580c(p0: any): any;

/**
 * ```
 * flags: Usually 0.
 * ```
 * @param flags - 
 * @returns void
 * @remarks Hash: 0x186D5CB5E7B0FF7B
 */
export function startCutscene(flags: number): void;

/**
 * Stop cutscene instantly, will dump registered entities right where they were when ran.
 * @returns void
 * @remarks Hash: 0xD220BDD222AC4A1E
 */
export function stopCutsceneImmediately(): void;

/**
 * Only used twice in armenian1.c
 * @returns void
 * @remarks Hash: 0x2131046957F31B04
 */
export function registerSynchronisedScriptSpeech(): void;

/**
 * ## Parameters
 * *
 * @param cutsceneName - 
 * @returns number
 * @remarks Hash: 0x0ABC54DE641DC0FC
 */
export function GetCutFileNumSections(cutsceneName: string): number;

/**
 * See [`SET_PED_COMPONENT_VARIATION`](#_0x262B14F48D29DE80)
 * @param cutsceneEntName - 
 * @param componentId - 
 * @param drawableId - 
 * @param textureId - 
 * @param modelHash - 
 * @returns void
 * @remarks Hash: 0xBA01E7B6DEEFBBC9
 */
export function setCutscenePedComponentVariation(cutsceneEntName: string, componentId: number, drawableId: number, textureId: number, modelHash: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x40C8656EDAEDD569
 */
export function wasCutsceneSkipped(): number;

/**
 * ```
 * This function is hard-coded to always return 1.  
 * ```
 * @param cutsceneName - 
 * @returns number
 * @remarks Hash: 0x4CEBC1ED31E8925E
 */
export function 0x4cebc1ed31e8925e(cutsceneName: string): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x20746F7B1032A3C7
 */
export function 0x20746f7b1032a3c7(p0: number, p1: number, p2: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x8093F23ABACCC7D4
 */
export function setCutsceneFadeValues(p0: number, p1: number, p2: number, p3: number): void;

/**
 * ```
 * Simply loads the cutscene and doesn't do extra stuff that REQUEST_CUTSCENE does.
 * ```
 * @param cutsceneName - 
 * @returns void
 * @remarks Hash: 0x06A3524161C502BA
 */
export function requestCutFile(cutsceneName: string): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x41FAA8FB2ECE8720
 */
export function setCutsceneCanBeSkipped(p0: number): void;

/**
 * ```
 * SET_SCRIPT_*
 * Sets the cutscene's owning thread ID.
 * ```
 * @param threadId - 
 * @returns void
 * @remarks Hash: 0x8D9DF6ECA8768583
 */
export function 0x8d9df6eca8768583(threadId: number): void;

/**
 * ## Parameters
 * *
 * @param cutsceneEntName - 
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0xC0741A26499654CD
 */
export function getEntityIndexOfRegisteredEntity(cutsceneEntName: string, modelHash: number): number;

/**
 * ## Parameters
 * *
 * @param cutsceneName - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0x7A86743F475D9E09
 */
export function requestCutscene(cutsceneName: string, flags: number): void;

/**
 * @returns number
 * @remarks Hash: 0x708BDD8CD795B043
 */
export function hasCutsceneCutThisFrame(): number;

/**
 * ## Parameters
 * *
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0x011883F41211432A
 */
export function 0x011883f41211432a(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p6: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x583DF8E3D4AFBD98
 */
export function 0x583df8e3d4afbd98(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5EDEF0CF8C1DAB3C
 */
export function 0x5edef0cf8c1dab3c(): number;

/**
 * ## Parameters
 * *
 * @param cutsceneEntName - 
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x499EF20C5DB25C59
 */
export function doesCutsceneEntityExist(cutsceneEntName: string, modelHash: number): number;

/**
 * Whether or not it is safe to run functions on the camera,
 * as the camera is now no longer being used by the cutscene.
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xB2CBCD0930DFB420
 */
export function canSetExitStateForCamera(p0: number): number;

/**
 * Gets the current time of the cutscene.
 * 
 * ```
 * NativeDB Introduced: v3258
 * ```
 * @returns number
 * @remarks Hash: 0x710286BC5EF4D6E1
 */
export function getCutscenePlayTime(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xD3C2E180A40F031E
 */
export function isCutscenePlaying(): number;

/**
 * ## Parameters
 * *
 * @param flag - 
 * @returns number
 * @remarks Hash: 0x71B74D2AE19338D0
 */
export function isCutscenePlaybackFlagSet(flag: number): number;

/**
 * ## Parameters
 * *
 * @param cutsceneName - 
 * @returns number
 * @remarks Hash: 0x228D3D94F8A11C3C
 */
export function hasThisCutsceneLoaded(cutsceneName: string): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x06EE9048FD080382
 */
export function 0x06ee9048fd080382(p0: number): void;

/**
 * ```
 * playbackFlags: Which scenes should be played.
 * Example: 0x105 (bit 0, 2 and 8 set) will enable scene 1, 3 and 9.
 * ```
 * @param cutsceneName - 
 * @param playbackFlags - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0xC23DE0E91C30B58C
 */
export function requestCutsceneWithPlaybackList(cutsceneName: string, playbackFlags: number, flags: number): void;

/**
 * Returns when it is safe to start applying changes to cutscene entities.
 * 
 * Should always be used for applying components.
 * 
 * See [`SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED`](#_0x2A56C06EBEF2B0D9) and [`REGISTER_ENTITY_FOR_CUTSCENE`](#_0xE40C1C56DF95C2E8) for an example.
 * 
 * This will be true before the cutscene is considered loaded
 * @returns number
 * @remarks Hash: 0xB56BBBCC2955D9CB
 */
export function canRequestAssetsForCutsceneEntity(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xE36A98D8AB3D3C66
 */
export function 0xe36a98d8ab3d3c66(p0: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x991251AFC3981F84
 */
export function isCutsceneActive(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x49010A6A396553D8
 */
export function getCutsceneSectionPlaying(): number;

/**
 * ```
 * modelHash (p1) was always 0 in R* scripts  
 * ```
 * @param cutsceneEntName - 
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x645D0B458D8E17B5
 */
export function canSetEnterStateForRegisteredEntity(cutsceneEntName: string, modelHash: number): number;

/**
 * ```
 * Simply checks if the cutscene has loaded and doesn't check via CutSceneManager as opposed to HAS_[THIS]_CUTSCENE_LOADED.
 * ```
 * @param cutsceneName - 
 * @returns number
 * @remarks Hash: 0xA1C996C2A744262E
 */
export function hasCutFileLoaded(cutsceneName: string): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC59F528E9AB9F339
 */
export function hasCutsceneLoaded(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x7C0A893088881D57
 */
export function hasCutsceneFinished(): number;

/**
 * ```
 * SET_VEHICLE_*
 * ```
 * @param modelHash - 
 * @returns void
 * @remarks Hash: 0x7F96F23FA9B73327
 */
export function 0x7f96f23fa9b73327(modelHash: number): void;

/**
 * ```
 * Toggles a value (bool) for cutscenes.
 * SET_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC61B86C9F61EB404
 */
export function 0xc61b86c9f61eb404(toggle: number): void;

/**
 * Sets cutscene location, used for multiplayer apartments/businesses.
 * @param x - 
 * @param y - 
 * @param z - 
 * @param heading - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xB812B3FD1C01CF27
 */
export function setCutsceneOrigin(x: number, y: number, z: number, heading: number, p4: number): void;

/**
 * Gets the total length of the cutscene irrespective of playback list in milliseconds
 * To account for sections, see [`_GET_CUTSCENE_END_TIME`](#_0x971D7B15BCDBEF99)
 * @returns number
 * @remarks Hash: 0xEE53B14A19E480D4
 */
export function getCutsceneTotalDuration(): number;

/**
 * Sets the components for a cutscene ped, this will take precendence over the cutscene's component overrides. This does not require the entity be registered.
 * 
 * See
 * @param cutsceneEntName - 
 * @param ped - 
 * @param modelHash - 
 * @returns void
 * @remarks Hash: 0x2A56C06EBEF2B0D9
 */
export function setCutscenePedComponentVariationFromPed(cutsceneEntName: string, ped: number, modelHash: number): void;

/**
 * Gets the elapsed time of the current cutscene in
 * @returns number
 * @remarks Hash: 0xE625BEABBAFFDAB9
 */
export function getCutsceneTime(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC7272775B4DC786E
 */
export function stopCutscene(p0: number): void;

/**
 * Only used in networked environment with MP cutscenes
 * @param cutsceneEntName - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x4C61C75BEE8184C2
 */
export function setCutsceneEntityStreamingFlags(cutsceneEntName: string, p1: number, p2: number): void;

/**
 * Returns the time of the cutscene's end accounting for [`REQUEST_CUTSCENE_WITH_PLAYBACK_LIST`](#_0xC23DE0E91C30B58C) 
 * 
 * If a cutscene is laid out with 10 second sections, and section 0 and 1 are enabled then it would be 20000ms.
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @returns number
 * @remarks Hash: 0x971D7B15BCDBEF99
 */
export function GetCutsceneEndTime(): number;

/**
 * Returns the handle of a cutscene entity, can be ped
 * @param cutsceneEntName - 
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x0A2E9FDB9A8C62F6
 */
export function getEntityIndexOfCutsceneEntity(cutsceneEntName: string, modelHash: number): number;

/**
 * This can only be run once [`CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY`](#_0xB56BBBCC2955D9CB) is true, but can be run before [`HAS_CUTSCENE_LOADED`](#_0xC59F528E9AB9F339)
 * @param cutsceneEntity - 
 * @param cutsceneEntName - 
 * @param p2 - 
 * @param modelHash - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xE40C1C56DF95C2E8
 */
export function registerEntityForCutscene(cutsceneEntity: number, cutsceneEntName: string, p2: number, modelHash: number, p4: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA0FE76168A189DDB
 */
export function 0xa0fe76168a189ddb(): number;

/**
 * ```
 * Simply unloads the cutscene and doesn't do extra stuff that REMOVE_CUTSCENE does.
 * ```
 * @param cutsceneName - 
 * @returns void
 * @remarks Hash: 0xD00D76A7DFC9D852
 */
export function removeCutFile(cutsceneName: string): void;

/**
 * Similar to [`SET_CUTSCENE_ORIGIN`](#_0xB812B3FD1C01CF27) but without heading and doesn't need [`START_CUTSCENE`](#_0x186D5CB5E7B0FF7B)
 * @param x - 
 * @param y - 
 * @param z - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0x1C9ADDA3244A1FBF
 */
export function startCutsceneAtCoords(x: number, y: number, z: number, flags: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x2F137B508DE238F2
 */
export function 0x2f137b508de238f2(p0: number): void;

/**
 * Returns if the script can begin interacting with the registered entity. Primarly used for lead-outs of cutscenes.
 * Returns on frame after cutscene ends, so you cannot get is while using IsCutsceneActive()
 * 
 * Whether it is safe to start doing scripted actions on the entity, like simulating walking out of a cutscene.
 * @param cutsceneEntName - 
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x4C6A6451C79E4662
 */
export function canSetExitStateForRegisteredEntity(cutsceneEntName: string, modelHash: number): number;

/**
 * ```
 * Only used twice in R* scripts  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x9896CE4721BE84BA
 */
export function setCutsceneTriggerArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xEFD97FF47B745B8D
 */
export function DisableScriptAmbientEffects(p0: any): void;

/**
 * ## Parameters
 * *
 * @param scaleformHandle - 
 * @returns void
 * @remarks Hash: 0x1D132D614DD86811
 */
export function setScaleformMovieAsNoLongerNeeded(scaleformHandle: number): void;

/**
 * ```
 * This function is hard-coded to always return 0.  
 * ```
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xE791DF1F73ED2C8B
 */
export function 0xe791df1f73ed2c8b(p0: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xBA0127DA25FD54C9
 */
export function 0xba0127da25fd54c9(p0: any, p1: any): void;

/**
 * ```
 * Usage example for C#:  
 * Function.Call(Hash.SET_PARTICLE_FX_NON_LOOPED_ALPHA, new InputArgument[] { 0.1f });  
 * 		Note: the argument alpha ranges from 0.0f-1.0f !  
 * ```
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0x77168D722C58B2FC
 */
export function setParticleFxNonLoopedAlpha(alpha: number): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xD77EDADB0420E6E0
 */
export function fadeDecalsInRange(): void;

/**
 * ## Parameters
 * *
 * @param transitionTime - 
 * @returns number
 * @remarks Hash: 0xA328A24AAA6B7FDC
 */
export function triggerScreenblurFadeIn(transitionTime: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x1670F8D05056F257
 */
export function getStatusOfLoadMissionCreatorPhoto(p0: string): number;

/**
 * ```
 * network fx  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 13: Any p12
 * NativeDB Added Parameter 14: Any p13
 * NativeDB Added Parameter 15: Any p14
 * NativeDB Added Parameter 16: Any p15
 * ```
 * @param effectName - 
 * @param entity - 
 * @param xOffset - 
 * @param yOffset - 
 * @param zOffset - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param scale - 
 * @param xAxis - 
 * @param yAxis - 
 * @param zAxis - 
 * @returns number
 * @remarks Hash: 0x6F60E89A7B64EE1D
 */
export function startNetworkedParticleFxLoopedOnEntity(effectName: string, entity: number, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: number, yAxis: number, zAxis: number): number;

/**
 * ```
 * SET_PARTICLE_FX_*
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xBA3D194057C79A7B
 */
export function 0xba3d194057c79a7b(p0: string): void;

/**
 * Similar to [_DRAW_SPRITE](#_0xE7FFAE5EBF23D890), but seems to be some kind of "interactive" sprite, at least used by render targets.
 * These seem to be the only dicts ever requested by this native:
 * ```
 * prop_screen_biker_laptop
 * Prop_Screen_GR_Disruption
 * Prop_Screen_TaleOfUs
 * prop_screen_nightclub
 * Prop_Screen_IE_Adhawk
 * prop_screen_sm_free_trade_shipping
 * prop_screen_hacker_truck
 * MPDesktop
 * Prop_Screen_Nightclub
 * And a few others
 * ```
 * @param textureDict - 
 * @param textureName - 
 * @param screenX - 
 * @param screenY - 
 * @param width - 
 * @param height - 
 * @param heading - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0x2BC54A8188768488
 */
export function DrawInteractiveSprite(textureDict: string, textureName: string, screenX: number, screenY: number, width: number, height: number, heading: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * ```
 * GRAPHICS::START_PARTICLE_FX_LOOPED_AT_COORD("scr_fbi_falling_debris", 93.7743f, -749.4572f, 70.86904f, 0f, 0f, 0f, 0x3F800000, 0, 0, 0, 0)  
 * p11 seems to be always 0  
 * ```
 * @param effectName - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param scale - 
 * @param xAxis - 
 * @param yAxis - 
 * @param zAxis - 
 * @param p11 - 
 * @returns number
 * @remarks Hash: 0xE184F4F0DC5910E7
 */
export function startParticleFxLoopedAtCoord(effectName: string, x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: number, yAxis: number, zAxis: number, p11: number): number;

/**
 * ## Parameters
 * *
 * @param ptfxHandle - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @returns void
 * @remarks Hash: 0xF7DDEBEC43483C43
 */
export function setParticleFxLoopedOffsets(ptfxHandle: number, x: number, y: number, z: number, rotX: number, rotY: number, rotZ: number): void;

/**
 * ## Parameters
 * *
 * @param level - 
 * @returns void
 * @remarks Hash: 0x1600FD8CF72EBC12
 */
export function overrideInteriorSmokeLevel(level: number): void;

/**
 * This native draws a textured polygon between three vectors in the game world. It's commonly utilized for rendering deadline trailing lights, with additional details available in the `deadline.ytd` file. UVW mapping details (u,v,w parameters) can be found on various internet resources. This native is specifically used for drawing textured polygons on the screen, where UV coordinates define the texture mapping and color/alpha parameters define the appearance of the polygon. This native should be called every frame for continuous rendering.
 * 
 * ```
 * NativeDB Introduced: v877
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param x3 - 
 * @param y3 - 
 * @param z3 - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @param textureDict - 
 * @param textureName - 
 * @param u1 - 
 * @param v1 - 
 * @param w1 - 
 * @param u2 - 
 * @param v2 - 
 * @param w2 - 
 * @param u3 - 
 * @param v3 - 
 * @param w3 - 
 * @returns void
 * @remarks Hash: 0x29280002282F1928
 */
export function drawTexturedPoly(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red: number, green: number, blue: number, alpha: number, textureDict: string, textureName: string, u1: number, v1: number, w1: number, u2: number, v2: number, w2: number, u3: number, v3: number, w3: number): void;

/**
 * @returns void
 * @remarks Hash: 0xC35A6D07C93802B2
 */
export function 0xc35a6d07c93802b2(): void;

/**
 * ```
 * NativeDB Added Parameter 26: BOOL p25
 * ```
 * @param type - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param dirX - 
 * @param dirY - 
 * @param dirZ - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param scaleX - 
 * @param scaleY - 
 * @param scaleZ - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @param bobUpAndDown - 
 * @param faceCamera - 
 * @param rotationOrder - 
 * @param rotate - 
 * @param textureDict - 
 * @param textureName - 
 * @param drawOnEnts - 
 * @param p24 - 
 * @returns void
 * @remarks Hash: 0xE82728F0DE75D13A
 */
export function DrawMarker2(type: number, posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, rotX: number, rotY: number, rotZ: number, scaleX: number, scaleY: number, scaleZ: number, red: number, green: number, blue: number, alpha: number, bobUpAndDown: number, faceCamera: number, rotationOrder: number, rotate: number, textureDict: string, textureName: string, drawOnEnts: number, p24: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x0D6CA79EEEBD8CA3
 */
export function getStatusOfTakeHighQualityPhoto(): number;

/**
 * @returns void
 * @remarks Hash: 0x1612C45F9E3E0D44
 */
export function 0x1612c45f9e3e0d44(): void;

/**
 * ```
 * This method is the equivalent to PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_STRING when using it to add a new button (like "INSTRUCTIONAL_BUTTONS").  
 * When switching with a controller, the icons update and become the controller's icons.  
 * ```
 * @param string - 
 * @returns void
 * @remarks Hash: 0xE83A3E3557A56640
 */
export function scaleformMovieMethodAddParamPlayerNameString(string: string): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xB569F41F3E7E83A4
 */
export function 0xb569f41f3e7e83a4(p0: any): void;

/**
 * ```
 * Probably changes tvs from being a 3d audio to being "global" audio
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x113D2C5DC57E1774
 */
export function setTvAudioFrontend(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x9B6E70C5CEEF4EEB
 */
export function queryMovieMeshSetState(p0: any): any;

/**
 * ```
 * Returns the texture resolution of the passed texture dict+name.  
 * Note: Most texture resolutions are doubled compared to the console version of the game.  
 * ```
 * @param textureDict - 
 * @param textureName - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x35736EE65BD00C11
 */
export function getTextureResolution(textureDict: string, textureName: string): { x: number, y: number, z: number };

/**
 * @returns void
 * @remarks Hash: 0x27CFB1B1E078CB2D
 */
export function 0x27cfb1b1e078cb2d(): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xF3F776ADA161E47D
 */
export function 0xf3f776ada161e47d(p0: any, p1: any): void;

/**
 * Returns status of gallery photo fetch, which was requested by [`QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS`](#_0x2A893980E96B659A).
 * @param scanForSaving - 
 * @returns number
 * @remarks Hash: 0xF5BED327CEA362B1
 */
export function getStatusOfSortedListOperation(scanForSaving: number): number;

/**
 * @returns void
 * @remarks Hash: 0x6A12D88881435DCA
 */
export function freeMemoryForLowQualityPhoto(): void;

/**
 * Requests a scaleform movie that doesn't render when the game is paused (With [`SET_GAME_PAUSED`](#_0x577D1284D6873711)).
 * @param scaleformName - 
 * @returns number
 * @remarks Hash: 0xBD06C611BB9048C2
 */
export function requestScaleformMovieSkipRenderWhilePaused(scaleformName: string): number;

/**
 * Similar to DRAW_SPRITE, but allows to specify the texture coordinates used to draw the sprite.
 * u1, v1 - texture coordinates for the top-left corner
 * u2, v2 - texture coordinates for the bottom-right corner
 * 
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param textureDict - 
 * @param textureName - 
 * @param x - 
 * @param y - 
 * @param width - 
 * @param height - 
 * @param u1 - 
 * @param v1 - 
 * @param u2 - 
 * @param v2 - 
 * @param heading - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0x95812F9B26074726
 */
export function DrawSpriteUv(textureDict: string, textureName: string, x: number, y: number, width: number, height: number, u1: number, v1: number, u2: number, v2: number, heading: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x90A78ECAA4E78453
 */
export function getStatusOfTakeMissionCreatorPhoto(): number;

/**
 * Calculates the effective X/Y fractions when applying the values set by `SET_SCRIPT_GFX_ALIGN` and
 * `SET_SCRIPT_GFX_ALIGN_PARAMS`.
 * @param x - 
 * @param y - 
 * @param calculatedX - 
 * @param calculatedY - 
 * @returns void
 * @remarks Hash: 0x6DD8F5AA635EB4B2
 */
export function GetScriptGfxPosition(x: number, y: number, calculatedX: number, calculatedY: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xE0E8BEECCA96BA31
 */
export function setEntityIconVisibility(entity: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x908311265D42A820
 */
export function 0x908311265d42a820(p0: any): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x393BD2275CEB7793
 */
export function 0x393bd2275ceb7793(): any;

/**
 * ```
 * x/y/z - Location of a vertex (in world coords), presumably.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param x3 - 
 * @param y3 - 
 * @param z3 - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0xAC26716048436851
 */
export function drawPoly(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param binkMovie - 
 * @returns void
 * @remarks Hash: 0x04D950EEFA4EED8C
 */
export function ReleaseBinkMovie(binkMovie: number): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xFF5992E1C9E65D05
 */
export function SeethroughSetNoiseAmountMin(amount: number): void;

/**
 * ## Parameters
 * *
 * @param scaleform - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6D8EB211944DCE08
 */
export function setScaleformMovieToUseSystemTime(scaleform: number, toggle: number): void;

/**
 * Sets the draw offset/calculated size for `SET_SCRIPT_GFX_ALIGN`. If using any alignment other than left/top, the game
 * expects the width/height to be configured using this native in order to get a proper starting position for the draw
 * command.
 * @param x - 
 * @param y - 
 * @param w - 
 * @param h - 
 * @returns void
 * @remarks Hash: 0xF5A2C681787E579D
 */
export function setScriptGfxAlignParams(x: number, y: number, w: number, h: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xBB90E12CAC1DAB25
 */
export function 0xbb90e12cac1dab25(p0: number): void;

/**
 * ```
 * Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param range - 
 * @returns void
 * @remarks Hash: 0x5D6B2D4830A67C62
 */
export function removeDecalsInRange(x: number, y: number, z: number, range: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @returns any
 * @remarks Hash: 0x98D18905BF723B99
 */
export function 0x98d18905bf723b99(): any;

/**
 * ```
 * unk is not used so no need  
 * ```
 * @param scaleform - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @param unk - 
 * @returns void
 * @remarks Hash: 0x0DF606929C105BE1
 */
export function drawScaleformMovieFullscreen(scaleform: number, red: number, green: number, blue: number, alpha: number, unk: number): void;

/**
 * Starts frontend (pause menu) scaleform movie methods for header options.
 * 
 * Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND`](#_0xAB58C27C2E6123C6) to customize the content inside the frontend menus.
 * @param functionName - 
 * @returns number
 * @remarks Hash: 0xB9449845F73F5E9C
 */
export function beginScaleformMovieMethodOnFrontendHeader(functionName: string): number;

/**
 * @returns void
 * @remarks Hash: 0xD801CC02177FA3F1
 */
export function freeMemoryForHighQualityPhoto(): void;

/**
 * ```
 * Toggles Heatvision on/off.  
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x7E08924259E08CE0
 */
export function setSeethrough(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x74C180030FDE4B69
 */
export function enableMovieKeyframeWait(toggle: number): void;

/**
 * ```
 * Draws a rectangle on the screen.  
 * -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)  
 * -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)  
 * -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)  
 * -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)  
 * -R: Red part of the color. (0-255)  
 * -G: Green part of the color. (0-255)  
 * -B: Blue part of the color. (0-255)  
 * -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)  
 * The total number of rectangles to be drawn in one frame is apparently limited to 399.  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 9: BOOL p8
 * ```
 * @param x - 
 * @param y - 
 * @param width - 
 * @param height - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @param a - 
 * @returns void
 * @remarks Hash: 0x3A618A217E5154F0
 */
export function drawRect(x: number, y: number, width: number, height: number, r: number, g: number, b: number, a: number): void;

/**
 * ```
 * This function is hard-coded to always return 96.
 * ```
 * @returns number
 * @remarks Hash: 0xDC54A7AF8B3A14EF
 */
export function getMaximumNumberOfCloudPhotos(): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0x1D5F595CCAE2E238
 */
export function setEntityIconColor(entity: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * ## Parameters
 * *
 * @param movieMeshSet - 
 * @returns void
 * @remarks Hash: 0xEB119AA014E89183
 */
export function releaseMovieMeshSet(movieMeshSet: number): void;

/**
 * Seeks a BINK movie to a specified position.
 * @param binkMovie - 
 * @param progress - 
 * @returns void
 * @remarks Hash: 0x0CB6B3446855B57A
 */
export function SetBinkMovieTime(binkMovie: number, progress: number): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * 
 * This native is used for the "larger" circular checkpoints, and sets the circle/ring around the checkpoint to point in the same direction as the inner arrow
 * @param checkpointHandle - 
 * @returns void
 * @remarks Hash: 0xDB1EA9411C8911EC
 */
export function 0xdb1ea9411c8911ec(checkpointHandle: number): void;

/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.  
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @param a - 
 * @returns void
 * @remarks Hash: 0x083A2CA4F2E573BD
 */
export function drawDebugBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, r: number, g: number, b: number, a: number): void;

/**
 * @returns void
 * @remarks Hash: 0x302C91AB2D477F7E
 */
export function GrassLodResetScriptAreas(): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @param range - 
 * @param intensity - 
 * @param shadow - 
 * @returns void
 * @remarks Hash: 0xF49E9A9716A04595
 */
export function DrawLightWithRangeAndShadow(x: number, y: number, z: number, r: number, g: number, b: number, range: number, intensity: number, shadow: number): void;

/**
 * ```
 * Called prior to adding a text component to the UI. After doing so, GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING is called.
 * Examples:
 * GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("NUMBER");
 * HUD::ADD_TEXT_COMPONENT_INTEGER(MISC::ABSI(a_1));
 * GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
 * GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
 * HUD::_ADD_TEXT_COMPONENT_STRING(a_2);
 * GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
 * GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM2");
 * HUD::_0x17299B63C7683A2B(v_3);
 * HUD::_0x17299B63C7683A2B(v_4);
 * GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
 * GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM1");
 * HUD::_0x17299B63C7683A2B(v_3);
 * GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
 * ```
 * @param textLabel - 
 * @returns void
 * @remarks Hash: 0x80338406F3475E55
 */
export function beginTextCommandScaleformString(textLabel: string): void;

/**
 * @returns void
 * @remarks Hash: 0x0A123435A26C36CD
 */
export function endPetrolTrailDecals(): void;

/**
 * This native is used along with these two natives: [`TERRAINGRID_ACTIVATE`](#_0xA356990E161C9E65) and [`TERRAINGRID_SET_COLOURS`](#_0x5CE62918F8D703C7).
 * 
 * This native configures the location, size, rotation, normal height, and the difference ratio between min, normal and max.
 * 
 * All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p3 - 
 * @param rotation - 
 * @param p5 - 
 * @param width - 
 * @param height - 
 * @param p8 - 
 * @param scale - 
 * @param glowIntensity - 
 * @param normalHeight - 
 * @param heightDiff - 
 * @returns void
 * @remarks Hash: 0x1C4FC5752BCD8E48
 */
export function terraingridSetParams(x: number, y: number, z: number, p3: number, rotation: number, p5: number, width: number, height: number, p8: number, scale: number, glowIntensity: number, normalHeight: number, heightDiff: number): void;

/**
 * Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for TV channels and other draw commands that are used with a world render target.
 * @param flag - 
 * @returns void
 * @remarks Hash: 0xC6372ECD45D73BCD
 */
export function setScriptGfxDrawBehindPausemenu(flag: number): void;

/**
 * ## Parameters
 * *
 * @param scaleformHandle - 
 * @param x - 
 * @param y - 
 * @param width - 
 * @param height - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @param unk - 
 * @returns void
 * @remarks Hash: 0x54972ADAF0294A93
 */
export function drawScaleformMovie(scaleformHandle: number, x: number, y: number, width: number, height: number, red: number, green: number, blue: number, alpha: number, unk: number): void;

/**
 * ```
 * p8 seems to always be false.  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @returns void
 * @remarks Hash: 0x312342E1A4874F3F
 */
export function golfTrailSetPath(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xB2EBE8CBC58B90E9
 */
export function 0xb2ebe8cbc58b90e9(): any;

/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xCFD16F0DB5A3535C
 */
export function 0xcfd16f0db5a3535c(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xACEE6F360FC1F6B6
 */
export function setParticleFxCamInsideNonplayerVehicle(vehicle: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param point - 
 * @returns void
 * @remarks Hash: 0xB25DC90BAD56CA42
 */
export function destroyTrackedPoint(point: number): void;

/**
 * ```
 * Resets the effect of SET_PARTICLE_FX_OVERRIDE
 * ```
 * @param name - 
 * @returns void
 * @remarks Hash: 0x89C8553DD3274AAE
 */
export function resetParticleFxOverride(name: string): void;

/**
 * ```
 * All calls to this native are preceded by calls to GRAPHICS::_0x61BB1D9B3A95D802 and GRAPHICS::_0xC6372ECD45D73BCD, respectively.
 * "act_cinema.ysc", line 1483:
 * HUD::SET_HUD_COMPONENT_POSITION(15, 0.0, -0.0375);
 * HUD::SET_TEXT_RENDER_ID(l_AE);
 * GRAPHICS::_0x61BB1D9B3A95D802(4);
 * GRAPHICS::_0xC6372ECD45D73BCD(1);
 * if (GRAPHICS::_0x0AD973CA1E077B60(${movie_arthouse})) {
 *     GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 0.7375, 1.0, 0.0, 255, 255, 255, 255);
 * } else {
 *     GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
 * }
 * "am_mp_property_int.ysc", line 102545:
 * if (ENTITY::DOES_ENTITY_EXIST(a_2._f3)) {
 *     if (HUD::IS_NAMED_RENDERTARGET_LINKED(ENTITY::GET_ENTITY_MODEL(a_2._f3))) {
 *         HUD::SET_TEXT_RENDER_ID(a_2._f1);
 *         GRAPHICS::_0x61BB1D9B3A95D802(4);
 *         GRAPHICS::_0xC6372ECD45D73BCD(1);
 *         GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
 *         if (GRAPHICS::GET_TV_CHANNEL() == -1) {
 *             sub_a8fa5(a_2, 1);
 *         } else {
 *             sub_a8fa5(a_2, 1);
 *             GRAPHICS::ATTACH_TV_AUDIO_TO_ENTITY(a_2._f3);
 *         }
 *         HUD::SET_TEXT_RENDER_ID(HUD::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());
 *     }
 * }
 * ```
 * @param xPos - 
 * @param yPos - 
 * @param xScale - 
 * @param yScale - 
 * @param rotation - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0xFDDC2B4ED3C69DF0
 */
export function drawTvChannel(xPos: number, yPos: number, xScale: number, yScale: number, rotation: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * Used to get a return value from a scaleform function. Returns an int in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING returns a string.
 * @param method_return - 
 * @returns number
 * @remarks Hash: 0x2DE7EFA66B906036
 */
export function getScaleformMovieMethodReturnValueInt(method_return: number): number;

/**
 * This function resets the alignment set using `SET_SCRIPT_GFX_ALIGN` and `SET_SCRIPT_GFX_ALIGN_PARAMS` to the default
 * values ('I', 'I'; 0, 0, 0, 0). This should be used after having used the aforementioned functions in order to not affect
 * any other scripts attempting to draw.
 * @returns void
 * @remarks Hash: 0xE3A3DB414A373DAB
 */
export function resetScriptGfxAlign(): void;

/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.  
 * ```
 * @param enabled - 
 * @returns void
 * @remarks Hash: 0x175B6BFC15CDD0C5
 */
export function setDebugLinesAndSpheresDrawingActive(enabled: number): void;

/**
 * ```
 * Only appeared in Golf & Golf_mp. Parameters were all ptrs  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x9CFDD90B2B844BF7
 */
export function golfTrailSetShaderParams(p0: number, p1: number, p2: number, p3: number, p4: number): void;

/**
 * ## Parameters
 * *
 * @param red - 
 * @param green - 
 * @param blue - 
 * @returns void
 * @remarks Hash: 0x1086127B3A63505E
 */
export function seethroughSetColorNear(red: number, green: number, blue: number): void;

/**
 * Creates an integer (usually 1) for a BINK movie to be called with other natives.
 * [List of all BINK movies (alphabetically ordered) as of b2802](https://gist.github.com/ItsJunction/8046f28c29ea8ff2821e9e4f933f595f)
 * @param name - 
 * @returns number
 * @remarks Hash: 0x338D9F609FD632DB
 */
export function SetBinkMovie(name: string): number;

/**
 * ```
 * NativeDB Introduced: v573
 * ```
 * 
 * Configures a Scaleform movie to render to a large render target (1280x720), which is useful for ensuring higher quality and clarity in certain display scenarios. Such as displaying the name of an organization (CEO Office) in a visually impactful way for example.
 * @param scaleformMovieId - 
 * @returns void
 * @remarks Hash: 0x32F34FF7F617643B
 */
export function setScaleformMovieToUseLargeRt(scaleformMovieId: number): void;

/**
 * Creates a tracked point: useful for checking the visibility of a 3D point on screen.
 * 
 * Tracked points must be manually managed and will not be destroyed on resource stop (they are not an instance of CScriptResource). See [`DESTROY_TRACKED_POINT`](#_0xB25DC90BAD56CA42) and [onResourceStop](https://docs.fivem.net/docs/scripting-reference/events/list/onResourceStop/).
 * 
 * Only 64 points may be tracked at a given time.
 * @returns number
 * @remarks Hash: 0xE2C9439ED45DEA60
 */
export function createTrackedPoint(): number;

/**
 * Used for drawling Deadline trailing lights, see deadline.ytd 
 * 
 * Each vertex has its own colour that is blended/illuminated on the texture. Additionally, the R, G, and B components are floats that are int-casted internally.
 * 
 * For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param x3 - 
 * @param y3 - 
 * @param z3 - 
 * @param red1 - 
 * @param green1 - 
 * @param blue1 - 
 * @param alpha1 - 
 * @param red2 - 
 * @param green2 - 
 * @param blue2 - 
 * @param alpha2 - 
 * @param red3 - 
 * @param green3 - 
 * @param blue3 - 
 * @param alpha3 - 
 * @param textureDict - 
 * @param textureName - 
 * @param u1 - 
 * @param v1 - 
 * @param w1 - 
 * @param u2 - 
 * @param v2 - 
 * @param w2 - 
 * @param u3 - 
 * @param v3 - 
 * @param w3 - 
 * @returns void
 * @remarks Hash: 0x736D7AA1B750856B
 */
export function DrawSpritePoly2(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red1: number, green1: number, blue1: number, alpha1: number, red2: number, green2: number, blue2: number, alpha2: number, red3: number, green3: number, blue3: number, alpha3: number, textureDict: string, textureName: string, u1: number, v1: number, w1: number, u2: number, v2: number, w2: number, u3: number, v3: number, w3: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x0E4299C549F0D1F1
 */
export function 0x0e4299c549f0d1f1(toggle: number): void;

/**
 * This native retrieves the aspect ratio of the game window. If `physicalAspect` is `true`, it returns the physical aspect ratio of the game window, which is useful for 3x1 modes. Otherwise, it returns the aspect ratio of the main game window, considering any custom overrides from the settings menu.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param physicalAspect - 
 * @returns number
 * @remarks Hash: 0xF1307EF624A80D87
 */
export function getAspectRatio(physicalAspect: number): number;

/**
 * ```
 * Push a function from the Scaleform onto the stack  
 * ```
 * @param scaleform - 
 * @param methodName - 
 * @returns number
 * @remarks Hash: 0xF6E48914C7A8694E
 */
export function beginScaleformMovieMethod(scaleform: number, methodName: string): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @returns number
 * @remarks Hash: 0x43DBAE39626CE83F
 */
export function SeethroughGetMaxThickness(): number;

/**
 * ```
 * Pushes a function from the Hud component Scaleform onto the stack. Same behavior as GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD, just a hud component id instead of a Scaleform.
 * Known components:
 * 19 - MP_RANK_BAR
 * 20 - HUD_DIRECTOR_MODE
 * This native requires more research - all information can be found inside of 'hud.gfx'. Using a decompiler, the different components are located under "scripts\__Packages\com\rockstargames\gtav\hud\hudComponents" and "scripts\__Packages\com\rockstargames\gtav\Multiplayer".
 * ```
 * @param hudComponent - 
 * @param methodName - 
 * @returns number
 * @remarks Hash: 0x98C494FD5BDFBFD5
 */
export function beginScaleformScriptHudMovieMethod(hudComponent: number, methodName: string): number;

/**
 * ## Parameters
 * *
 * @param ptfxHandle - 
 * @returns number
 * @remarks Hash: 0x74AFEF0D2E1E409B
 */
export function doesParticleFxLoopedExist(ptfxHandle: number): number;

/**
 * ## Parameters
 * *
 * @param modifierName1 - 
 * @param modifierName2 - 
 * @returns void
 * @remarks Hash: 0x1A8E2C8B9CF4549C
 */
export function addTcmodifierOverride(modifierName1: string, modifierName2: string): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x814AF7DCAACC597B
 */
export function 0x814af7dcaacc597b(p0: any): void;

/**
 * ```
 * boneIndex is always chassis_dummy in the scripts. The x/y/z params are location relative to the chassis bone.
 * ```
 * @param vehicle - 
 * @param ped - 
 * @param boneIndex - 
 * @param x1 - 
 * @param x2 - 
 * @param x3 - 
 * @param y1 - 
 * @param y2 - 
 * @param y3 - 
 * @param z1 - 
 * @param z2 - 
 * @param z3 - 
 * @param scale - 
 * @param p13 - 
 * @param alpha - 
 * @returns number
 * @remarks Hash: 0x428BDCB9DA58DA53
 */
export function addVehicleCrewEmblem(vehicle: number, ped: number, boneIndex: number, x1: number, x2: number, x3: number, y1: number, y2: number, y3: number, z1: number, z2: number, z3: number, scale: number, p13: any, alpha: number): number;

/**
 * This native draws a line between two vectors in the game world. It is typically used for visualizing paths or connections between points. The color of the line is specified by the red, green, and blue parameters, with alpha determining its opacity. This native should be called every frame for continuous rendering.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0x6B7256074AE34680
 */
export function drawLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x759650634F07B6B4
 */
export function 0x759650634f07b6b4(p0: number): number;

/**
 * ## Parameters
 * *
 * @param thickness - 
 * @returns void
 * @remarks Hash: 0x0C8FAC83902A62DF
 */
export function SeethroughSetMaxThickness(thickness: number): void;

/**
 * ```
 * UI3DSCENE_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x108BE26959A9D9BB
 */
export function 0x108be26959a9d9bb(toggle: number): void;

/**
 * ```
 * Enables Night Vision.  
 * Example:  
 * C#: Function.Call(Hash.SET_NIGHTVISION, true);  
 * C++: GRAPHICS::SET_NIGHTVISION(true);  
 * BOOL toggle:  
 * true = turns night vision on for your player.  
 * false = turns night vision off for your player.  
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x18F621F7A5B1F85D
 */
export function setNightvision(toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * 
 * Sets the given checkpoint target to the new coords
 * @param checkpointHandle - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x3C788E7F6438754D
 */
export function 0x3c788e7f6438754d(checkpointHandle: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param volume - 
 * @returns void
 * @remarks Hash: 0x2982BF73F66E9DDC
 */
export function setTvVolume(volume: number): void;

/**
 * ```
 * Purpose of p0 and p1 unknown.  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param fadeIn - 
 * @param duration - 
 * @param fadeOut - 
 * @returns void
 * @remarks Hash: 0x0AB84296FED9CFC6
 */
export function setFlash(p0: number, p1: number, fadeIn: number, duration: number, fadeOut: number): void;

/**
 * ```
 * Pops and calls the Scaleform function on the stack  
 * ```
 * @returns void
 * @remarks Hash: 0xC6796A8FFA375E53
 */
export function endScaleformMovieMethod(): void;

/**
 * ```
 * When this is set to ON, shadows only draw as you get nearer.
 * When OFF, they draw from a further distance.
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x80ECBC0C856D3B0B
 */
export function cascadeShadowsEnableEntityTracker(toggle: number): void;

/**
 * Adjusts a scaleform movie's dimensions to fit a large rendertarget. Mostly used in casino scripts.
 * @param scaleformHandle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xE6A9F00D4240B519
 */
export function setScaleformMovieToUseSuperLargeRt(scaleformHandle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x22A249A53034450A
 */
export function dontRenderInGameUi(p0: number): void;

/**
 * ```
 * Pushes a boolean for the Scaleform function onto the stack.  
 * ```
 * @param value - 
 * @returns void
 * @remarks Hash: 0xC58424BA936EB458
 */
export function scaleformMovieMethodAddParamBool(value: number): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns void
 * @remarks Hash: 0x70A64C0234EF522C
 */
export function seethroughReset(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x7AC24EAB6D74118D
 */
export function 0x7ac24eab6d74118d(p0: number): number;

/**
 * @returns void
 * @remarks Hash: 0x362E2D3FE93A9959
 */
export function endTextCommandScaleformString(): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param groundLvl - 
 * @param width - 
 * @param transparency - 
 * @returns number
 * @remarks Hash: 0x4F5212C7AD880DF8
 */
export function addPetrolDecal(x: number, y: number, z: number, groundLvl: number, width: number, transparency: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5B0316762AFD4A64
 */
export function 0x5b0316762afd4a64(): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x2FCB133CA50A49EB
 */
export function 0x2fcb133ca50a49eb(p0: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x949F397A288B28B3
 */
export function 0x949f397a288b28b3(p0: number): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param effectName - 
 * @param entity - 
 * @param offsetX - 
 * @param offsetY - 
 * @param offsetZ - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param boneIndex - 
 * @param scale - 
 * @param axisX - 
 * @param axisY - 
 * @param axisZ - 
 * @returns number
 * @remarks Hash: 0x02B1F2A72E0F5325
 */
export function StartNetworkedParticleFxNonLoopedOnEntityBone(effectName: string, entity: number, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, boneIndex: number, scale: number, axisX: number, axisY: number, axisZ: number): number;

/**
 * ## Parameters
 * *
 * @param checkpoint - 
 * @returns void
 * @remarks Hash: 0xF5ED37F54CD4D52E
 */
export function deleteCheckpoint(checkpoint: number): void;

/**
 * ## Parameters
 * *
 * @param X - 
 * @param Y - 
 * @param Z - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0xDD19FA1C6D657305
 */
export function removeParticleFxInRange(X: number, Y: number, Z: number, radius: number): void;

/**
 * @returns void
 * @remarks Hash: 0x5DEBD9C4DC995692
 */
export function 0x5debd9c4dc995692(): void;

/**
 * ## Parameters
 * *
 * @param effectName - 
 * @param ped - 
 * @param xOffset - 
 * @param yOffset - 
 * @param zOffset - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param boneIndex - 
 * @param scale - 
 * @param xAxis - 
 * @param yAxis - 
 * @param zAxis - 
 * @returns number
 * @remarks Hash: 0xF28DA9F38CD1787C
 */
export function startParticleFxLoopedOnPedBone(effectName: string, ped: number, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, boneIndex: number, scale: number, xAxis: number, yAxis: number, zAxis: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xD2300034310557E4
 */
export function removeVehicleCrewEmblem(vehicle: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param distance - 
 * @returns void
 * @remarks Hash: 0xA78DE25577300BA1
 */
export function SeethroughSetFadeStartDistance(distance: number): void;

/**
 * ## Parameters
 * *
 * @param strength - 
 * @returns void
 * @remarks Hash: 0x82E7FFCD5B2326B3
 */
export function setTimecycleModifierStrength(strength: number): void;

/**
 * If true, this native will create purple explosions upon projectile impact, add comic-like PTFX when firing a weapon, create a sound on bullet impact and have its own "blood effect".
 * 
 * If the PTFX asset "scr_rcbarry2" is not requested using ([`RequestNamedPtfxAsset`](#_0xD821490579791273)) then this native
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD821490579791273
 */
export function enableClownBloodVfx(toggle: number): void;

/**
 * ```
 * SET_TV_???  
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xD1C55B110E4DF534
 */
export function 0xd1c55b110e4df534(p0: any): void;

/**
 * ```
 * It's called after 0xD3A10FC7FD8D98CD and 0xF1CEA8A4198D8E9A  
 * p0 was always "CELEBRATION_WINNER"  
 * ```
 * @param p0 - 
 * @param ped - 
 * @param p2 - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @returns number
 * @remarks Hash: 0x98C4FE6EC34154CA
 */
export function DrawShowroom(p0: string, ped: number, p2: number, posX: number, posY: number, posZ: number): number;

/**
 * ```
 * Sets the checkpoint color.  
 * ```
 * @param checkpoint - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0x7167371E8AD747F7
 */
export function setCheckpointRgba(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * ```
 * UI3DSCENE_*
 * ```
 * @returns void
 * @remarks Hash: 0x7A42B2E236E71415
 */
export function 0x7a42b2e236e71415(): void;

/**
 * ## Parameters
 * *
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param colorR - 
 * @param colorG - 
 * @param colorB - 
 * @param range - 
 * @param intensity - 
 * @returns void
 * @remarks Hash: 0xF2A1B2771A01DBD4
 */
export function drawLightWithRange(posX: number, posY: number, posZ: number, colorR: number, colorG: number, colorB: number, range: number, intensity: number): void;

/**
 * This function anchors script draws to a side of the safe zone. This needs to be called to make the interface
 * independent of the player's safe zone configuration.
 * 
 * These values are equivalent to `alignX` and `alignY` in `common:/data/ui/frontend.xml`, which can be used as a baseline
 * for default alignment.
 *   
 * Valid values for `horizontalAlign`, from original documentation:
 * *
 * @param horizontalAlign - 
 * @param verticalAlign - 
 * @returns void
 * @remarks Hash: 0xB8A850F20A067EB6
 */
export function setScriptGfxAlign(horizontalAlign: number, verticalAlign: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x96EF97DAEB89BEF5
 */
export function setParticleFxShootoutBoat(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x1BBC135A4D25EDDE
 */
export function 0x1bbc135a4d25edde(p0: number): void;

/**
 * ```
 * Loads the specified timecycle modifier. Modifiers are defined separately in another file (e.g. "timecycle_mods_1.xml")
 * Parameters:
 * modifierName - The modifier to load (e.g. "V_FIB_IT3", "scanline_cam", etc.)
 * ```
 * @param modifierName - 
 * @returns void
 * @remarks Hash: 0x2C933ABF17A1DF41
 */
export function setTimecycleModifier(modifierName: string): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x15E33297C3E8DC60
 */
export function removeTcmodifierOverride(p0: string): void;

/**
 * @returns void
 * @remarks Hash: 0xB4EDDC19532BFB85
 */
export function animpostfxStopAll(): void;

/**
 * Prevents gas / petrol decals (aka gas / petrol trails and puddles) to be ignited on fire during the frame in which the native is called.
 * @returns void
 * @remarks Hash: 0xD9454B5752C857DC
 */
export function setDisablePetrolDecalsIgnitingThisFrame(): void;

/**
 * Returns current screen resolution.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param x - 
 * @param y - 
 * @returns void
 * @remarks Hash: 0x873C9F3104101DD3
 */
export function getActualScreenResolution(x: number, y: number): void;

/**
 * ```
 * Getter for 0xB3C641F3630BF6DA
 * 
 * GET_M*
 * ```
 * @returns number
 * @remarks Hash: 0xE59343E9E96529E7
 */
export function 0xe59343e9e96529e7(): number;

/**
 * Loads specified video sequence into the TV Channel
 * TV_Channel ranges from 0-2
 * VideoSequence can be any of the following:
 * "PL_STD_CNT" CNT Standard Channel
 * "PL_STD_WZL" Weazel Standard Channel
 * "PL_LO_CNT"
 * "PL_LO_WZL"
 * "PL_SP_WORKOUT"
 * "PL_SP_INV" - Jay Norris Assassination Mission Fail
 * "PL_SP_INV_EXP" - Jay Norris Assassination Mission Success
 * "PL_LO_RS" - Righteous Slaughter Ad
 * "PL_LO_RS_CUTSCENE" - Righteous Slaughter Cut-scene
 * "PL_SP_PLSH1_INTRO"
 * "PL_LES1_FAME_OR_SHAME"
 * "PL_STD_WZL_FOS_EP2"
 * "PL_MP_WEAZEL" - Weazel Logo on loop
 * "PL_MP_CCTV" - Generic CCTV loop
 * Restart:
 * 0=video sequence continues as normal
 * 1=sequence restarts from beginning every time that channel is selected
 * The above playlists work as intended, and are commonly used, but there are many more playlists, as seen in `tvplaylists.xml`. A pastebin below outlines all playlists, they will be surronded by the name tag I.E. (<Name>PL_STD_CNT</Name> = PL_STD_CNT).
 * https://pastebin.com/zUzGB6h7
 * @param tvChannel - 
 * @param playlistName - 
 * @param restart - 
 * @returns void
 * @remarks Hash: 0xF7B38B8305F1FE8B
 */
export function setTvChannelPlaylist(tvChannel: number, playlistName: string, restart: number): void;

/**
 * ```
 * Calls the Scaleform function and passes the parameters as floats.  
 * The number of parameters passed to the function varies, so the end of the parameter list is represented by -1.0.  
 * ```
 * @param scaleform - 
 * @param methodName - 
 * @param param1 - 
 * @param param2 - 
 * @param param3 - 
 * @param param4 - 
 * @param param5 - 
 * @returns void
 * @remarks Hash: 0xD0837058AE2E4BEE
 */
export function callScaleformMovieMethodWithNumber(scaleform: number, methodName: string, param1: number, param2: number, param3: number, param4: number, param5: number): void;

/**
 * ```
 * Example:  
 * GRAPHICS::ADD_ENTITY_ICON(a_0, "MP_Arrow");  
 * I tried this and nothing happened...  
 * ```
 * @param entity - 
 * @param icon - 
 * @returns any
 * @remarks Hash: 0x9CD43EEE12BF4DD0
 */
export function addEntityIcon(entity: number, icon: string): any;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x23BA6B0C2AD7B0D3
 */
export function setBackfaceculling(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ptfxHandle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xC401503DFE8D53CF
 */
export function removeParticleFx(ptfxHandle: number, p1: number): void;

/**
 * Removes any custom moon cycle overrides that have been configured with [ENABLE_MOON_CYCLE_OVERRIDE](#_0x2C328AF17210F009)
 * @returns void
 * @remarks Hash: 0x2BF72AD5B41AA739
 */
export function disableMoonCycleOverride(): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xA51C4B86B71652AE
 */
export function golfTrailSetEnabled(toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param binkMovie - 
 * @returns void
 * @remarks Hash: 0x63606A61DE68898A
 */
export function StopBinkMovie(binkMovie: number): void;

/**
 * Used in pi_menu.c. Checks if there is a brief entry for specified value.
 * Values:
 * 0 - Dialogue brief
 * 1 - Help text brief
 * 2 - Mission Objective brief
 * @param briefValue - 
 * @returns number
 * @remarks Hash: 0x5E657EF1099EDD65
 */
export function doesLatestBriefStringExist(briefValue: number): number;

/**
 * ## Parameters
 * *
 * @param index - 
 * @param heatScale - 
 * @returns void
 * @remarks Hash: 0xD7D0B00177485411
 */
export function seethroughSetHeatscale(index: number, heatScale: number): void;

/**
 * ## Parameters
 * *
 * @param modifierName - 
 * @returns void
 * @remarks Hash: 0x5096FD9CCB49056D
 */
export function SetExtraTimecycleModifier(modifierName: string): void;

/**
 * ```
 * FORCE_*
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x9B079E5221D984D3
 */
export function 0x9b079e5221d984d3(p0: number): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x61F95E5BB3E0A8C6
 */
export function 0x61f95e5bb3e0a8c6(p0: any): void;

/**
 * ```
 * TOGGLE_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xE63D7C6EECECB66B
 */
export function 0xe63d7c6eececb66b(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xF78B803082D4386F
 */
export function 0xf78b803082d4386f(p0: number): void;

/**
 * ```
 * Unknown. Called after creating a checkpoint (type: 51) in the creators.  
 * ```
 * @param checkpoint - 
 * @returns void
 * @remarks Hash: 0x615D3925E87A3B26
 */
export function 0x615d3925e87a3b26(checkpoint: number): void;

/**
 * ## Parameters
 * *
 * @param noise - 
 * @returns void
 * @remarks Hash: 0x1636D7FC127B10D2
 */
export function SeethroughSetHiLightNoise(noise: number): void;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param scale - 
 * @returns void
 * @remarks Hash: 0x1E2E01C00837D26E
 */
export function SetParticleFxNonLoopedEmitterScale(p0: number, p1: number, scale: number): void;

/**
 * This native enables/disables the gold putting grid display (https://i.imgur.com/TC6cku6.png).
 * This requires these two natives to be called as well to configure the grid: [`TERRAINGRID_SET_PARAMS`](#_0x1C4FC5752BCD8E48) and [`TERRAINGRID_SET_COLOURS`](#_0x5CE62918F8D703C7).
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xA356990E161C9E65
 */
export function terraingridActivate(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x5F0F3F56635809EF
 */
export function cascadeShadowsSetCascadeBoundsScale(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xCA465D9CC0D231BA
 */
export function 0xca465d9cc0d231ba(p0: any): void;

/**
 * This native is used along with these two natives: [`TERRAINGRID_ACTIVATE`](#_0xA356990E161C9E65) and [`TERRAINGRID_SET_PARAMS`](#_0x1C4FC5752BCD8E48). 
 * This native sets the colors for the golf putting grid. the 'min...' values are for the lower areas that the grid covers, the 'max...' values are for the higher areas that the grid covers, all remaining values are for the 'normal' ground height.
 * All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
 * 
 * Old description:
 * Only called in golf and golf_mp  
 * parameters used are   
 * GRAPHICS::_0x5CE62918F8D703C7(255, 0, 0, 64, 255, 255, 255, 5, 255, 255, 0, 64);
 * @param lowR - 
 * @param lowG - 
 * @param lowB - 
 * @param lowAlpha - 
 * @param R - 
 * @param G - 
 * @param B - 
 * @param Alpha - 
 * @param highR - 
 * @param highG - 
 * @param highB - 
 * @param highAlpha - 
 * @returns void
 * @remarks Hash: 0x5CE62918F8D703C7
 */
export function terraingridSetColours(lowR: number, lowG: number, lowB: number, lowAlpha: number, R: number, G: number, B: number, Alpha: number, highR: number, highG: number, highB: number, highAlpha: number): void;

/**
 * @returns void
 * @remarks Hash: 0x27CB772218215325
 */
export function CascadeShadowsClearShadowSampleType(): void;

/**
 * Only works on some fx's, while on others it might SEEM to work "properly", but the colors can be "strange" or even completly different from what you've expected. Reason for this is that those fx's might already have colors "baked into them" which then start to act as a "mixing palette", resulting in a different color than expected. A hypothetical example of this would be if the fx itself is already full (bright) red (RGB: 1.0, 0.0, 0.0) and you then set the color to (bright) green (RGB: 0.0, 1.0, 0.0), that it MIGHT result in Yellow (RGB: 1.0, 1.0, 0.0).
 * 
 * This doc previously stated that the set color is
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns void
 * @remarks Hash: 0x26143A59EF48B262
 */
export function setParticleFxNonLoopedColour(r: number, g: number, b: number): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xADD6627C4D325458
 */
export function 0xadd6627c4d325458(p0: any): void;

/**
 * Same as [REQUEST_SCALEFORM_MOVIE](#_0x11FE353CF9733E6F), except it seems to fix stretched scaleforms on ultrawide.
 * @param scaleformName - 
 * @returns number
 * @remarks Hash: 0xC514489CFB8AF806
 */
export function requestScaleformMovieInstance(scaleformName: string): number;

/**
 * ## Parameters
 * *
 * @param scale - 
 * @returns void
 * @remarks Hash: 0x27E32866E9A5C416
 */
export function setParticleFxBulletImpactScale(scale: number): void;

/**
 * ## Parameters
 * *
 * @param hudComponent - 
 * @returns void
 * @remarks Hash: 0x9304881D6F6537EA
 */
export function requestScaleformScriptHudMovie(hudComponent: number): void;

/**
 * Enable a custom moon cycle, allowing control of which lunar phase the moon is in.
 * 
 * Valid values are from `0.0` to `1.0`, with `0.5` representing a full moon.
 * 
 * | Value |   Lunar Phase   |
 * | :---: | :-------------: |
 * | `0.1` | Waxing Crescent |
 * | `0.2` |  First Quarter  |
 * | `0.3` | Waxing Gibbous  |
 * | `0.5` |    Full Moon    |
 * | `0.7` | Waning Gibbous  |
 * | `0.8` |  Third Quarter  |
 * | `0.9` | Waning Crescent |
 * 
 * The moon phase can be disabled with [DISABLE_MOON_CYCLE_OVERRIDE](#_0x2BF72AD5B41AA739)
 * @param phase - 
 * @returns void
 * @remarks Hash: 0x2C328AF17210F009
 */
export function enableMoonCycleOverride(phase: number): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xBCEDB009461DA156
 */
export function 0xbcedb009461da156(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x2C42340F916C5930
 */
export function 0x2c42340f916c5930(p0: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xA46B73FAA3460AE1
 */
export function 0xa46b73faa3460ae1(p0: number): void;

/**
 * ```
 * network fx  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 14: Any p13
 * NativeDB Added Parameter 15: Any p14
 * NativeDB Added Parameter 16: Any p15
 * NativeDB Added Parameter 17: Any p16
 * ```
 * @param effectName - 
 * @param entity - 
 * @param xOffset - 
 * @param yOffset - 
 * @param zOffset - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param boneIndex - 
 * @param scale - 
 * @param xAxis - 
 * @param yAxis - 
 * @param zAxis - 
 * @returns number
 * @remarks Hash: 0xDDE23F30CC5A0F03
 */
export function startNetworkedParticleFxLoopedOnEntityBone(effectName: string, entity: number, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, boneIndex: number, scale: number, xAxis: number, yAxis: number, zAxis: number): number;

/**
 * ## Parameters
 * *
 * @param oldAsset - 
 * @param newAsset - 
 * @returns void
 * @remarks Hash: 0xEA1E2D93F6F75ED9
 */
export function setParticleFxOverride(oldAsset: string, newAsset: string): void;

/**
 * ## Parameters
 * *
 * @param tvChannel - 
 * @param playlistName - 
 * @param hour - 
 * @returns void
 * @remarks Hash: 0x2201C576FACAEBE8
 */
export function setTvChannelPlaylistAtHour(tvChannel: number, playlistName: string, hour: number): void;

/**
 * ## Parameters
 * *
 * @param point - 
 * @returns number
 * @remarks Hash: 0xC45CCDAAC9221CA8
 */
export function isTrackedPointVisible(point: number): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @returns void
 * @remarks Hash: 0xAAE9BE70EC7C69AB
 */
export function 0xaae9be70ec7c69ab(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;

/**
 * ## Parameters
 * *
 * @param channel - 
 * @returns void
 * @remarks Hash: 0xBAABBB23EB6E484E
 */
export function setTvChannel(channel: number): void;

/**
 * ## Parameters
 * *
 * @param xCoord - 
 * @param yCoord - 
 * @param zCoord - 
 * @param radius - 
 * @returns number
 * @remarks Hash: 0x2F09F7976C512404
 */
export function getIsPetrolDecalInRange(xCoord: number, yCoord: number, zCoord: number, radius: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xEEC4047028426510
 */
export function setParticleFxCamInsideVehicle(p0: number): void;

/**
 * ## Parameters
 * *
 * @param scaleformHandle - 
 * @returns number
 * @remarks Hash: 0x8217150E1217EBFD
 */
export function hasScaleformContainerMovieLoadedIntoParent(scaleformHandle: number): number;

/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.  
 * ```
 * @param text - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0x3903E216620488E8
 */
export function drawDebugText(text: string, x: number, y: number, z: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x9C30613D50A6ADEF
 */
export function washDecalsInRange(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x54E22EA2C1956A8D
 */
export function 0x54e22ea2c1956a8d(p0: number): void;

/**
 * ```
 * Only one match in the scripts:
 * GRAPHICS::PRESET_INTERIOR_AMBIENT_CACHE("int_carrier_hanger");
 * ```
 * @param timecycleModifierName - 
 * @returns void
 * @remarks Hash: 0xD7021272EB0A451E
 */
export function presetInteriorAmbientCache(timecycleModifierName: string): void;

/**
 * ```
 * 12 matches across 4 scripts. All 4 scripts were job creators.
 * type ranged from 0 - 2.
 * p4 was always 0.2f. Likely scale.
 * assuming p5 - p8 is RGBA, the graphic is always yellow (255, 255, 0, 255).
 * Tested but noticed nothing.
 * ```
 * @param type - 
 * @param xPos - 
 * @param yPos - 
 * @param zPos - 
 * @param p4 - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0xB1BB03742917A5D6
 */
export function golfTrailSetFixedControlPoint(type: number, xPos: number, yPos: number, zPos: number, p4: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * Must be called each frame, will play at specified position on screen when called with [`_PLAY_BINK_MOVIE`](#_0x70D2CC8A542A973C)
 * @param binkMovie - 
 * @param posX - 
 * @param posY - 
 * @param scaleX - 
 * @param scaleY - 
 * @param rotation - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @param a - 
 * @returns void
 * @remarks Hash: 0x7118E83EEB9F7238
 */
export function DrawBinkMovie(binkMovie: number, posX: number, posY: number, scaleX: number, scaleY: number, rotation: number, r: number, g: number, b: number, a: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x2202A3F42C8E5F79
 */
export function getUsingnightvision(): number;

/**
 * Does not affect weapons, particles, fire/explosions, flashlights or the sun.
 * 
 * When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
 * 
 * Used in Humane Labs Heist for EMP.
 * @param state - 
 * @returns void
 * @remarks Hash: 0x1268615ACE24D504
 */
export function setArtificialLightsState(state: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x25FC3E33A31AD0C9
 */
export function 0x25fc3e33a31ad0c9(p0: number): void;

/**
 * ```
 * Might be more appropriate in AUDIO?  
 * ```
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x845BAD77CC770633
 */
export function attachTvAudioToEntity(entity: number): void;

/**
 * ```
 * Overriding ped badge texture to a passed texture. It's synced between players (even custom textures!), don't forget to request used dict on *all* clients to make it sync properly. Can be removed by passing empty strings.
 * ```
 * @param ped - 
 * @param txd - 
 * @param txn - 
 * @returns number
 * @remarks Hash: 0x95EB5E34F821BABE
 */
export function OverridePedBadgeTexture(ped: number, txd: string, txn: string): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA67C35C56EB1BD9D
 */
export function beginTakeHighQualityPhoto(): number;

/**
 * ```
 * Sets the checkpoint icon color.
 * ```
 * @param checkpoint - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0xB9EA40907C680580
 */
export function setCheckpointRgba2(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * ## Parameters
 * *
 * @param textureDict - 
 * @returns number
 * @remarks Hash: 0x0145F696AAAAD2E4
 */
export function hasStreamedTextureDictLoaded(textureDict: string): number;

/**
 * ```
 * Sets the cylinder height of the checkpoint.  
 * Parameters:  
 * * nearHeight - The height of the checkpoint when inside of the radius.  
 * * farHeight - The height of the checkpoint when outside of the radius.  
 * * radius - The radius of the checkpoint.  
 * ```
 * @param checkpoint - 
 * @param nearHeight - 
 * @param farHeight - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0x2707AAE9D9297D89
 */
export function setCheckpointCylinderHeight(checkpoint: number, nearHeight: number, farHeight: number, radius: number): void;

/**
 * ```
 * GOLF_TRAIL_SET_*
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC0416B061F2B7E5E
 */
export function 0xc0416b061f2b7e5e(p0: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC50AA39A577AF886
 */
export function endScaleformMovieMethodReturnValue(): number;

/**
 * ```
 * Used in arcade games and Beam hack minigame in Doomsday Heist. For example, [Penetrator Arcade Game](https://streamable.com/8igrzw)
 * 
 * NativeDB Introduced: v1290
 * ```
 * @param textureDict - 
 * @param textureName - 
 * @param x - 
 * @param y - 
 * @param width - 
 * @param height - 
 * @param p6 - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @param p11 - 
 * @returns void
 * @remarks Hash: 0x2D3B147AFAD49DE0
 */
export function 0x2d3b147afad49de0(textureDict: string, textureName: string, x: number, y: number, width: number, height: number, p6: number, red: number, green: number, blue: number, alpha: number, p11: number): void;

/**
 * ```
 * GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE("scr_sh_bong_smoke", PLAYER::PLAYER_PED_ID(), -0.025f, 0.13f, 0f, 0f, 0f, 0f, 31086, 0x3F800000, 0, 0, 0);  
 * Axis - Invert Axis Flags  
 * list: pastebin.com/N9unUFWY  
 * ```
 * @param effectName - 
 * @param ped - 
 * @param offsetX - 
 * @param offsetY - 
 * @param offsetZ - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param boneIndex - 
 * @param scale - 
 * @param axisX - 
 * @param axisY - 
 * @param axisZ - 
 * @returns number
 * @remarks Hash: 0x0E7E72961BA18619
 */
export function startParticleFxNonLoopedOnPedBone(effectName: string, ped: number, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, boneIndex: number, scale: number, axisX: number, axisY: number, axisZ: number): number;

/**
 * ```
 * This function is hard-coded to always return 0.  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns any
 * @remarks Hash: 0xBE197EAA669238F4
 */
export function 0xbe197eaa669238f4(p0: any, p1: any, p2: any, p3: any): any;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x5B712761429DBC14
 */
export function washDecalsFromVehicle(vehicle: number, p1: number): void;

/**
 * ```
 * Pushes a float for the Scaleform function onto the stack.  
 * ```
 * @param value - 
 * @returns void
 * @remarks Hash: 0xD69736AAE04DB51A
 */
export function scaleformMovieMethodAddParamFloat(value: number): void;

/**
 * ```
 * This function can requests texture dictonaries from following RPFs:
 * scaleform_generic.rpf
 * scaleform_minigames.rpf
 * scaleform_minimap.rpf
 * scaleform_web.rpf
 * last param isnt a toggle
 * ```
 * @param textureDict - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xDFA2EF8E04127DD5
 */
export function requestStreamedTextureDict(textureDict: string, p1: number): void;

/**
 * This native draws a box between two vectors in the game world. It is typically used for visualizing boundaries or areas of interest. The color of the box is specified by the red, green, and blue parameters, with alpha determining its opacity. This native should be called every frame for continuous rendering.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0xD3A9971CADAC7252
 */
export function drawBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * ## Parameters
 * *
 * @param obj - 
 * @returns void
 * @remarks Hash: 0xCCF71CBDDF5B6CB9
 */
export function removeDecalsFromObject(obj: number): void;

/**
 * Used to get a return value from a scaleform function. Returns a string in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT returns an int.
 * @param method_return - 
 * @returns string
 * @remarks Hash: 0xE1E258829A885245
 */
export function getScaleformMovieMethodReturnValueString(method_return: number): string;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x2170813D3DD8661B
 */
export function getTvVolume(): number;

/**
 * Creates a motion-blur sort of effect, this native does not seem to work, however by using the [`ANIMPOSTFX_PLAY`](#_0x2206BF9A37B7F724) native with `"DrugsMichaelAliensFight"` as the effect parameter, you should be able to get the effect.
 * 
 * 
 * This native does not seem to work, however by using the [ANIMPOSTFX_PLAY](#_0x2206BF9A37B7F724) native with "DrugsMichaelAliensFight" as the effect parameter, you should be able to get the effect.
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9DCE1F0F78260875
 */
export function enableAlienBloodVfx(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param tvChannel - 
 * @returns void
 * @remarks Hash: 0xBEB3D46BB7F043C0
 */
export function clearTvChannelPlaylist(tvChannel: number): void;

/**
 * ```
 * Gets the scale of safe zone. if the safe zone size scale is max, it will return 1.0.  
 * ```
 * @returns number
 * @remarks Hash: 0xBAF107B6BB2C97F0
 */
export function getSafeZoneSize(): number;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xFEBFBFDFB66039DE
 */
export function SeethroughSetNoiseAmountMax(amount: number): void;

/**
 * ```
 * Possible values:
 * "CSM_ST_POINT"
 * "CSM_ST_LINEAR"
 * "CSM_ST_TWOTAP"
 * "CSM_ST_BOX3x3"
 * "CSM_ST_BOX4x4"
 * "CSM_ST_DITHER2_LINEAR"
 * "CSM_ST_CUBIC"
 * "CSM_ST_DITHER4"
 * "CSM_ST_DITHER16"
 * "CSM_ST_SOFT16"
 * "CSM_ST_DITHER16_RPDB"
 * "CSM_ST_POISSON16_RPDB_GNORM"
 * "CSM_ST_HIGHRES_BOX4x4"
 * "CSM_ST_CLOUDS_SIMPLE"
 * "CSM_ST_CLOUDS_LINEAR"
 * "CSM_ST_CLOUDS_TWOTAP"
 * "CSM_ST_CLOUDS_BOX3x3"
 * "CSM_ST_CLOUDS_BOX4x4"
 * "CSM_ST_CLOUDS_DITHER2_LINEAR"
 * "CSM_ST_CLOUDS_SOFT16"
 * "CSM_ST_CLOUDS_DITHER16_RPDB"
 * "CSM_ST_CLOUDS_POISSON16_RPDB_GNORM"
 * ```
 * @param type - 
 * @returns void
 * @remarks Hash: 0xB11D94BC55F41932
 */
export function cascadeShadowsSetShadowSampleType(type: string): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xFE26117A5841B2FF
 */
export function getVehicleCrewEmblemRequestState(vehicle: number, p1: number): number;

/**
 * @returns void
 * @remarks Hash: 0x0F07E7745A236711
 */
export function clearTimecycleModifier(): void;

/**
 * See [`ANIMPOSTFX_PLAY`](#_0x2206BF9A37B7F724).
 * @param effectName - 
 * @returns number
 * @remarks Hash: 0x36AD3E690DA5ACEB
 */
export function animpostfxIsRunning(effectName: string): number;

/**
 * In percentage: 0.0 - 100.0
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param binkMovie - 
 * @returns number
 * @remarks Hash: 0x8E17DDD6B9D5BF29
 */
export function GetBinkMovieTime(binkMovie: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xFC1E275A90D39995
 */
export function getTvChannel(): number;

/**
 * ## Parameters
 * *
 * @param scaleformHandle - 
 * @returns number
 * @remarks Hash: 0x85F01B8D5B90570E
 */
export function hasScaleformMovieLoaded(scaleformHandle: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xE2892E7E55D7073A
 */
export function 0xe2892e7e55d7073a(p0: number): void;

/**
 * ## Parameters
 * *
 * @param scaleformName - 
 * @returns number
 * @remarks Hash: 0x11FE353CF9733E6F
 */
export function requestScaleformMovie(scaleformName: string): number;

/**
 * ```
 * Only use for this in the PC scripts is:
 * if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)
 * For a full list, see here: pastebin.com/cnk7FTF2
 * ```
 * @returns number
 * @remarks Hash: 0xFDF3D97C674AFB66
 */
export function getTimecycleModifierIndex(): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param binkMovie - 
 * @param shouldSkip - 
 * @returns void
 * @remarks Hash: 0x6805D58CAA427B72
 */
export function SetBinkShouldSkip(binkMovie: number, shouldSkip: number): void;

/**
 * Hardcoded to always return 1280x720. Use [`_GET_ACTIVE_SCREEN_RESOLUTION`](#_0x873C9F3104101DD3) to retrieve the correct screen resolution.
 * @param x - 
 * @param y - 
 * @returns void
 * @remarks Hash: 0x888D57E407E63624
 */
export function getScreenResolution(x: number, y: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x2B40A97646381508
 */
export function 0x2b40a97646381508(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC5C8F970D4EDFF71
 */
export function 0xc5c8f970d4edff71(p0: any): void;

/**
 * ```
 * GET_CURRENT_*
 * 
 * NativeDB Introduced: v1493
 * ```
 * @returns number
 * @remarks Hash: 0x30432A0118736E00
 */
export function 0x30432a0118736e00(): number;

/**
 * ## Parameters
 * *
 * @param movieMeshSetName - 
 * @returns number
 * @remarks Hash: 0xB66064452270E8F1
 */
export function loadMovieMeshSet(movieMeshSetName: string): number;

/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.  
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @param a - 
 * @returns void
 * @remarks Hash: 0x7FDFADE676AA3CB0
 */
export function drawDebugLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, r: number, g: number, b: number, a: number): void;

/**
 * ## Parameters
 * *
 * @param checkpoint - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param unkX - 
 * @param unkY - 
 * @param unkZ - 
 * @returns void
 * @remarks Hash: 0xF51D36185993515D
 */
export function 0xf51d36185993515d(checkpoint: number, posX: number, posY: number, posZ: number, unkX: number, unkY: number, unkZ: number): void;

/**
 * ```
 * Forces vehicle trails on all surfaces.
 * USE_/USING_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x4CC7F0FEA5283FE0
 */
export function SetForceVehicleTrails(toggle: number): void;

/**
 * ```
 * Setter for 0xE59343E9E96529E7
 * 
 * SET_M*
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xB3C641F3630BF6DA
 */
export function 0xb3c641f3630bf6da(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x0AE73D8DF3A762B2
 */
export function 0x0ae73d8df3a762b2(p0: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x967278682CB6967A
 */
export function addPetrolTrailDecalInfo(x: number, y: number, z: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param transitionTime - 
 * @returns number
 * @remarks Hash: 0xEFACC8AEF94430D5
 */
export function triggerScreenblurFadeOut(transitionTime: number): number;

/**
 * Adds a literal string to a scaleform movie method.
 * There doesn't seem to be any difference between this and other `SCALEFORM_MOVIE_METHOD_ADD_PARAM_*_STRING` natives in game code.
 * @param string - 
 * @returns void
 * @remarks Hash: 0x77FE3402004CD1B0
 */
export function scaleformMovieMethodAddParamLiteralString(string: string): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x2485D34E50A22E84
 */
export function golfTrailSetRadius(p0: number, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x40AFB081F8ADD4EE
 */
export function ReturnTwo(p0: number): number;

/**
 * ## Parameters
 * *
 * @param scaleform1 - 
 * @param scaleform2 - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0xCF537FDE4FBD4CE5
 */
export function drawScaleformMovieFullscreenMasked(scaleform1: number, scaleform2: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * ```
 * REQUEST_STREAMED_TEXTURE_DICT("MPOnMissMarkers", false);  
 * *uParam0.f_809 = add_decal(9120, vParam1, vVar4, vVar7, 2f, 2f, to_float(iVar0) / 255f, to_float(iVar1) / 255f, to_float(iVar2) / 255f, 1f, -1f, 1, 0, 0);  
 * PATCH_DECAL_DIFFUSE_MAP(9120, "MPOnMissMarkers", "Capture_The_Flag_Base_Icon");  
 * ```
 * @param decalType - 
 * @param textureDict - 
 * @param textureName - 
 * @returns void
 * @remarks Hash: 0x8A35C742130C6080
 */
export function patchDecalDiffuseMap(decalType: number, textureDict: string, textureName: string): void;

/**
 * This native retrieves whether the game is running in widescreen mode or not.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0x30CF4BDA4FCB1905
 */
export function getIsWidescreen(): number;

/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.  
 * ```
 * @param text - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0xA3BB2E9555C05A8F
 */
export function drawDebugText2d(text: string, x: number, y: number, z: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x84C8D7C2D30D3280
 */
export function moveVehicleDecals(p0: any, p1: any): void;

/**
 * Starts frontend (pause menu) scaleform movie methods.
 * This can be used when you want to make custom frontend menus, and customize things like images or text in the menus etc.
 * 
 * Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER`](#_0xB9449845F73F5E9C) for header scaleform functions.
 * @param functionName - 
 * @returns number
 * @remarks Hash: 0xAB58C27C2E6123C6
 */
export function beginScaleformMovieMethodOnFrontend(functionName: string): number;

/**
 * ```
 * All presets can be found in common\data\ui\uiscenes.meta
 * ```
 * @param presetName - 
 * @returns number
 * @remarks Hash: 0xF1CEA8A4198D8E9A
 */
export function ui3dscenePushPreset(presetName: string): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x9641588DAB93B4B5
 */
export function 0x9641588dab93b4b5(p0: any): void;

/**
 * ## Parameters
 * *
 * @param scaleform - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param p7 - 
 * @param sharpness - 
 * @param p9 - 
 * @param scaleX - 
 * @param scaleY - 
 * @param scaleZ - 
 * @param p13 - 
 * @returns void
 * @remarks Hash: 0x87D51D72255D4E78
 */
export function drawScaleformMovie3d(scaleform: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, p7: number, sharpness: number, p9: number, scaleX: number, scaleY: number, scaleZ: number, p13: any): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x0C0C4E81E1AC60A0
 */
export function getStatusOfSaveHighQualityPhoto(): number;

/**
 * @returns void
 * @remarks Hash: 0x3669F1B198DCAA4F
 */
export function disableOcclusionThisFrame(): void;

/**
 * ## Parameters
 * *
 * @param string - 
 * @returns void
 * @remarks Hash: 0xBA7148484BD90365
 */
export function scaleformMovieMethodAddParamTextureNameString(string: string): void;

/**
 * ```
 * Starts a particle effect on an entity for example your player.  
 * List: pastebin.com/N9unUFWY  
 * Example:  
 * C#:  
 * Function.Call(Hash.REQUEST_NAMED_PTFX_ASSET, "scr_rcbarry2");                     Function.Call(Hash._SET_PTFX_ASSET_NEXT_CALL, "scr_rcbarry2");                             Function.Call(Hash.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY, "scr_clown_appears", Game.Player.Character, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 1.0, false, false, false);  
 * Internally this calls the same function as GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE  
 * however it uses -1 for the specified bone index, so it should be possible to start a non looped fx on an entity bone using that native  
 * ```
 * @param effectName - 
 * @param entity - 
 * @param offsetX - 
 * @param offsetY - 
 * @param offsetZ - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param scale - 
 * @param axisX - 
 * @param axisY - 
 * @param axisZ - 
 * @returns number
 * @remarks Hash: 0x0D53A3B8DA0809D2
 */
export function startParticleFxNonLoopedOnEntity(effectName: string, entity: number, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, scale: number, axisX: number, axisY: number, axisZ: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x060D935D3981A275
 */
export function doesVehicleHaveCrewEmblem(vehicle: number, p1: number): number;

/**
 * ## Parameters
 * *
 * @param textureDict - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x27FEB5254759CDE3
 */
export function 0x27feb5254759cde3(textureDict: string, p1: number): number;

/**
 * @returns void
 * @remarks Hash: 0x14FC5833464340A8
 */
export function 0x14fc5833464340a8(): void;

/**
 * ```
 * GRAPHICS::START_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_paleto_roof_impact", -140.8576f, 6420.789f, 41.1391f, 0f, 0f, 267.3957f, 0x3F800000, 0, 0, 0);  
 * Axis - Invert Axis Flags  
 * list: pastebin.com/N9unUFWY
 * @param effectName - 
 * @param xPos - 
 * @param yPos - 
 * @param zPos - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param scale - 
 * @param xAxis - 
 * @param yAxis - 
 * @param zAxis - 
 * @returns number
 * @remarks Hash: 0x25129531F77B9ED3
 */
export function startParticleFxNonLoopedAtCoord(effectName: string, xPos: number, yPos: number, zPos: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: number, yAxis: number, zAxis: number): number;

/**
 * ## Parameters
 * *
 * @param point - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0x164ECBB3CF750CB0
 */
export function setTrackedPointInfo(point: number, x: number, y: number, z: number, radius: number): void;

/**
 * Resets the screen's draw-origin which was changed by the function [`SET_DRAW_ORIGIN`](#_0xAA0008F3BBB8F416) back to `x=0, y=0`. See [`SET_DRAW_ORIGIN`](#_0xAA0008F3BBB8F416) for further information.
 * @returns void
 * @remarks Hash: 0xFF0B610F6BE0D7AF
 */
export function clearDrawOrigin(): void;

/**
 * ```
 * This function is hard-coded to always return 0.
 * ```
 * @returns number
 * @remarks Hash: 0x34D23450F028B0BF
 */
export function getMaximumNumberOfPhotos(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x473151EBC762C6DA
 */
export function getCurrentNumberOfCloudPhotos(): number;

/**
 * NOTE: the [USE_PARTICLE_FX_ASSET](#_0x6C38AF3693A69A91) needs to be called before EVERY StartNetworkedParticleFxNonLoopedAtCoord(....) call!
 * 
 * List with lots of particle effects: https://vespura.com/fivem/particle-list/
 * 
 * Note: Not all particles on this list are for non looped and vice versa, neither are all of them suited/meant to have SetParticleFxNonLoopedColour(....) called on them.
 * 
 * ```
 * NativeDB Added Parameter 12: BOOL p11
 * ```
 * @param effectName - 
 * @param xPos - 
 * @param yPos - 
 * @param zPos - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param scale - 
 * @param xAxis - 
 * @param yAxis - 
 * @param zAxis - 
 * @returns number
 * @remarks Hash: 0xF56B8137DF10135D
 */
export function startNetworkedParticleFxNonLoopedAtCoord(effectName: string, xPos: number, yPos: number, zPos: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: number, yAxis: number, zAxis: number): number;

/**
 * ## Parameters
 * *
 * @param unused - 
 * @returns number
 * @remarks Hash: 0x3DEC726C25A11BAC
 */
export function saveHighQualityPhoto(unused: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xDEADC0DEDEADC0DE
 */
export function updateLightsOnEntity(entity: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x4862437A486F91B0
 */
export function loadMissionCreatorPhoto(p0: string, p1: any, p2: any, p3: number): number;

/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param size - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0x73B1189623049839
 */
export function drawDebugCross(x: number, y: number, z: number, size: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * Passes keyboard input to scaleform. You must call this native every frame. Once an input occurs, this native will return true and call `SET_PC_KEY` scaleform movie method with the key that has been inputted.
 * 
 * The key parameter which is passed to the scaleform can also be: "BACKSPACE", "ENTER" or "\x1b" (Which is ESC).
 * This native is only used in `web_browser.c` as of game build 2944.
 * @param scaleformHandle - 
 * @returns number
 * @remarks Hash: 0xD1C7CB175E012964
 */
export function passKeyboardInputToScaleform(scaleformHandle: number): number;

/**
 * ## Parameters
 * *
 * @param ptfxHandle - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0x726845132380142E
 */
export function setParticleFxLoopedAlpha(ptfxHandle: number, alpha: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x6DDBF9DFFC4AC080
 */
export function cascadeShadowsSetAircraftMode(p0: number): void;

/**
 * ## Parameters
 * *
 * @param ptfxHandle - 
 * @param range - 
 * @returns void
 * @remarks Hash: 0xDCB194B85EF7B541
 */
export function setParticleFxLoopedFarClipDist(ptfxHandle: number, range: number): void;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns void
 * @remarks Hash: 0xBDEB86F4D5809204
 */
export function setPlayerTcmodifierTransition(value: number): void;

/**
 * Draws a 3D sphere, typically seen in the GTA:O freemode event "Penned In".
 * 
 * Example [image](https://imgur.com/nCbtS4H):
 * ```lua
 * DrawSphere(35.45, 172.66, 126.22, 1.0, 0, 0, 255, 0.2)
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @param opacity - 
 * @returns void
 * @remarks Hash: 0x799017F9E3B10112
 */
export function DrawSphere(x: number, y: number, z: number, radius: number, r: number, g: number, b: number, opacity: number): void;

/**
 * ```
 * Forces footstep tracks on all surfaces.
 * USE_/USING_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xAEEDAD1420C65CC0
 */
export function SetForcePedFootstepsTracks(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x06F761EA47C1D3ED
 */
export function golfTrailSetFacing(p0: number): void;

/**
 * ## Parameters
 * *
 * @param methodReturn - 
 * @returns number
 * @remarks Hash: 0xD80A80346A45D761
 */
export function getScaleformMovieMethodReturnValueBool(methodReturn: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xAE51BC858F32BA66
 */
export function 0xae51bc858f32ba66(p0: any, p1: number, p2: number, p3: number, p4: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xD3A10FC7FD8D98CD
 */
export function ui3dsceneIsAvailable(): number;

/**
 * This native doesn't work like [`SetWeatherTypeTransition`](#_0x578C752848ECFA0C).
 * @param modifierName - 
 * @param transition - 
 * @returns void
 * @remarks Hash: 0x3BCF567485E1971C
 */
export function setTransitionTimecycleModifier(modifierName: string, transition: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xD39D13C9FEBF0511
 */
export function cascadeShadowsSetDynamicDepthMode(p0: number): void;

/**
 * ## Parameters
 * *
 * @param name - 
 * @returns void
 * @remarks Hash: 0x2A2A52824DB96700
 */
export function overrideInteriorSmokeName(name: string): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x02AC28F3A01FA04A
 */
export function cascadeShadowsSetDynamicDepthValue(p0: number): void;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param groundLvl - 
 * @param width - 
 * @param transparency - 
 * @returns number
 * @remarks Hash: 0x126D7F89FE859A5E
 */
export function AddOilDecal(x: number, y: number, z: number, groundLvl: number, width: number, transparency: number): number;

/**
 * This multiplies the height of the icon inside a checkpoint with the default height of about 2 units above the checkpoint's coordinates.
 * @param checkpoint - 
 * @param height_multiplier - 
 * @returns void
 * @remarks Hash: 0x4B5B4DA5D79F1943
 */
export function SetCheckpointIconHeight(checkpoint: number, height_multiplier: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xA4664972A9B8F8BA
 */
export function golfTrailGetVisualControlPoint(p0: number): { x: number, y: number, z: number };

/**
 * See [`GET_TIMECYCLE_MODIFIER_INDEX`](#_0xFDF3D97C674AFB66) for use, works the same just for the secondary timecycle modifier.
 * @returns number
 * @remarks Hash: 0xBB0527EC6341496D
 */
export function GetExtraTimecycleModifierIndex(): number;

/**
 * ```
 * Convert a world coordinate into its relative screen coordinate.  (WorldToScreen)
 * Returns a boolean; whether or not the operation was successful. It will return false if the coordinates given are not visible to the rendering camera.
 * For .NET users...
 * VB:
 * Public Shared Function World3DToScreen2d(pos as vector3) As Vector2
 *         Dim x2dp, y2dp As New Native.OutputArgument
 *         Native.Function.Call(Of Boolean)(Native.Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.x, pos.y, pos.z, x2dp, y2dp)
 *         Return New Vector2(x2dp.GetResult(Of Single), y2dp.GetResult(Of Single))
 * 
 *     End Function
 * C#:
 * Vector2 World3DToScreen2d(Vector3 pos)
 *     {
 *         var x2dp = new OutputArgument();
 *         var y2dp = new OutputArgument();
 *         Function.Call<bool>(Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.X, pos.Y, pos.Z, x2dp, y2dp);
 *         return new Vector2(x2dp.GetResult<float>(), y2dp.GetResult<float>());
 *     }
 * //USE VERY SMALL VALUES FOR THE SCALE OF RECTS/TEXT because it is dramatically larger on screen than in 3D, e.g '0.05' small.
 * Used to be called _WORLD3D_TO_SCREEN2D
 * I thought we lost you from the scene forever. It does seem however that calling SET_DRAW_ORIGIN then your natives, then ending it. Seems to work better for certain things such as keeping boxes around people for a predator missile e.g.
 * ```
 * @param worldX - 
 * @param worldY - 
 * @param worldZ - 
 * @param screenX - 
 * @param screenY - 
 * @returns number
 * @remarks Hash: 0x34E82F05DF2974F5
 */
export function getScreenCoordFromWorldCoord(worldX: number, worldY: number, worldZ: number, screenX: number, screenY: number): number;

/**
 * ## Parameters
 * *
 * @param ptfxHandle - 
 * @param propertyName - 
 * @param amount - 
 * @param noNetwork - 
 * @returns void
 * @remarks Hash: 0x5F0C4B5B1C393BE2
 */
export function setParticleFxLoopedEvolution(ptfxHandle: number, propertyName: string, amount: number, noNetwork: number): void;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns void
 * @remarks Hash: 0xCB6A7C3BB17A0C67
 */
export function setNoisinessoveride(value: number): void;

/**
 * ```
 * Parameters:  
 * * pos - coordinate where the spotlight is located  
 * * dir - the direction vector the spotlight should aim at from its current position  
 * * r,g,b - color of the spotlight  
 * * distance - the maximum distance the light can reach  
 * * brightness - the brightness of the light  
 * * roundness - "smoothness" of the circle edge  
 * * radius - the radius size of the spotlight  
 * * falloff - the falloff size of the light's edge (example: www.i.imgur.com/DemAWeO.jpg)  
 * Example in C# (spotlight aims at the closest vehicle):  
 * Vector3 myPos = Game.Player.Character.Position;  
 * Vehicle nearest = World.GetClosestVehicle(myPos , 1000f);  
 * Vector3 destinationCoords = nearest.Position;  
 * Vector3 dirVector = destinationCoords - myPos;  
 * dirVector.Normalize();  
 * Function.Call(Hash.DRAW_SPOT_LIGHT, pos.X, pos.Y, pos.Z, dirVector.X, dirVector.Y, dirVector.Z, 255, 255, 255, 100.0f, 1f, 0.0f, 13.0f, 1f);  
 * ```
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param dirX - 
 * @param dirY - 
 * @param dirZ - 
 * @param colorR - 
 * @param colorG - 
 * @param colorB - 
 * @param distance - 
 * @param brightness - 
 * @param hardness - 
 * @param radius - 
 * @param falloff - 
 * @returns void
 * @remarks Hash: 0xD0F64B265C8C8B33
 */
export function drawSpotLight(posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, colorR: number, colorG: number, colorB: number, distance: number, brightness: number, hardness: number, radius: number, falloff: number): void;

/**
 * @returns void
 * @remarks Hash: 0xDE81239437E8C5A8
 */
export function disableScreenblurFade(): void;

/**
 * ```
 * p1 is always 0 in the native scripts  
 * ```
 * @param ptfxHandle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x8F75998877616996
 */
export function stopParticleFxLooped(ptfxHandle: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x82ACC484FFA3B05F
 */
export function 0x82acc484ffa3b05f(p0: any): any;

/**
 * ```
 * From the b678d decompiled scripts:
 *  GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("FM_Mission_Controler");
 *  GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_apartment_mp");
 *  GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_indep_fireworks");
 *  GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_cig_plane");
 *  GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_creator");
 *  GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_ornate_heist");
 *  GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_prison_break_heist_station");
 * ```
 * @param name - 
 * @returns void
 * @remarks Hash: 0x6C38AF3693A69A91
 */
export function useParticleFxAsset(name: string): void;

/**
 * @returns void
 * @remarks Hash: 0xE1C8709406F2C41C
 */
export function resetPausedRenderphases(): void;

/**
 * @returns void
 * @remarks Hash: 0x851CD923176EBA7C
 */
export function 0x851cd923176eba7c(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x7FA5D82B8F58EC06
 */
export function 0x7fa5d82b8f58ec06(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA4819F5E23E2FFAD
 */
export function golfTrailGetMaxHeight(): number;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns void
 * @remarks Hash: 0x2A251AA48B2B46DB
 */
export function 0x2a251aa48b2b46db(): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param binkMovie - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xF816F2933752322D
 */
export function SetBinkMovieUnk2(binkMovie: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xE91F1B65F2B48D57
 */
export function removeDecalsFromVehicle(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param obj - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xA6F6F70FDC6D144C
 */
export function removeDecalsFromObjectFacing(obj: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xE787BF1C5CF823C9
 */
export function setNoiseoveride(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xB8FEAEEBCC127425
 */
export function removeParticleFxFromEntity(entity: number): void;

/**
 * ```
 * DISABLE_S*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x02369D5C8A51FDCF
 */
export function 0x02369d5c8a51fdcf(toggle: number): void;

/**
 * ```
 * Calls the Scaleform function and passes both float and string parameters (in their respective order).  
 * The number of parameters passed to the function varies, so the end of the float parameters is represented by -1.0, and the end of the string parameters is represented by 0 (NULL).  
 * NOTE: The order of parameters in the function prototype is important! All float parameters must come first, followed by the string parameters.  
 * Examples:  
 * // function MY_FUNCTION(floatParam1, floatParam2, stringParam)  
 * GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION", 10.0, 20.0, -1.0, -1.0, -1.0, "String param", 0, 0, 0, 0);  
 * // function MY_FUNCTION_2(floatParam, stringParam1, stringParam2)  
 * GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION_2", 10.0, -1.0, -1.0, -1.0, -1.0, "String param #1", "String param #2", 0, 0, 0);  
 * ```
 * @param scaleform - 
 * @param methodName - 
 * @param floatParam1 - 
 * @param floatParam2 - 
 * @param floatParam3 - 
 * @param floatParam4 - 
 * @param floatParam5 - 
 * @param stringParam1 - 
 * @param stringParam2 - 
 * @param stringParam3 - 
 * @param stringParam4 - 
 * @param stringParam5 - 
 * @returns void
 * @remarks Hash: 0xEF662D8D57E290B1
 */
export function callScaleformMovieMethodWithNumberAndString(scaleform: number, methodName: string, floatParam1: number, floatParam2: number, floatParam3: number, floatParam4: number, floatParam5: number, stringParam1: string, stringParam2: string, stringParam3: string, stringParam4: string, stringParam5: string): void;

/**
 * ```
 * AD*
 * ```
 * @returns void
 * @remarks Hash: 0xEFABC7722293DA7C
 */
export function 0xefabc7722293da7c(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xDBAA5EC848BA2D46
 */
export function golfTrailSetTessellation(p0: number, p1: number): void;

/**
 * See [`ANIMPOSTFX_PLAY`](#_0x2206BF9A37B7F724).
 * @param effectName - 
 * @returns void
 * @remarks Hash: 0x068E835A1D0DC0E3
 */
export function animpostfxStop(effectName: string): void;

/**
 * ```
 * Wraps 0xAAE9BE70EC7C69AB with FLT_MAX as p7, Jenkins: 0x73E96210?
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0x6D955F6A9E0295B1
 */
export function GrassLodShrinkScriptAreas(x: number, y: number, z: number, radius: number, p4: number, p5: number, p6: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDC459CFA0CCE245B
 */
export function forceRenderInGameUi(toggle: number): void;

/**
 * See [`ANIMPOSTFX_PLAY`](#_0x2206BF9A37B7F724)
 * @param effectName - 
 * @returns number
 * @remarks Hash: 0xE35B38A27E8E7179
 */
export function AnimpostfxGetUnk(effectName: string): number;

/**
 * Used with 'NG_filmnoir_BW{01,02}' timecycles and the "NOIR_FILTER_SOUNDS" audioref.
 * @returns void
 * @remarks Hash: 0xA44FF770DFBC5DAE
 */
export function RegisterNoirScreenEffectThisFrame(): void;

/**
 * ```
 * Calls the Scaleform function.  
 * ```
 * @param scaleform - 
 * @param method - 
 * @returns void
 * @remarks Hash: 0xFBD96D87AC96D533
 */
export function callScaleformMovieMethod(scaleform: number, method: string): void;

/**
 * @returns void
 * @remarks Hash: 0x4B5CFC83122DF602
 */
export function setDisableDecalRenderingThisFrame(): void;

/**
 * ```
 * GRAPHICS::UNPATCH_DECAL_DIFFUSE_MAP(9123);  
 * GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED("MPMissMarkers256");  
 * ```
 * @param decalType - 
 * @returns void
 * @remarks Hash: 0xB7ED70C49521A61D
 */
export function unpatchDecalDiffuseMap(decalType: number): void;

/**
 * ## Parameters
 * *
 * @param intensity - 
 * @returns void
 * @remarks Hash: 0x19E50EB6E33E1D28
 */
export function SeethroughSetHiLightIntensity(intensity: number): void;

/**
 * Draws a marker with the specified appearance at the target location. This has to be called every frame, e.g. in a `Wait(0)` loop.
 * 
 * There's a [list of markers](https://docs.fivem.net/game-references/markers/) on the FiveM documentation site.
 * @param type - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param dirX - 
 * @param dirY - 
 * @param dirZ - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param scaleX - 
 * @param scaleY - 
 * @param scaleZ - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @param bobUpAndDown - 
 * @param faceCamera - 
 * @param rotationOrder - 
 * @param rotate - 
 * @param textureDict - 
 * @param textureName - 
 * @param drawOnEnts - 
 * @returns void
 * @remarks Hash: 0x28477EC23D892089
 */
export function drawMarker(type: number, posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, rotX: number, rotY: number, rotZ: number, scaleX: number, scaleY: number, scaleZ: number, red: number, green: number, blue: number, alpha: number, bobUpAndDown: number, faceCamera: number, rotationOrder: number, rotate: number, textureDict: string, textureName: string, drawOnEnts: number): void;

/**
 * ## Parameters
 * *
 * @param textureDict - 
 * @returns void
 * @remarks Hash: 0xBE2CACCF5A8AA805
 */
export function setStreamedTextureDictAsNoLongerNeeded(textureDict: string): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x99AC7F0D8B9C893D
 */
export function startPetrolTrailDecals(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x5E9DAF5A20F15908
 */
export function cascadeShadowsSetEntityTrackerScale(p0: number): void;

/**
 * SET_CHECKPOINT_*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param checkpoint - 
 * @returns void
 * @remarks Hash: 0xFCF6788FC4860CD4
 */
export function 0xfcf6788fc4860cd4(checkpoint: number): void;

/**
 * ## Parameters
 * *
 * @param checkpoint - 
 * @param scale - 
 * @returns void
 * @remarks Hash: 0x44621483FF966526
 */
export function SetCheckpointIconScale(checkpoint: number, scale: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC9B18B4619F48F7B
 */
export function fadeUpPedLight(p0: number): void;

/**
 * ```
 * Draws a 2D sprite on the screen.  
 * Parameters:  
 * textureDict - Name of texture dictionary to load texture from (e.g. "CommonMenu", "MPWeaponsCommon", etc.)  
 * textureName - Name of texture to load from texture dictionary (e.g. "last_team_standing_icon", "tennis_icon", etc.)  
 * screenX/Y - Screen offset (0.5 = center)  
 * scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)  
 * heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees  
 * red,green,blue - Sprite color (default = 255/255/255)  
 * alpha - opacity level  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 12: BOOL p11
 * ```
 * @param textureDict - 
 * @param textureName - 
 * @param screenX - 
 * @param screenY - 
 * @param width - 
 * @param height - 
 * @param heading - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0xE7FFAE5EBF23D890
 */
export function drawSprite(textureDict: string, textureName: string, screenX: number, screenY: number, width: number, height: number, heading: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x649C97D52332341A
 */
export function 0x649c97d52332341a(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @param p11 - 
 * @returns void
 * @remarks Hash: 0x12995F2E53FFA601
 */
export function golfTrailSetColour(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number, p11: number): void;

/**
 * ```
 * Pushes an integer for the Scaleform function onto the stack.  
 * ```
 * @param value - 
 * @returns void
 * @remarks Hash: 0xC3D0841A0CC546A6
 */
export function scaleformMovieMethodAddParamInt(value: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x43FA7CBE20DAB219
 */
export function 0x43fa7cbe20dab219(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x03300B57FCAC6DDB
 */
export function 0x03300b57fcac6ddb(p0: number): void;

/**
 * ## Parameters
 * *
 * @param decal - 
 * @returns number
 * @remarks Hash: 0xC694D74949CAFD0C
 */
export function isDecalAlive(decal: number): number;

/**
 * Sets the draw order for script draw commands.
 * Examples from decompiled scripts:
 * GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);
 * GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v_4, v_5, v_6, a_0._f172, 0);
 * GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);
 * GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);
 * 
 * ```c
 * enum eGfxDrawOrder
 * {
 *     GFX_ORDER_BEFORE_HUD_PRIORITY_LOW = 0,
 *     GFX_ORDER_BEFORE_HUD = 1,
 *     GFX_ORDER_BEFORE_HUD_PRIORITY_HIGH = 2,
 *     GFX_ORDER_AFTER_HUD_PRIORITY_LOW = 3,
 *     GFX_ORDER_AFTER_HUD = 4,
 *     GFX_ORDER_AFTER_HUD_PRIORITY_HIGH = 5,
 *     GFX_ORDER_AFTER_FADE_PRIORITY_LOW = 6,
 *     GFX_ORDER_AFTER_FADE = 7,
 *     GFX_ORDER_AFTER_FADE_PRIORITY_HIGH = 8,
 * }
 * ```
 * @param order - 
 * @returns void
 * @remarks Hash: 0x61BB1D9B3A95D802
 */
export function setScriptGfxDrawOrder(order: number): void;

/**
 * @returns void
 * @remarks Hash: 0xEFB55E7C25D3B3BE
 */
export function overrideInteriorSmokeEnd(): void;

/**
 * ```
 * Calls the Scaleform function and passes the parameters as strings.  
 * The number of parameters passed to the function varies, so the end of the parameter list is represented by 0 (NULL).  
 * ```
 * @param scaleform - 
 * @param methodName - 
 * @param param1 - 
 * @param param2 - 
 * @param param3 - 
 * @param param4 - 
 * @param param5 - 
 * @returns void
 * @remarks Hash: 0x51BC1ED3CC44E8F7
 */
export function callScaleformMovieMethodWithString(scaleform: number, methodName: string, param1: string, param2: string, param3: string, param4: string, param5: string): void;

/**
 * ## Parameters
 * *
 * @param hudComponent - 
 * @returns number
 * @remarks Hash: 0xDF6E5987D2B4D140
 */
export function hasScaleformScriptHudMovieLoaded(hudComponent: number): number;

/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.  
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param r1 - 
 * @param g1 - 
 * @param b1 - 
 * @param r2 - 
 * @param g2 - 
 * @param b2 - 
 * @param alpha1 - 
 * @param alpha2 - 
 * @returns void
 * @remarks Hash: 0xD8B9A8AC5608FF94
 */
export function drawDebugLineWithTwoColours(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, r1: number, g1: number, b1: number, r2: number, g2: number, b2: number, alpha1: number, alpha2: number): void;

/**
 * Sets the on-screen drawing origin for draw-functions in world coordinates.
 * 
 * The effect can be reset by calling [`CLEAR_DRAW_ORIGIN`](#_0xFF0B610F6BE0D7AF) and is limited to 32 different origins each frame.
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xAA0008F3BBB8F416
 */
export function setDrawOrigin(x: number, y: number, z: number, p3: any): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x873FA65C778AD970
 */
export function enableMovieSubtitles(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x5DBF05DB5926D089
 */
export function 0x5dbf05db5926d089(p0: any): void;

/**
 * ```
 * Only values used in the scripts are:
 * "heist_mp"
 * "heistmap_mp"
 * "instructional_buttons"
 * "heist_pre"
 * ```
 * @param scaleformName - 
 * @returns number
 * @remarks Hash: 0x0C1C5D756FB5F337
 */
export function hasScaleformMovieFilenameLoaded(scaleformName: string): number;

/**
 * Switches the rendering display to exclude everything except PostFX, resulting in a frozen screen before the UI pass.
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDFC252D8A3E15AB7
 */
export function togglePausedRenderphases(toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x1DD2139A9A20DCE8
 */
export function beginTakeMissionCreatorPhoto(): number;

/**
 * Check if a Scaleform movie with the given name has been loaded.
 * 
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param scaleformHandle - 
 * @param scaleformName - 
 * @returns number
 * @remarks Hash: 0x9743BCCF7CD6E1F6
 */
export function HasScaleformMovieNamedLoaded(scaleformHandle: number, scaleformName: string): number;

/**
 * Requests a scaleform movie, which has no widescreen adjustments while rendering (Useful for when your scaleform doesn't fully draw on the screen and borders are visible).
 * @param scaleformName - 
 * @returns number
 * @remarks Hash: 0x65E7E78842E74CDB
 */
export function requestScaleformMovieWithIgnoreSuperWidescreen(scaleformName: string): number;

/**
 * @returns void
 * @remarks Hash: 0x3C8938D7D872211E
 */
export function popTimecycleModifier(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x44B80ABAB9D80BD3
 */
export function getUsingseethrough(): number;

/**
 * ```
 * binkMovie: Is return value from _SET_BINK_MOVIE. Has something to do with bink volume? (audRequestedSettings::SetVolumeCurveScale)
 * ```
 * 
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param binkMovie - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xAFF33B1178172223
 */
export function SetBinkMovieVolume(binkMovie: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xEF398BEEE4EF45F9
 */
export function 0xef398beee4ef45f9(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x36F6626459D91457
 */
export function 0x36f6626459d91457(p0: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x459FD2C8D0AB78BC
 */
export function getTimecycleTransitionModifierIndex(): number;

/**
 * Stops the effect and sets a value (bool) in its data (+0x199) to false; See [`ANIMPOSTFX_PLAY`](#_0x2206BF9A37B7F724).
 * @param effectName - 
 * @returns void
 * @remarks Hash: 0xD2209BE128B5418C
 */
export function AnimpostfxStopAndDoUnk(effectName: string): void;

/**
 * ```
 * SET_F*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6A51F78772175A51
 */
export function 0x6a51f78772175a51(toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0x58F735290861E6B4
 */
export function pushTimecycleModifier(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5CCABFFCA31DDE33
 */
export function getScreenblurFadeCurrentTime(): number;

/**
 * ## Parameters
 * *
 * @param distance - 
 * @returns void
 * @remarks Hash: 0x9D75795B9DC6EBBF
 */
export function SeethroughSetFadeEndDistance(distance: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC9F98AC1884E73A2
 */
export function disableVehicleDistantlights(toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param scaleformIndex - 
 * @returns number
 * @remarks Hash: 0x86255B1FC929E33E
 */
export function isScaleformMovieDeleting(scaleformIndex: number): number;

/**
 * Same as END_TEXT_COMMAND_SCALEFORM_STRING but does not perform HTML conversion for text tokens.
 * Also useful for when you are trying to add blips and inputs in your scaleform (If the scaleform supports it).
 * @returns void
 * @remarks Hash: 0xAE4E8157D9ECF087
 */
export function endTextCommandUnparsedScaleformString(): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param tvChannel - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x1F710BFF7DAE6261
 */
export function IsPlaylistUnk(tvChannel: number, p1: any): number;

/**
 * ```
 * IS_*
 * ```
 * @param videoCliphash - 
 * @returns number
 * @remarks Hash: 0x0AD973CA1E077B60
 */
export function IsTvPlaylistItemPlaying(videoCliphash: number): number;

/**
 * ```
 * Creates a checkpoint. Returns the handle of the checkpoint.  
 * 20/03/17 : Attention, checkpoints are already handled by the game itself, so you must not loop it like markers.
 * Parameters:  
 * * type - The type of checkpoint to create. See below for a list of checkpoint types.  
 * * pos1 - The position of the checkpoint.  
 * * pos2 - The position of the next checkpoint to point to.  
 * * diameter - The diameter of the checkpoint.
 * * color - The color of the checkpoint.  
 * * reserved - Special parameter, see below for details. Usually set to 0 in the scripts.  
 * Checkpoint types (prior to game build 2189):  
 * 0-4---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker  
 * 5-9---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker  
 * 10-14-------Ring: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker  
 * 15-19-------1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker        
 * 20-24-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker   
 * 25-29-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker      
 * 30-34-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker   
 * 35-38-------Ring: Airplane Up, Left, Right, UpsideDown  
 * 39----------?  
 * 40----------Ring: just a ring  
 * 41----------?  
 * 42-44-------Cylinder w/ number (uses 'reserved' parameter)  
 * 45-47-------Cylinder no arrow or number  
 * If using type 42-44, reserved sets number / number and shape to display  
 * 0-99------------Just numbers (0-99)  
 * 100-109-----------------Arrow (0-9)  
 * 110-119------------Two arrows (0-9)  
 * 120-129----------Three arrows (0-9)  
 * 130-139----------------Circle (0-9)  
 * 140-149------------CycleArrow (0-9)  
 * 150-159----------------Circle (0-9)  
 * 160-169----Circle  w/ pointer (0-9)  
 * 170-179-------Perforated ring (0-9)  
 * 180-189----------------Sphere (0-9)  
 * ```
 * 
 * [Checkpoint Types](https://docs.fivem.net/docs/game-references/checkpoints/) as of game build 2189
 * @param type - 
 * @param posX1 - 
 * @param posY1 - 
 * @param posZ1 - 
 * @param posX2 - 
 * @param posY2 - 
 * @param posZ2 - 
 * @param diameter - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @param reserved - 
 * @returns number
 * @remarks Hash: 0x0134F0835AB6BFCB
 */
export function createCheckpoint(type: number, posX1: number, posY1: number, posZ1: number, posX2: number, posY2: number, posZ2: number, diameter: number, red: number, green: number, blue: number, alpha: number, reserved: number): number;

/**
 * ```
 * This function is hard-coded to always return 0.  
 * ```
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xEC72C258667BE5EA
 */
export function 0xec72c258667be5ea(p0: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @returns void
 * @remarks Hash: 0xD2936CAB8B58FCBD
 */
export function cascadeShadowsSetCascadeBounds(p0: any, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number): void;

/**
 * @returns void
 * @remarks Hash: 0x346EF3ECAAAB149E
 */
export function 0x346ef3ecaaab149e(): void;

/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0xAAD68E1AB39DA632
 */
export function drawDebugSphere(x: number, y: number, z: number, radius: number, red: number, green: number, blue: number, alpha: number): void;

/**
 * ```
 * duration - is how long to play the effect for in milliseconds. If 0, it plays the default length
 * if loop is true, the effect won't stop until you call ANIMPOSTFX_STOP on it. (only loopable effects)
 * ```
 * @param effectName - 
 * @param duration - 
 * @param looped - 
 * @returns void
 * @remarks Hash: 0x2206BF9A37B7F724
 */
export function animpostfxPlay(effectName: string, duration: number, looped: number): void;

/**
 * ## Parameters
 * *
 * @param effectName - 
 * @param entity - 
 * @param offsetX - 
 * @param offsetY - 
 * @param offsetZ - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param scale - 
 * @param axisX - 
 * @param axisY - 
 * @param axisZ - 
 * @returns number
 * @remarks Hash: 0xC95EB1DB6E92113D
 */
export function startNetworkedParticleFxNonLoopedOnEntity(effectName: string, entity: number, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, scale: number, axisX: number, axisY: number, axisZ: number): number;

/**
 * ## Parameters
 * *
 * @param decal - 
 * @returns void
 * @remarks Hash: 0xED3F346429CCD659
 */
export function removeDecal(decal: number): void;

/**
 * ```
 * Used only once in the scripts (taxi_clowncar)
 * 
 * SET_PARTICLE_FX_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x8CDE909A0370BB3A
 */
export function 0x8cde909a0370bb3a(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param modifierName - 
 * @returns void
 * @remarks Hash: 0xBF59707B3E5ED531
 */
export function setNextPlayerTcmodifier(modifierName: string): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xCA4AE345A153D573
 */
export function 0xca4ae345a153d573(p0: number): void;

/**
 * ## Parameters
 * *
 * @param effectName - 
 * @param entity - 
 * @param xOffset - 
 * @param yOffset - 
 * @param zOffset - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param scale - 
 * @param xAxis - 
 * @param yAxis - 
 * @param zAxis - 
 * @returns number
 * @remarks Hash: 0x1AE42C1660FD6517
 */
export function startParticleFxLoopedOnEntity(effectName: string, entity: number, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: number, yAxis: number, zAxis: number): number;

/**
 * ## Parameters
 * *
 * @param effectName - 
 * @param ped - 
 * @param offsetX - 
 * @param offsetY - 
 * @param offsetZ - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param boneIndex - 
 * @param scale - 
 * @param axisX - 
 * @param axisY - 
 * @param axisZ - 
 * @returns number
 * @remarks Hash: 0xA41B6A43642AC2CF
 */
export function startNetworkedParticleFxNonLoopedOnPedBone(effectName: string, ped: number, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, boneIndex: number, scale: number, axisX: number, axisY: number, axisZ: number): number;

/**
 * @returns void
 * @remarks Hash: 0x03FC694AE06C5A20
 */
export function cascadeShadowsInitSession(): void;

/**
 * Places a decal into the world
 * 
 * ```cs
 * public enum DecalTypes  
 * {  
 *     splatters_blood = 1010,  
 *     splatters_blood_dir = 1015,  
 *     splatters_blood_mist = 1017,  
 *     splatters_mud = 1020,  
 *     splatters_paint = 1030,  
 *     splatters_water = 1040,  
 *     splatters_water_hydrant = 1050,  
 *     splatters_blood2 = 1110,  
 *     weapImpact_metal = 4010,  
 *     weapImpact_concrete = 4020,  
 *     weapImpact_mattress = 4030,  
 *     weapImpact_mud = 4032,  
 *     weapImpact_wood = 4050,  
 *     weapImpact_sand = 4053,  
 *     weapImpact_cardboard = 4040,  
 *     weapImpact_melee_glass = 4100,  
 *     weapImpact_glass_blood = 4102,  
 *     weapImpact_glass_blood2 = 4104,  
 *     weapImpact_shotgun_paper = 4200,  
 *     weapImpact_shotgun_mattress,  
 *     weapImpact_shotgun_metal,  
 *     weapImpact_shotgun_wood,  
 *     weapImpact_shotgun_dirt,  
 *     weapImpact_shotgun_tvscreen,  
 *     weapImpact_shotgun_tvscreen2,  
 *     weapImpact_shotgun_tvscreen3,  
 *     weapImpact_melee_concrete = 4310,  
 *     weapImpact_melee_wood = 4312,  
 *     weapImpact_melee_metal = 4314,  
 *     burn1 = 4421,  
 *     burn2,  
 *     burn3,  
 *     burn4,  
 *     burn5,  
 *     bang_concrete_bang = 5000,  
 *     bang_concrete_bang2,  
 *     bang_bullet_bang,  
 *     bang_bullet_bang2 = 5004,  
 *     bang_glass = 5031,  
 *     bang_glass2,  
 *     solidPool_water = 9000,  
 *     solidPool_blood,  
 *     solidPool_oil,  
 *     solidPool_petrol,  
 *     solidPool_mud,  
 *     porousPool_water,  
 *     porousPool_blood,  
 *     porousPool_oil,  
 *     porousPool_petrol,  
 *     porousPool_mud,  
 *     porousPool_water_ped_drip,  
 *     liquidTrail_water = 9050  
 * }  
 * ```
 * @param decalType - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param dirX - 
 * @param dirY - 
 * @param dirZ - 
 * @param sideX - 
 * @param sideY - 
 * @param sideZ - 
 * @param width - 
 * @param height - 
 * @param rCoef - 
 * @param gCoef - 
 * @param bCoef - 
 * @param opacity - 
 * @param timeout - 
 * @param isLongRange - 
 * @param isDynamic - 
 * @param useComplexColn - 
 * @returns number
 * @remarks Hash: 0xB302244A1839BDAD
 */
export function addDecal(decalType: number, posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, sideX: number, sideY: number, sideZ: number, width: number, height: number, rCoef: number, gCoef: number, bCoef: number, opacity: number, timeout: number, isLongRange: number, isDynamic: number, useComplexColn: number): number;

/**
 * If "blackout" is enabled, this native allows you to ignore "blackout" for vehicles.
 * 
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xE2B187C0939B3D32
 */
export function SetArtificialLightsStateAffectsVehicles(toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0x0218BA067D249DEA
 */
export function 0x0218ba067d249dea(): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param binkMovie - 
 * @returns void
 * @remarks Hash: 0x70D2CC8A542A973C
 */
export function PlayBinkMovie(binkMovie: number): void;

/**
 * ## Parameters
 * *
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param dirX - 
 * @param dirY - 
 * @param dirZ - 
 * @param colorR - 
 * @param colorG - 
 * @param colorB - 
 * @param distance - 
 * @param brightness - 
 * @param roundness - 
 * @param radius - 
 * @param falloff - 
 * @param shadowId - 
 * @returns void
 * @remarks Hash: 0x5BCA583A583194DB
 */
export function DrawSpotLightWithShadow(posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, colorR: number, colorG: number, colorB: number, distance: number, brightness: number, roundness: number, radius: number, falloff: number, shadowId: number): void;

/**
 * Resets AnimPostFX adaptation.
 * @param numFrames - 
 * @returns void
 * @remarks Hash: 0xE3E2C1B4C59DBC77
 */
export function resetAdaptation(numFrames: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x46D1A61A21F566FC
 */
export function 0x46d1a61a21f566fc(p0: number): void;

/**
 * @returns void
 * @remarks Hash: 0x0A46AF8A78DC5E0A
 */
export function freeMemoryForMissionCreatorPhoto(): void;

/**
 * @returns void
 * @remarks Hash: 0x4AF92ACD3141D96C
 */
export function 0x4af92acd3141d96c(): void;

/**
 * Clears the secondary timecycle modifier usually set with [`SetExtraTimecycleModifier`](#_0x5096FD9CCB49056D)
 * @returns void
 * @remarks Hash: 0x92CCC17A7A2285DA
 */
export function ClearExtraTimecycleModifier(): void;

/**
 * This native indicates whether the game is running in high-definition (HD) resolution. It returns `false` if the resolution is less than `1280x720` and `true` if it's equal to or greater than `1280x720`.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0x84ED31191CC5D2C9
 */
export function getIsHidef(): number;

/**
 * ```
 * SET_TRA*
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x1CBA05AE7BD7EE05
 */
export function 0x1cba05ae7bd7ee05(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x1072F115DAB0717E
 */
export function drawLowQualityPhotoToPhone(p0: number, p1: number): void;

/**
 * Queues a scan of all gallery photos.
 * Also see [`GET_STATUS_OF_SORTED_LIST_OPERATION`](#_0xF5BED327CEA362B1)
 * @param scanForSaving - 
 * @returns number
 * @remarks Hash: 0x2A893980E96B659A
 */
export function queueOperationToCreateSortedListOfPhotos(scanForSaving: number): number;

/**
 * ## Parameters
 * *
 * @param scaleform - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param scaleX - 
 * @param scaleY - 
 * @param scaleZ - 
 * @param p13 - 
 * @returns void
 * @remarks Hash: 0x1CE592FDC749D6F5
 */
export function drawScaleformMovie3dSolid(scaleform: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, p7: number, p8: number, p9: number, scaleX: number, scaleY: number, scaleZ: number, p13: any): void;

/**
 * ## Parameters
 * *
 * @param effectName - 
 * @param entity - 
 * @param xOffset - 
 * @param yOffset - 
 * @param zOffset - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param boneIndex - 
 * @param scale - 
 * @param xAxis - 
 * @param yAxis - 
 * @param zAxis - 
 * @returns number
 * @remarks Hash: 0xC6EB449E33977F0B
 */
export function startParticleFxLoopedOnEntityBone(effectName: string, entity: number, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, boneIndex: number, scale: number, xAxis: number, yAxis: number, zAxis: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param nearplaneOut - 
 * @param nearplaneIn - 
 * @param farplaneOut - 
 * @param farplaneIn - 
 * @returns void
 * @remarks Hash: 0xBA3D65906822BED5
 */
export function setHidofOverride(p0: number, p1: number, nearplaneOut: number, nearplaneIn: number, farplaneOut: number, farplaneIn: number): void;

/**
 * ## Parameters
 * *
 * @param ptfxHandle - 
 * @param scale - 
 * @returns void
 * @remarks Hash: 0xB44250AAA456492D
 */
export function setParticleFxLoopedScale(ptfxHandle: number, scale: number): void;

/**
 * Values:
 * 0 - Dialogue Brief
 * 1 - Help Text Brief
 * 2 - Mission Objective Brief
 * @param value - 
 * @returns void
 * @remarks Hash: 0xEC52C631A1831C03
 */
export function scaleformMovieMethodAddParamLatestBriefString(value: number): void;

/**
 * methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
 * Returns true if the return value of a scaleform function is ready to be collected (using GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING or GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT).
 * @param method_return - 
 * @returns number
 * @remarks Hash: 0x768FF8961BA904D6
 */
export function isScaleformMovieMethodReturnValueReady(method_return: number): number;

/**
 * ```
 * REQUEST_*
 * ```
 * @returns void
 * @remarks Hash: 0x98EDF76A7271E4F2
 */
export function 0x98edf76a7271e4f2(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x35FB78DC42B7BD21
 */
export function getRequestingnightvision(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xEB3DAC2C86001E5E
 */
export function getTogglePausedRenderphasesStatus(): number;

/**
 * ## Parameters
 * *
 * @param hudComponent - 
 * @returns void
 * @remarks Hash: 0xF44A5456AC3F4F97
 */
export function removeScaleformScriptHudMovie(hudComponent: number): void;

/**
 * ```
 * Returns whether screen transition to blur/from blur is running.
 * ```
 * @returns number
 * @remarks Hash: 0x7B226C785A52A0A9
 */
export function isScreenblurFadeRunning(): number;

/**
 * Sets the colour tint of a previously started looped particle effect
 * 
 * You can use the [inverse lerp](https://www.gamedev.net/articles/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/) method to normalize in a range from 0.0 to 1.0 an rgb
 * @param ptfxHandle - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @param bLocalOnly - 
 * @returns void
 * @remarks Hash: 0x7F8F65877F88783B
 */
export function setParticleFxLoopedColour(ptfxHandle: number, r: number, g: number, b: number, bLocalOnly: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x259BA6D4E6F808F1
 */
export function 0x259ba6d4e6f808f1(p0: any): void;

/**
 * ```
 * DISABLE_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x5F6DF3D92271E8A1
 */
export function 0x5f6df3d92271e8a1(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param decal - 
 * @returns number
 * @remarks Hash: 0x323F647679A09103
 */
export function getDecalWashLevel(decal: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xCB82A0BF0E3E3265
 */
export function 0xcb82a0bf0e3e3265(p0: number): number;

/**
 * ## Parameters
 * *
 * @param modifierName - 
 * @returns void
 * @remarks Hash: 0xBBF327DED94E4DEB
 */
export function setCurrentPlayerTcmodifier(modifierName: string): void;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0x821FDC827D6F4090
 */
export function SpecialAbilityActivate(player: any): void;

/**
 * ### Warning
 * This native will return `0` if the last vehicle the player was in was destroyed.
 * @returns number
 * @remarks Hash: 0xB6997A7EB3F5C8C0
 */
export function getPlayersLastVehicle(): number;

/**
 * Gets the ped for a specified player index.
 * @param playerId - 
 * @returns number
 * @remarks Hash: 0x43A66C31C68491C0
 */
export function getPlayerPed(playerId: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x6E4361FF3E8CD7CA
 */
export function 0x6e4361ff3e8cd7ca(p0: any): any;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0xDB89EF50FF25FCE9
 */
export function setPlayerNoiseMultiplier(player: number, multiplier: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param distance - 
 * @returns void
 * @remarks Hash: 0xEFD79FA81DFBA9CB
 */
export function SetPlayerFallDistance(player: number, distance: number): void;

/**
 * ```
 * Achievements from 0-57
 * more achievements came with update 1.29 (freemode events update), I'd say that they now go to 60, but I'll need to check.
 * ```
 * @param achievement - 
 * @returns number
 * @remarks Hash: 0xBEC7076D64130195
 */
export function giveAchievementToPlayer(achievement: number): number;

/**
 * ```
 * This can be between 1.0f - 14.9f   
 * You can change the max in IDA from 15.0. I say 15.0 as the function blrs if what you input is greater than or equal to 15.0 hence why it's 14.9 max default.  
 * On PC the multiplier can be between 0.0f and 50.0f (inclusive).  
 * ```
 * @param player - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0xCA7DC8329F0A1E9E
 */
export function setAirDragMultiplierForPlayersVehicle(player: number, multiplier: number): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0x5DC40A8869C22141
 */
export function setPlayerBluetoothState(): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param modifier - 
 * @returns void
 * @remarks Hash: 0x2D83BC011CA14A3C
 */
export function setPlayerWeaponDefenseModifier(player: number, modifier: number): void;

/**
 * ```
 * Default is 100. Use player id and not ped id. For instance: PLAYER::SET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID(), 100); // main_persistent.ct4  
 * ```
 * @param player - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x77DFCCF5948B8C71
 */
export function setPlayerMaxArmour(player: number, value: number): void;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param playerModel - 
 * @returns void
 * @remarks Hash: 0xF145F3BE2EFA9A3B
 */
export function specialAbilityUnlock(playerModel: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x7912F7FC4F6264B6
 */
export function isPlayerTargettingEntity(player: number, entity: number): number;

/**
 * Sets whether the player is able to do drive-bys in vehicle (shooting & aiming in vehicles), this also includes middle finger taunts.
 * 
 * This is a toggle, it does not have to be ran every frame.
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6E8834B52EC20C77
 */
export function setPlayerCanDoDriveBy(player: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2E8AABFA40A84F8C
 */
export function setDisableAmbientMeleeMove(player: number, toggle: number): void;

/**
 * ```
 * Gets a value indicating whether the specified player is currently aiming freely.  
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x2E397FD2ECD37C87
 */
export function isPlayerFreeAiming(player: number): number;

/**
 * ```
 * Tints:  
 * None = -1,  
 * Rainbow = 0,  
 * Red = 1,  
 * SeasideStripes = 2,  
 * WidowMaker = 3,  
 * Patriot = 4,  
 * Blue = 5,  
 * Black = 6,  
 * Hornet = 7,  
 * AirFocce = 8,  
 * Desert = 9,  
 * Shadow = 10,  
 * HighAltitude = 11,  
 * Airbone = 12,  
 * Sunrise = 13,  
 * ```
 * @param player - 
 * @param index - 
 * @returns void
 * @remarks Hash: 0xD5A016BC3C09CF40
 */
export function getPlayerReserveParachuteTintIndex(player: number, index: number): void;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param playerModel - 
 * @returns void
 * @remarks Hash: 0x6A09D0D590A47D13
 */
export function specialAbilityLock(playerModel: number): void;

/**
 * ```
 * Returns the group ID the player is member of.  
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x0D127585F77030AF
 */
export function getPlayerGroup(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xD559D2BE9E37853B
 */
export function getTimeSincePlayerDroveOnPavement(player: number): number;

/**
 * Returns the players name from a specified player index
 * @param player - 
 * @returns string
 * @remarks Hash: 0x6D0DE6A7B5DA71F8
 */
export function getPlayerName(player: number): string;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x7E07C78925D5FD96
 */
export function 0x7e07c78925d5fd96(p0: any): any;

/**
 * ```c
 * enum eViolationType {
 *   // Checks if the player is driving on pedestrians walk ways
 *   VT_PAVED_PEDESTRIAN_AREAS = 0,
 *   // Checks if the player is running through red lights
 *   // This takes some time to return true.
 *   VT_RUNNING_REDS = 1,
 *   // checks if the player is driving on the wrong side of the road
 *   VT_AGAINST_TRAFFIC = 2
 * };
 * ```
 * 
 * Used solely in "Al Di Napoli" with type 2 for a voiceline.
 * @param player - 
 * @param type - 
 * @returns number
 * @remarks Hash: 0xF10B44FD479D69F3
 */
export function IsPlayerDrivingDangerously(player: number, type: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6BC97F4F4BB3C04B
 */
export function SetPlayerInvincibleKeepRagdollEnabled(player: number, toggle: number): void;

/**
 * ```
 * Returns the Player's Invincible status.  
 * This function will always return false if 0x733A643B5B0C53C1 is used to set the invincibility status. To always get the correct result, use this:  
 * 	bool IsPlayerInvincible(Player player)  
 * 	{  
 * auto addr = getScriptHandleBaseAddress(GET_PLAYER_PED(player));	  
 * if (addr)  
 * {  
 * 	DWORD flag = *(DWORD *)(addr + 0x188);  
 * 	return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);  
 * }  
 * return false;  
 * 	}  
 * ============================================================  
 * This has bothered me for too long, whoever may come across this, where did anyone ever come up with this made up hash? 0x733A643B5B0C53C1 I've looked all over old hash list, and this nativedb I can not find that PC hash anywhere. What native name is it now or was it?  
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0xB721981B2B939E07
 */
export function getPlayerInvincible(player: number): number;

/**
 * ```
 * NativeDB Added Parameter 3: BOOL p2
 * ```
 * @param player - 
 * @param modifier - 
 * @returns void
 * @remarks Hash: 0x4A3DC7ECCC321032
 */
export function setPlayerMeleeWeaponDamageModifier(player: number, modifier: number): void;

/**
 * ## Parameters
 * *
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0x020E5F00CDA207BA
 */
export function setWantedLevelMultiplier(multiplier: number): void;

/**
 * ```
 * Does exactly the same thing as PLAYER_ID()  
 * ```
 * @returns number
 * @remarks Hash: 0xEE68096F9F37341E
 */
export function networkPlayerIdToInt(): number;

/**
 * ```
 * Returns the time since the character was arrested in (ms) milliseconds.  
 * example  
 * var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_ARREST();  
 * UI.DrawSubtitle(time.ToString());  
 * if player has not been arrested, the int returned will be -1.  
 * ```
 * @returns number
 * @remarks Hash: 0x5063F92F07C2A316
 */
export function getTimeSinceLastArrest(): number;

/**
 * @returns void
 * @remarks Hash: 0xAEBF081FFC0A0E5E
 */
export function assistedMovementCloseRoute(): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x92659B4CE1863CB3
 */
export function getPlayerMaxArmour(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x0C92BA89F1AF26F8
 */
export function getPlayerWantedCentrePosition(player: number): { x: number, y: number, z: number };

/**
 * ADD_*
 * 
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param player - 
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x9097EB6D4BB9A12A
 */
export function 0x9097eb6d4bb9a12a(player: number, entity: number): void;

/**
 * ```
 * Returns true if an unk value is greater than 0.0f  
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x38D28DA81E4E9BF9
 */
export function isPlayerBattleAware(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x78CFE51896B6B8A4
 */
export function isPlayerTargettingAnything(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0x10C54E4389C12B42
 */
export function clearPlayerParachutePackModelOverride(player: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns void
 * @remarks Hash: 0xEF56DBABD3CD4887
 */
export function getPlayerParachuteSmokeTrailColor(player: number, r: number, g: number, b: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x5DDFE2FF727F3CA3
 */
export function getPlayerHasReserveParachute(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xE36A25322DC35F42
 */
export function getTimeSincePlayerHitPed(player: number): number;

/**
 * Returns the player index for the local player.
 * @returns number
 * @remarks Hash: 0x4F8644AF03D0E0D6
 */
export function playerId(): number;

/**
 * ```
 * Returns TRUE if it found an entity in your crosshair within range of your weapon. Assigns the handle of the target to the *entity that you pass it.  
 * Returns false if no entity found.  
 * ```
 * @param player - 
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x2975C866E6713290
 */
export function getEntityPlayerIsFreeAimingAt(player: number, entity: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x20CE80B0C2BF4ACC
 */
export function hasPlayerDamagedAtLeastOnePed(player: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x9A41CF4674A12272
 */
export function getCauseOfMostRecentForceCleanup(): number;

/**
 * Establishes a reset flag to prevent the player from entering any vehicle. Not that this native must be called every frame.
 * @param player - 
 * @returns void
 * @remarks Hash: 0x1DE37BBF9E9CC14A
 */
export function setPlayerMayNotEnterAnyVehicle(player: number): void;

/**
 * ```
 * Affects the range of auto aim target.  
 * ```
 * @param player - 
 * @param range - 
 * @returns void
 * @remarks Hash: 0x29961D490E5814FD
 */
export function setPlayerLockonRangeOverride(player: number, range: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0x290D248E25815AE8
 */
export function ClearPlayerReserveParachuteModelOverride(player: number): void;

/**
 * Make the player impervious to all forms of damage.
 * @param player - 
 * @param bInvincible - 
 * @returns void
 * @remarks Hash: 0x239528EACDC3E7DE
 */
export function setPlayerInvincible(player: number, bInvincible: number): void;

/**
 * ```
 * 6 matches across 4 scripts. 5 occurrences were 240. The other was 255.  
 * ```
 * @param value - 
 * @returns void
 * @remarks Hash: 0x14D913B777DFF5DA
 */
export function setPlayerClothLockCounter(value: number): void;

/**
 * ```
 * Also known as _RECHARGE_SPECIAL_ABILITY
 * ```
 * 
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * @param player - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x3DACA8DDC6FD4980
 */
export function specialAbilityFillMeter(player: number, p1: number): void;

/**
 * ```
 * Seems to only appear in scripts used in Singleplayer.  
 * Always used like this in scripts  
 * PLAYER::_BC9490CA15AEA8FB(PLAYER::PLAYER_ID());  
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0xBC9490CA15AEA8FB
 */
export function 0xbc9490ca15aea8fb(player: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0x8753997EB5F6EE3F
 */
export function clearPlayerParachuteModelOverride(player: number): void;

/**
 * For Steam.
 * Does nothing and always returns false in the retail version of the game.
 * @param achievement - 
 * @param progress - 
 * @returns number
 * @remarks Hash: 0xC2AFFFDABBDC2C5C
 */
export function SetAchievementProgress(achievement: number, progress: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0xDC64D2C53493ED12
 */
export function reportPoliceSpottedPlayer(player: number): void;

/**
 * REMOVE_*
 * 
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param player - 
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x9F260BFB59ADBCA3
 */
export function 0x9f260bfb59adbca3(player: number, entity: number): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns void
 * @remarks Hash: 0xDA1DF03D5A315F4E
 */
export function resetWorldBoundaryForPlayer(): void;

/**
 * ```
 * Sets whether this player can be hassled by gangs.  
 * ```
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD5E460AD7020A246
 */
export function setPlayerCanBeHassledByGangs(player: number, toggle: number): void;

/**
 * ```
 * PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(), 37, PLAYER::GET_WANTED_LEVEL_THRESHOLD(1));  
 * From am_armybase.ysc.c4:  
 * PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(4), 36, PLAYER::GET_WANTED_LEVEL_THRESHOLD(4));
 * @param player - 
 * @param crimeType - 
 * @param wantedLvlThresh - 
 * @returns void
 * @remarks Hash: 0xE9B09589827545E7
 */
export function reportCrime(player: number, crimeType: number, wantedLvlThresh: number): void;

/**
 * ```
 * example:  
 * PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), 0x73268708);  
 * ```
 * @param player - 
 * @param model - 
 * @returns void
 * @remarks Hash: 0x977DB4641F6FC3DB
 */
export function setPlayerParachuteModelOverride(player: number, model: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xF297383AA91DCA29
 */
export function canPedHearPlayer(player: number, ped: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0x7DDAB28D31FAC363
 */
export function setPlayerHasReserveParachute(player: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x3F9F16F8E65A7ED7
 */
export function getPlayerSprintStaminaRemaining(player: number): number;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x17F7471EACA78290
 */
export function SpecialAbilityDeplete(p0: any): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x8EEDA153AD141BA4
 */
export function setEveryoneIgnorePlayer(player: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param player - 
 * @param model - 
 * @returns void
 * @remarks Hash: 0x0764486AEDE748DB
 */
export function SetPlayerReserveParachuteModelOverride(player: number, model: number): void;

/**
 * ```
 * Remnant from GTA IV. Does nothing in GTA V.
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x085DEB493BE80812
 */
export function getWantedLevelRadius(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x4E9021C1FCDD507A
 */
export function setPlayerStealthPerceptionModifier(player: number, value: number): void;

/**
 * Set the player's current team.
 * @param player - 
 * @param team - 
 * @returns void
 * @remarks Hash: 0x0299FA38396A4940
 */
export function setPlayerTeam(player: number, team: number): void;

/**
 * ```
 * p1 was always true.
 * ```
 * 
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * @param player - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x1D506DBBBC51E64B
 */
export function specialAbilityDepleteMeter(player: number, p1: number): void;

/**
 * Set the model for a specific Player. Note that this will destroy the current Ped for the Player and create a new one, any reference to the old ped will be invalid after calling this.
 * 
 * As per usual, make sure to request the model first and wait until it has loaded.
 * @param player - 
 * @param model - 
 * @returns void
 * @remarks Hash: 0x00A1CADD00108836
 */
export function setPlayerModel(player: number, model: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xE28E54788CE8F12D
 */
export function getPlayerWantedLevel(player: number): number;

/**
 * ```
 * This has been found in use in the decompiled files.  
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0xAD73CE5A09E42D12
 */
export function 0xad73ce5a09e42d12(player: number): void;

/**
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * @param player - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xB214D570EAD7F81A
 */
export function SetSpecialAbility(player: number, p1: number): void;

/**
 * ```
 * Sets your targeting mode.
 * 0 = Assisted Aim - Full
 * 1 = Assisted Aim - Partial
 * 2 = Free Aim - Assisted
 * 3 = Free Aim
 * ```
 * @param targetMode - 
 * @returns void
 * @remarks Hash: 0xB1906895227793F3
 */
export function setPlayerTargetingMode(targetMode: number): void;

/**
 * ```
 * Used with radios:
 * void sub_cf383(auto _a0) {
 *     if ((a_0)==1) {
 *         if (MISC::IS_BIT_SET((g_240005._f1), 3)) {
 *             PLAYER::_2F7CEB6520288061(0);
 *             AUDIO::SET_AUDIO_FLAG("AllowRadioDuringSwitch", 0);
 *             AUDIO::SET_MOBILE_PHONE_RADIO_STATE(0);
 *             AUDIO::SET_AUDIO_FLAG("MobileRadioInGame", 0);
 *         }
 *         sub_cf3f6(1);
 *     } else {
 *         if (MISC::IS_BIT_SET((g_240005._f1), 3)) {
 *             PLAYER::_2F7CEB6520288061(1);
 *             AUDIO::SET_AUDIO_FLAG("AllowRadioDuringSwitch", 1);
 *             AUDIO::SET_MOBILE_PHONE_RADIO_STATE(1);
 *             AUDIO::SET_AUDIO_FLAG("MobileRadioInGame", 1);
 *         }
 *         sub_cf3f6(0);
 *     }
 * }
 * SET_PLAYER_S*
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x2F7CEB6520288061
 */
export function 0x2f7ceb6520288061(p0: number): void;

/**
 * ```
 * Multiplier goes up to 1.49 any value above will be completely overruled by the game and the multiplier will not take effect, this can be edited in memory however.  
 * Just call it one time, it is not required to be called once every tick.  
 * Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and SWIM above. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.  
 * It is not possible to "decrease" speed. Anything below 1 will be ignored.  
 * ```
 * @param player - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0x6DB47AA77FD94E09
 */
export function setRunSprintMultiplierForPlayer(player: number, multiplier: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xAFAF86043E5874E9
 */
export function arePlayerFlashingStarsAboutToDrop(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0x19531C47A2ABD691
 */
export function resetPlayerInputGait(player: number): void;

/**
 * Seems to lock the underwater timer of the specified player. Set `percentage` to `50.0` will reduce the value of [GET_PLAYER_UNDERWATER_TIME_REMAINING](#_0xA1FCF8E6AF40B731) to 5.0.
 * 
 * If you want to increase the underwater time for ped, use [SET_PED_MAX_TIME_UNDERWATER](#_0x6BA428C528D9E522) instead.
 * 
 * Using this native after [SET_PED_MAX_TIME_UNDERWATER](#_0x6BA428C528D9E522)
 * @param player - 
 * @param percentage - 
 * @returns any
 * @remarks Hash: 0xA0D3E4F7AAFB7E78
 */
export function SetPlayerUnderwaterTimeRemaining(player: number, percentage: number): any;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x2F395D61F3A1F877
 */
export function getPlayerCurrentStealthNoise(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0xA6F312FCCE9C1DFE
 */
export function resetPlayerStamina(player: number): void;

/**
 * ## Parameters
 * *
 * @param player1 - 
 * @param player2 - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x55FCC0C390620314
 */
export function 0x55fcc0c390620314(player1: number, player2: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x596976B02B6B5700
 */
export function setIgnoreLowPriorityShockingEvents(player: number, toggle: number): void;

/**
 * ```
 * this function is hard-coded to always return 0.  
 * ```
 * @returns number
 * @remarks Hash: 0x74556E1420867ECA
 */
export function isPlayerLoggingInNp(): number;

/**
 * ```
 * Values around 1.0f to 2.0f used in game scripts.  
 * ```
 * @param player - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0xB2C1A29588A9F47C
 */
export function setPlayerSneakingNoiseMultiplier(player: number, multiplier: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param model - 
 * @returns void
 * @remarks Hash: 0xDC80A4C2F18A2B64
 */
export function setPlayerParachutePackModelOverride(player: number, model: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xE23D5873C2394C61
 */
export function UpdatePlayerTeleport(player: number): number;

/**
 * ```
 * Appears only 3 times in the scripts, more specifically in michael1.ysc
 * -
 * This can be used to prevent dying if you are "out of the world"
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x5006D96C995A5827
 */
export function extendWorldBoundaryForPlayer(x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param ped - 
 * @param b2 - 
 * @param resetDamage - 
 * @returns void
 * @remarks Hash: 0x048189FAC643DEEE
 */
export function changePlayerPed(player: number, ped: number, b2: number, resetDamage: number): void;

/**
 * ```
 * Tints:  
 * None = -1,  
 * Rainbow = 0,  
 * Red = 1,  
 * SeasideStripes = 2,  
 * WidowMaker = 3,  
 * Patriot = 4,  
 * Blue = 5,  
 * Black = 6,  
 * Hornet = 7,  
 * AirFocce = 8,  
 * Desert = 9,  
 * Shadow = 10,  
 * HighAltitude = 11,  
 * Airbone = 12,  
 * Sunrise = 13,  
 * ```
 * @param player - 
 * @param index - 
 * @returns void
 * @remarks Hash: 0xAF04C87F5DC1DF38
 */
export function setPlayerReserveParachuteTintIndex(player: number, index: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0xC219887CA3E65C41
 */
export function GetPlayerParachuteModelOverride(player: number): number;

/**
 * ```
 * This executes at the same as speed as PLAYER::SET_PLAYER_WANTED_LEVEL(player, 0, false);  
 * PLAYER::GET_PLAYER_WANTED_LEVEL(player); executes in less than half the time. Which means that it's worth first checking if the wanted level needs to be cleared before clearing. However, this is mostly about good code practice and can important in other situations. The difference in time in this example is negligible.  
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0xB302540597885499
 */
export function clearPlayerWantedLevel(player: number): void;

/**
 * ## Parameters
 * *
 * @param playerModel - 
 * @returns number
 * @remarks Hash: 0xC6017F6A6CDFA694
 */
export function isSpecialAbilityUnlocked(playerModel: number): number;

/**
 * @returns void
 * @remarks Hash: 0x8621390F0CDCFE1F
 */
export function assistedMovementFlushRoute(): void;

/**
 * This is to make the player walk without accepting input.
 * 
 * Call this native every frame so you can control the direction of your ped.
 * @param player - 
 * @param amount - 
 * @param gaitType - 
 * @param rotationSpeed - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x477D5D63E63ECA5D
 */
export function simulatePlayerInputGait(player: number, amount: number, gaitType: number, rotationSpeed: number, p4: number, p5: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param ms - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xBC0753C9CA14B506
 */
export function HasPlayerBeenShotByCop(player: number, ms: number, p2: number): number;

/**
 * ```
 * p1 appears as 5, 10, 15, 25, or 30. p2 is always true.
 * ```
 * 
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * @param player - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xB7B0870EB531D08D
 */
export function specialAbilityChargeAbsolute(player: number, p1: number, p2: number): void;

/**
 * ```
 * Max value is 1.0  
 * ```
 * @param player - 
 * @param difficulty - 
 * @returns void
 * @remarks Hash: 0x9B0BB33B04405E7A
 */
export function setWantedLevelDifficulty(player: number, difficulty: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDB172424876553F4
 */
export function setDispatchCopsForPlayer(player: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0xFAC75988A7D078D3
 */
export function 0xfac75988a7d078d3(player: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xDB89591E290D9182
 */
export function getTimeSincePlayerDroveAgainstTraffic(player: number): number;

/**
 * The native ensures the 'modifier' parameter is 0.1 or greater.
 * @param player - 
 * @param modifier - 
 * @returns void
 * @remarks Hash: 0xCE07B9F7817AADA3
 */
export function setPlayerWeaponDamageModifier(player: number, modifier: number): void;

/**
 * ## Parameters
 * *
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0xA49C426ED0CA4AB7
 */
export function setSpecialAbilityMultiplier(multiplier: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0x9EDD76E87D5D51BA
 */
export function 0x9edd76e87d5d51ba(player: number): void;

/**
 * ## Parameters
 * *
 * @param playerId - 
 * @returns number
 * @remarks Hash: 0x5FC472C501CCADB3
 */
export function getIsPlayerDrivingOnHighway(playerId: number): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x237440E46D918649
 */
export function 0x237440e46d918649(p0: any): void;

/**
 * ```
 * modifier's min value is 0.1
 * ```
 * @param player - 
 * @param modifier - 
 * @returns void
 * @remarks Hash: 0xAE540335B4ABC4E2
 */
export function setPlayerMeleeWeaponDefenseModifier(player: number, modifier: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x0A6EB355EE14A2DB
 */
export function arePlayerStarsGreyedOut(player: number): number;

/**
 * Returns the entity handle for the local player ped. Note that this entity handle will change after using commands such as SET\_PLAYER\_MODEL.
 * @returns number
 * @remarks Hash: 0xD80958FC74E988A6
 */
export function playerPedId(): number;

/**
 * ```
 * PLAYER::FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME("pb_prostitute", 1); // Found in decompilation  
 * ```
 * @param name - 
 * @param cleanupFlags - 
 * @returns void
 * @remarks Hash: 0x4C68DDDDF0097317
 */
export function forceCleanupForAllThreadsWithThisName(name: string, cleanupFlags: number): void;

/**
 * ## Parameters
 * *
 * @param duration - 
 * @returns void
 * @remarks Hash: 0xBF9BD71691857E48
 */
export function startFiringAmnesty(duration: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xDE7465A27D403C06
 */
export function canPlayerStartMission(player: number): number;

/**
 * ```
 * Returns the time since the character died in (ms) milliseconds.  
 * example  
 * var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_DEATH();  
 * UI.DrawSubtitle(time.ToString());  
 * if player has not died, the int returned will be -1.  
 * ```
 * @returns number
 * @remarks Hash: 0xC7034807558DDFCA
 */
export function getTimeSinceLastDeath(): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xFF300C7649724A0B
 */
export function setPlayerLeavePedBehind(player: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param achievement - 
 * @returns number
 * @remarks Hash: 0x867365E111A3B6EB
 */
export function hasAchievementBeenPassed(achievement: number): number;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0xB1D200FE26AEF3CB
 */
export function isSpecialAbilityEnabled(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xD705740BB0A1CF4C
 */
export function hasPlayerBeenSpottedInStolenVehicle(player: number): number;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x37FAAA68DCA9D08D
 */
export function GetPlayerReserveParachuteModelOverride(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x424D4687FA1E5652
 */
export function isPlayerDead(player: number): number;

/**
 * ```
 * 2 occurrences in agency_heist3a. p1 was 0.7f then 0.4f.  
 * ```
 * @param player - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xDD2620B7B9D16FF1
 */
export function 0xdd2620b7b9d16ff1(player: number, p1: number): number;

/**
 * ```
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).  
 * ```
 * @param value - 
 * @returns number
 * @remarks Hash: 0x41BD2A6B006AF756
 */
export function intToPlayerindex(value: number): number;

/**
 * ## Parameters
 * *
 * @param maxWantedLevel - 
 * @returns void
 * @remarks Hash: 0xAA5F02DB48D704B9
 */
export function setMaxWantedLevel(maxWantedLevel: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0x0F4CC924CF8C7B21
 */
export function clearPlayerParachuteVariationOverride(player: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xD55DDFB47991A294
 */
export function hasPlayerLeftTheWorld(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns void
 * @remarks Hash: 0xE902EF951DCE178F
 */
export function getPlayerRgbColour(player: number, r: number, g: number, b: number): void;

/**
 * ```
 * Gets the number of players in the current session.
 * If not multiplayer, always returns 1.
 * ```
 * @returns number
 * @remarks Hash: 0x407C7F91DDB46C16
 */
export function getNumberOfPlayers(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2F41A3BAE005E5FA
 */
export function 0x2f41a3bae005e5fa(p0: any, p1: any): void;

/**
 * ```
 * Name between DISABLE_ALL_CONTROL_ACTIONS and DISABLE_CONTROL_ACTION
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0x5501B7A5CDB79D37
 */
export function 0x5501b7a5cdb79d37(player: number): void;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x05A1FE504B7F2587
 */
export function isSpecialAbilityMeterFull(player: number): number;

/**
 * Always returns false.
 * 
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0xDCC07526B8EC45AF
 */
export function 0xdcc07526b8ec45af(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param wantedLevel - 
 * @param delayedResponse - 
 * @returns void
 * @remarks Hash: 0x39FF19C64EF7DA5B
 */
export function setPlayerWantedLevel(player: number, wantedLevel: number, delayedResponse: number): void;

/**
 * ```
 * Return true while player is being arrested / busted.  
 * If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)  
 * If atArresting is set to 0, this function will return 1 only when the busted screen is shown.  
 * ```
 * @param player - 
 * @param atArresting - 
 * @returns number
 * @remarks Hash: 0x388A47C51ABDAC8E
 */
export function isPlayerBeingArrested(player: number, atArresting: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9F343285A00B4BB6
 */
export function setAutoGiveParachuteWhenEnterPlane(player: number, toggle: number): void;

/**
 * ```
 * Returns true when the player is not able to control the cam i.e. when running a benchmark test, switching the player or viewing a cutscene.  
 * Note: I am not 100% sure if the native actually checks if the cam control is disabled but it seems promising.  
 * ```
 * @returns number
 * @remarks Hash: 0x7C814D2FB49F40C0
 */
export function IsPlayerCamControlDisabled(): number;

/**
 * ```
 * Purpose of the BOOL currently unknown.  
 * Both, true and false, work  
 * ```
 * @param unk - 
 * @returns void
 * @remarks Hash: 0x94DD7888C10A979E
 */
export function displaySystemSigninUi(unk: number): void;

/**
 * ```
 * Only 1 match. ob_sofa_michael.  
 * PLAYER::PLAYER_ATTACH_VIRTUAL_BOUND(-804.5928f, 173.1801f, 71.68436f, 0f, 0f, 0.590625f, 1f, 0.7f);1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @returns void
 * @remarks Hash: 0xED51733DC73AED51
 */
export function playerAttachVirtualBound(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number): void;

/**
 * ```
 * normalizedValue is from 0.0 - 1.0
 * p2 is always 1
 * ```
 * 
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * @param player - 
 * @param normalizedValue - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xA0696A65F009EE18
 */
export function specialAbilityChargeNormalized(player: number, normalizedValue: number, p2: number): void;

/**
 * ```
 * Disables something. Used only once in R* scripts (freemode.ysc).
 * DISABLE_PLAYER_*
 * ```
 * @returns void
 * @remarks Hash: 0xB885852C39CC265D
 */
export function 0xb885852c39cc265d(): void;

/**
 * ```
 * Tints:  
 * None = -1,  
 * Rainbow = 0,  
 * Red = 1,  
 * SeasideStripes = 2,  
 * WidowMaker = 3,  
 * Patriot = 4,  
 * Blue = 5,  
 * Black = 6,  
 * Hornet = 7,  
 * AirFocce = 8,  
 * Desert = 9,  
 * Shadow = 10,  
 * HighAltitude = 11,  
 * Airbone = 12,  
 * Sunrise = 13,  
 * ```
 * @param player - 
 * @param tintIndex - 
 * @returns void
 * @remarks Hash: 0x75D3F7A1B0D9B145
 */
export function getPlayerParachuteTintIndex(player: number, tintIndex: number): void;

/**
 * ```
 * This has been found in use in the decompiled files.  
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0x4669B3ED80F24B4E
 */
export function 0x4669b3ed80f24b4e(player: number): void;

/**
 * ```
 * modifier's min value is 0.1
 * ```
 * @param player - 
 * @param modifier - 
 * @returns void
 * @remarks Hash: 0x4C60E6EFDAFF2462
 */
export function setPlayerVehicleDefenseModifier(player: number, modifier: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0x36F1B38855F2A8DF
 */
export function 0x36f1b38855f2a8df(player: number): void;

/**
 * ```
 * Used to toggle the square up aim.
 * ```
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x5C8B2F450EE4328E
 */
export function setPlayerLockon(player: number, toggle: number): void;

/**
 * Disables vehicle rewards for the current frame.
 * @param player - 
 * @returns void
 * @remarks Hash: 0xC142BE3BB9CE125F
 */
export function disablePlayerVehicleRewards(player: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xDCCFD3F106C36AB4
 */
export function isPlayerFreeForAmbientTask(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xFA1E2BF8B10598F9
 */
export function isPlayerPressingHorn(player: number): number;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0x9CB5CE07A3968D5A
 */
export function specialAbilityDeactivateFast(player: number): void;

/**
 * ```
 * Drft  
 * ```
 * @param wantedLevel - 
 * @returns number
 * @remarks Hash: 0xFDD179EAF45B556C
 */
export function getWantedLevelThreshold(wantedLevel: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xD821056B9ACF8052
 */
export function 0xd821056b9acf8052(player: number, p1: any): void;

/**
 * ```
 * Sets whether this player can take cover.
 * ```
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD465A8599DFF6814
 */
export function setPlayerCanUseCover(player: number, toggle: number): void;

/**
 * ```
 * Returns profile setting 243.
 * GET_*
 * ```
 * @returns number
 * @remarks Hash: 0xCB645E85E97EA48B
 */
export function 0xcb645e85e97ea48b(): number;

/**
 * ```
 * Gets a value indicating whether the specified player is currently aiming freely at the specified entity.  
 * ```
 * @param player - 
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x3C06B5C839B38F7B
 */
export function isPlayerFreeAimingAtEntity(player: number, entity: number): number;

/**
 * ```
 * 2 matches in 1 script - am_hold_up
 * Used in multiplayer scripts?
 * ```
 * @returns void
 * @remarks Hash: 0x0032A6DBA562C518
 */
export function 0x0032a6dba562c518(): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC54C95DA968EC5B5
 */
export function setPlayerSimulateAiming(player: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param modifier - 
 * @returns void
 * @remarks Hash: 0xBCFDE9EDE4CF27DC
 */
export function SetPlayerWeaponDefenseModifier2(player: number, modifier: number): void;

/**
 * ```
 * Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT  
 * ```
 * @returns number
 * @remarks Hash: 0xA5EDC40EF369B48D
 */
export function getPlayerIndex(): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param enabled - 
 * @returns void
 * @remarks Hash: 0xF401B182DBA8AF53
 */
export function setPlayerCanLeaveParachuteSmokeTrail(player: number, enabled: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2382AB11450AE7BA
 */
export function 0x2382ab11450ae7ba(p0: any, p1: any): void;

/**
 * ```
 * Found in "director_mode", "fm_bj_race_controler", "fm_deathmatch_controler", "fm_impromptu_dm_controler", "fm_race_controler", "gb_deathmatch".  
 * ```
 * @param player - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xCAC57395B151135F
 */
export function 0xcac57395b151135f(player: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0x471D2FF42A94B4F2
 */
export function setAllRandomPedsFleeThisFrame(player: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns void
 * @remarks Hash: 0x8217FD371A4625CF
 */
export function setPlayerParachuteSmokeTrailColor(player: number, r: number, g: number, b: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x908CBECC2CAA3690
 */
export function isPlayerReadyForCutscene(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x75E7D505F2B15902
 */
export function setPlayerForcedZoom(player: number, toggle: number): void;

/**
 * Teleports the player to the given coordinates.
 * 
 * If findCollisionLand is true it will try to find the Z value for you, this however has a timeout of 100 frames.
 * 
 * When trying to find the Z value the native will take longer the higher the difference from the given Z to the ground, this combined with the timeout can cause the teleport to just teleport to the given Z value, so try to estimate the z value, so don't just pass in 1000.0.
 * 
 * Also if you're in a vehicle and teleportWithVehicle is true it will not find the Z value for you.
 * @param player - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param heading - 
 * @param teleportWithVehicle - 
 * @param findCollisionLand - 
 * @param p7 - 
 * @returns void
 * @remarks Hash: 0xAD15F075A4DA0FDE
 */
export function startPlayerTeleport(player: number, x: number, y: number, z: number, heading: number, teleportWithVehicle: number, findCollisionLand: number, p7: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x0FEE4F80AC44A726
 */
export function setPlayerForcedAim(player: number, toggle: number): void;

/**
 * ```
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 * @param value - 
 * @returns number
 * @remarks Hash: 0x9EC6603812C24710
 */
export function intToParticipantindex(value: number): number;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param team - 
 * @returns number
 * @remarks Hash: 0x1FC200409F10E6F1
 */
export function GetNumberOfPlayersInTeam(team: number): number;

/**
 * ```
 * Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.  
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x5E9564D8246B909A
 */
export function isPlayerPlaying(player: number): number;

/**
 * ```
 * PLAYER::0xBF6993C7(rPtr((&l_122) + 71)); // Found in decompilation
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xB45EFF719D8427A6
 */
export function 0xb45eff719d8427a6(p0: number): void;

/**
 * ```
 * Returns profile setting 237.
 * GET_*
 * ```
 * @returns number
 * @remarks Hash: 0xB9CF1F793A9F1BF1
 */
export function 0xb9cf1f793a9f1bf1(): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x31E90B8873A4CD3B
 */
export function 0x31e90b8873a4cd3b(player: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0x2D03E13C460760D6
 */
export function resetPlayerArrestState(player: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD2B315B6689D537D
 */
export function setAutoGiveScubaGearWhenExitVehicle(player: number, toggle: number): void;

/**
 * Adds a percentage to a players stamina
 * @param player - 
 * @param percentage - 
 * @returns void
 * @remarks Hash: 0xA352C1B864CAFD33
 */
export function restorePlayerStamina(player: number, percentage: number): void;

/**
 * ```
 * Returns true if the player is riding a train.  
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x4EC12697209F2196
 */
export function isPlayerRidingTrain(player: number): number;

/**
 * ```
 * # Predominant call signatures  
 * PLAYER::SET_PLAYER_WANTED_CENTRE_POSITION(PLAYER::PLAYER_ID(), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1));  
 * # Parameter value ranges  
 * P0: PLAYER::PLAYER_ID()  
 * P1: ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)  
 * P2: Not set by any call  
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0x520E541A97A13354
 */
export function setPlayerWantedCentrePosition(player: number): void;

/**
 * ## Parameters
 * *
 * @param id - 
 * @param cleanupFlags - 
 * @returns void
 * @remarks Hash: 0xF745B37630DF176B
 */
export function forceCleanupForThreadWithThisId(id: number, cleanupFlags: number): void;

/**
 * ```
 * Gets the player's team.  
 * Does nothing in singleplayer.  
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x37039302F4E0A008
 */
export function getPlayerTeam(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xA1FCF8E6AF40B731
 */
export function getPlayerUnderwaterTimeRemaining(player: number): number;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param coordX - 
 * @param coordY - 
 * @param coordZ - 
 * @returns void
 * @remarks Hash: 0x70A382ADEC069DD3
 */
export function 0x70a382adec069dd3(coordX: number, coordY: number, coordZ: number): void;

/**
 * ```
 * For Steam.
 * Always returns 0 in retail version of the game.
 * ```
 * @param achievement - 
 * @returns number
 * @remarks Hash: 0x1C186837D0619335
 */
export function GetAchievementProgress(achievement: number): number;

/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param player - 
 * @param wantedLevel - 
 * @param lossTime - 
 * @returns void
 * @remarks Hash: 0x49B856B1360C47C7
 */
export function SetWantedLevelHiddenEvasionTime(player: number, wantedLevel: number, lossTime: number): void;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0x375F0E738F861A94
 */
export function specialAbilityReset(player: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x5D35ECF3A81A0EE0
 */
export function getTimeSincePlayerHitVehicle(player: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x02B15662D7F8886F
 */
export function isPlayerTeleportActive(): number;

/**
 * ```
 * Gets the maximum wanted level the player can get.  
 * Ranges from 0 to 5.  
 * ```
 * @returns number
 * @remarks Hash: 0x462E0DB9B137DC5F
 */
export function getMaxWantedLevel(): number;

/**
 * ```
 * modifier's min value is 0.1
 * ```
 * @param player - 
 * @param modifier - 
 * @returns void
 * @remarks Hash: 0xA50E117CDDF82F0C
 */
export function setPlayerVehicleDamageModifier(player: number, modifier: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param tintIndex - 
 * @returns void
 * @remarks Hash: 0x6E9C742F340CE5A2
 */
export function getPlayerParachutePackTintIndex(player: number, tintIndex: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x65FAEE425DE637B0
 */
export function isPlayerBluetoothEnable(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0xB9D0DD990DC141DD
 */
export function resetWantedLevelDifficulty(player: number): void;

/**
 * ```
 * IS_*
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x690A61A6D13583F6
 */
export function 0x690a61a6d13583f6(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0x4AACB96203D11A31
 */
export function clearPlayerHasDamagedAtLeastOneNonAnimalPed(player: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xF3AC26D3CC576528
 */
export function removePlayerHelmet(player: number, p2: number): void;

/**
 * ```
 * If toggle is set to false:
 *  The police won't be shown on the (mini)map
 * If toggle is set to true:
 *  The police will be shown on the (mini)map
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x43286D561B72B8BF
 */
export function setPoliceRadarBlips(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0x749FADDF97DFE930
 */
export function setPlayerClothPinFrames(player: number): void;

/**
 * ```
 * Every occurrence of p1 & p2 were both true.
 * ```
 * 
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * @param player - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x2E7B9B683481687D
 */
export function specialAbilityChargeSmall(player: number, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param wantedLevel - 
 * @returns number
 * @remarks Hash: 0x238DB2A2C23EE9EF
 */
export function isPlayerWantedLevelGreater(player: number, wantedLevel: number): number;

/**
 * Inhibits the player from using any method of combat including melee and firearms.  
 * NOTE: Only disables the firing for one frame
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x5E6CC07646BBEAB8
 */
export function disablePlayerFiring(player: number, toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5D511E3867C87139
 */
export function isSystemUiBeingDisplayed(): number;

/**
 * This multiplier is reset to `1.0` every time the player ped is changed, often times via [`SET_PLAYER_MODEL`](#_0x00A1CADD00108836) or [`CHANGE_PLAYER_PED`](#_0x048189FAC643DEEE).
 * @param player - 
 * @param regenRate - 
 * @returns void
 * @remarks Hash: 0x5DB660B38DD98A31
 */
export function setPlayerHealthRechargeMultiplier(player: number, regenRate: number): void;

/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x823EC8E82BA45986
 */
export function 0x823ec8e82ba45986(p0: any): void;

/**
 * ```
 * used with 1,2,8,64,128 in the scripts  
 * ```
 * @param cleanupFlags - 
 * @returns void
 * @remarks Hash: 0xBC8983F38F78ED51
 */
export function forceCleanup(cleanupFlags: number): void;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0xC9A763D8FE87436A
 */
export function specialAbilityChargeOnMissionFailed(player: number): void;

/**
 * ```
 * Assigns the handle of locked-on melee target to *entity that you pass it.  
 * Returns false if no entity found.  
 * ```
 * @param player - 
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x13EDE1A5DBF797C9
 */
export function getPlayerTargetEntity(player: number, entity: number): number;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @returns void
 * @remarks Hash: 0x7148E0F43D11F0D9
 */
export function 0x7148e0f43d11f0d9(): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x8A876A65283DD7D7
 */
export function isPlayerScriptControlOn(player: number): number;

/**
 * ```
 * tints 0- 13
 * 0 - unkown
 * 1 - unkown
 * 2 - unkown
 * 3 - unkown
 * 4 - unkown
 * ```
 * @param player - 
 * @param tintIndex - 
 * @returns void
 * @remarks Hash: 0x93B0FB27C9A04060
 */
export function setPlayerParachutePackTintIndex(player: number, tintIndex: number): void;

/**
 * ```
 * Returns TRUE if the player ('s ped) is climbing at the moment.  
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x95E8F73DC65EFB9C
 */
export function isPlayerClimbing(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x1885BC9B108B4C99
 */
export function getPlayerSprintTimeRemaining(player: number): number;

/**
 * ```
 * p1 appears to always be 1 (only comes up twice)
 * ```
 * 
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * @param player - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xED481732DFF7E997
 */
export function specialAbilityChargeContinuous(player: number, p2: number): void;

/**
 * ```
 * 2 matches. p1 was always true.
 * ```
 * 
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * @param player - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xF733F45FA4497D93
 */
export function specialAbilityChargeLarge(player: number, p1: number, p2: number): void;

/**
 * ```
 * 1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;  
 * ```
 * @returns void
 * @remarks Hash: 0x1DD5897E2FA6E7C9
 */
export function playerDetachVirtualBound(): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xA01B8075D8B92DF4
 */
export function setPlayerSprint(player: number, toggle: number): void;

/**
 * ```
 * Flags:
 * SPC_AMBIENT_SCRIPT = (1 << 1),
 * SPC_CLEAR_TASKS = (1 << 2),
 * SPC_REMOVE_FIRES = (1 << 3),
 * SPC_REMOVE_EXPLOSIONS = (1 << 4),
 * SPC_REMOVE_PROJECTILES = (1 << 5),
 * SPC_DEACTIVATE_GADGETS = (1 << 6),
 * SPC_REENABLE_CONTROL_ON_DEATH = (1 << 7),
 * SPC_LEAVE_CAMERA_CONTROL_ON = (1 << 8),
 * SPC_ALLOW_PLAYER_DAMAGE = (1 << 9),
 * SPC_DONT_STOP_OTHER_CARS_AROUND_PLAYER = (1 << 10),
 * SPC_PREVENT_EVERYBODY_BACKOFF = (1 << 11),
 * SPC_ALLOW_PAD_SHAKE = (1 << 12)
 * See: https://alloc8or.re/gta5/doc/enums/eSetPlayerControlFlag.txt
 * ```
 * @param player - 
 * @param bHasControl - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0x8D32347D6D4C40A2
 */
export function setPlayerControl(player: number, bHasControl: number, flags: number): void;

/**
 * ```
 * The player will be ignored by the police if toggle is set to true  
 * ```
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x32C62AA929C2DA6A
 */
export function setPoliceIgnorePlayer(player: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param targetLevel - 
 * @returns void
 * @remarks Hash: 0x5702B917B99DB1CD
 */
export function setPlayerTargetLevel(targetLevel: number): void;

/**
 * ```
 * Only 1 match. Both p1 & p2 were true.
 * ```
 * 
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * @param player - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xF113E3AA9BC54613
 */
export function specialAbilityChargeMedium(player: number, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x7651BC64AE59E128
 */
export function setPlayerForceSkipAimIntro(player: number, toggle: number): void;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x3E5F7FC85D854E15
 */
export function isSpecialAbilityActive(player: number): number;

/**
 * ## Parameters
 * *
 * @param cleanupFlags - 
 * @returns number
 * @remarks Hash: 0xC968670BFACE42D9
 */
export function hasForceCleanupOccurred(cleanupFlags: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x3C49C870E66F0A28
 */
export function givePlayerRagdollControl(player: number, toggle: number): void;

/**
 * ```
 * Can the player control himself, used to disable controls for player for things like a cutscene.
 * @param player - 
 * @returns number
 * @remarks Hash: 0x49C32D60007AFA47
 */
export function isPlayerControlOn(player: number): number;

/**
 * ```
 * Swim speed multiplier.  
 * Multiplier goes up to 1.49  
 * Just call it one time, it is not required to be called once every tick. - Note copied from below native.  
 * Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and RUN_SPRINT below. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.  
 * ```
 * @param player - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0xA91C6F0FF7D16A13
 */
export function setSwimMultiplierForPlayer(player: number, multiplier: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param limit - 
 * @returns void
 * @remarks Hash: 0xC388A0F065F5BC34
 */
export function SetPlayerHealthRechargeLimit(player: number, limit: number): void;

/**
 * Sets whether all random peds will run away from the player if they are agitated (threatened) (bool=true), or if they will stand their ground (bool=false).
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x056E0FE8534C2949
 */
export function setAllRandomPedsFlee(player: number, toggle: number): void;

/**
 * ```
 * - This is called after SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0xC3376F42B1FACCC6
 */
export function 0xc3376f42b1faccc6(player: number): void;

/**
 * ```
 * Every occurrence was either 0 or 2.  
 * ```
 * @param index - 
 * @returns void
 * @remarks Hash: 0x9F7BBA2EA6372500
 */
export function setPlayerClothPackageIndex(index: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0xE4B90F367BD81752
 */
export function hasPlayerDamagedAtLeastOneNonAnimalPed(player: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param wantedLevel - 
 * @param delayedResponse - 
 * @returns void
 * @remarks Hash: 0x340E61DE7F471565
 */
export function setPlayerWantedLevelNoDrop(player: number, wantedLevel: number, delayedResponse: number): void;

/**
 * ```
 * example:  
 * flags: 0-6  
 * PLAYER::SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS(PLAYER::PLAYER_ID(), 6);  
 * wouldnt the flag be the seatIndex?  
 * ```
 * @param player - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0x11D5F725F0E780E0
 */
export function setPlayerResetFlagPreferRearSeats(player: number, flags: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x7BAE68775557AE0B
 */
export function 0x7bae68775557ae0b(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;

/**
 * ```
 * Forces any pending wanted level to be applied to the specified player immediately.  
 * Call SET_PLAYER_WANTED_LEVEL with the desired wanted level, followed by SET_PLAYER_WANTED_LEVEL_NOW.  
 * Second parameter is unknown (always false).  
 * ```
 * @param player - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE0A7D1E497FFCD6F
 */
export function setPlayerWantedLevelNow(player: number, p1: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @returns number
 * @remarks Hash: 0xA72200F51875FEA4
 */
export function GetWantedLevelParoleDuration(): number;

/**
 * ```
 * SET_PLAYER_MAX_*
 * ```
 * @param player - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x8D768602ADEF2245
 */
export function 0x8d768602adef2245(player: number, p1: number): void;

/**
 * ```
 * p1 was always 5.  
 * p4 was always false.  
 * ```
 * @param player - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xD9284A8C0D48352C
 */
export function setPlayerParachuteVariationOverride(player: number, p1: number, p2: any, p3: any, p4: number): void;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0xFFEE8FA29AB9A18E
 */
export function 0xffee8fa29ab9a18e(player: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns void
 * @remarks Hash: 0xF0B67A4DE6AB5F98
 */
export function clearPlayerHasDamagedAtLeastOnePed(player: number): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param player - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xEE4EBDD2593BA844
 */
export function SetPlayerHomingRocketDisabled(player: number, p1: number): void;

/**
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x181EC197DAEFE121
 */
export function enableSpecialAbility(player: number, toggle: number): void;

/**
 * Suppresses a crime for a given player for this frame only.
 * @param player - 
 * @param crimeType - 
 * @returns void
 * @remarks Hash: 0x9A987297ED8BD838
 */
export function suppressCrimeThisFrame(player: number, crimeType: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x8BC515BAE4AAF8FF
 */
export function GetPlayerHealthRechargeLimit(player: number): number;

/**
 * It returns true if the player is online, suggesting they are also logged in locally. Note that this is an alias for `NETWORK_IS_SIGNED_ONLINE`.
 * @returns number
 * @remarks Hash: 0xF25D331DC2627BBC
 */
export function isPlayerOnline(): number;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param player - 
 * @returns void
 * @remarks Hash: 0xD6A953C6D1492057
 */
export function specialAbilityDeactivate(player: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDE45D1A1EF45EE61
 */
export function 0xde45d1a1ef45ee61(player: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x56105E599CAB0EFA
 */
export function getPlayerFakeWantedLevel(player: number): number;

/**
 * ```
 * Disables the player's teleportation  
 * ```
 * @returns void
 * @remarks Hash: 0xC449EDED9D73009C
 */
export function stopPlayerTeleport(): void;

/**
 * ```
 * Does the same like PLAYER::GET_PLAYER_PED
 * ```
 * @param player - 
 * @returns number
 * @remarks Hash: 0x50FAC3A3E030A6E1
 */
export function getPlayerPedScriptIndex(player: number): number;

/**
 * ```
 * Tints:  
 * None = -1,  
 * Rainbow = 0,  
 * Red = 1,  
 * SeasideStripes = 2,  
 * WidowMaker = 3,  
 * Patriot = 4,  
 * Blue = 5,  
 * Black = 6,  
 * Hornet = 7,  
 * AirFocce = 8,  
 * Desert = 9,  
 * Shadow = 10,  
 * HighAltitude = 11,  
 * Airbone = 12,  
 * Sunrise = 13,  
 * ```
 * @param player - 
 * @param tintIndex - 
 * @returns void
 * @remarks Hash: 0xA3D0E54541D9A5E5
 */
export function setPlayerParachuteTintIndex(player: number, tintIndex: number): void;

/**
 * Limit the player to only enter this vehicle. Note set vehicle to false if you want them to access any vehicle.
 * @param player - 
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x8026FF78F208978A
 */
export function setPlayerMayOnlyEnterThisVehicle(player: number, vehicle: number): void;

/**
 * Stops recording and saves the recorded clip.
 * @returns void
 * @remarks Hash: 0x071A5197D6AFC8B3
 */
export function StopRecordingAndSaveClip(): void;

/**
 * Stops recording and discards the recorded clip.
 * @returns void
 * @remarks Hash: 0x88BB3507ED41A240
 */
export function StopRecordingAndDiscardClip(): void;

/**
 * @returns void
 * @remarks Hash: 0xF854439EFBB3B583
 */
export function 0xf854439efbb3b583(): void;

/**
 * ```
 * -This function appears to be deprecated/ unused. Tracing the call internally leads to a _nullsub -  
 * first one seems to be a string of a mission name, second one seems to be a bool/toggle  
 * p1 was always 0.  
 * ```
 * @param missionNameLabel - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x208784099002BC30
 */
export function 0x208784099002bc30(missionNameLabel: string, p1: any): void;

/**
 * Checks if you're recording.
 * @returns number
 * @remarks Hash: 0x1897CA71995A90B4
 */
export function IsRecording(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x293220DA1B46CEBC
 */
export function 0x293220da1b46cebc(p0: number, p1: number, p2: number): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x66972397E0757E7A
 */
export function 0x66972397e0757e7a(p0: any, p1: any, p2: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x48621C9FCA3EBD28
 */
export function 0x48621c9fca3ebd28(p0: number): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xDF4B952F7D381B95
 */
export function 0xdf4b952f7d381b95(): any;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x644546EC5287471B
 */
export function SaveRecordingClip(): number;

/**
 * @returns void
 * @remarks Hash: 0x81CBAE94390F9F89
 */
export function 0x81cbae94390f9f89(): void;

/**
 * Disable recording for this frame only.
 * @returns void
 * @remarks Hash: 0xEB2D525B57F42B40
 */
export function StopRecordingThisFrame(): void;

/**
 * This will disable the ability to make camera changes in R* Editor.
 * @returns void
 * @remarks Hash: 0xAF66DCEE6609B148
 */
export function DisableRockstarEditorCameraChanges(): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x4282E08174868BE3
 */
export function 0x4282e08174868be3(): any;

/**
 * @returns void
 * @remarks Hash: 0x13B350B8AD0EEE10
 */
export function 0x13b350b8ad0eee10(): void;

/**
 * Starts recording a replay.  
 * If already recording a replay, does nothing.
 * @param mode - 
 * @returns void
 * @remarks Hash: 0xC3AC2FFF9612AC81
 */
export function StartRecording(mode: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x33D47E85B476ABCD
 */
export function 0x33d47e85b476abcd(p0: number): number;

/**
 * Clears a disabled GPS route area from a certain index previously set using [`SET_GPS_DISABLED_ZONE_AT_INDEX`](#_0xD0BC1C6FB18EE154).
 * @param index - 
 * @returns void
 * @remarks Hash: 0x2801D0012266DF07
 */
export function clearGpsDisabledZoneAtIndex(index: number): void;

/**
 * ```cpp
 * enum eSafePositionFlags {
 *     // Only navmesh polygons marked as pavement
 *     GSC_FLAG_ONLY_PAVEMENT = 1,
 *     // Only navmesh polygons not marked as "isolated"
 *     GSC_FLAG_NOT_ISOLATED = 2,
 *     // No navmesh polygons created from interiors
 *     GSC_FLAG_NOT_INTERIOR = 4,
 *     // No navmesh polygons marked as water
 *     GSC_FLAG_NOT_WATER = 8,
 *     // Only navmesh polygons marked as "network spawn candidate"
 *     GSC_FLAG_ONLY_NETWORK_SPAWN = 16,
 *     // Specify whether to use a flood-fill from the starting position, as opposed to scanning all polygons within the search volume
 *     GSC_FLAG_USE_FLOOD_FILL = 32
 * }
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param onlyOnPavement - 
 * @param outPosition - 
 * @param flags - 
 * @returns number
 * @remarks Hash: 0xB61C8E878A4199CA
 */
export function getSafeCoordForPed(x: number, y: number, z: number, onlyOnPavement: number, outPosition: { x: number, y: number, z: number }, flags: number): number;

/**
 * ```
 * Returns whether navmesh for the region is loaded. The region is a rectangular prism defined by it's top left deepest corner to it's bottom right shallowest corner.  
 * If you can re-word this so it makes more sense, please do. I'm horrible with words sometimes...  
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @returns number
 * @remarks Hash: 0xF813C7E63F9062A5
 */
export function isNavmeshLoadedInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;

/**
 * ```
 * Returns CGameWorldHeightMap's maximum Z among all grid nodes that intersect with the specified rectangle.
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param x2 - 
 * @param y2 - 
 * @returns number
 * @remarks Hash: 0x8ABE8608576D9CE3
 */
export function GetHeightmapTopZForArea(x1: number, y1: number, x2: number, y2: number): number;

/**
 * unknown3 is related to ``SEND_SCRIPT_WORLD_STATE_EVENT > CNetworkRoadNodeWorldStateData`` in networked environments.
 * 
 * See [`IS_POINT_IN_ANGLED_AREA`](#_0x2A70BAE8883E4C81) for the definition of an angled area.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param width - 
 * @param unknown1 - 
 * @param unknown2 - 
 * @param unknown3 - 
 * @returns void
 * @remarks Hash: 0x1A5AA1208AF5DB59
 */
export function setRoadsInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, unknown1: number, unknown2: number, unknown3: number): void;

/**
 * ```
 * Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
 * ```
 * @param x - 
 * @param y - 
 * @returns number
 * @remarks Hash: 0x336511A34F2E5185
 */
export function GetHeightmapBottomZForPosition(x: number, y: number): number;

/**
 * Creates a navmesh blocking object, vehicles will avoid driving through this area. 
 * 
 * Only 32 blocking objects may exist at a given time and must be manually managed. See [`REMOVE_NAVMESH_BLOCKING_OBJECT`](#_0x46399A7895957C0E) and [`onResourceStop`](https://docs.fivem.net/docs/scripting-reference/events/list/onResourceStop/)
 * 
 * ```c
 * enum eBlockingObjectFlags {
 *     // Default Flag
 *     BLOCKING_OBJECT_DEFAULT = 0,
 *     // Blocking object will block wander paths
 *     BLOCKING_OBJECT_WANDERPATH = 1,
 *     // Blocking object will block (regular) shortest-paths
 *     BLOCKING_OBJECT_SHORTESTPATH = 2,
 *     // Blocking object will block flee paths
 *     BLOCKING_OBJECT_FLEEPATH = 4,
 *     // Blocking object will block all paths
 *     BLOCKING_OBJECT_ALLPATHS = 7,
 * }
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param width - 
 * @param length - 
 * @param height - 
 * @param heading - 
 * @param bPermanent - 
 * @param flags - 
 * @returns any
 * @remarks Hash: 0xFCD5C8E06E502F5A
 */
export function addNavmeshBlockingObject(x: number, y: number, z: number, width: number, length: number, height: number, heading: number, bPermanent: number, flags: number): any;

/**
 * Get the nth closest vehicle node with its heading and total lane count. If you need specific forward and backward lane counts use [`GET_CLOSEST_ROAD`](#_0x132F52BBA570FE92).
 * @param x - 
 * @param y - 
 * @param z - 
 * @param nthClosest - 
 * @param outPosition - 
 * @param outHeading - 
 * @param totalLanes - 
 * @param nodeFlags - 
 * @param zMeasureMult - 
 * @param zTolerance - 
 * @returns number
 * @remarks Hash: 0x80CA6A8B6C094CC4
 */
export function getNthClosestVehicleNodeWithHeading(x: number, y: number, z: number, nthClosest: number, outPosition: { x: number, y: number, z: number }, outHeading: number, totalLanes: number, nodeFlags: number, zMeasureMult: number, zTolerance: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p3 - 
 * @param outPosition - 
 * @returns number
 * @remarks Hash: 0x16F46FB18C8009E4
 */
export function GetPointOnRoadSide(x: number, y: number, z: number, p3: number, outPosition: { x: number, y: number, z: number }): number;

/**
 * When this is set to false, all nodes in the area get disabled.
 * 
 * `GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns true afterwards.
 * 
 * If it's true,
 * 
 * `GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns false.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param nodeEnabled - 
 * @param unknown2 - 
 * @returns void
 * @remarks Hash: 0xBF1A602B5BA52FEE
 */
export function setRoadsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, nodeEnabled: number, unknown2: number): void;

/**
 * ```
 * Used internally for long range tasks
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param x2 - 
 * @param y2 - 
 * @returns number
 * @remarks Hash: 0x07FB139B592FA687
 */
export function RequestPathsPreferAccurateBoundingstruct(x1: number, y1: number, x2: number, y2: number): number;

/**
 * ## Parameters
 * *
 * @param posMinX - 
 * @param posMinY - 
 * @param posMinZ - 
 * @param posMaxX - 
 * @param posMaxY - 
 * @param posMaxZ - 
 * @returns number
 * @remarks Hash: 0x01708E8DD3FF8C65
 */
export function getNumNavmeshesExistingInArea(posMinX: number, posMinY: number, posMinZ: number, posMaxX: number, posMaxY: number, posMaxZ: number): number;

/**
 * ```
 * Returns false for nodes that aren't used for GPS routes.
 * Example:
 * Nodes in Fort Zancudo and LSIA are false
 * ```
 * @param nodeID - 
 * @returns number
 * @remarks Hash: 0xA2AE5C478B96E3B6
 */
export function getVehicleNodeIsGpsAllowed(nodeID: number): number;

/**
 * ```
 * This native has been removed in v1180.  
 * ```
 * @param keepInMemory - 
 * @returns number
 * @remarks Hash: 0x80E4A6EDDB0BE8D9
 */
export function loadAllPathNodes(keepInMemory: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param outPosition - 
 * @param nodeId - 
 * @returns number
 * @remarks Hash: 0x93E0DB8440B73A7D
 */
export function getRandomVehicleNode(x: number, y: number, z: number, radius: number, p4: number, p5: number, p6: number, outPosition: { x: number, y: number, z: number }, nodeId: number): number;

/**
 * ## Parameters
 * *
 * @param x1 - 
 * @param y1 - 
 * @param x2 - 
 * @param y2 - 
 * @returns number
 * @remarks Hash: 0xF7B79A50B905A30D
 */
export function areNodesLoadedForArea(x1: number, y1: number, x2: number, y2: number): number;

/**
 * ```
 * Gets a value indicating whether the specified position is on a road.  
 * The vehicle parameter is not implemented (ignored).  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x125BF4ABFC536B09
 */
export function isPointOnRoad(x: number, y: number, z: number, vehicle: number): number;

/**
 * ```
 * See: SET_BLIP_ROUTE
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1FC289A0C3FF470F
 */
export function SetIgnoreSecondaryRouteNodes(toggle: number): void;

/**
 * ```c
 * enum eGetClosestNodeFlags {
 *     GCNF_INCLUDE_SWITCHED_OFF_NODES = 1,
 *     GCNF_INCLUDE_BOAT_NODES = 2,
 *     GCNF_IGNORE_SLIPLANES = 4,
 *     GCNF_IGNORE_SWITCHED_OFF_DEADENDS = 8,
 *     GCNF_GET_HEADING = 256,
 *     GCNF_FAVOUR_FACING = 512
 * }
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param outPosition - 
 * @param nodeFlags - 
 * @param zMeasureMult - 
 * @param zTolerance - 
 * @returns number
 * @remarks Hash: 0x240A18690AE96513
 */
export function getClosestVehicleNode(x: number, y: number, z: number, outPosition: { x: number, y: number, z: number }, nodeFlags: number, zMeasureMult: number, zTolerance: number): number;

/**
 * ## Parameters
 * *
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0x0B919E1FB47CC4E0
 */
export function setAmbientPedRangeMultiplierThisFrame(multiplier: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param nthClosest - 
 * @param nodeFlags - 
 * @param zMeasureMult - 
 * @param zTolerance - 
 * @returns number
 * @remarks Hash: 0x22D7275A79FE8215
 */
export function getNthClosestVehicleNodeId(x: number, y: number, z: number, nthClosest: number, nodeFlags: number, zMeasureMult: number, zTolerance: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xBBB45C3CF5C8AA85
 */
export function getGpsBlipRouteLength(): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param nthClosest - 
 * @param outPosition - 
 * @returns number
 * @remarks Hash: 0x6448050E9C2A7207
 */
export function getNthClosestVehicleNodeIdWithHeading(x: number, y: number, z: number, nthClosest: number, outPosition: { x: number, y: number, z: number }): number;

/**
 * ```
 * Returns CGameWorldHeightMap's minimum Z among all grid nodes that intersect with the specified rectangle.
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param x2 - 
 * @param y2 - 
 * @returns number
 * @remarks Hash: 0x3599D741C9AC6310
 */
export function GetHeightmapBottomZForArea(x1: number, y1: number, x2: number, y2: number): number;

/**
 * @returns void
 * @remarks Hash: 0x916F0A3CDEC3445E
 */
export function removeNavmeshRequiredRegions(): void;

/**
 * Native to get a position along current player GPS route using supplied slot.
 * This native was previously named `GET_GPS_WAYPOINT_ROUTE_END`, but its named changed.
 * 
 * ```c
 * enum eGpsSlotType {
 * 	GPS_SLOT_WAYPOINT = 0,
 * 	GPS_SLOT_RADAR_BLIP = 1,
 * 	GPS_SLOT_DISCRETE = 2
 * }
 * ```
 * @param result - 
 * @param bStartAtPlayerPos - 
 * @param fDistanceAlongRoute - 
 * @param slotType - 
 * @returns number
 * @remarks Hash: 0xF3162836C28F9DA5
 */
export function getPosAlongGpsTypeRoute(result: { x: number, y: number, z: number }, bStartAtPlayerPos: number, fDistanceAlongRoute: number, slotType: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x46399A7895957C0E
 */
export function removeNavmeshBlockingObject(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0xAA76052DDA9BFC3E
 */
export function 0xaa76052dda9bfc3e(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;

/**
 * Same as [`GET_CLOSEST_VEHICLE_NODE`](#_0x240A18690AE96513), but with the node flag `GCNF_GET_HEADING` set, causing the native to also return the heading.
 * @param x - 
 * @param y - 
 * @param z - 
 * @param outPosition - 
 * @param outHeading - 
 * @param nodeFlags - 
 * @param zMeasureMult - 
 * @param zTolerance - 
 * @returns number
 * @remarks Hash: 0xFF071FB798B803B0
 */
export function getClosestVehicleNodeWithHeading(x: number, y: number, z: number, outPosition: { x: number, y: number, z: number }, outHeading: number, nodeFlags: number, zMeasureMult: number, zTolerance: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x0EAEB0DB4B132399
 */
export function doesNavmeshBlockingObjectExist(p0: any): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param heading - 
 * @param outPosition - 
 * @returns number
 * @remarks Hash: 0xA0F8A7517A273C05
 */
export function getRoadBoundaryUsingHeading(x: number, y: number, z: number, heading: number, outPosition: { x: number, y: number, z: number }): number;

/**
 * Calculates the travel distance between a set of points.
 * Doesn't seem to correlate with distance on gps sometimes.
 * 
 * This function returns the value 100000.0 over long distances, seems to be a failure mode result, potentially occurring when not all path nodes are loaded into pathfind.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @returns number
 * @remarks Hash: 0xADD95C7005C4A197
 */
export function calculateTravelDistanceBetweenPoints(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;

/**
 * Like [`GET_CLOSEST_VEHICLE_NODE_WITH_HEADING`](#_0xFF071FB798B803B0), but returns the nth closest node instead of the first.
 * @param x - 
 * @param y - 
 * @param z - 
 * @param desiredX - 
 * @param desiredY - 
 * @param desiredZ - 
 * @param nthClosest - 
 * @param outPosition - 
 * @param outHeading - 
 * @param nodeFlags - 
 * @returns number
 * @remarks Hash: 0x45905BE8654AE067
 */
export function getNthClosestVehicleNodeFavourDirection(x: number, y: number, z: number, desiredX: number, desiredY: number, desiredZ: number, nthClosest: number, outPosition: { x: number, y: number, z: number }, outHeading: number, nodeFlags: number): number;

/**
 * ```
 * Returns true if the id is non zero.  
 * ```
 * @param vehicleNodeId - 
 * @returns number
 * @remarks Hash: 0x1EAF30FCFBF5AF74
 */
export function isVehicleNodeIdValid(vehicleNodeId: number): number;

/**
 * ```
 * Returns CGameWorldHeightMap's maximum Z value at specified point (grid node).
 * ```
 * @param x - 
 * @param y - 
 * @returns number
 * @remarks Hash: 0x29C24BFBED8AB8FB
 */
export function GetHeightmapTopZForPosition(x: number, y: number): number;

/**
 * ```
 * NativeDB Added Parameter 7: Any p6
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0xE04B48F2CC926253
 */
export function setPedPathsBackToOriginal(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x72751156E7678833
 */
export function setIgnoreNoGpsFlag(toggle: number): void;

/**
 * Use this if you want to completely disable a large area of navmesh.
 * For smaller areas, use [`ADD_NAVMESH_BLOCKING_OBJECT`](#_0xFCD5C8E06E502F5A) instead.
 * @returns void
 * @remarks Hash: 0x4C8872D8CDBE1B8B
 */
export function disableNavmeshInArea(): void;

/**
 * ```
 * missing a last parameter int p6  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 7: Any p6
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x1EE7063B80FFC77C
 */
export function setRoadsBackToOriginal(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;

/**
 * ## Parameters
 * *
 * @param object - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param scaleX - 
 * @param scaleY - 
 * @param scaleZ - 
 * @param heading - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0x109E99373F290687
 */
export function updateNavmeshBlockingObject(object: number, posX: number, posY: number, posZ: number, scaleX: number, scaleY: number, scaleZ: number, heading: number, flags: number): void;

/**
 * Disables the GPS route displayed on the minimap while within a certain zone (area). When in a disabled zone and creating a waypoint, the GPS route is not shown on the minimap until you are outside of the zone. When disabled, the direct distance is shown on minimap opposed to distance to travel. Seems to only work before setting a waypoint.
 * 
 * You can clear the disabled zone with CLEAR_GPS_DISABLED_ZONE_AT_INDEX.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param index - 
 * @returns void
 * @remarks Hash: 0xD0BC1C6FB18EE154
 */
export function setGpsDisabledZoneAtIndex(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, index: number): void;

/**
 * Activates Cayo Perico path nodes if passed `1`. GPS navigation will start working, maybe more stuff will change, not sure. It seems if you try to unload (pass `0`) when close to the island, your game might crash.
 * 
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param type - 
 * @returns void
 * @remarks Hash: 0xF74B1FFA4A15FBEA
 */
export function SetAiGlobalPathNodesType(type: number): void;

/**
 * Finds an edge (node connection to another node) that satisfies the specified criteria.
 * @param x - 
 * @param y - 
 * @param z - 
 * @param minimumEdgeLength - 
 * @param minimumLaneCount - 
 * @param srcNode - 
 * @param targetNode - 
 * @param laneCountForward - 
 * @param laneCountBackward - 
 * @param width - 
 * @param onlyMajorRoads - 
 * @returns boolean
 * @remarks Hash: 0x132F52BBA570FE92
 */
export function getClosestRoad(x: number, y: number, z: number, minimumEdgeLength: number, minimumLaneCount: number, srcNode: { x: number, y: number, z: number }, targetNode: { x: number, y: number, z: number }, laneCountForward: number, laneCountBackward: number, width: number, onlyMajorRoads: number): boolean;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x869DAACBBE9FA006
 */
export function getGpsBlipRouteFound(): number;

/**
 * Gets the next zone that has been disabled using SET_GPS_DISABLED_ZONE_AT_INDEX.
 * 
 * ```
 * NativeDB Removed Parameter 1: int index
 * ```
 * @param index - 
 * @returns number
 * @remarks Hash: 0xD3A6A0EF48823A8C
 */
export function getNextGpsDisabledZoneIndex(index: number): number;

/**
 * Same as [`GET_CLOSEST_VEHICLE_NODE`](#_0x240A18690AE96513), but returns the nth closest node instead of the first.
 * @param x - 
 * @param y - 
 * @param z - 
 * @param nthClosest - 
 * @param outPosition - 
 * @param nodeFlags - 
 * @returns number
 * @remarks Hash: 0xE50E52416CCF948B
 */
export function getNthClosestVehicleNode(x: number, y: number, z: number, nthClosest: number, outPosition: { x: number, y: number, z: number }, nodeFlags: number): number;

/**
 * Gets the density and flags of the closest node to the specified position.  
 * Density is a value between 0 and 15, indicating how busy the road is.  
 * 
 * ```c
 * enum eVehicleNodeProperties {
 * 	OFF_ROAD = 1 << 0,
 * 	ON_PLAYERS_ROAD =  1 << 1,
 * 	NO_BIG_VEHICLES = 1 << 2,
 * 	SWITCHED_OFF = 1 << 3,
 * 	TUNNEL_OR_INTERIOR = 1 << 4,
 * 	LEADS_TO_DEAD_END = 1 << 5,
 * 	HIGHWAY = 1 << 6,
 * 	JUNCTION = 1 << 7,
 * 	TRAFFIC_LIGHT = 1 << 8,
 * 	GIVE_WAY = 1 << 9,
 * 	WATER = 1 << 10,
 * }
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param density - 
 * @param flags - 
 * @returns number
 * @remarks Hash: 0x0568566ACBB5DEDC
 */
export function getVehicleNodeProperties(x: number, y: number, z: number, density: number, flags: number): number;

/**
 * Same as [`GET_CLOSEST_VEHICLE_NODE`](#_0x240A18690AE96513), but with the node flag `GCNF_INCLUDE_SWITCHED_OFF_NODES` set.
 * @param x - 
 * @param y - 
 * @param z - 
 * @param outPosition - 
 * @param zMeasureMult - 
 * @param zTolerance - 
 * @returns number
 * @remarks Hash: 0x2EABE3B06F58C1BE
 */
export function getClosestMajorVehicleNode(x: number, y: number, z: number, outPosition: { x: number, y: number, z: number }, zMeasureMult: number, zTolerance: number): number;

/**
 * ```
 * Returns true when the node is Offroad. Alleys, some dirt roads, and carparks return true.
 * Normal roads where plenty of Peds spawn will return false
 * ```
 * @param nodeID - 
 * @returns number
 * @remarks Hash: 0x4F5070AA58F69279
 */
export function getVehicleNodeIsSwitchedOff(nodeID: number): number;

/**
 * ```
 * Determines the name of the street which is the closest to the given coordinates.
 * x,y,z - the coordinates of the street
 * streetName - returns a hash to the name of the street the coords are on
 * crossingRoad - if the coordinates are on an intersection, a hash to the name of the crossing road
 * Note: the names are returned as hashes, the strings can be returned using the function HUD::GET_STREET_NAME_FROM_HASH_KEY.
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param streetName - 
 * @param crossingRoad - 
 * @returns void
 * @remarks Hash: 0x2EB41072B4C1E4C0
 */
export function getStreetNameAtCoord(x: number, y: number, z: number, streetName: number, crossingRoad: number): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xDC20483CD3DD5201
 */
export function setGpsDisabledZone(): void;

/**
 * See [`IS_POINT_IN_ANGLED_AREA`](#_0x2A70BAE8883E4C81) for the definition of an angled area.
 * 
 * ```
 * NativeDB Added Parameter 8: Any p7
 * 
 * bool p7 - always 1  
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param width - 
 * @returns void
 * @remarks Hash: 0x0027501B9F3B407E
 */
export function setRoadsBackToOriginalInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): void;

/**
 * ```
 * NativeDB Added Parameter 8: Any p7
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param unknown - 
 * @returns void
 * @remarks Hash: 0x34F060F4BF92E018
 */
export function setPedPathsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, unknown: number): void;

/**
 * ```
 * Toggles a global boolean, name is probably a hash collision but describes its functionality.
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x228E5C6AD4D74BFD
 */
export function SetAllPathsCacheBoundingstruct(toggle: number): void;

/**
 * ```
 * IS_*
 * ```
 * @returns number
 * @remarks Hash: 0x705A844002B39DC0
 */
export function IsNavmeshRequiredRegionOwnedByAnyThread(): number;

/**
 * ```
 * p3 is 0 in the only game script occurrence (trevor3) but 1 doesn't seem to make a difference
 * distToNxJunction seems to be the distance in metres * 10.0f
 * direction:
 * 0 = This happens randomly during the drive for seemingly no reason but if you consider that this native is only used in trevor3, it seems to mean "Next frame, stop whatever's being said and tell the player the direction."
 * 1 = Route is being calculated or the player is going in the wrong direction
 * 2 = Please Proceed the Highlighted Route
 * 3 = In (distToNxJunction) Turn Left
 * 4 = In (distToNxJunction) Turn Right
 * 5 = In (distToNxJunction) Keep Straight
 * 6 = In (distToNxJunction) Turn Sharply To The Left
 * 7 = In (distToNxJunction) Turn Sharply To The Right
 * 8 = Route is being recalculated or the navmesh is confusing. This happens randomly during the drive but consistently at {2044.0358, 2996.6116, 44.9717} if you face towards the bar and the route needs you to turn right. In that particular case, it could be a bug with how the turn appears to be 270 deg. CCW instead of "right." Either way, this seems to be the engine saying "I don't know the route right now."
 * return value set to 0 always
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p3 - 
 * @param direction - 
 * @param vehicle - 
 * @param distToNxJunction - 
 * @returns number
 * @remarks Hash: 0xF90125F1F79ECDF8
 */
export function generateDirectionsToCoord(x: number, y: number, z: number, p3: number, direction: number, vehicle: number, distToNxJunction: number): number;

/**
 * ```
 * Calling this with an invalid node id, will crash the game.
 * Note that IS_VEHICLE_NODE_ID_VALID simply checks if nodeId is not zero. It does not actually ensure that the id is valid.
 * Eg. IS_VEHICLE_NODE_ID_VALID(1) will return true, but will crash when calling GET_VEHICLE_NODE_POSITION().
 * ```
 * @param nodeId - 
 * @param outPosition - 
 * @returns void
 * @remarks Hash: 0x703123E5E7D429C2
 */
export function getVehicleNodePosition(nodeId: number, outPosition: { x: number, y: number, z: number }): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x8415D95B194A3AEA
 */
export function areAllNavmeshRegionsLoaded(): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0x387EAD7EE42F6685
 */
export function addNavmeshRequiredRegion(x: number, y: number, radius: number): void;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param entity - 
 * @param syncedScene - 
 * @param animName - 
 * @param animDictName - 
 * @param fBlendInDelta - 
 * @param fBlendOutDelta - 
 * @param iFlags - 
 * @param fMoverBlendInDelta - 
 * @returns number
 * @remarks Hash: 0xC77720A12FE14A86
 */
export function playSynchronizedEntityAnim(entity: number, syncedScene: number, animName: string, animDictName: string, fBlendInDelta: number, fBlendOutDelta: number, iFlags: number, fMoverBlendInDelta: number): number;

/**
 * Checks if entity1 has a clear line of sight to entity2. So a simple raycast which if it collides with any of the given colliderTypes returns false.
 * 
 * The direction of the check matters with for example bushes, so checking from inside to outside a bush with traceType 256 returns true, but the other way around returns false.
 * @param entity1 - 
 * @param entity2 - 
 * @param flags - 
 * @returns number
 * @remarks Hash: 0xFCDFF7B72D23A1AC
 */
export function hasEntityClearLosToEntity(entity1: number, entity2: number, flags: number): number;

/**
 * ```
 * All ambient entities in-world seem to have the same value for the second argument (Any *script), depending on when the scripthook was activated/re-activated. I've seen numbers from ~5 to almost 70 when the value was translated with to_string. The function return value seems to always be 0.  
 * ```
 * @param entity - 
 * @param script - 
 * @returns string
 * @remarks Hash: 0xA6E9C38DB51D7748
 */
export function getEntityScript(entity: number, script: any): string;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xB1632E9A5F988D11
 */
export function isEntityAttachedToAnyPed(entity: number): number;

/**
 * ```
 * SET_*
 * Only called within 1 script for x360. 'fm_mission_controller' and it used on an object.
 * Ran after these 2 natives,
 * set_object_targettable(uParam0, 0);
 * set_entity_invincible(uParam0, 1);
 * ```
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDC6F8601FAF2E893
 */
export function setWaitForCollisionsBeforeProbe(entity: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xEA02E132F5C68722
 */
export function setEntityIsTargetPriority(entity: number, p1: number, p2: number): void;

/**
 * Gets the local rotation of the specified bone of the specified entity.
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param entity - 
 * @param boneIndex - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xBD8D32550E5CEBFE
 */
export function GetEntityBoneRotationLocal(entity: number, boneIndex: number): { x: number, y: number, z: number };

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x68B562E124CC0AEF
 */
export function 0x68b562e124cc0aef(p0: any, p1: any): void;

/**
 * ```
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xD7E3B9735C0F89D6
 */
export function getObjectIndexFromEntityIndex(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x7CFBA6A80BDF3874
 */
export function setEntityLights(entity: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x4805D2B1D8CF94A9
 */
export function getEntityVelocity(entity: number): { x: number, y: number, z: number };

/**
 * ```
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.  
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x2595DD4236549CE3
 */
export function setPedAsNoLongerNeeded(ped: number): void;

/**
 * p10 is some entity flag check, also used in [`IS_ENTITY_AT_ENTITY`](#_0x751B70C3D034E187), [`IS_ENTITY_IN_AREA`](#_0x54736AA40E271165) and [`IS_ENTITY_AT_COORD`](#_0x20B60995556D004F).
 * 
 * See [`IS_POINT_IN_ANGLED_AREA`](#_0x2A70BAE8883E4C81) for the definition of an angled area.
 * @param entity - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param width - 
 * @param debug - 
 * @param includez - 
 * @param p10 - 
 * @returns number
 * @remarks Hash: 0x51210CED3DA1C78A
 */
export function isEntityInAngledArea(entity: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, debug: number, includez: number, p10: any): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param xPos - 
 * @param yPos - 
 * @param zPos - 
 * @param alive - 
 * @param deadFlag - 
 * @param ragdollFlag - 
 * @param clearArea - 
 * @returns void
 * @remarks Hash: 0x621873ECE1178967
 */
export function setEntityCoordsWithoutPlantsReset(entity: number, xPos: number, yPos: number, zPos: number, alive: number, deadFlag: number, ragdollFlag: number, clearArea: number): void;

/**
 * Sets the rotation of a specified entity in the game world.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param entity - 
 * @param pitch - 
 * @param roll - 
 * @param yaw - 
 * @param rotationOrder - 
 * @param bDeadCheck - 
 * @returns void
 * @remarks Hash: 0x8524A8B0171D5E07
 */
export function setEntityRotation(entity: number, pitch: number, roll: number, yaw: number, rotationOrder: number, bDeadCheck: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xB328DCC3A3AA401B
 */
export function GetEntityBoneCount(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param targetEntity - 
 * @returns number
 * @remarks Hash: 0x17FFC1B2BA35A494
 */
export function isEntityTouchingEntity(entity: number, targetEntity: number): number;

/**
 * ```
 * P3 is always 3 as far as i cant tell  
 * ```
 * 
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param entity - 
 * @param animDict - 
 * @param animName - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x20B711662962B472
 */
export function hasEntityAnimFinished(entity: number, animDict: string, animName: string, p3: number): number;

/**
 * Checks if entity is within the specified axis aligned box around the target entity.
 * 
 * ```c
 * enum eTransportMode {
 *     SCRIPT_TM_ANY = 0,
 *     SCRIPT_TM_ON_FOOT = 1,
 *     SCRIPT_TM_IN_VEHICLE = 2
 * };
 * ```
 * @param entity - 
 * @param target - 
 * @param xSize - 
 * @param ySize - 
 * @param zSize - 
 * @param highlightArea - 
 * @param do3dCheck - 
 * @param transportMode - 
 * @returns number
 * @remarks Hash: 0x751B70C3D034E187
 */
export function isEntityAtEntity(entity: number, target: number, xSize: number, ySize: number, zSize: number, highlightArea: number, do3dCheck: number, transportMode: number): number;

/**
 * ```
 * Get how much of the entity is submerged.  1.0f is whole entity.  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xE81AFC1BC4CC41CE
 */
export function getEntitySubmergedLevel(entity: number): number;

/**
 * ```
 * SET_ENTITY_*
 * ```
 * @param entity - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2C2E3DC128F44309
 */
export function SetEntityDecalsDisabled(entity: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x5A47B3B5E63E94C6
 */
export function getEntityAlpha(entity: number): number;

/**
 * ```
 * Return height (z-dimension) above ground.   
 * Example: The pilot in a titan plane is 1.844176 above ground.  
 * How can i convert it to meters?  
 * Everything seems to be in meters, probably this too.  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x1DD55701034110E5
 */
export function getEntityHeightAboveGround(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xDFD5033FDBA0A9C8
 */
export function hasEntityBeenDamagedByAnyVehicle(entity: number): number;

/**
 * ```
 * Returns the LOD distance of an entity.  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x4159C2762B5791D6
 */
export function getEntityLodDist(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xE9676F61BC0B3321
 */
export function hasCollisionLoadedAroundEntity(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity1 - 
 * @param entity2 - 
 * @param entityBone - 
 * @param entityBone2 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0xFD1695C5D3B05439
 */
export function AttachEntityBoneToEntityBonePhysically(entity1: number, entity2: number, entityBone: number, entityBone2: number, p4: number, p5: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x47D6F43D77935C75
 */
export function isEntityVisible(entity: number): number;

/**
 * Delete the specified entity, and invalidate the passed handle (i.e., the in/out argument).
 * You might want to check if the entity exists before with [DOES_ENTITY_EXIST](#_0x7239B21A38F536BA).
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xAE3CBE5BF394C9C9
 */
export function deleteEntity(entity: number): void;

/**
 * ```
 * Based on carmod_shop script decompile this takes a vehicle parameter. It is called when repair is done on initial enter.  
 * ```
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x40FDEDB72F8293B2
 */
export function forceEntityAiAndAnimationUpdate(entity: number): void;

/**
 * ```
 * Enable / disable each type of damage.
 * @param entity - 
 * @param bulletProof - 
 * @param fireProof - 
 * @param explosionProof - 
 * @param collisionProof - 
 * @param meleeProof - 
 * @param steamProof - 
 * @param p7 - 
 * @param drownProof - 
 * @returns void
 * @remarks Hash: 0xFAEE099C6F890BB8
 */
export function setEntityProofs(entity: number, bulletProof: number, fireProof: number, explosionProof: number, collisionProof: number, meleeProof: number, steamProof: number, p7: number, drownProof: number): void;

/**
 * SET_ENTITY_M*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param entity - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE66377CDDADA4810
 */
export function 0xe66377cddada4810(entity: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x730F5F8D3F0F2050
 */
export function setEntityRenderScorched(entity: number, toggle: number): void;

/**
 * Returns the model hash from an entity.
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x9F47B058362C84B5
 */
export function getEntityModel(entity: number): number;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param entity - 
 * @param bulletProof - 
 * @param fireProof - 
 * @param explosionProof - 
 * @param collisionProof - 
 * @param meleeProof - 
 * @param steamProof - 
 * @param p7 - 
 * @param drownProof - 
 * @returns number
 * @remarks Hash: 0xBE8CD9BE829BBEBF
 */
export function GetEntityProofs(entity: number, bulletProof: number, fireProof: number, explosionProof: number, collisionProof: number, meleeProof: number, steamProof: number, p7: number, drownProof: number): number;

/**
 * ```
 * Gets the world rotation of the specified bone of the specified entity.
 * This native is used in casinoroulette.c but I don't know yet what is the difference with _GET_ENTITY_BONE_ROTATION
 * ```
 * @param entity - 
 * @param boneIndex - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x46F8696933A63C9B
 */
export function GetEntityBonePosition2(entity: number, boneIndex: number): { x: number, y: number, z: number };

/**
 * ```
 * Marks the specified entity (ped, vehicle or object) as no longer needed.  
 * Entities marked as no longer needed, will be deleted as the engine sees fit.  
 * ```
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xB736A491E64A32CF
 */
export function setEntityAsNoLongerNeeded(entity: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xCCF1E97BEFDAE480
 */
export function getEntityCollisionDisabled(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x295D82A8559F9150
 */
export function setEntityMotionBlur(entity: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @returns number
 * @remarks Hash: 0x54736AA40E271165
 */
export function isEntityInArea(entity: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p7: number, p8: number, p9: any): number;

/**
 * **NOTE**: What you use for rotationOrder when getting must be the same as rotationOrder when setting the rotation.
 * 
 * 
 * ```c
 * enum eRotationOrder {
 *     // Rotate around the z-axis, then the y-axis and finally the x-axis.
 *     ROT_ZYX = 0,
 *     // Rotate around the y-axis, then the z-axis and finally the x-axis.
 *     ROT_YZX = 1,
 *     // Rotate around the z-axis, then the x-axis and finally the y-axis.
 *     ROT_ZXY = 2,
 *     // Rotate around the x-axis, then the z-axis and finally the y-axis.
 *     ROT_XZY = 3,
 *     // Rotate around the y-axis, then the x-axis and finally the z-axis.
 *     ROT_YXZ = 4,
 *     // Rotate around the x-axis, then the y-axis and finally the z-axis.
 *     ROT_XYZ = 5,
 * }
 * ```
 * @param entity - 
 * @param rotationOrder - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xAFBD61CC738D9EB9
 */
export function getEntityRotation(entity: number, rotationOrder: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x79F020FF9EDC0748
 */
export function setEntityOnlyDamagedByPlayer(entity: number, toggle: number): void;

/**
 * Teleports an entity to specified coordinates directly, with options to maintain certain behaviors post-teleportation.
 * @param entity - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param keepTasks - 
 * @param keepIK - 
 * @param doWarp - 
 * @returns void
 * @remarks Hash: 0x239A3351AC1DA385
 */
export function setEntityCoordsNoOffset(entity: number, x: number, y: number, z: number, keepTasks: number, keepIK: number, doWarp: number): void;

/**
 * ```
 * Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
 * ```
 * @param entity - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x1C99BB7B6E96D16F
 */
export function setEntityVelocity(entity: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x694E00132F2823ED
 */
export function setEntityRequiresMoreExpensiveRiverCheck(entity: number, toggle: number): void;

/**
 * ```
 * Does nothing (essentially a nullsub).
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x490861B88F4FD846
 */
export function 0x490861b88f4fd846(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x352E2B5CF420BF3B
 */
export function 0x352e2b5cf420bf3b(p0: any, p1: any): void;

/**
 * Assigns an existing entity to be owned by the current script. If the entity was not owned by a script yet, this also means the entity will remain persistent until released.
 * 
 * Note that this is not needed right after creating an entity as a script-created entity will automatically be assigned.
 * @param entity - 
 * @param scriptHostObject - 
 * @param bGrabFromOtherScript - 
 * @returns void
 * @remarks Hash: 0xAD738C3085FE7E11
 */
export function setEntityAsMissionEntity(entity: number, scriptHostObject: number, bGrabFromOtherScript: number): void;

/**
 * ```
 * GET_ENTITY_*
 * 
 * Seems to return the handle of the entity's portable pickup.
 * 
 * NativeDB Introduced: v1180
 * ```
 * @param entity - 
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x1F922734E259BD26
 */
export function GetEntityPickup(entity: number, modelHash: number): number;

/**
 * ```
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.  
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x629BFA74418D6239
 */
export function setVehicleAsNoLongerNeeded(vehicle: number): void;

/**
 * ```
 * Returns a float value representing animation's total playtime in milliseconds.  
 * Example:  
 * GET_ENTITY_ANIM_TOTAL_TIME(PLAYER_ID(),"amb@world_human_yoga@female@base","base_b")   
 * return 20800.000000  
 * ```
 * 
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param entity - 
 * @param animDict - 
 * @param animName - 
 * @returns number
 * @remarks Hash: 0x50BD2730B191E360
 */
export function getEntityAnimTotalTime(entity: number, animDict: string, animName: string): number;

/**
 * Checks if the entity is within the given square of size xSize, ySize, zSize centered around the given coordinates.
 * 
 * The sizes given are the apothem (half of side) of the square, so a size of 5 would result in a square of 10x10, not 5x5.
 * 
 * 
 * For the highlightArea, if do3dCheck is true, the marker will be drawn at the bottom of the target area. So if the square is centered on the ground with a zSize larger than 0, the marker will appear under the ground.
 * The marker also doesn't scale, so it is always the same size (around half a meter).
 * So unfortunately the marker isn't that useful as it doesn't convey the correct information about the area (the marker doesn't reflect when the player is actually in the marker or not)
 * @param entity - 
 * @param xPos - 
 * @param yPos - 
 * @param zPos - 
 * @param xSize - 
 * @param ySize - 
 * @param zSize - 
 * @param highlightArea - 
 * @param do3dCheck - 
 * @param transportMode - 
 * @returns number
 * @remarks Hash: 0x20B60995556D004F
 */
export function isEntityAtCoord(entity: number, xPos: number, yPos: number, zPos: number, xSize: number, ySize: number, zSize: number, highlightArea: number, do3dCheck: number, transportMode: number): number;

/**
 * ```
 * In the script "player_scene_t_bbfight.c4":  
 * "if (ENTITY::FIND_ANIM_EVENT_PHASE(&l_16E, &l_19F[v_4/*16*/], v_9, &v_A, &v_B))"  
 * -- &l_16E (p0) is requested as an anim dictionary earlier in the script.  
 * -- &l_19F[v_4/*16*/] (p1) is used in other natives in the script as the "animation" param.  
 * -- v_9 (p2) is instantiated as "victim_fall"; I'm guessing that's another anim  
 * --v_A and v_B (p3 & p4) are both set as -1.0, but v_A is used immediately after this native for:   
 * "if (v_A < ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(...))"  
 * Both v_A and v_B are seemingly used to contain both Vector3's and floats, so I can't say what either really is other than that they are both output parameters. p4 looks more like a *Vector3 though  
 * -alphazolam  
 * ```
 * 
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param animDictionary - 
 * @param animName - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0x07F1BE2BCCAA27A7
 */
export function findAnimEventPhase(animDictionary: string, animName: string, p2: string, p3: any, p4: any): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xCF511840CEEDE0CC
 */
export function isEntityAttachedToAnyObject(entity: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xB17BC6453F6CF5AC
 */
export function 0xb17bc6453f6cf5ac(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1718DE8E3F2823CA
 */
export function setEntityDynamic(entity: number, toggle: number): void;

/**
 * Set the heading of an entity in degrees also known as "Yaw".
 * @param entity - 
 * @param heading - 
 * @returns void
 * @remarks Hash: 0x8E2530AA8ADA980E
 */
export function setEntityHeading(entity: number, heading: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x5C3D0A935F535C4C
 */
export function getLastMaterialHitByEntity(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @param keepPhysics - 
 * @returns void
 * @remarks Hash: 0x9EBC85ED0FFFE51C
 */
export function setEntityCompletelyDisableCollision(entity: number, toggle: number, keepPhysics: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xCFB0A0D8EDD145A3
 */
export function isEntityInWater(entity: number): number;

/**
 * ```
 * Converts world coords (posX - Z) to coords relative to the entity  
 * Example:  
 * posX = 50  
 * posY = 1000  
 * posZ = 60  
 * Entity's coords are: x=30, y=1000, z=60.  
 * All three returned coords will then be in range of [-20,20] depending on rotation of the entity.  
 * ```
 * @param entity - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x2274BC1C4885E333
 */
export function getOffsetFromEntityGivenWorldCoords(entity: number, posX: number, posY: number, posZ: number): { x: number, y: number, z: number };

/**
 * ```c
 * enum eApplyForceTypes {
 *     APPLY_TYPE_FORCE = 0,
 *     APPLY_TYPE_IMPULSE = 1,
 *     APPLY_TYPE_EXTERNAL_FORCE = 2,
 *     APPLY_TYPE_EXTERNAL_IMPULSE = 3,
 *     APPLY_TYPE_TORQUE = 4,
 *     APPLY_TYPE_ANGULAR_IMPULSE = 5
 * }
 * ```
 * @param entity - 
 * @param forceType - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param offX - 
 * @param offY - 
 * @param offZ - 
 * @param nComponent - 
 * @param bLocalForce - 
 * @param bLocalOffset - 
 * @param bScaleByMass - 
 * @param bPlayAudio - 
 * @param bScaleByTimeWarp - 
 * @returns void
 * @remarks Hash: 0xC5F68BE9613E2D18
 */
export function applyForceToEntity(entity: number, forceType: number, x: number, y: number, z: number, offX: number, offY: number, offZ: number, nComponent: number, bLocalForce: number, bLocalOffset: number, bScaleByMass: number, bPlayAudio: number, bScaleByTimeWarp: number): void;

/**
 * ```
 * Returns the coordinates of an entity-bone.  
 * ```
 * @param entity - 
 * @param boneIndex - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x44A8FCB8ED227738
 */
export function getWorldPositionOfEntityBone(entity: number, boneIndex: number): { x: number, y: number, z: number };

/**
 * ```
 * Gets the world rotation of the specified bone of the specified entity.
 * ```
 * @param entity - 
 * @param boneIndex - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xCE6294A232D03786
 */
export function GetEntityBoneRotation(entity: number, boneIndex: number): { x: number, y: number, z: number };

/**
 * ```
 * if (ENTITY::HAS_ANIM_EVENT_FIRED(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("CreateObject")))
 * ```
 * @param entity - 
 * @param actionHash - 
 * @returns number
 * @remarks Hash: 0xEAF4CD9EA3E7E922
 */
export function hasAnimEventFired(entity: number, actionHash: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xE465D4AB7CA6AE72
 */
export function getCollisionNormalOfLastHitForEntity(entity: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xD796CB5BA8F20E32
 */
export function isEntityVisibleToScript(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param team - 
 * @returns number
 * @remarks Hash: 0x4DC9A62F844D9337
 */
export function getNearestPlayerToEntityOnTeam(entity: number, team: number): number;

/**
 * Checks whether an entity exists in the game world.
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x7239B21A38F536BA
 */
export function doesEntityExist(entity: number): number;

/**
 * ```
 * Sets whether the entity can be targeted without being in line-of-sight.  
 * ```
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD3997889736FD899
 */
export function setEntityCanBeTargetedWithoutLos(entity: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xD95CC5D2AB15A09F
 */
export function getEntityCanBeDamaged(entity: number): number;

/**
 * ```
 * RAGEPluginHook list: docs.ragepluginhook.net/html/62951c37-a440-478c-b389-c471230ddfc5.htm
 * ```
 * @param entity - 
 * @param animation - 
 * @param animGroup - 
 * @param p3 - 
 * @returns any
 * @remarks Hash: 0x28004F88151E03E0
 */
export function stopEntityAnim(entity: number, animation: string, animGroup: string, p3: number): any;

/**
 * ```
 * Gets the X-component of the entity's forward vector.  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x8BB4EF4214E0E6D5
 */
export function getEntityForwardX(entity: number): number;

/**
 * ```
 * Called to update entity attachments.
 * ```
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xF4080490ADC51C6F
 */
export function processEntityAttachments(entity: number): void;

/**
 * ```
 * Called on tick.  
 * Tested with vehicles, returns true whenever the vehicle is touching any entity.  
 * Note: for vehicles, the wheels can touch the ground and it will still return false, but if the body of the vehicle touches the ground, it will return true.  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x8BAD02F0368D9E14
 */
export function hasEntityCollidedWithAnything(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x95EED5A694951F9F
 */
export function getEntityUprightValue(entity: number): number;

/**
 * ```
 * Only works with objects!  
 * Network players do not see changes done with this.  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param originalModel - 
 * @param newModel - 
 * @param bSurviveMapReload - 
 * @returns void
 * @remarks Hash: 0x92C47782FDA8B2A3
 */
export function createModelSwap(x: number, y: number, z: number, radius: number, originalModel: number, newModel: number, bSurviveMapReload: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xA80AE305E0A3044F
 */
export function setCanClimbOnEntity(entity: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x6AC7003FA6E5575E
 */
export function isEntityAVehicle(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @param keepPhysics - 
 * @returns void
 * @remarks Hash: 0x1A9205C1B9EE827F
 */
export function setEntityCollision(entity: number, toggle: number, keepPhysics: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xD45DC2893621E1FE
 */
export function getEntityPitch(entity: number): number;

/**
 * ```
 * Gets the Y-component of the entity's forward vector.  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x866A4A5FAE349510
 */
export function getEntityForwardY(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param p1 - 
 * @param relationshipHash - 
 * @returns void
 * @remarks Hash: 0x7022BD828FA0B082
 */
export function setEntityOnlyDamagedByRelationshipGroup(entity: number, p1: number, relationshipHash: number): void;

/**
 * ```
 * Returns:
 * 0 = no entity
 * 1 = ped
 * 2 = vehicle
 * 3 = object
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x8ACD366038D14505
 */
export function getEntityType(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x213B91045D09B983
 */
export function getEntityRotationVelocity(entity: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns number
 * @remarks Hash: 0x11E79CAB7183B6F5
 */
export function stopSynchronizedMapEntityAnim(p0: number, p1: number, p2: number, p3: number, p4: any, p5: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param oldModelHash - 
 * @param newModelHash - 
 * @param bLazy - 
 * @returns void
 * @remarks Hash: 0x033C0F9A64E229AE
 */
export function removeModelSwap(x: number, y: number, z: number, radius: number, oldModelHash: number, newModelHash: number, bLazy: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x1DBD58820FA61D71
 */
export function isEntityUpsidedown(entity: number): number;

/**
 * Attach an entity to the specified entity.
 * @param entity1 - 
 * @param entity2 - 
 * @param boneIndex - 
 * @param xPos - 
 * @param yPos - 
 * @param zPos - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param p9 - 
 * @param useSoftPinning - 
 * @param collision - 
 * @param isPed - 
 * @param rotationOrder - 
 * @param syncRot - 
 * @returns void
 * @remarks Hash: 0x6B9BBD38AB0796DF
 */
export function attachEntityToEntity(entity1: number, entity2: number, boneIndex: number, xPos: number, yPos: number, zPos: number, xRot: number, yRot: number, zRot: number, p9: number, useSoftPinning: number, collision: number, isPed: number, rotationOrder: number, syncRot: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param bCanBeDamaged - 
 * @param relGroup - 
 * @returns void
 * @remarks Hash: 0xE22D8FDE858B8119
 */
export function setEntityCanBeDamagedByRelationshipGroup(entity: number, bCanBeDamaged: number, relGroup: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x8D68C8FD0FACA94E
 */
export function isEntityAnObject(entity: number): number;

/**
 * ## Parameters
 * *
 * @param from - 
 * @param to - 
 * @returns number
 * @remarks Hash: 0xEFBE71898A993728
 */
export function isEntityAttachedToEntity(from: number, to: number): number;

/**
 * ```
 * Gets the entity's forward vector.
 * ```
 * @param entity - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x0A794A5A57F8DF91
 */
export function getEntityForwardVector(entity: number): { x: number, y: number, z: number };

/**
 * This native sets the entity's alpha level.
 * @param entity - 
 * @param alphaLevel - 
 * @returns void
 * @remarks Hash: 0x44A0870B7E92D7C0
 */
export function setEntityAlpha(entity: number, alphaLevel: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param zone - 
 * @returns number
 * @remarks Hash: 0xB6463CF6AF527071
 */
export function isEntityInZone(entity: number, zone: string): number;

/**
 * ## Parameters
 * *
 * @param entity1 - 
 * @param entity2 - 
 * @param entityBone - 
 * @param entityBone2 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x5C48B75732C8456C
 */
export function AttachEntityBoneToEntityBone(entity1: number, entity2: number, entityBone: number, entityBone2: number, p4: number, p5: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param animDictionary - 
 * @param animName - 
 * @param speedMultiplier - 
 * @returns void
 * @remarks Hash: 0x28D1A16553C51776
 */
export function setEntityAnimSpeed(entity: number, animDictionary: string, animName: string, speedMultiplier: number): void;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x764EB96874EFFDC1
 */
export function DoesEntityHaveSkeletonData(entity: number): number;

/**
 * ```
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x4B53F92932ADFAC0
 */
export function getVehicleIndexFromEntityIndex(entity: number): number;

/**
 * Freezes or unfreezes an entity preventing its coordinates to change by the player if set to `true`. You can still change the entity position using [`SET_ENTITY_COORDS`](#_0x06843DA7060A026B).
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x428CA6DBD1094446
 */
export function freezeEntityPosition(entity: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x95EB9964FF5C5C65
 */
export function hasEntityBeenDamagedByAnyObject(entity: number): number;

/**
 * ```
 * Related to cutscene entities. Unsure about the use.
 * SET_ENTITY_*
 * ```
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x78E8E3A640178255
 */
export function 0x78e8e3a640178255(entity: number): void;

/**
 * ## Parameters
 * *
 * @param entityModelHash - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0xEE5D2A122E09EC42
 */
export function wouldEntityBeOccluded(entityModelHash: number, x: number, y: number, z: number, p4: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xCEA7C8E1B48FF68C
 */
export function 0xcea7c8e1b48ff68c(p0: any, p1: any): void;

/**
 * p5 requires more research. See also [`CREATE_MODEL_HIDE`](#_0x8A97BCA30A0CE478) and [`CREATE_MODEL_SWAP`](#_0x92C47782FDA8B2A3).
 * 
 * Network players do not see changes done with this.
 * @returns void
 * @remarks Hash: 0xD9E3006FB3CBD765
 */
export function removeModelHide(): void;

/**
 * ```
 * Return an integer value of entity's maximum health.  
 * Example:  
 * - Player = 200  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x15D757606D170C3C
 */
export function getEntityMaxHealth(entity: number): number;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns number
 * @remarks Hash: 0xB9C54555ED30FBC4
 */
export function playSynchronizedMapEntityAnim(x: number, y: number, z: number, radius: number): number;

/**
 * ```
 * True means it can be deleted by the engine when switching lobbies/missions/etc, false means the script is expected to clean it up.
 * ```
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x3910051CCECDB00C
 */
export function SetEntityCleanupByEngine(entity: number, toggle: number): void;

/**
 * Gets the heading of the entity physics in degrees, which tends to be more accurate than just [`GET_ENTITY_HEADING`](#_0xE83D4F9BA2A38914). This can be clearly seen while, for example, ragdolling a ped/player.
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x846BF6291198A71E
 */
export function getEntityHeadingFromEulers(entity: number): number;

/**
 * ```
 * LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).  
 * ```
 * @param entity - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x5927F96A78577363
 */
export function setEntityLodDist(entity: number, value: number): void;

/**
 * Loads collision grid for an entity spawned outside of a player's loaded area. This allows peds to execute tasks rather than sit dormant because of a lack of a physics grid.
 * 
 * Certainly not the main usage of this native but when set to true for a Vehicle, it will prevent the vehicle to explode if it is spawned far away from the player.  
 * 
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x0DC7CABAB1E9B67E
 */
export function setEntityLoadCollisionFlag(entity: number, toggle: number): void;

/**
 * ```
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x04A2A40C73395041
 */
export function getPedIndexFromEntityIndex(entity: number): number;

/**
 * When setting health for a player ped, the game will clamp the health value to ensure it does not exceed the maximum health. This maximum health can be retrieved by calling [`GET_PED_MAX_HEALTH`](#_0x4700A416E8324EF3). It can also be modified by calling [`SET_PED_MAX_HEALTH`](#_0xF5F6378C4F3419D3).
 * 
 * When setting the health for non-player peds or entities, the maximum health will be increased if the new health value exceeds the current maximum.
 * 
 * Default health for male peds is `200`, for female peds it is `175`.
 * @param entity - 
 * @param health - 
 * @returns void
 * @remarks Hash: 0x6B76DC1F3AE6E6A3
 */
export function setEntityHealth(entity: number, health: number): void;

/**
 * Determines whether the screen position of the specified entity is within the 2D bounds of the screen.
 * 
 * This native will not check if the entity is not visible due to being occluded (for example, behind a wall). To check if a entity is on screen and is not occluded, use [IS_ENTITY_OCCLUDED](#_0xE31C2C72B8692B64).
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xE659E47AF827484B
 */
export function isEntityOnScreen(entity: number): number;

/**
 * ## Parameters
 * *
 * @param handle - 
 * @returns number
 * @remarks Hash: 0x731EC8A916BD11A1
 */
export function isAnEntity(handle: number): number;

/**
 * ```
 * Returns an integer value of entity's current health.
 * Example of range for ped:
 * - Player [0 to 200]
 * - Ped [100 to 200]
 * - Vehicle [0 to 1000]
 * - Object [0 to 1000]
 * Health is actually a float value but this native casts it to int.
 * In order to get the actual value, do:
 * float health = *(float *)(entityAddress + 0x280);
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xEEF059FAD016D209
 */
export function getEntityHealth(entity: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x36F32DE87082343E
 */
export function 0x36f32de87082343e(p0: any, p1: any): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param entity1 - 
 * @param entity2 - 
 * @param traceType - 
 * @returns any
 * @remarks Hash: 0x394BDE2A7BBA031E
 */
export function HasEntityClearLosToEntity2(entity1: number, entity2: number, traceType: number): any;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param model - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x3A52AE588830BF7F
 */
export function createModelHideExcludingScriptObjects(x: number, y: number, z: number, radius: number, model: number, p5: number): void;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param entity - 
 * @param animName - 
 * @param animDict - 
 * @param fBlendDelta - 
 * @param bLoop - 
 * @param bHoldLastFrame - 
 * @param bDriveToPose - 
 * @param fStartPhase - 
 * @param iFlags - 
 * @returns number
 * @remarks Hash: 0x7FB218262B810701
 */
export function playEntityAnim(entity: number, animName: string, animDict: string, fBlendDelta: number, bLoop: number, bHoldLastFrame: number, bDriveToPose: number, fStartPhase: number, iFlags: number): number;

/**
 * ```
 * SET_ENTITY_*  
 * ```
 * @param entity - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x1A092BB0C3808B96
 */
export function 0x1a092bb0c3808b96(entity: number, p1: number): void;

/**
 * ```
 * For instance: ENTITY::SET_ENTITY_MAX_HEALTH(PLAYER::PLAYER_PED_ID(), 200); // director_mode.c4: 67849  
 * ```
 * @param entity - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x166E7CF68597D8B5
 */
export function setEntityMaxHealth(entity: number, value: number): void;

/**
 * ```
 * p5 = sets as true in scripts  
 * Same as the comment for CREATE_MODEL_SWAP unless for some reason p5 affects it this only works with objects as well.  
 * Network players do not see changes done with this.  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param model - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x8A97BCA30A0CE478
 */
export function createModelHide(x: number, y: number, z: number, radius: number, model: number, p5: number): void;

/**
 * ```
 * Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.  
 * This is one of the most CPU demanding BOOL natives in the game; avoid calling this in things like nested for-loops  
 * ```
 * @param entity1 - 
 * @param entity2 - 
 * @returns number
 * @remarks Hash: 0x0267D00AF114F17A
 */
export function hasEntityClearLosToEntityInFront(entity1: number, entity2: number): number;

/**
 * ```
 * NativeDB Added Parameter 2: BOOL p1
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x5F9532F3B5CC2551
 */
export function isEntityDead(entity: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p3 - 
 * @param modelHash - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x150E808B375A385A
 */
export function createForcedObject(x: number, y: number, z: number, p3: any, modelHash: number, p5: number): void;

/**
 * ```
 * ENABLE_*
 * ```
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x6CE177D014502E8A
 */
export function EnableEntityUnk(entity: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x4A4722448F18EEF5
 */
export function setEntityHasGravity(entity: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param damager - 
 * @param bCheckDamagerVehicle - 
 * @returns number
 * @remarks Hash: 0xC86D67D52A707CF8
 */
export function hasEntityBeenDamagedByEntity(entity: number, damager: number, bCheckDamagerVehicle: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x886E37EC497200B6
 */
export function isEntityInAir(entity: number): number;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param entity - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x8339643499D1222E
 */
export function SetEntityAngularVelocity(entity: number, x: number, y: number, z: number): void;

/**
 * ```
 * Only called once in the scripts.  
 * Related to weapon objects.  
 * ```
 * @param entity - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x5C3B791D580E0BC2
 */
export function 0x5c3b791d580e0bc2(entity: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xDDE6DF5AE89981D2
 */
export function doesEntityBelongToThisScript(entity: number, p2: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xB346476EF1A64897
 */
export function isEntityAttached(entity: number): number;

/**
 * ```
 * Relative can be used for getting speed relative to the frame of the vehicle, to determine for example, if you are going in reverse (-y speed) or not (+y speed).  
 * ```
 * @param entity - 
 * @param relative - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x9A8D700A51CB7B0D
 */
export function getEntitySpeedVector(entity: number, relative: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xE31C2C72B8692B64
 */
export function isEntityOccluded(entity: number): number;

/**
 * ```
 * Returns the index of the bone. If the bone was not found, -1 will be returned.   
 * list:  
 * pastebin.com/D7JMnX1g  
 * BoneNames:  
 * 	chassis,  
 * 	windscreen,  
 * 	seat_pside_r,  
 * 	seat_dside_r,  
 * 	bodyshell,  
 * 	suspension_lm,  
 * 	suspension_lr,  
 * 	platelight,  
 * 	attach_female,  
 * 	attach_male,  
 * 	bonnet,  
 * 	boot,  
 * 	chassis_dummy,	//Center of the dummy  
 * 	chassis_Control,	//Not found yet  
 * 	door_dside_f,	//Door left, front  
 * 	door_dside_r,	//Door left, back  
 * 	door_pside_f,	//Door right, front  
 * 	door_pside_r,	//Door right, back  
 * 	Gun_GripR,  
 * 	windscreen_f,  
 * 	platelight,	//Position where the light above the numberplate is located  
 * 	VFX_Emitter,  
 * 	window_lf,	//Window left, front  
 * 	window_lr,	//Window left, back  
 * 	window_rf,	//Window right, front  
 * 	window_rr,	//Window right, back  
 * 	engine,	//Position of the engine  
 * 	gun_ammo,  
 * 	ROPE_ATTATCH,	//Not misspelled. In script "finale_heist2b.c4".  
 * 	wheel_lf,	//Wheel left, front  
 * 	wheel_lr,	//Wheel left, back  
 * 	wheel_rf,	//Wheel right, front  
 * 	wheel_rr,	//Wheel right, back  
 * 	exhaust,	//Exhaust. shows only the position of the stock-exhaust  
 * 	overheat,	//A position on the engine(not exactly sure, how to name it)  
 * 	misc_e,	//Not a car-bone.  
 * 	seat_dside_f,	//Driver-seat  
 * 	seat_pside_f,	//Seat next to driver  
 * 	Gun_Nuzzle,  
 * 	seat_r  
 * I doubt that the function is case-sensitive, since I found a "Chassis" and a "chassis". - Just tested: Definitely not case-sensitive.  
 * ```
 * @param entity - 
 * @param boneName - 
 * @returns number
 * @remarks Hash: 0xFB71170B7E76ACBA
 */
export function getEntityBoneIndexByName(entity: number, boneName: string): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param dynamic - 
 * @param collision - 
 * @returns void
 * @remarks Hash: 0x961AC54BF0613F5D
 */
export function detachEntity(entity: number, dynamic: number, collision: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param speed - 
 * @returns void
 * @remarks Hash: 0x0E46A3FCBDE2A1B1
 */
export function setEntityMaxSpeed(entity: number, speed: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xACAD101E1FB66689
 */
export function setEntityAlwaysPrerender(entity: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x605F5A140F202491
 */
export function hasEntityBeenDamagedByAnyPed(entity: number): number;

/**
 * ```
 * A static ped will not react to natives like "APPLY_FORCE_TO_ENTITY" or "SET_ENTITY_VELOCITY" and oftentimes will not react to task-natives like "AI::TASK_COMBAT_PED". The only way I know of to make one of these peds react is to ragdoll them (or sometimes to use CLEAR_PED_TASKS_IMMEDIATELY(). Static peds include almost all far-away peds, beach-combers, peds in certain scenarios, peds crossing a crosswalk, peds walking to get back into their cars, and others. If anyone knows how to make a ped non-static without ragdolling them, please edit this with the solution.  
 * ^ Attach a phCollider to the ped.  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x1218E6886D3D8327
 */
export function isEntityStatic(entity: number): number;

/**
 * A population type, from the following enum: https://alloc8or.re/gta5/doc/enums/ePopulationType.txt
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xF6F5161F4534EDFF
 */
export function getEntityPopulationType(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x9B1E824FFBB7027A
 */
export function resetEntityAlpha(entity: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x0A7B270912999B3C
 */
export function isEntityAMissionEntity(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xE12ABE5E3A389A6C
 */
export function setCanAutoVaultOnEntity(entity: number, toggle: number): void;

/**
 * ```
 * Displays the current ROLL axis of the entity [-180.0000/180.0000+]  
 * (Sideways Roll) such as a vehicle tipped on its side  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x831E0242595560DF
 */
export function getEntityRoll(entity: number): number;

/**
 * ```
 * SET_ENTITY_*
 * ```
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC34BC448DA29F5E9
 */
export function 0xc34bc448da29f5e9(entity: number, toggle: number): void;

/**
 * ```
 * Returns a float value representing animation's current playtime with respect to its total playtime. This value increasing in a range from [0 to 1] and wrap back to 0 when it reach 1.  
 * Example:  
 * 0.000000 - mark the starting of animation.  
 * 0.500000 - mark the midpoint of the animation.  
 * 1.000000 - mark the end of animation.  
 * ```
 * 
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param entity - 
 * @param animDict - 
 * @param animName - 
 * @returns number
 * @remarks Hash: 0x346D81500D088F42
 */
export function getEntityAnimCurrentTime(entity: number, animDict: string, animName: string): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xD05BFF0C0A12C68F
 */
export function isEntityWaitingForWorldCollision(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x26AA915AD89BFB4B
 */
export function isEntityAttachedToAnyVehicle(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x48C2BED9180FE123
 */
export function getEntityAttachedTo(entity: number): number;

/**
 * This native
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xA72CD9CA74A5ECBA
 */
export function clearEntityLastDamageEntity(entity: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x0F42323798A58C8C
 */
export function isEntityTouchingModel(entity: number, modelHash: number): number;

/**
 * ```
 * Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xE83D4F9BA2A38914
 */
export function getEntityHeading(entity: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x61B6775E83C0DB6F
 */
export function removeForcedObject(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * w is the correct parameter name!  
 * ```
 * @param entity - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param w - 
 * @returns void
 * @remarks Hash: 0x77B21BE7AC540F07
 */
export function setEntityQuaternion(entity: number, x: number, y: number, z: number, w: number): void;

/**
 * ```
 * breakForce is the amount of force required to break the bond.
 * p14 - is always 1 in scripts
 * p15 - is 1 or 0 in scripts - unknown what it does
 * p16 - controls collision between the two entities (FALSE disables collision).
 * p17 - do not teleport entity to be attached to the position of the bone Index of the target entity (if 1, entity will not be teleported to target bone)
 * p18 - is always 2 in scripts.
 * ```
 * @param entity1 - 
 * @param entity2 - 
 * @param boneIndex1 - 
 * @param boneIndex2 - 
 * @param xPos1 - 
 * @param yPos1 - 
 * @param zPos1 - 
 * @param xPos2 - 
 * @param yPos2 - 
 * @param zPos2 - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param breakForce - 
 * @param fixedRot - 
 * @param p15 - 
 * @param collision - 
 * @param teleport - 
 * @param p18 - 
 * @returns void
 * @remarks Hash: 0xC3675780C92F90F9
 */
export function attachEntityToEntityPhysically(entity1: number, entity2: number, boneIndex1: number, boneIndex2: number, xPos1: number, yPos1: number, zPos1: number, xPos2: number, yPos2: number, zPos2: number, xRot: number, yRot: number, zRot: number, breakForce: number, fixedRot: number, p15: number, collision: number, teleport: number, p18: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param forwardVector - 
 * @param rightVector - 
 * @param upVector - 
 * @param position - 
 * @returns void
 * @remarks Hash: 0xECB2FC7235A7D137
 */
export function getEntityMatrix(entity: number, forwardVector: { x: number, y: number, z: number }, rightVector: { x: number, y: number, z: number }, upVector: { x: number, y: number, z: number }, position: { x: number, y: number, z: number }): void;

/**
 * Toggle the visibility of a given entity.
 * @param entity - 
 * @param toggle - 
 * @param unk - 
 * @returns void
 * @remarks Hash: 0xEA1C610A04DB6BBB
 */
export function setEntityVisible(entity: number, toggle: number, unk: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x060D6E96F8B8E48D
 */
export function doesEntityHaveDrawable(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x7196842CB375CDB3
 */
export function getNearestPlayerToEntity(entity: number): number;

/**
 * Get the speed of a entity.
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xD5037BA82E12416F
 */
export function getEntitySpeed(entity: number): number;

/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param entity1 - 
 * @param entity2 - 
 * @returns void
 * @remarks Hash: 0x0A27A7827347B3B1
 */
export function SetEntityNoCollisionWithNetworkedEntity(entity1: number, entity2: number): void;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x2158E81A6AF65EA9
 */
export function DoesEntityHaveAnimDirector(entity: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1760FFA8AB074D66
 */
export function setEntityCanBeDamaged(entity: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param angle - 
 * @returns number
 * @remarks Hash: 0x5333F526F6AB19AA
 */
export function isEntityUpright(entity: number, angle: number): number;

/**
 * Gets the current coordinates (world position) for a specified entity.
 * @param entity - 
 * @param alive - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x3FEF770D40960D5A
 */
export function getEntityCoords(entity: number, alive: number): { x: number, y: number, z: number };

/**
 * Apply a force to an entities center of mass.
 * @param entity - 
 * @param forceType - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x18FF00FC7EFF559E
 */
export function applyForceToEntityCenterOfMass(entity: number, forceType: number, x: number, y: number, z: number): void;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param entity - 
 * @param animDictionary - 
 * @param animName - 
 * @param time - 
 * @returns void
 * @remarks Hash: 0x4487C259F0F70977
 */
export function setEntityAnimCurrentTime(entity: number, animDictionary: string, animName: string, time: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param X - 
 * @param Y - 
 * @param Z - 
 * @param atTop - 
 * @param inWorldCoords - 
 * @returns number
 * @remarks Hash: 0x5A504562485944DD
 */
export function getEntityHeight(entity: number, X: number, Y: number, Z: number, atTop: number, inWorldCoords: number): number;

/**
 * ```
 * Calling this function disables collision between two entities.
 * The importance of the order for entity1 and entity2 is unclear.
 * The third parameter, `thisFrame`, decides whether the collision is to be disabled until it is turned back on, or if it's just this frame.
 * ```
 * @param entity1 - 
 * @param entity2 - 
 * @param thisFrameOnly - 
 * @returns void
 * @remarks Hash: 0xA53ED5520C07654A
 */
export function setEntityNoCollisionEntity(entity1: number, entity2: number, thisFrameOnly: number): void;

/**
 * Sets the coordinates (world position) for a specified entity, offset by the radius of the entity on the Z axis.
 * @param entity - 
 * @param xPos - 
 * @param yPos - 
 * @param zPos - 
 * @param alive - 
 * @param deadFlag - 
 * @param ragdollFlag - 
 * @param clearArea - 
 * @returns void
 * @remarks Hash: 0x06843DA7060A026B
 */
export function setEntityCoords(entity: number, xPos: number, yPos: number, zPos: number, alive: number, deadFlag: number, ragdollFlag: number, clearArea: number): void;

/**
 * ## Parameters
 * 
 * -
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x524AC5ECEA15343E
 */
export function isEntityAPed(entity: number): number;

/**
 * ```
 * Offset values are relative to the entity.  
 * x = left/right  
 * y = forward/backward  
 * z = up/down  
 * ```
 * @param entity - 
 * @param offsetX - 
 * @param offsetY - 
 * @param offsetZ - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x1899F328B0E12848
 */
export function getOffsetFromEntityInWorldCoords(entity: number, offsetX: number, offsetY: number, offsetZ: number): { x: number, y: number, z: number };

/**
 * Configures an entity to either allow or prevent it from being picked up by Cargobobs.
 * 
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xD7B80E7C3BEFC396
 */
export function setPickUpByCargobobDisabled(entity: number): void;

/**
 * ```
 * w is the correct parameter name!  
 * ```
 * @param entity - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param w - 
 * @returns void
 * @remarks Hash: 0x7B3703D2D32DFA18
 */
export function getEntityQuaternion(entity: number, x: number, y: number, z: number, w: number): void;

/**
 * ```
 * p1 sync task id?  
 * ```
 * @param entity - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x43D3807C077261E3
 */
export function stopSynchronizedEntityAnim(entity: number, p1: number, p2: number): number;

/**
 * ```
 * Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions and the tazer animation won't apply either.  
 * If you use this for a ped and you want Ragdoll to stay enabled, then do:  
 * *(DWORD *)(pedAddress + 0x188) |= (1 << 9);  
 * Use this if you want to get the invincibility status:  
 * 	bool IsPedInvincible(Ped ped)  
 * 	{  
 * auto addr = getScriptHandleBaseAddress(ped);	  
 * if (addr)  
 * {  
 * 	DWORD flag = *(DWORD *)(addr + 0x188);  
 * 	return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);  
 * }  
 * return false;  
 * 	}  
 * ```
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x3882114BDE571AD4
 */
export function setEntityInvincible(entity: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xDA95EA3317CC5064
 */
export function doesEntityHavePhysics(entity: number): number;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param animDict - 
 * @param animName - 
 * @returns number
 * @remarks Hash: 0xFEDDF04D62B8D790
 */
export function getAnimDuration(animDict: string, animName: string): number;

/**
 * See also [`IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM`](#_0x6EC47A344923E1ED)
 * 
 * ```
 * Taken from ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "creatures@shark@move", "attack_player", 3)  
 * p4 is always 3 in the scripts.  
 * taskFlag:  
 * 2 - Check synchronized scene  
 * ```
 * 
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param entity - 
 * @param animDict - 
 * @param animName - 
 * @param taskFlag - 
 * @returns number
 * @remarks Hash: 0x1F0B79228E461EC9
 */
export function isEntityPlayingAnim(entity: number, animDict: string, animName: string, taskFlag: number): number;

/**
 * Changing traffic-lights will not change the behavior of NPCs.
 * 
 * Example: [here](https://www.gtaforums.com/topic/830463-help-with-turning-lights-green-and-causing-peds-to-crash-into-each-other/#entry1068211340)
 * 
 * ```c
 * enum eTrafficlightOverrideMode
 * {
 *     TLO_RED = 0,
 *     TLO_AMBER = 1,
 *     TLO_GREEN = 2,
 *     TLO_NONE = 3
 * }
 * ```
 * @param entity - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0x57C5DB656185EAC4
 */
export function setEntityTrafficlightOverride(entity: number, state: number): void;

/**
 * ```
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.  
 * ```
 * @param object - 
 * @returns void
 * @remarks Hash: 0x3AE22DEB5BA5A3E6
 */
export function setObjectAsNoLongerNeeded(object: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x0A50A1EEDAD01E65
 */
export function setEntityRecordsCollisions(entity: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @returns number
 * @remarks Hash: 0x73040398DFF9A4A6
 */
export function ropeGetDistanceBetweenEnds(ropeId: number): number;

/**
 * ## Parameters
 * *
 * @param object - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x01BA3AED21C16CFB
 */
export function setDisableFragDamage(object: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF159A63806BB5BA8
 */
export function ropeDrawShadowEnabled(ropeId: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xBCF3026912A8647D
 */
export function detachRopeFromEntity(ropeId: number, entity: number): void;

/**
 * ## Parameters
 * *
 * @param object - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x5CEC1A84620E7D5B
 */
export function setDisableBreaking(object: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xB1B6216CA2E7B55E
 */
export function 0xb1b6216ca2e7b55e(p0: any, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @returns void
 * @remarks Hash: 0xCB2D4AB84A19AA7C
 */
export function stopRopeWinding(ropeId: number): void;

/**
 * ```
 * Reset a rope to a certain length.  
 * ```
 * @param ropeId - 
 * @param length - 
 * @returns void
 * @remarks Hash: 0xC16DE94D9BEA14A0
 */
export function ropeResetLength(ropeId: number, length: number): void;

/**
 * ```
 * SET_*
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x9EBD751E5787BAF2
 */
export function 0x9ebd751e5787baf2(p0: number): void;

/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param entity - 
 * @param type - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x8C520A929415BCD2
 */
export function getDamping(entity: number, type: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @returns void
 * @remarks Hash: 0x538D1179EC1AA9A9
 */
export function startRopeUnwindingFront(ropeId: number): void;

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @returns void
 * @remarks Hash: 0x1461C72C889E343E
 */
export function startRopeWinding(ropeId: number): void;

/**
 * ```
 * The position supplied can be anywhere, and the entity should anchor relative to that point from it's origin.  
 * ```
 * @param ropeId - 
 * @param entity - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x4B490A6832559A65
 */
export function attachRopeToEntity(ropeId: number, entity: number, x: number, y: number, z: number, p5: number): void;

/**
 * ```
 * GET_*
 * ```
 * @param object - 
 * @returns number
 * @remarks Hash: 0x0C112765300C7E1E
 */
export function GetHasObjectFragInst(object: number): number;

/**
 * ```
 * Rope presets can be found in the gamefiles. One example is "ropeFamily3", it is NOT a hash but rather a string.
 * ```
 * @param ropeId - 
 * @param rope_preset - 
 * @returns void
 * @remarks Hash: 0xCBB203C04D1ABD27
 */
export function loadRopeData(ropeId: number, rope_preset: string): void;

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @returns void
 * @remarks Hash: 0xAA5D6B1888E4DB20
 */
export function deleteChildRope(ropeId: number): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x84DE3B5FB3E666F0
 */
export function 0x84de3b5fb3e666f0(): number;

/**
 * ```
 * Forces a rope to a certain length.
 * ```
 * @param ropeId - 
 * @param length - 
 * @returns void
 * @remarks Hash: 0xD009F759A723DB1B
 */
export function ropeForceLength(ropeId: number, length: number): void;

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @returns void
 * @remarks Hash: 0x5389D48EFA2F079A
 */
export function ropeConvertToSimple(ropeId: number): void;

/**
 * ```
 * ROPE_*
 * ```
 * @param ropeId - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x36CCB9BE67B970FD
 */
export function 0x36ccb9be67b970fd(ropeId: number, p1: number): void;

/**
 * ```
 * Most likely ROPE_ATTACH_*  
 * ```
 * @param ropeId - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @param p11 - 
 * @param p12 - 
 * @param p13 - 
 * @returns void
 * @remarks Hash: 0xBC0CE682D4D05650
 */
export function 0xbc0ce682d4d05650(ropeId: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number, p11: number, p12: number, p13: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @returns void
 * @remarks Hash: 0x2E648D16F6E308F3
 */
export function breakEntityGlass(entity: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: any, p10: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xBE520D9761FF811F
 */
export function setCgAtBoundcenter(entity: number): void;

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @returns void
 * @remarks Hash: 0xC8D667EE52114ABA
 */
export function ropeSetUpdatePinverts(ropeId: number): void;

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @param vertex - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xEA61CA8E80F09E4D
 */
export function getRopeVertexCoord(ropeId: number, vertex: number): { x: number, y: number, z: number };

/**
 * Return if the rope was generated or not by the script where the native is called.
 * @param ropeId - 
 * @returns number
 * @remarks Hash: 0x271C9D3ACA5D6409
 */
export function DoesRopeBelongToThisScript(ropeId: number): number;

/**
 * ```
 * RESET_*  
 * ```
 * @param object - 
 * @returns void
 * @remarks Hash: 0xCC6E963682533882
 */
export function 0xcc6e963682533882(object: number): void;

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @param vertex - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x2B320CF14146B69A
 */
export function pinRopeVertex(ropeId: number, vertex: number, x: number, y: number, z: number): void;

/**
 * ```
 * Unloads rope textures for all ropes in the current scene.
 * ```
 * @returns void
 * @remarks Hash: 0x6CE36C35C1AC8163
 */
export function ropeUnloadTextures(): void;

/**
 * For an example on how to use this native please refer to [ADD_ROPE](#_0xE832D760399EB220)
 * @param ropeId - 
 * @returns number
 * @remarks Hash: 0xFD5448BE3111ED96
 */
export function doesRopeExist(ropeId: number): number;

/**
 * ROPE_*
 * 
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param ropeId - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xA1AE736541B0FCA3
 */
export function 0xa1ae736541b0fca3(ropeId: number, p1: number): void;

/**
 * ```
 * Loads rope textures for all ropes in the current scene.
 * ```
 * @returns void
 * @remarks Hash: 0x9B9039DBF2D258C1
 */
export function ropeLoadTextures(): void;

/**
 * Deletes the rope with the specified handle.
 * 
 * You should check if the rope exists before trying to delete it, see [DOES_ROPE_EXIST](#_0xFD5448BE3111ED96).
 * 
 * For an example on how to use this native please refer to [ADD_ROPE](#_0xE832D760399EB220)
 * @param ropeId - 
 * @returns void
 * @remarks Hash: 0x52B4829281364649
 */
export function deleteRope(ropeId: number): void;

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x21BB0FBD3E217C2D
 */
export function getRopeLastVertexCoord(ropeId: number): { x: number, y: number, z: number };

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xF2D0E6A75CC05597
 */
export function ropeAreTexturesLoaded(): number;

/**
 * ```
 * Attaches entity 1 to entity 2.  
 * ```
 * @param ropeId - 
 * @param ent1 - 
 * @param ent2 - 
 * @param ent1_x - 
 * @param ent1_y - 
 * @param ent1_z - 
 * @param ent2_x - 
 * @param ent2_y - 
 * @param ent2_z - 
 * @param length - 
 * @param p10 - 
 * @param p11 - 
 * @param boneName1 - 
 * @param boneName2 - 
 * @returns void
 * @remarks Hash: 0x3D95EC8B6D940AC3
 */
export function attachEntitiesToRope(ropeId: number, ent1: number, ent2: number, ent1_x: number, ent1_y: number, ent1_z: number, ent2_x: number, ent2_y: number, ent2_z: number, length: number, p10: number, p11: number, boneName1: string, boneName2: string): void;

/**
 * ```
 * Creates a rope at the specific position, that extends in the specified direction when not attached to any entities.
 * __
 * Rope does NOT interact with anything you attach it to, in some cases it make interact with the world AFTER it breaks (seems to occur if you set the type to -1).
 * Rope will sometimes contract and fall to the ground like you'd expect it to, but since it doesn't interact with the world the effect is just jaring.
 * ```
 * 
 * There are 8 different rope types in the base game. Full rope data can be found in `ropedata.xml`.
 * 
 * ```c
 * enum ePhysicsRopeType {
 *     RopeThin = 0, // Verticies: 1, Radius: 0.03, Textures: rope & rope_n
 *     RopeWire6 = 1, // Verticies: 4, Radius: 0.015, Textures: steel_cable & steel_cable_n
 *     RopeWire32 = 2, // Verticies: 32, Radius: 0.025, Textures: steel_cable & steel_cable_n
 *     RopeMesh = 3, // Verticies: 6, Radius: 0.03, Textures: rope & rope_n
 *     RopeThinWire32 = 4, // Verticies: 32, Radius: 0.01, Textures: rope & rope_n
 *     RopeReins = 5, // Verticies: 32, Radius: 0.005, Textures: rope & rope_n
 *     RopeThin4 = 6, // Verticies: 4, Radius: 0.03, Textures: rope & rope_n
 *     RopeWire64 = 7 // Verticies: 64, Radius: 0.025, Textures: steel_cable & steel_cable_n
 * }
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param maxLength - 
 * @param ropeType - 
 * @param initLength - 
 * @param minLength - 
 * @param lengthChangeRate - 
 * @param onlyPPU - 
 * @param collisionOn - 
 * @param lockFromFront - 
 * @param timeMultiplier - 
 * @param breakable - 
 * @param unkPtr - 
 * @returns number
 * @remarks Hash: 0xE832D760399EB220
 */
export function addRope(x: number, y: number, z: number, rotX: number, rotY: number, rotZ: number, maxLength: number, ropeType: number, initLength: number, minLength: number, lengthChangeRate: number, onlyPPU: number, collisionOn: number, lockFromFront: number, timeMultiplier: number, breakable: number, unkPtr: any): number;

/**
 * Related to the lower-end of a vehicles fTractionCurve, e.g., from standing starts and acceleration from low/zero speeds.
 * 
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xAA6A6098851C396F
 */
export function SetLaunchControlEnabled(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xD8FA3908D7B86904
 */
export function setCgoffset(entity: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x15F944730C832252
 */
export function SetEntityProofUnk(entity: number, toggle: number): void;

/**
 * ```
 * ROPE_*
 * ```
 * @param ropeId - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xB743F735C03D7810
 */
export function 0xb743f735c03d7810(ropeId: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @returns number
 * @remarks Hash: 0x3655F544CD30F0B5
 */
export function getRopeVertexCount(ropeId: number): number;

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @returns void
 * @remarks Hash: 0xFFF3A50779EFBBB3
 */
export function stopRopeUnwindingFront(ropeId: number): void;

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @param vertex - 
 * @returns void
 * @remarks Hash: 0x4B5AE2EEE4A8F180
 */
export function unpinRopeVertex(ropeId: number, vertex: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x710311ADF0E20730
 */
export function activatePhysics(entity: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x8214A4B5A7A33612
 */
export function getCgoffset(entity: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param vertex - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xEEA3B200A6FEB65B
 */
export function setDamping(entity: number, vertex: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param ropeId - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xDC57A637A20006ED
 */
export function ropeSetUpdateOrder(ropeId: number, p1: any): void;

/**
 * ## Parameters
 * *
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param vecX - 
 * @param vecY - 
 * @param vecZ - 
 * @param impulse - 
 * @returns void
 * @remarks Hash: 0xE37F721824571784
 */
export function applyImpulseToCloth(posX: number, posY: number, posZ: number, vecX: number, vecY: number, vecZ: number, impulse: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0xC9D55B1A358A5BF7
 */
export function isPedModel(ped: number, modelHash: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xEBB376779A760AA8
 */
export function isPedheadshotImgUploadAvailable(): number;

/**
 * ```
 * returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.  
 * Target needs to be tracked.. won't work otherwise.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x91C8E617F64188AC
 */
export function isTrackedPedVisible(ped: number): number;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xB282749D5E028163
 */
export function 0xb282749d5e028163(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x413C6C763A4AFFAD
 */
export function setPedDefensiveAreaDirection(ped: number, p1: number, p2: number, p3: number, p4: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xBB062B2B5722478E
 */
export function isPedGettingIntoAVehicle(ped: number): number;

/**
 * ```
 * SET_PED_ALLOW*
 * toggle was always false except in one instance (b678).
 * The one time this is set to true seems to do with when you fail the mission.
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF2BEBCDFAFDAA19E
 */
export function 0xf2bebcdfafdaa19e(toggle: number): void;

/**
 * Ped no longer takes critical damage modifiers if set to FALSE.
 * 
 * Example: Headshotting a player no longer one shots them. Instead they will take the same damage as a torso shot.
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xEBD76F2359F190AC
 */
export function setPedSuffersCriticalHits(ped: number, toggle: number): void;

/**
 * ```
 * Function just returns 0  
 * void __fastcall ped__get_mount(NativeContext *a1)  
 * {  
 *   NativeContext *v1; // rbx@1  
 *   v1 = a1;  
 *   GetAddressOfPedFromScriptHandle(a1->Args->Arg1);  
 *   v1->Returns->Item1= 0;  
 * }  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xE7E11B8DCBED1058
 */
export function getMount(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xF1C03A5352243A30
 */
export function setPedShouldPlayImmediateScenarioExit(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x70793BDCA1E854D4
 */
export function setPedVisualFieldMaxAngle(ped: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param speedX - 
 * @param speedY - 
 * @returns number
 * @remarks Hash: 0xF60165E1D2C5370B
 */
export function GetPedCurrentMovementSpeed(ped: number, speedX: number, speedY: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param collection - 
 * @param overlay - 
 * @returns void
 * @remarks Hash: 0x5619BFA07CFD7833
 */
export function addPedDecorationFromHashesInCorona(ped: number, collection: number, overlay: number): void;

/**
 * ```
 * Only called once in the scripts:
 * if (sub_1abd() && (!PED::_A3F3564A5B3646C0(l_8C))) {
 *     if (sub_52e3("RESNA_CELLR", 0)) {
 *         PED::SET_PED_CAN_PLAY_GESTURE_ANIMS(l_8C, 1);
 *         PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(l_8C, 1);
 *         PED::SET_PED_CAN_PLAY_VISEME_ANIMS(l_8C, 1, 0);
 *         l_184 += 1;
 *     }
 * }
 * Checks something related to the mobile phone task.
 * IS_*
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xA3F3564A5B3646C0
 */
export function 0xa3f3564a5b3646c0(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x14590DDBEDB1EC85
 */
export function isPedTakingOffHelmet(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x33A60D8BDD6E508C
 */
export function SetPedCanPlayInjuredAnims(ped: number, p1: number): void;

/**
 * ```
 * NativeDB Added Parameter 5: Any p4
 * ```
 * @param ped - 
 * @param vehicle - 
 * @param seatIndex - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0x952F06BEECD775CC
 */
export function setPedVehicleForcedSeatUsage(ped: number, vehicle: number, seatIndex: number, flags: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x6A3975DEA89F9A17
 */
export function getPlayerPedIsFollowing(ped: number): number;

/**
 * ```
 * Checks if the specified unknown flag is set in the ped's model.  
 * The engine itself seems to exclusively check for flags 1 and 4 (Might be inlined code of the check that checks for other flags).  
 * Game scripts exclusively check for flags 1 and 4.  
 * ```
 * @param ped - 
 * @param flag - 
 * @returns number
 * @remarks Hash: 0x46B05BCAE43856B0
 */
export function 0x46b05bcae43856b0(ped: number, flag: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x46F2193B3AD1D891
 */
export function setPedSteersAroundPeds(ped: number, toggle: number): void;

/**
 * ```
 * Returns the Entity (Ped, Vehicle, or ?Object?) that killed the 'ped'  
 * Is best to check if the Ped is dead before asking for its killer.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x93C8B64DEB84728C
 */
export function getPedSourceOfDeath(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x4F5F651ACCC9C4CF
 */
export function setPedBoundsOrientation(ped: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;

/**
 * ```
 * shootRate 0-1000  
 * ```
 * @param ped - 
 * @param shootRate - 
 * @returns void
 * @remarks Hash: 0x614DA022990752DC
 */
export function setPedShootRate(ped: number, shootRate: number): void;

/**
 * ```
 * 100 would equal attack  
 * less then 50ish would mean run away  
 * Only the values 0, 1 and 2 occur in the decompiled scripts. Most likely refers directly to the values also described in combatbehaviour.meta:  
 * 0: CA_Poor  
 * 1: CA_Average  
 * 2: CA_Professional  
 * Tested this and got the same results as the first explanation here. Could not find any difference between 0, 1 and 2.  
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xC7622C0D36B2FDA8
 */
export function setPedCombatAbility(ped: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param vehicle - 
 * @param seatIndex - 
 * @returns void
 * @remarks Hash: 0xF75B0D629E1C063D
 */
export function setPedIntoVehicle(ped: number, vehicle: number, seatIndex: number): void;

/**
 * ## Parameters
 * *
 * @param groupId - 
 * @returns number
 * @remarks Hash: 0x7C6B0C22F9F40BBE
 */
export function doesGroupExist(groupId: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xF445DE8DA80A1792
 */
export function spawnpointsIsSearchFailed(): number;

/**
 * Clipsets:
 * "facials@gen_female@base"
 * "facials@gen_male@base"
 * "facials@p_m_zero@base"
 * 
 * Typically followed with [SET_FACIAL_IDLE_ANIM_OVERRIDE](#_0xFFC24B988B938B38):
 * "mood_drunk_1"
 * "mood_stressed_1"
 * "mood_happy_1"
 * "mood_talking_1"
 * 
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param ped - 
 * @param animDict - 
 * @returns void
 * @remarks Hash: 0x5687C7F05B39E401
 */
export function SetFacialClipsetOverride(ped: number, animDict: string): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xBAF20C5432058024
 */
export function setPedCanPlayGestureAnims(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x638C03B0F9878F57
 */
export function setPedCanBeTargetedWhenInjured(ped: number, toggle: number): void;

/**
 * Allows marine animals to survive outside of water (R* is using it for sharks).
 * 
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns number
 * @remarks Hash: 0x100CD221F572F6E1
 */
export function SetPedSurvivesBeingOutOfWater(ped: number, toggle: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xF5F6378C4F3419D3
 */
export function setPedMaxHealth(ped: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2F3C3D9F50681DE4
 */
export function 0x2f3c3d9f50681de4(p0: any, p1: number): void;

/**
 * ## Parameters
 * *
 * @param ped1 - 
 * @param ped2 - 
 * @returns number
 * @remarks Hash: 0x6CD5A433374D4CFB
 */
export function canPedSeeHatedPed(ped1: number, ped2: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xB9496CE47546DB2C
 */
export function IsPedHelmetUnk(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param target - 
 * @param xOffset - 
 * @param yOffset - 
 * @param zOffset - 
 * @param radius - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0xE4723DB6E736CCFF
 */
export function setPedDefensiveSphereAttachedToVehicle(ped: number, target: number, xOffset: number, yOffset: number, zOffset: number, radius: number, p6: number): void;

/**
 * Applies blood damage to a ped with specific parameters for zone, UV offsets, rotation, scale, and initial aging.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param ped - 
 * @param component - 
 * @param u - 
 * @param v - 
 * @param rotation - 
 * @param scale - 
 * @param forcedFrame - 
 * @param preAge - 
 * @returns void
 * @remarks Hash: 0xEF0D582CBF2D9B0F
 */
export function applyPedBloodSpecific(ped: number, component: number, u: number, v: number, rotation: number, scale: number, forcedFrame: number, preAge: number): void;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param animDict - 
 * @param animName - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param p8 - 
 * @param p9 - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xBE22B26DD764C040
 */
export function getAnimInitialOffsetPosition(animDict: string, animName: string, x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, p8: number, p9: number): { x: number, y: number, z: number };

/**
 * This native is used to set prop variation on a ped. Components, drawables and textures IDs are related to the ped model.
 * @param ped - 
 * @param componentId - 
 * @param drawableId - 
 * @param textureId - 
 * @param attach - 
 * @returns void
 * @remarks Hash: 0x93376B65A266EB5F
 */
export function setPedPropIndex(ped: number, componentId: number, drawableId: number, textureId: number, attach: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param componentId - 
 * @returns number
 * @remarks Hash: 0x04A355E041E004E6
 */
export function getPedTextureVariation(ped: number, componentId: number): number;

/**
 * ```
 * Sets the range at which members will automatically leave the group.  
 * ```
 * @param groupHandle - 
 * @param separationRange - 
 * @returns void
 * @remarks Hash: 0x4102C7858CFEE4E4
 */
export function setGroupSeparationRange(groupHandle: number, separationRange: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0xFCF37A457CB96DC0
 */
export function isPedHeadingTowardsPosition(ped: number, x: number, y: number, z: number, p4: number): number;

/**
 * ```
 * The pointer is to a padded struct that matches the arguments to SET_PED_HEAD_BLEND_DATA(...). There are 4 bytes of padding after each field.  
 * pass this struct in the second parameter   
 * typedef struct  
 * {  
 *         int shapeFirst, shapeSecond, shapeThird;   
 *         int skinFirst, skinSecond, skinThird;   
 * 	float shapeMix, skinMix, thirdMix;  
 * } headBlendData;  
 * ```
 * @param ped - 
 * @param headBlendData - 
 * @returns number
 * @remarks Hash: 0x2746BD9D88C5C5D0
 */
export function getPedHeadBlendData(ped: number, headBlendData: any): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x570389D1C3DE3C6B
 */
export function setPedIncreasedAvoidanceRadius(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xAFF4710E2A0A6C12
 */
export function dropAmbientProp(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x4700A416E8324EF3
 */
export function getPedMaxHealth(ped: number): number;

/**
 * ```
 * vb.net
 * Dim ped_handle As Integer
 *                     With Game.Player.Character
 *                         Dim pos As Vector3 = .Position + .ForwardVector * 3
 *                         ped_handle = Native.Function.Call(Of Integer)(Hash.CREATE_RANDOM_PED, pos.X, pos.Y, pos.Z)
 *                     End With
 * Creates a Ped at the specified location, returns the Ped Handle.
 * Ped will not act until SET_PED_AS_NO_LONGER_NEEDED is called.
 * ```
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @returns number
 * @remarks Hash: 0xB4AC7D0CF06BFE8F
 */
export function createRandomPed(posX: number, posY: number, posZ: number): number;

/**
 * ```
 * Enable/disable ped shadow (ambient occlusion). https://gfycat.com/thankfulesteemedgecko
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2B5AA717A181FB4C
 */
export function setPedAoBlobRendering(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD718A22995E2B4BC
 */
export function setPedDiesInSinkingVehicle(ped: number, toggle: number): void;

/**
 * Preview: https://gfycat.com/MaleRareAmazonparrot
 * @param ped - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @param id - 
 * @returns void
 * @remarks Hash: 0xCC9682B8951C5229
 */
export function setHeadBlendPaletteColor(ped: number, r: number, g: number, b: number, id: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x61767F73EACEED21
 */
export function wasPedKnockedOut(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x9A497FE2DF198913
 */
export function isPedBeingJacked(ped: number): number;

/**
 * Verifies whether ped was eliminated through stealth.
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xF9800AA1A771B000
 */
export function wasPedKilledByStealth(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x0A986918B102B448
 */
export function setPedMotionBlur(ped: number, toggle: number): void;

/**
 * ```
 * Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.  
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x9614299DCB53E54B
 */
export function deletePed(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param componentId - 
 * @returns number
 * @remarks Hash: 0x898CC20EA75BACD8
 */
export function getPedPropIndex(ped: number, componentId: number): number;

/**
 * ```
 * Returns true if the ped passed through the parenthesis is wearing a helmet.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xF33BDFE19B309B19
 */
export function isPedWearingHelmet(ped: number): number;

/**
 * ```
 * IS_PED_*
 * 
 * Returns true if the ped is currently opening a door (CTaskOpenDoor).
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x26AF0E8E30BD2A2C
 */
export function IsPedOpeningADoor(ped: number): number;

/**
 * ## Parameters
 * *
 * @param modifier - 
 * @returns void
 * @remarks Hash: 0x66460DEDDD417254
 */
export function setAiMeleeWeaponDamageModifier(modifier: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xEDF4079F9D54C9A1
 */
export function setPedStayInVehicleWhenJacked(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x81AA517FBBA05D39
 */
export function IsPedShaderEffectValid(ped: number): number;

/**
 * ```
 * Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.  
 * ```
 * @param ped - 
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x5BA652A0CD14DF2F
 */
export function addArmourToPed(ped: number, amount: number): void;

/**
 * ```
 * p1: Only "CODE_HUMAN_STAND_COWER" found in the b617d scripts.  
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xA549131166868ED3
 */
export function setPedCowerHash(ped: number, p1: string): void;

/**
 * ```
 * It will revive/cure the injured ped. The condition is ped must not be dead.  
 * Upon setting and converting the health int, found, if health falls below 5, the ped will lay on the ground in pain(Maximum default health is 100).  
 * This function is well suited there.  
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x8D8ACD8388CD99CE
 */
export function reviveInjuredPed(ped: number): void;

/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.  
 * *untested but char *name could also be a hash for a localized string  
 * ```
 * @param ped - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0x98EFA132A4117BE1
 */
export function setPedNameDebug(ped: number, name: string): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param groupId - 
 * @returns void
 * @remarks Hash: 0x2A7819605465FBCE
 */
export function setPedAsGroupLeader(ped: number, groupId: number): void;

/**
 * Creates a copy of the passed ped, optionally setting it as local and/or shallow-copying the head blend data.
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xEF29A16337FACADB
 */
export function clonePed(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x7D7A2E43E74E2EB8
 */
export function requestPedVisibilityTracking(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x061CB768363D6424
 */
export function 0x061cb768363d6424(ped: number, toggle: number): void;

/**
 * ```
 * The function specifically verifies the value is equal to, or less than 1.0f. If it is greater than 1.0f, the function does nothing at all.  
 * ```
 * @param driver - 
 * @param ability - 
 * @returns void
 * @remarks Hash: 0xB195FFA8042FC5C3
 */
export function setDriverAbility(driver: number, ability: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x9DE327631295B4C2
 */
export function isPedSwimming(ped: number): number;

/**
 * ```
 * Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. SWAT and Army will still shoot at you. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.  
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xBB03C38DD3FB7FFD
 */
export function setPedAsCop(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x9483AF821605B1D8
 */
export function getPedArmour(ped: number): number;

/**
 * ## Parameters
 * *
 * @param randomInt - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x280C7E3AC7F56E90
 */
export function spawnpointsGetSearchResult(randomInt: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0xDC2C5C242AAC342B
 */
export function setPedLodMultiplier(ped: number, multiplier: number): void;

/**
 * @returns void
 * @remarks Hash: 0xD37401D78A929A49
 */
export function removeScenarioBlockingAreas(): void;

/**
 * When this ped receives its next script task, they will exit from their scenario using the normal scenario exit.
 * Exiting the scenario may take several frames while the ped is playing the exit animation.
 * If the ped is not currently using a scenario at the time of the command or 0,0,0 is specified as the reaction position,
 * then the ped will by default attempt to direct their exit forwards.
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xEC6935EBE0847B90
 */
export function SetPedShouldPlayDirectedScenarioExit(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x6E575D6A898AB852
 */
export function isPedInAnyTaxi(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x4AFE3690D7E0B5AC
 */
export function clearPedDriveByClipsetOverride(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x6F4C85ACD641BCD2
 */
export function getSeatPedIsTryingToEnter(ped: number): number;

/**
 * ```
 * It simply makes the said ped to cower behind cover object(wall, desk, car)  
 * Peds flee attributes must be set to not to flee, first. Else, most of the peds, will just flee from gunshot sounds or any other panic situations.  
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xCB7553CDCEF4A735
 */
export function setPedCanCowerInCover(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param componentId - 
 * @returns number
 * @remarks Hash: 0xE3DD5F2A84B42281
 */
export function getPedPaletteVariation(ped: number, componentId: number): number;

/**
 * ```
 * PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_PASSENGER"));
 * PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_RESTRICTED_PASSENGER"));
 * PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT"));
 * PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT_REAR"));
 * PED::SET_PED_IN_VEHICLE_CONTEXT(l_95, MISC::GET_HASH_KEY("MISS_FAMILY2_JIMMY_BICYCLE"));
 * PED::SET_PED_IN_VEHICLE_CONTEXT(num3, MISC::GET_HASH_KEY("MISSFBI2_MICHAEL_DRIVEBY"));
 * PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISS_ARMENIAN3_FRANKLIN_TENSE"));
 * PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISSFBI5_TREVOR_DRIVING"));
 * ```
 * @param ped - 
 * @param context - 
 * @returns void
 * @remarks Hash: 0x530071295899A8C6
 */
export function setPedInVehicleContext(ped: number, context: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param flagId - 
 * @returns number
 * @remarks Hash: 0xAF9E59B1B1FBF2A0
 */
export function getPedResetFlag(ped: number, flagId: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x66680A92700F43DF
 */
export function hasPedPreloadVariationDataFinished(ped: number): number;

/**
 * ```
 * bit 15 (0x8000) = force cower
 * ```
 * @param ped - 
 * @param attributeFlags - 
 * @param enable - 
 * @returns void
 * @remarks Hash: 0x70A2D1137C8ED7C9
 */
export function setPedFleeAttributes(ped: number, attributeFlags: number, enable: number): void;

/**
 * ```
 * Used with freemode (online) characters.
 * ```
 * @param overlayID - 
 * @returns number
 * @remarks Hash: 0xCF1CE768BB43480E
 */
export function getPedHeadOverlayNum(overlayID: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x425AECF167663F48
 */
export function 0x425aecf167663f48(ped: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x8844BBFCE30AA9E9
 */
export function clearPedAlternateWalkAnim(ped: number, p1: number): void;

/**
 * PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 240, 1);
 * Known values:
 * @param ped - 
 * @param flagId - 
 * @param doReset - 
 * @returns void
 * @remarks Hash: 0xC1E8A365BF3B29F2
 */
export function setPedResetFlag(ped: number, flagId: number, doReset: number): void;

/**
 * ```
 * This is the SET_CHAR_DUCKING from GTA IV, that makes Peds duck. This function does nothing in GTA V. It cannot set the ped as ducking in vehicles, and IS_PED_DUCKING will always return false.  
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x030983CA930B692D
 */
export function setPedDucking(ped: number, toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xE8A169E666CBC541
 */
export function hasPedheadshotImgUploadSucceeded(): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param interiorFlags - 
 * @param scale - 
 * @param duration - 
 * @returns void
 * @remarks Hash: 0xB2AFF10216DEFA2F
 */
export function spawnpointsStartSearchInAngledArea(x: number, y: number, z: number, p3: number, p4: number, p5: number, p6: number, interiorFlags: number, scale: number, duration: number): void;

/**
 * ```
 * enable or disable the gravity of a ped  
 * Examples:  
 * PED::SET_PED_GRAVITY(PLAYER::PLAYER_PED_ID(), 0x00000001);  
 * PED::SET_PED_GRAVITY(Local_289[iVar0 /*20*/], 0x00000001);  
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9FF447B6B6AD960A
 */
export function setPedGravity(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x0B3E35AC043707D9
 */
export function 0x0b3e35ac043707d9(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns void
 * @remarks Hash: 0x1B1E2A40A65B8521
 */
export function setAiWeaponDamageModifier(value: number): void;

/**
 * @returns void
 * @remarks Hash: 0x2E05208086BA0651
 */
export function clearPedNonCreationArea(): void;

/**
 * ## Parameters
 * *
 * @param sceneID - 
 * @returns number
 * @remarks Hash: 0xE4A310B1D7FA73CC
 */
export function getSynchronizedScenePhase(sceneID: number): number;

/**
 * Sets the various freemode face features, e.g. nose length, chin shape.
 * @param ped - 
 * @param index - 
 * @param scale - 
 * @returns void
 * @remarks Hash: 0x71A5C1DBA060049E
 */
export function SetPedFaceFeature(ped: number, index: number, scale: number): void;

/**
 * ## Parameters
 * *
 * @param scenarioBlockingIndex - 
 * @param bNetwork - 
 * @returns void
 * @remarks Hash: 0x31D16B74C6E29D66
 */
export function removeScenarioBlockingArea(scenarioBlockingIndex: number, bNetwork: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x637822DC2AFEEBF8
 */
export function ClearFacialClipsetOverride(ped: number): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xC30BDAEE47256C13
 */
export function 0xc30bdaee47256c13(p0: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x820E9892A77E97CD
 */
export function 0x820e9892a77e97cd(p0: any, p1: any): void;

/**
 * These combat attributes seem to be the same as the BehaviourFlags from combatbehaviour.meta.
 * 
 * So far, these are the equivalents found:
 * 
 * ```c
 * enum eCombatAttribute
 * {
 *   CA_INVALID = -1,	
 *   // AI will only use cover if this is set
 *   CA_USE_COVER = 0,
 *   // AI will only use vehicles if this is set
 *   CA_USE_VEHICLE = 1,
 *   // AI will only driveby from a vehicle if this is set
 *   CA_DO_DRIVEBYS = 2,
 *   // Will be forced to stay in a ny vehicel if this isn't set
 *   CA_LEAVE_VEHICLES = 3,
 *   // This ped can make decisions on whether to strafe or not based on distance to destination, recent bullet events, etc.
 *   CA_CAN_USE_DYNAMIC_STRAFE_DECISIONS	= 4,
 *   // Ped will always fight upon getting threat response task
 *   CA_ALWAYS_FIGHT = 5,
 *   // If in combat and in a vehicle, the ped will flee rather than attacking
 *   CA_FLEE_WHILST_IN_VEHICLE = 6,
 *   // If in combat and chasing in a vehicle, the ped will keep a distance behind rather than ramming
 *   CA_JUST_FOLLOW_VEHICLE = 7,
 *   // Deprecated
 *   CA_PLAY_REACTION_ANIMS = 8,
 *   // Peds will scan for and react to dead peds found
 *   CA_WILL_SCAN_FOR_DEAD_PEDS = 9,
 *   // Deprecated
 *   CA_IS_A_GUARD = 10,
 *   // The ped will seek cover only 
 *   CA_JUST_SEEK_COVER = 11,
 *   // Ped will only blind fire when in cover
 *   CA_BLIND_FIRE_IN_COVER = 12,
 *   // Ped may advance
 *   CA_AGGRESSIVE = 13,
 *   // Ped can investigate events such as distant gunfire, footsteps, explosions etc
 *   CA_CAN_INVESTIGATE = 14,
 *   // Ped can use a radio to call for backup (happens after a reaction)
 *   CA_CAN_USE_RADIO = 15,
 *   // Deprecated
 *   CA_CAN_CAPTURE_ENEMY_PEDS = 16,
 *   // Ped will always flee upon getting threat response task
 *   CA_ALWAYS_FLEE = 17,
 *   // Ped can do unarmed taunts in vehicle
 *   CA_CAN_TAUNT_IN_VEHICLE = 20,
 *   // Ped will be able to chase their targets if both are on foot and the target is running away
 *   CA_CAN_CHASE_TARGET_ON_FOOT = 21,
 *   // Ped can drag injured peds to safety
 *   CA_WILL_DRAG_INJURED_PEDS_TO_SAFETY = 22,
 *   // Ped will require LOS to the target it is aiming at before shooting
 *   CA_REQUIRES_LOS_TO_SHOOT = 23,
 *   // Ped is allowed to use proximity based fire rate (increasing fire rate at closer distances)
 *   CA_USE_PROXIMITY_FIRING_RATE = 24,
 *   // Normally peds can switch briefly to a secondary target in combat, setting this will prevent that
 *   CA_DISABLE_SECONDARY_TARGET = 25,
 *   // This will disable the flinching combat entry reactions for peds, instead only playing the turn and aim anims
 *   CA_DISABLE_ENTRY_REACTIONS = 26,
 *   // Force ped to be 100% accurate in all situations (added by Jay Reinebold)
 *   CA_PERFECT_ACCURACY = 27,
 *   // If we don't have cover and can't see our target it's possible we will advance, even if the target is in cover
 *   CA_CAN_USE_FRUSTRATED_ADVANCE	= 28,
 *   // This will have the ped move to defensive areas and within attack windows before performing the cover search
 *   CA_MOVE_TO_LOCATION_BEFORE_COVER_SEARCH = 29,
 *   // Allow shooting of our weapon even if we don't have LOS (this isn't X-ray vision as it only affects weapon firing)
 *   CA_CAN_SHOOT_WITHOUT_LOS = 30,
 *   // Ped will try to maintain a min distance to the target, even if using defensive areas (currently only for cover finding + usage) 
 *   CA_MAINTAIN_MIN_DISTANCE_TO_TARGET = 31,
 *   // Allows ped to use steamed variations of peeking anims
 *   CA_CAN_USE_PEEKING_VARIATIONS	= 34,
 *   // Disables pinned down behaviors
 *   CA_DISABLE_PINNED_DOWN = 35,
 *   // Disables pinning down others
 *   CA_DISABLE_PIN_DOWN_OTHERS = 36,
 *   // When defensive area is reached the area is cleared and the ped is set to use defensive combat movement
 *   CA_OPEN_COMBAT_WHEN_DEFENSIVE_AREA_IS_REACHED = 37,
 *   // Disables bullet reactions
 *   CA_DISABLE_BULLET_REACTIONS = 38,
 *   // Allows ped to bust the player
 *   CA_CAN_BUST = 39,
 *   // This ped is ignored by other peds when wanted
 *   CA_IGNORED_BY_OTHER_PEDS_WHEN_WANTED = 40,
 *   // Ped is allowed to "jack" vehicles when needing to chase a target in combat
 *   CA_CAN_COMMANDEER_VEHICLES = 41,
 *   // Ped is allowed to flank
 *   CA_CAN_FLANK = 42,
 *   // Ped will switch to advance if they can't find cover
 *   CA_SWITCH_TO_ADVANCE_IF_CANT_FIND_COVER = 43,
 *   // Ped will switch to defensive if they are in cover
 *   CA_SWITCH_TO_DEFENSIVE_IF_IN_COVER = 44,
 *   // Ped will clear their primary defensive area when it is reached
 *   CA_CLEAR_PRIMARY_DEFENSIVE_AREA_WHEN_REACHED = 45,
 *   // Ped is allowed to fight armed peds when not armed
 *   CA_CAN_FIGHT_ARMED_PEDS_WHEN_NOT_ARMED = 46,
 *   // Ped is not allowed to use tactical points if set to use defensive movement (will only use cover)
 *   CA_ENABLE_TACTICAL_POINTS_WHEN_DEFENSIVE = 47,
 *   // Ped cannot adjust cover arcs when testing cover safety (atm done on corner cover points when  ped usingdefensive area + no LOS)
 *   CA_DISABLE_COVER_ARC_ADJUSTMENTS = 48,
 *   // Ped may use reduced accuracy with large number of enemies attacking the same local player target
 *   CA_USE_ENEMY_ACCURACY_SCALING	= 49,
 *   // Ped is allowed to charge the enemy position
 *   CA_CAN_CHARGE = 50,
 *   // When defensive area is reached the area is cleared and the ped is set to use will advance movement
 *   CA_REMOVE_AREA_SET_WILL_ADVANCE_WHEN_DEFENSIVE_AREA_REACHED = 51,
 *   // Use the vehicle attack mission during combat (only works on driver)
 *   CA_USE_VEHICLE_ATTACK = 52,
 *   // Use the vehicle attack mission during combat if the vehicle has mounted guns (only works on driver)
 *   CA_USE_VEHICLE_ATTACK_IF_VEHICLE_HAS_MOUNTED_GUNS = 53,
 *   // Always equip best weapon in combat
 *   CA_ALWAYS_EQUIP_BEST_WEAPON = 54,
 *   // Ignores in water at depth visibility check
 *   CA_CAN_SEE_UNDERWATER_PEDS = 55,
 *   // Will prevent this ped from aiming at any AI targets that are in helicopters
 *   CA_DISABLE_AIM_AT_AI_TARGETS_IN_HELIS = 56,
 *   // Disables peds seeking due to no clear line of sight
 *   CA_DISABLE_SEEK_DUE_TO_LINE_OF_SIGHT = 57,
 *   // To be used when releasing missions peds if we don't want them fleeing from combat (mission peds already prevent flee)
 *   CA_DISABLE_FLEE_FROM_COMBAT = 58,
 *   // Disables target changes during vehicle pursuit
 *   CA_DISABLE_TARGET_CHANGES_DURING_VEHICLE_PURSUIT = 59,
 *   // Ped may throw a smoke grenade at player loitering in combat
 *   CA_CAN_THROW_SMOKE_GRENADE = 60,
 *   // Will clear a set defensive area if that area cannot be reached
 *   CA_CLEAR_AREA_SET_DEFENSIVE_IF_DEFENSIVE_CANNOT_BE_REACHED = 62,
 *   // Disable block from pursue during vehicle chases
 *   CA_DISABLE_BLOCK_FROM_PURSUE_DURING_VEHICLE_CHASE = 64,
 *   // Disable spin out during vehicle chases
 *   CA_DISABLE_SPIN_OUT_DURING_VEHICLE_CHASE = 65,
 *   // Disable cruise in front during block during vehicle chases
 *   CA_DISABLE_CRUISE_IN_FRONT_DURING_BLOCK_DURING_VEHICLE_CHASE = 66,
 *   // Makes it more likely that the ped will continue targeting a target with blocked los for a few seconds
 *   CA_CAN_IGNORE_BLOCKED_LOS_WEIGHTING = 67,
 *   // Disables the react to buddy shot behaviour.
 *   CA_DISABLE_REACT_TO_BUDDY_SHOT = 68,
 *   // Prefer pathing using navmesh over road nodes
 *   CA_PREFER_NAVMESH_DURING_VEHICLE_CHASE = 69,
 *   // Ignore road edges when avoiding
 *   CA_ALLOWED_TO_AVOID_OFFROAD_DURING_VEHICLE_CHASE = 70,
 *   // Permits ped to charge a target outside the assigned defensive area.
 *   CA_PERMIT_CHARGE_BEYOND_DEFENSIVE_AREA = 71,
 *   // This ped will switch to an RPG if target is in a vehicle, otherwise will use alternate weapon.
 *   CA_USE_ROCKETS_AGAINST_VEHICLES_ONLY = 72,
 *   // Disables peds moving to a tactical point without clear los
 *   CA_DISABLE_TACTICAL_POINTS_WITHOUT_CLEAR_LOS = 73,
 *   // Disables pull alongside during vehicle chase
 *   CA_DISABLE_PULL_ALONGSIDE_DURING_VEHICLE_CHASE = 74,
 *   // If set on a ped, they will not flee when all random peds flee is set to TRUE (they are still able to flee due to other reasons)
 *   CA_DISABLE_ALL_RANDOMS_FLEE = 78,
 *   // This ped will send out a script DeadPedSeenEvent when they see a dead ped
 *   CA_WILL_GENERATE_DEAD_PED_SEEN_SCRIPT_EVENTS = 79,
 *   // This will use the receiving peds sense range rather than the range supplied to the communicate event
 *   CA_USE_MAX_SENSE_RANGE_WHEN_RECEIVING_EVENTS = 80,
 *   // When aiming from a vehicle the ped will only aim at targets on his side of the vehicle
 *   CA_RESTRICT_IN_VEHICLE_AIMING_TO_CURRENT_SIDE = 81,
 *   // LOS to the target is blocked we return to our default position and direction until we have LOS (no aiming)
 *   CA_USE_DEFAULT_BLOCKED_LOS_POSITION_AND_DIRECTION = 82,
 *   // LOS to the target is blocked we return to our default position and direction until we have LOS (no aiming)
 *   CA_REQUIRES_LOS_TO_AIM = 83,
 *   // Allow vehicles spawned infront of target facing away to enter cruise and wait to block approaching target
 *   CA_CAN_CRUISE_AND_BLOCK_IN_VEHICLE = 84,
 *   // Peds flying aircraft will prefer to target other aircraft over entities on the ground
 *   CA_PREFER_AIR_COMBAT_WHEN_IN_AIRCRAFT = 85,
 *   //Allow peds flying aircraft to use dog fighting behaviours
 *   CA_ALLOW_DOG_FIGHTING = 86,
 *   // This will make the weight of targets who aircraft vehicles be reduced greatly compared to targets on foot or in ground based vehicles
 *   CA_PREFER_NON_AIRCRAFT_TARGETS = 87,
 *   //When peds are tasked to go to combat, they keep searching for a known target for a while before forcing an unknown one
 *   CA_PREFER_KNOWN_TARGETS_WHEN_COMBAT_CLOSEST_TARGET = 88,
 *   // Only allow mounted weapons to fire if within the correct attack angle (default 25-degree cone). On a flag in order to keep exiting behaviour and only fix in specific cases.
 *   CA_FORCE_CHECK_ATTACK_ANGLE_FOR_MOUNTED_GUNS = 89,
 *   // Blocks the firing state for passenger-controlled mounted weapons. Existing flags CA_USE_VEHICLE_ATTACK and CA_USE_VEHICLE_ATTACK_IF_VEHICLE_HAS_MOUNTED_GUNS only work for drivers.
 *   CA_BLOCK_FIRE_FOR_VEHICLE_PASSENGER_MOUNTED_GUNS = 90 
 * };
 * ```
 * @param ped - 
 * @param attributeIndex - 
 * @param enabled - 
 * @returns void
 * @remarks Hash: 0x9F7794730795E019
 */
export function setPedCombatAttributes(ped: number, attributeIndex: number, enabled: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param event - 
 * @returns number
 * @remarks Hash: 0x625B774D75C87068
 */
export function isPedRespondingToEvent(ped: number, event: any): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param componentId - 
 * @returns number
 * @remarks Hash: 0x27561561732A7842
 */
export function getNumberOfPedDrawableVariations(ped: number, componentId: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x5407B7288D0478B7
 */
export function 0x5407b7288d0478b7(p0: any): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xFF287323B0E2C69A
 */
export function FreezePedCameraRotation(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xCD5003B097200F36
 */
export function getDeadPedPickupCoords(ped: number, p1: number, p2: number): { x: number, y: number, z: number };

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x3C67506996001F5E
 */
export function spawnpointsIsSearchActive(): number;

/**
 * ## Parameters
 * *
 * @param colorId - 
 * @returns number
 * @remarks Hash: 0xED6D8E27A43B8CDE
 */
export function IsPedHairColorValid2(colorId: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x6A03BF943D767C93
 */
export function isPedInHighCover(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param clipSet - 
 * @returns void
 * @remarks Hash: 0x2622E35B77D3ACA2
 */
export function setPedWeaponMovementClipset(ped: number, clipSet: string): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x444CB7D7DBE6973D
 */
export function setCreateRandomCopsOnScenarios(toggle: number): void;

/**
 * ```
 * _SET_PED_HEAD_* - _SET_PED_HEARING_*
 * 
 * _SET_PED_HEALTH_...
 * ```
 * 
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB3352E018D6F89DF
 */
export function 0xb3352e018d6f89df(toggle: number): void;

/**
 * Sets whether a pedestrian should wear a helmet.
 * @param ped - 
 * @param bEnable - 
 * @returns void
 * @remarks Hash: 0x560A43136EB58105
 */
export function setPedHelmet(ped: number, bEnable: number): void;

/**
 * ```
 * This native refers to the field of vision the ped has below them, starting at 0 degrees. The angle value should be negative.  
 * ```
 * @param ped - 
 * @param angle - 
 * @returns void
 * @remarks Hash: 0x7A276EB2C224D70F
 */
export function setPedVisualFieldMinElevationAngle(ped: number, angle: number): void;

/**
 * ```
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/  
 * ```
 * @param id - 
 * @returns number
 * @remarks Hash: 0x7085228842B13A67
 */
export function isPedheadshotReady(id: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x5917BBA32D06C230
 */
export function setScriptedAnimSeatOffset(ped: number, p1: number): void;

/**
 * ```
 * 0: Freedom to move
 * 1: Circle Around Leader
 * 2: Alternative Circle Around Leader  
 * 3: Line, with Leader at center  
 * 4: Arrow Formation
 * 5: "V" Formation
 * 6: Line Follow Formation
 * 7: Single Formation
 * 8: Pairwise
 * ```
 * @param groupId - 
 * @param formationType - 
 * @returns void
 * @remarks Hash: 0xCE2F5FC3AF7E8C1E
 */
export function setGroupFormation(groupId: number, formationType: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x1280804F7CFD2D6C
 */
export function clearPedParachutePackVariation(ped: number): void;

/**
 * ```
 * Returns whether the specified ped is reloading.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x24B100C68C645951
 */
export function isPedReloading(ped: number): number;

/**
 * ```
 * Maximum possible amount of money on MP is 2000. ~JX
 * @param ped - 
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xA9C8960E8684C1B5
 */
export function setPedMoney(ped: number, amount: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param returnHandle - 
 * @returns number
 * @remarks Hash: 0x9B62392B474F44A0
 */
export function createRandomPedAsDriver(vehicle: number, returnHandle: number): number;

/**
 * ## Parameters
 * *
 * @param groupHandle - 
 * @returns void
 * @remarks Hash: 0x63DAB4CCB3273205
 */
export function resetGroupFormationDefaultSpacing(groupHandle: number): void;

/**
 * ```
 * damages a ped with the given amount
 * @param ped - 
 * @param damageAmount - 
 * @param armorFirst - 
 * @returns void
 * @remarks Hash: 0x697157CED63F18D4
 */
export function applyDamageToPed(ped: number, damageAmount: number, armorFirst: number): void;

/**
 * Console/PC structure definitions and example: pastebin.com/SsFej963
 * 
 * For FiveM/Cfx.Re use-cases refer to: [`GET_GAME_POOL`](#_0x2B9D4F50).
 * @param ped - 
 * @param sizeAndPeds - 
 * @param ignore - 
 * @returns number
 * @remarks Hash: 0x23F8F5FC7E8C4A6B
 */
export function getPedNearbyPeds(ped: number, sizeAndPeds: number, ignore: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xD125AE748725C6BC
 */
export function isPedDucking(ped: number): number;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param ped - 
 * @param animDict - 
 * @param anim - 
 * @returns number
 * @remarks Hash: 0x6EC47A344923E1ED
 */
export function isScriptedScenarioPedUsingConditionalAnim(ped: number, animDict: string, anim: string): number;

/**
 * ## Parameters
 * *
 * @param groupID - 
 * @returns number
 * @remarks Hash: 0x5CCE68DBD5FE93EC
 */
export function getPedAsGroupLeader(groupID: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x97B0DB5B4AA74E77
 */
export function resetPedWeaponMovementClipset(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x3AC1F7B898F30C05
 */
export function resetPedVisibleDamage(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xEEB64139BA29A7CF
 */
export function setPedDiesInstantlyInWater(ped: number, toggle: number): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x1216E0BFA72CC703
 */
export function 0x1216e0bfa72cc703(p0: any, p1: any): void;

/**
 * ```c
 * enum eNMFallType {
 *     TYPE_FROM_HIGH = 0,
 *     TYPE_OVER_WALL = 1,
 *     TYPE_DOWN_STAIRS = 2,
 *     TYPE_DIE_TYPES = 3,
 *     TYPE_DIE_FROM_HIGH = 4,
 *     TYPE_DIE_OVER_WALL = 5,
 *     TYPE_DIE_DOWN_STAIRS = 6
 * }
 * ```
 * 
 * ```
 * Return variable is never used in R*'s scripts.  
 * Not sure what p2 does. It seems like it would be a time judging by it's usage in R*'s scripts, but didn't seem to affect anything in my testings.  
 * x, y, and z are coordinates, most likely to where the ped will fall.  
 * p7 is probably the force of the fall, but untested, so I left the variable name the same.  
 * p8 to p13 are always 0f in R*'s scripts.  
 * (Simplified) Example of the usage of the function from R*'s scripts:  
 * ped::set_ped_to_ragdoll_with_fall(ped, 1500, 2000, 1, -entity::get_entity_forward_vector(ped), 1f, 0f, 0f, 0f, 0f, 0f, 0f);  
 * ```
 * @param ped - 
 * @param minTime - 
 * @param maxTime - 
 * @param nFallType - 
 * @param dirX - 
 * @param dirY - 
 * @param dirZ - 
 * @param fGroundHeight - 
 * @param grab1X - 
 * @param grab1Y - 
 * @param grab1Z - 
 * @param grab2X - 
 * @param grab2Y - 
 * @param grab2Z - 
 * @returns number
 * @remarks Hash: 0xD76632D99E4966C8
 */
export function setPedToRagdollWithFall(ped: number, minTime: number, maxTime: number, nFallType: number, dirX: number, dirY: number, dirZ: number, fGroundHeight: number, grab1X: number, grab1Y: number, grab1Z: number, grab2X: number, grab2Y: number, grab2Z: number): number;

/**
 * ## Parameters
 * *
 * @param id - 
 * @returns number
 * @remarks Hash: 0xF0DAEF2F545BEE25
 */
export function requestPedheadshotImgUpload(id: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x6FD7816A36615F48
 */
export function knockOffPedProp(ped: number, p1: number, p2: number, p3: number, p4: number): void;

/**
 * ```
 * There seem to be 26 flags  
 * ```
 * @param ped - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0xD86D101FCFD00A4B
 */
export function clearRagdollBlockingFlags(ped: number, flags: number): void;

/**
 * ```
 * Creates a new NaturalMotion message.  
 * startImmediately: If set to true, the character will perform the message the moment it receives it by GIVE_PED_NM_MESSAGE. If false, the Ped will get the message but won't perform it yet. While it's a boolean value, if negative, the message will not be initialized.  
 * messageId: The ID of the NaturalMotion message.  
 * If a message already exists, this function does nothing. A message exists until the point it has been successfully dispatched by GIVE_PED_NM_MESSAGE.  
 * ```
 * @param startImmediately - 
 * @param messageId - 
 * @returns void
 * @remarks Hash: 0x418EF2A1BCE56685
 */
export function createNmMessage(startImmediately: number, messageId: number): void;

/**
 * ```
 * Ped will no longer get angry when you stay near him.  
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x74D4E028107450A9
 */
export function removePedDefensiveArea(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0x2F074C904D85129E
 */
export function 0x2f074c904d85129e(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;

/**
 * ```
 * i could be time. Only example in the decompiled scripts uses it as -1.
 * ```
 * @param ped - 
 * @param pinned - 
 * @param i - 
 * @returns any
 * @remarks Hash: 0xAAD6D1ACF08F4612
 */
export function setPedPinnedDown(ped: number, pinned: number, i: number): any;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param groupId - 
 * @returns number
 * @remarks Hash: 0x9BB01E3834671191
 */
export function isPedGroupMember(ped: number, groupId: number): number;

/**
 * Remove a helmet from a ped
 * @param ped - 
 * @param instantly - 
 * @returns void
 * @remarks Hash: 0xA7B2458D0AD6DED8
 */
export function removePedHelmet(ped: number, instantly: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param colorID - 
 * @returns number
 * @remarks Hash: 0x09E7ECA981D9B210
 */
export function IsPedBodyBlemishValid(colorID: number): number;

/**
 * ```
 * Prevents the ped from going limp.  
 * [Example: Can prevent peds from falling when standing on moving vehicles.]  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x128F79EDCECE4FD5
 */
export function canPedRagdoll(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x1CCE141467FF42A2
 */
export function setPedCanSmashGlass(ped: number, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2BC338A7B21F4608
 */
export function requestPedVehicleVisibilityTracking(ped: number, p1: number): void;

/**
 * ```c
 * enum ePedMotionState
 * {
 *     MOTIONSTATE_NONE = -294553821, // MotionState_None
 *     MOTIONSTATE_IDLE = -1871534317, // MotionState_Idle
 *     MOTIONSTATE_WALK = -668482597, // MotionState_Walk
 *     MOTIONSTATE_RUN = -530524, // MotionState_Run
 *     MOTIONSTATE_SPRINT = -1115154469, // MotionState_Sprint
 *     MOTIONSTATE_CROUCH_IDLE = 1140525470, // MotionState_Crouch_Idle
 *     MOTIONSTATE_CROUCH_WALK = 147004056, // MotionState_Crouch_Walk
 *     MOTIONSTATE_CROUCH_RUN = 898879241, // MotionState_Crouch_Run
 *     MOTIONSTATE_DONOTHING = 247561816, // MotionState_DoNothing
 *     MOTIONSTATE_ANIMATEDVELOCITY = 1427811395, // MotionState_AnimatedVelocity
 *     MOTIONSTATE_INVEHICLE = -1797663347, // MotionState_InVehicle
 *     MOTIONSTATE_AIMING = 1063765679, // MotionState_Aiming
 *     MOTIONSTATE_DIVING_IDLE = 1212730861, // MotionState_Diving_Idle
 *     MOTIONSTATE_DIVING_SWIM = -1855028596, // MotionState_Diving_Swim
 *     MOTIONSTATE_SWIMMING_TREADWATER = -776007225, // MotionState_Swimming_TreadWater
 *     MOTIONSTATE_DEAD = 230360860, // MotionState_Dead
 *     MOTIONSTATE_STEALTH_IDLE = 1110276645, // MotionState_Stealth_Idle
 *     MOTIONSTATE_STEALTH_WALK = 69908130, // MotionState_Stealth_Walk
 *     MOTIONSTATE_STEALTH_RUN = -83133983, // MotionState_Stealth_Run
 *     MOTIONSTATE_PARACHUTING = -1161760501, // MotionState_Parachuting
 *     MOTIONSTATE_ACTIONMODE_IDLE = -633298724, // MotionState_ActionMode_Idle
 *     MOTIONSTATE_ACTIONMODE_WALK = -762290521, // MotionState_ActionMode_Walk
 *     MOTIONSTATE_ACTIONMODE_RUN = 834330132, // MotionState_ActionMode_Run
 *     MOTIONSTATE_JETPACK = 1398696542 // MotionState_Jetpack
 * }
 * ```
 * @param ped - 
 * @param motionStateHash - 
 * @param shouldReset - 
 * @returns number
 * @remarks Hash: 0xF28965D04F570DCA
 */
export function forcePedMotionState(ped: number, motionStateHash: number, shouldReset: number): number;

/**
 * ```
 * Clears the relationship between two groups. This should be called twice (once for each group).  
 * Relationship types:  
 * 0 = Companion  
 * 1 = Respect  
 * 2 = Like  
 * 3 = Neutral  
 * 4 = Dislike  
 * 5 = Hate  
 * 255 = Pedestrians  
 * (Credits: Inco)  
 * Example:  
 * PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);  
 * PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);  
 * ```
 * @param relationship - 
 * @param group1 - 
 * @param group2 - 
 * @returns void
 * @remarks Hash: 0x5E29243FB56FC6D4
 */
export function clearRelationshipBetweenGroups(relationship: number, group1: number, group2: number): void;

/**
 * For more info please refer to [this](https://gtaforums.com/topic/858970-all-gtao-face-ids-pedset-ped-head-blend-data-explained) topic.
 * @param ped - 
 * @param shapeFirstID - 
 * @param shapeSecondID - 
 * @param shapeThirdID - 
 * @param skinFirstID - 
 * @param skinSecondID - 
 * @param skinThirdID - 
 * @param shapeMix - 
 * @param skinMix - 
 * @param thirdMix - 
 * @param isParent - 
 * @returns void
 * @remarks Hash: 0x9414E18B9434C2FE
 */
export function setPedHeadBlendData(ped: number, shapeFirstID: number, shapeSecondID: number, shapeThirdID: number, skinFirstID: number, skinSecondID: number, skinThirdID: number, shapeMix: number, skinMix: number, thirdMix: number, isParent: number): void;

/**
 * Checks if the component variation is valid, this works great for randomizing components using loops.
 * @param ped - 
 * @param componentId - 
 * @param drawableId - 
 * @param textureId - 
 * @returns number
 * @remarks Hash: 0xE825F6B6CEA7671D
 */
export function isPedComponentVariationValid(ped: number, componentId: number, drawableId: number, textureId: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x451294E859ECC018
 */
export function getPedHelmetStoredHatPropIndex(ped: number): number;

/**
 * Used one time in fmmc_launcher.c instead of CLONE_PED because ?
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x668FD40BCBA5DE48
 */
export function ClonePedEx(ped: number): number;

/**
 * ```
 * Ids
 * 0 - Head
 * 1 - Beard
 * 2 - Hair
 * 3 - Torso
 * 4 - Legs
 * 5 - Hands
 * 6 - Foot
 * 7 - Scarfs/Neck Accessories
 * 8 - Accessories 1
 * 9 - Accessories 2
 * 10- Decals
 * 11 - Auxiliary parts for torso
 * ```
 * @param ped - 
 * @param componentId - 
 * @returns number
 * @remarks Hash: 0x67F3780DD425D4FC
 */
export function getPedDrawableVariation(ped: number, componentId: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xD1871251F3B5ACD7
 */
export function isPedRunningMeleeTask(ped: number): number;

/**
 * ```
 * Used for freemode (online) characters. 
 * Called after SET_PED_HEAD_OVERLAY().  
 * ```
 * @param ped - 
 * @param overlayID - 
 * @param colorType - 
 * @param colorID - 
 * @param secondColorID - 
 * @returns void
 * @remarks Hash: 0x497BF74A7B9CB952
 */
export function SetPedHeadOverlayColor(ped: number, overlayID: number, colorType: number, colorID: number, secondColorID: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param team - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xBF1CA77833E58F2C
 */
export function setPedCanBeTargettedByTeam(ped: number, team: number, toggle: number): void;

/**
 * ```
 * SET_PED_ALLOW*
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x49E50BDB8BA4DAB2
 */
export function 0x49e50bdb8ba4dab2(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param id - 
 * @returns void
 * @remarks Hash: 0x5D517B27CF6ECD04
 */
export function releasePedheadshotImgUpload(id: number): void;

/**
 * ```
 * Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.  
 * If the handle is invalid, the function returns true.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xD839450756ED5A80
 */
export function isPedFatallyInjured(ped: number): number;

/**
 * ```
 * Sets Ped Default Clothes  
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x45EEE61580806D63
 */
export function setPedDefaultComponentVariation(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x6647C5F6F5792496
 */
export function setPedCanTorsoVehicleIk(ped: number, p1: number): void;

/**
 * ```
 * FIRING_PATTERN_BURST_FIRE = 0xD6FF6D61 ( 1073727030 )  
 * FIRING_PATTERN_BURST_FIRE_IN_COVER = 0x026321F1 ( 40051185 )  
 * FIRING_PATTERN_BURST_FIRE_DRIVEBY = 0xD31265F2 ( -753768974 )  
 * FIRING_PATTERN_FROM_GROUND = 0x2264E5D6 ( 577037782 )  
 * FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 0x7A845691 ( 2055493265 )  
 * FIRING_PATTERN_FULL_AUTO = 0xC6EE6B4C ( -957453492 )  
 * FIRING_PATTERN_SINGLE_SHOT = 0x5D60E4E0 ( 1566631136 )  
 * FIRING_PATTERN_BURST_FIRE_PISTOL = 0xA018DB8A ( -1608983670 )  
 * FIRING_PATTERN_BURST_FIRE_SMG = 0xD10DADEE ( 1863348768 )  
 * FIRING_PATTERN_BURST_FIRE_RIFLE = 0x9C74B406 ( -1670073338 )  
 * FIRING_PATTERN_BURST_FIRE_MG = 0xB573C5B4 ( -1250703948 )  
 * FIRING_PATTERN_BURST_FIRE_PUMPSHOTGUN = 0x00BAC39B ( 12239771 )  
 * FIRING_PATTERN_BURST_FIRE_HELI = 0x914E786F ( -1857128337 )  
 * FIRING_PATTERN_BURST_FIRE_MICRO = 0x42EF03FD ( 1122960381 )  
 * FIRING_PATTERN_SHORT_BURSTS = 0x1A92D7DF ( 445831135 )  
 * FIRING_PATTERN_SLOW_FIRE_TANK = 0xE2CA3A71 ( -490063247 )  
 * if anyone is interested firing pattern info: pastebin.com/Px036isB  
 * ```
 * @param ped - 
 * @param patternHash - 
 * @returns void
 * @remarks Hash: 0x9AC577F5A12AD8A9
 */
export function setPedFiringPattern(ped: number, patternHash: number): void;

/**
 * ```
 * xyz - relative to the world origin.  
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @returns number
 * @remarks Hash: 0x16EC4839969F9F5E
 */
export function isCopPedInArea3d(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;

/**
 * ```
 * This only will teleport the ped to the group leader if the group leader teleports (sets coords).  
 * Only works in singleplayer  
 * ```
 * @param pedHandle - 
 * @param groupHandle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2E2F4240B3F24647
 */
export function setPedCanTeleportToGroupLeader(pedHandle: number, groupHandle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xB2C086CC1BF8F2BF
 */
export function isPedDoingDriveby(ped: number): number;

/**
 * ```
 * FORCE_*
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xED3C76ADFA6D07C4
 */
export function 0xed3c76adfa6d07c4(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param clipSet - 
 * @returns void
 * @remarks Hash: 0x29A28F3F8CF6D854
 */
export function setPedStrafeClipset(ped: number, clipSet: string): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2A30922C90C9B42C
 */
export function setPedDiesInVehicle(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param itemSet - 
 * @returns void
 * @remarks Hash: 0x8421EB4DA7E391B9
 */
export function setPedPreferredCoverSet(ped: number, itemSet: any): void;

/**
 * ```
 * GET_*
 * ```
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x1E77FA7A62EE6C4C
 */
export function 0x1e77fa7a62ee6c4c(p0: any): any;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x796D90EFB19AA332
 */
export function isPedInModel(ped: number, modelHash: number): number;

/**
 * Examines whether the ped is engaged in combat; when given a target ped index, it confirms if the ped is actively fighting the specified target, returning true if engaged and false if not.
 * @param ped - 
 * @param target - 
 * @returns number
 * @remarks Hash: 0x4859F1FC66A6278E
 */
export function isPedInCombat(ped: number, target: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x56CEF0AC79073BDE
 */
export function setPedDiesInWater(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xA9B61A329BFDCBEA
 */
export function 0xa9b61a329bfdcbea(p0: any, p1: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x7350823473013C02
 */
export function haveAllStreamingRequestsCompleted(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x863B23EFDE9C5DF2
 */
export function isPedBeingStealthKilled(ped: number): number;

/**
 * ```
 * This is only called once in the scripts.
 * sub_1CD9(&l_49, 0, getElem(3, &l_34, 4), "MICHAEL", 0, 1);
 *                     sub_1CA8("WORLD_HUMAN_SMOKING", 2);
 *                     PED::SET_PED_PRIMARY_LOOKAT(getElem(3, &l_34, 4), PLAYER::PLAYER_PED_ID());
 * ```
 * @param ped - 
 * @param lookAt - 
 * @returns void
 * @remarks Hash: 0xCD17B554996A8D9E
 */
export function setPedPrimaryLookat(ped: number, lookAt: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE88DA0751C22A2AD
 */
export function setPedReserveParachuteTintIndex(ped: number, p1: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xEBD0EDBA5BE957CF
 */
export function isPedPerformingDependentComboLimit(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x62AB793144DE75DC
 */
export function hidePedBloodDamageByZone(ped: number, p1: any, p2: number): void;

/**
 * This native sets a scuba mask for freemode models and an oxygen bottle for player_* models. It works on freemode and player_* models.
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x36C6984C3ED0C911
 */
export function SetPedScubaGearVariation(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x9C14D30395A51A3C
 */
export function getPedEnveffScale(ped: number): number;

/**
 * ## Parameters
 * *
 * @param sceneID - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD9A897A4C6C2974F
 */
export function setSynchronizedSceneLooped(sceneID: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xAD27D957598E49E9
 */
export function 0xad27d957598e49e9(ped: number, p1: any, p2: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xCEDA60A74219D064
 */
export function 0xceda60a74219d064(p0: any, p1: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param p7 - 
 * @param p8 - 
 * @returns number
 * @remarks Hash: 0x7E9DFE24AC1E58EF
 */
export function isPedShootingInArea(ped: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p7: number, p8: number): number;

/**
 * Determines if a ped is dead. Contrary to what the name might suggest, it does not always detect when a ped is in the 'dying' phase (transitioning to death). The exception is when `checkMeleeDeathFlags` is set to `true`, which then includes peds in the midst of melee takedown moves as being in a dying state, even if the death task has not yet started.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param ped - 
 * @param checkMeleeDeathFlags - 
 * @returns number
 * @remarks Hash: 0x3317DEDB88C95038
 */
export function isPedDeadOrDying(ped: number, checkMeleeDeathFlags: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x576594E8D64375E2
 */
export function setPedBlocksPathingWhenDead(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param outTintIndex - 
 * @returns void
 * @remarks Hash: 0xEAF5F7E5AE7C6C9D
 */
export function getPedParachuteTintIndex(ped: number, outTintIndex: number): void;

/**
 * ```
 * PED::REGISTER_TARGET(l_216, PLAYER::PLAYER_PED_ID()); from re_prisonbreak.txt.  
 * l_216 = RECSBRobber1  
 * ```
 * @param ped - 
 * @param target - 
 * @returns void
 * @remarks Hash: 0x2F25D9AEFA34FBA2
 */
export function registerTarget(ped: number, target: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x600048C60D5C2C51
 */
export function disablePedHeatscaleOverride(ped: number): void;

/**
 * Gives the ped a helmet. Can be removed by invoking [`REMOVE_PED_HELMET`](#_0xA7B2458D0AD6DED8).
 * 
 * ```c
 * enum ePedCompFlags {
 *   PV_FLAG_NONE                  = 0, // 0
 *   PV_FLAG_BULKY                 = 1, // 1<<0
 *   PV_FLAG_JOB                   = 2, // 1<<1
 *   PV_FLAG_SUNNY                 = 4, // 1<<2
 *   PV_FLAG_WET                   = 8, // 1<<3
 *   PV_FLAG_COLD                  = 16, // 1<<4
 *   PV_FLAG_NOT_IN_CAR            = 32, // 1<<5
 *   PV_FLAG_BIKE_ONLY             = 64, // 1<<6
 *   PV_FLAG_NOT_INDOORS           = 128, // 1<<7
 *   PV_FLAG_FIRE_RETARDENT        = 256, // 1<<8
 *   PV_FLAG_ARMOURED              = 512, // 1<<9
 *   PV_FLAG_LIGHTLY_ARMOURED      = 1024, // 1<<10
 *   PV_FLAG_HIGH_DETAIL           = 2048, // 1<<11
 *   PV_FLAG_DEFAULT_HELMET        = 4096, // 1<<12
 *   PV_FLAG_RANDOM_HELMET         = 8192, // 1<<13
 *   PV_FLAG_SCRIPT_HELMET         = 16384, // 1<<14
 *   PV_FLAG_FLIGHT_HELMET         = 32768, // 1<<15
 *   PV_FLAG_HIDE_IN_FIRST_PERSON  = 65536, // 1<<16
 *   PV_FLAG_USE_PHYSICS_HAT_2     = 131072, // 1<<17
 *   PV_FLAG_PILOT_HELMET          = 262144 // 1<<18
 * };
 * ```
 * @param ped - 
 * @param cannotRemove - 
 * @param helmetFlag - 
 * @param textureIndex - 
 * @returns void
 * @remarks Hash: 0x54C7C4A94367717E
 */
export function givePedHelmet(ped: number, cannotRemove: number, helmetFlag: number, textureIndex: number): void;

/**
 * Input: Makeup color index, value between 0 and 63 (inclusive).
 * Output: RGB values for the makeup color specified in the input.
 * 
 * This is used with the makeup color swatches scaleform.
 * 
 * Use [`_0x4852FC386E2E1BB5`](#_0x4852FC386E2E1BB5) to get the hair colors.
 * @param makeupColorIndex - 
 * @param outR - 
 * @param outG - 
 * @param outB - 
 * @returns void
 * @remarks Hash: 0x013E5CFC38CD5387
 */
export function GetPedMakeupRgbColor(makeupColorIndex: number, outR: number, outG: number, outB: number): void;

/**
 * ```c
 * enum ePedDecorationZone
 * {
 * 	ZONE_TORSO = 0,
 * 	ZONE_HEAD = 1,
 * 	ZONE_LEFT_ARM = 2,
 * 	ZONE_RIGHT_ARM = 3,
 * 	ZONE_LEFT_LEG = 4,
 * 	ZONE_RIGHT_LEG = 5,
 * 	ZONE_UNKNOWN = 6,
 * 	ZONE_NONE = 7
 * };
 * ```
 * @param collection - 
 * @param overlay - 
 * @returns number
 * @remarks Hash: 0x9FD452BFBE7A7A8B
 */
export function getPedDecorationZoneFromHashes(collection: number, overlay: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @returns void
 * @remarks Hash: 0x87052FE446E07247
 */
export function setPedCoordsNoGang(ped: number, posX: number, posY: number, posZ: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xC1F6EBF9A3D55538
 */
export function setPedHeatscaleOverride(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xEB6FB9D48DDE23EC
 */
export function setPedSteersAroundVehicles(ped: number, toggle: number): void;

/**
 * ```
 * Setting ped to true allows the ped to shoot "friendlies".  
 * p2 set to true when toggle is also true seams to make peds permanently unable to aim at, even if you set p2 back to false.  
 * p1 = false & p2 = false for unable to aim at.  
 * p1 = true & p2 = false for able to aim at.  
 * ```
 * @param ped - 
 * @param toggle - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xB3B1CB349FF9C75D
 */
export function setCanAttackFriendly(ped: number, toggle: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xED7F7EFE9FABF340
 */
export function setPedCanSwitchWeapon(ped: number, toggle: number): void;

/**
 * ```
 * Gets a value indicating whether the specified ped is in the specified vehicle.  
 * If 'atGetIn' is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If it's true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if it's true, it'll return true the moment the hatch has been opened and the ped is about to descend into the submersible.  
 * ```
 * @param ped - 
 * @param vehicle - 
 * @param atGetIn - 
 * @returns number
 * @remarks Hash: 0xA3EE4A07279BB9DB
 */
export function isPedInVehicle(ped: number, vehicle: number, atGetIn: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x5527B8246FEF9B11
 */
export function isPedDiving(ped: number): number;

/**
 * ```c
 * enum ePedBoneId : uint16_t
 * {
 *     SKEL_ROOT = 0x0,
 *     SKEL_Pelvis = 0x2E28,
 *     SKEL_L_Thigh = 0xE39F,
 *     SKEL_L_Calf = 0xF9BB,
 *     SKEL_L_Foot = 0x3779,
 *     SKEL_L_Toe0 = 0x83C,
 *     EO_L_Foot = 0x84C5,
 *     EO_L_Toe = 0x68BD,
 *     IK_L_Foot = 0xFEDD,
 *     PH_L_Foot = 0xE175,
 *     MH_L_Knee = 0xB3FE,
 *     SKEL_R_Thigh = 0xCA72,
 *     SKEL_R_Calf = 0x9000,
 *     SKEL_R_Foot = 0xCC4D,
 *     SKEL_R_Toe0 = 0x512D,
 *     EO_R_Foot = 0x1096,
 *     EO_R_Toe = 0x7163,
 *     IK_R_Foot = 0x8AAE,
 *     PH_R_Foot = 0x60E6,
 *     MH_R_Knee = 0x3FCF,
 *     RB_L_ThighRoll = 0x5C57,
 *     RB_R_ThighRoll = 0x192A,
 *     SKEL_Spine_Root = 0xE0FD,
 *     SKEL_Spine0 = 0x5C01,
 *     SKEL_Spine1 = 0x60F0,
 *     SKEL_Spine2 = 0x60F1,
 *     SKEL_Spine3 = 0x60F2,
 *     SKEL_L_Clavicle = 0xFCD9,
 *     SKEL_L_UpperArm = 0xB1C5,
 *     SKEL_L_Forearm = 0xEEEB,
 *     SKEL_L_Hand = 0x49D9,
 *     SKEL_L_Finger00 = 0x67F2,
 *     SKEL_L_Finger01 = 0xFF9,
 *     SKEL_L_Finger02 = 0xFFA,
 *     SKEL_L_Finger10 = 0x67F3,
 *     SKEL_L_Finger11 = 0x1049,
 *     SKEL_L_Finger12 = 0x104A,
 *     SKEL_L_Finger20 = 0x67F4,
 *     SKEL_L_Finger21 = 0x1059,
 *     SKEL_L_Finger22 = 0x105A,
 *     SKEL_L_Finger30 = 0x67F5,
 *     SKEL_L_Finger31 = 0x1029,
 *     SKEL_L_Finger32 = 0x102A,
 *     SKEL_L_Finger40 = 0x67F6,
 *     SKEL_L_Finger41 = 0x1039,
 *     SKEL_L_Finger42 = 0x103A,
 *     PH_L_Hand = 0xEB95,
 *     IK_L_Hand = 0x8CBD,
 *     RB_L_ForeArmRoll = 0xEE4F,
 *     RB_L_ArmRoll = 0x1470,
 *     MH_L_Elbow = 0x58B7,
 *     SKEL_R_Clavicle = 0x29D2,
 *     SKEL_R_UpperArm = 0x9D4D,
 *     SKEL_R_Forearm = 0x6E5C,
 *     SKEL_R_Hand = 0xDEAD,
 *     SKEL_R_Finger00 = 0xE5F2,
 *     SKEL_R_Finger01 = 0xFA10,
 *     SKEL_R_Finger02 = 0xFA11,
 *     SKEL_R_Finger10 = 0xE5F3,
 *     SKEL_R_Finger11 = 0xFA60,
 *     SKEL_R_Finger12 = 0xFA61,
 *     SKEL_R_Finger20 = 0xE5F4,
 *     SKEL_R_Finger21 = 0xFA70,
 *     SKEL_R_Finger22 = 0xFA71,
 *     SKEL_R_Finger30 = 0xE5F5,
 *     SKEL_R_Finger31 = 0xFA40,
 *     SKEL_R_Finger32 = 0xFA41,
 *     SKEL_R_Finger40 = 0xE5F6,
 *     SKEL_R_Finger41 = 0xFA50,
 *     SKEL_R_Finger42 = 0xFA51,
 *     PH_R_Hand = 0x6F06,
 *     IK_R_Hand = 0x188E,
 *     RB_R_ForeArmRoll = 0xAB22,
 *     RB_R_ArmRoll = 0x90FF,
 *     MH_R_Elbow = 0xBB0,
 *     SKEL_Neck_1 = 0x9995,
 *     SKEL_Head = 0x796E,
 *     IK_Head = 0x322C,
 *     FACIAL_facialRoot = 0xFE2C,
 *     FB_L_Brow_Out_000 = 0xE3DB,
 *     FB_L_Lid_Upper_000 = 0xB2B6,
 *     FB_L_Eye_000 = 0x62AC,
 *     FB_L_CheekBone_000 = 0x542E,
 *     FB_L_Lip_Corner_000 = 0x74AC,
 *     FB_R_Lid_Upper_000 = 0xAA10,
 *     FB_R_Eye_000 = 0x6B52,
 *     FB_R_CheekBone_000 = 0x4B88,
 *     FB_R_Brow_Out_000 = 0x54C,
 *     FB_R_Lip_Corner_000 = 0x2BA6,
 *     FB_Brow_Centre_000 = 0x9149,
 *     FB_UpperLipRoot_000 = 0x4ED2,
 *     FB_UpperLip_000 = 0xF18F,
 *     FB_L_Lip_Top_000 = 0x4F37,
 *     FB_R_Lip_Top_000 = 0x4537,
 *     FB_Jaw_000 = 0xB4A0,
 *     FB_LowerLipRoot_000 = 0x4324,
 *     FB_LowerLip_000 = 0x508F,
 *     FB_L_Lip_Bot_000 = 0xB93B,
 *     FB_R_Lip_Bot_000 = 0xC33B,
 *     FB_Tongue_000 = 0xB987,
 *     RB_Neck_1 = 0x8B93,
 *     SPR_L_Breast = 0xFC8E,
 *     SPR_R_Breast = 0x885F,
 *     IK_Root = 0xDD1C,
 *     SKEL_Neck_2 = 0x5FD4,
 *     SKEL_Pelvis1 = 0xD003,
 *     SKEL_PelvisRoot = 0x45FC,
 *     SKEL_SADDLE = 0x9524,
 *     MH_L_CalfBack = 0x1013,
 *     MH_L_ThighBack = 0x600D,
 *     SM_L_Skirt = 0xC419,
 *     MH_R_CalfBack = 0xB013,
 *     MH_R_ThighBack = 0x51A3,
 *     SM_R_Skirt = 0x7712,
 *     SM_M_BackSkirtRoll = 0xDBB,
 *     SM_L_BackSkirtRoll = 0x40B2,
 *     SM_R_BackSkirtRoll = 0xC141,
 *     SM_M_FrontSkirtRoll = 0xCDBB,
 *     SM_L_FrontSkirtRoll = 0x9B69,
 *     SM_R_FrontSkirtRoll = 0x86F1,
 *     SM_CockNBalls_ROOT = 0xC67D,
 *     SM_CockNBalls = 0x9D34,
 *     MH_L_Finger00 = 0x8C63,
 *     MH_L_FingerBulge00 = 0x5FB8,
 *     MH_L_Finger10 = 0x8C53,
 *     MH_L_FingerTop00 = 0xA244,
 *     MH_L_HandSide = 0xC78A,
 *     MH_Watch = 0x2738,
 *     MH_L_Sleeve = 0x933C,
 *     MH_R_Finger00 = 0x2C63,
 *     MH_R_FingerBulge00 = 0x69B8,
 *     MH_R_Finger10 = 0x2C53,
 *     MH_R_FingerTop00 = 0xEF4B,
 *     MH_R_HandSide = 0x68FB,
 *     MH_R_Sleeve = 0x92DC,
 *     FACIAL_jaw = 0xB21,
 *     FACIAL_underChin = 0x8A95,
 *     FACIAL_L_underChin = 0x234E,
 *     FACIAL_chin = 0xB578,
 *     FACIAL_chinSkinBottom = 0x98BC,
 *     FACIAL_L_chinSkinBottom = 0x3E8F,
 *     FACIAL_R_chinSkinBottom = 0x9E8F,
 *     FACIAL_tongueA = 0x4A7C,
 *     FACIAL_tongueB = 0x4A7D,
 *     FACIAL_tongueC = 0x4A7E,
 *     FACIAL_tongueD = 0x4A7F,
 *     FACIAL_tongueE = 0x4A80,
 *     FACIAL_L_tongueE = 0x35F2,
 *     FACIAL_R_tongueE = 0x2FF2,
 *     FACIAL_L_tongueD = 0x35F1,
 *     FACIAL_R_tongueD = 0x2FF1,
 *     FACIAL_L_tongueC = 0x35F0,
 *     FACIAL_R_tongueC = 0x2FF0,
 *     FACIAL_L_tongueB = 0x35EF,
 *     FACIAL_R_tongueB = 0x2FEF,
 *     FACIAL_L_tongueA = 0x35EE,
 *     FACIAL_R_tongueA = 0x2FEE,
 *     FACIAL_chinSkinTop = 0x7226,
 *     FACIAL_L_chinSkinTop = 0x3EB3,
 *     FACIAL_chinSkinMid = 0x899A,
 *     FACIAL_L_chinSkinMid = 0x4427,
 *     FACIAL_L_chinSide = 0x4A5E,
 *     FACIAL_R_chinSkinMid = 0xF5AF,
 *     FACIAL_R_chinSkinTop = 0xF03B,
 *     FACIAL_R_chinSide = 0xAA5E,
 *     FACIAL_R_underChin = 0x2BF4,
 *     FACIAL_L_lipLowerSDK = 0xB9E1,
 *     FACIAL_L_lipLowerAnalog = 0x244A,
 *     FACIAL_L_lipLowerThicknessV = 0xC749,
 *     FACIAL_L_lipLowerThicknessH = 0xC67B,
 *     FACIAL_lipLowerSDK = 0x7285,
 *     FACIAL_lipLowerAnalog = 0xD97B,
 *     FACIAL_lipLowerThicknessV = 0xC5BB,
 *     FACIAL_lipLowerThicknessH = 0xC5ED,
 *     FACIAL_R_lipLowerSDK = 0xA034,
 *     FACIAL_R_lipLowerAnalog = 0xC2D9,
 *     FACIAL_R_lipLowerThicknessV = 0xC6E9,
 *     FACIAL_R_lipLowerThicknessH = 0xC6DB,
 *     FACIAL_nose = 0x20F1,
 *     FACIAL_L_nostril = 0x7322,
 *     FACIAL_L_nostrilThickness = 0xC15F,
 *     FACIAL_noseLower = 0xE05A,
 *     FACIAL_L_noseLowerThickness = 0x79D5,
 *     FACIAL_R_noseLowerThickness = 0x7975,
 *     FACIAL_noseTip = 0x6A60,
 *     FACIAL_R_nostril = 0x7922,
 *     FACIAL_R_nostrilThickness = 0x36FF,
 *     FACIAL_noseUpper = 0xA04F,
 *     FACIAL_L_noseUpper = 0x1FB8,
 *     FACIAL_noseBridge = 0x9BA3,
 *     FACIAL_L_nasolabialFurrow = 0x5ACA,
 *     FACIAL_L_nasolabialBulge = 0xCD78,
 *     FACIAL_L_cheekLower = 0x6907,
 *     FACIAL_L_cheekLowerBulge1 = 0xE3FB,
 *     FACIAL_L_cheekLowerBulge2 = 0xE3FC,
 *     FACIAL_L_cheekInner = 0xE7AB,
 *     FACIAL_L_cheekOuter = 0x8161,
 *     FACIAL_L_eyesackLower = 0x771B,
 *     FACIAL_L_eyeball = 0x1744,
 *     FACIAL_L_eyelidLower = 0x998C,
 *     FACIAL_L_eyelidLowerOuterSDK = 0xFE4C,
 *     FACIAL_L_eyelidLowerOuterAnalog = 0xB9AA,
 *     FACIAL_L_eyelashLowerOuter = 0xD7F6,
 *     FACIAL_L_eyelidLowerInnerSDK = 0xF151,
 *     FACIAL_L_eyelidLowerInnerAnalog = 0x8242,
 *     FACIAL_L_eyelashLowerInner = 0x4CCF,
 *     FACIAL_L_eyelidUpper = 0x97C1,
 *     FACIAL_L_eyelidUpperOuterSDK = 0xAF15,
 *     FACIAL_L_eyelidUpperOuterAnalog = 0x67FA,
 *     FACIAL_L_eyelashUpperOuter = 0x27B7,
 *     FACIAL_L_eyelidUpperInnerSDK = 0xD341,
 *     FACIAL_L_eyelidUpperInnerAnalog = 0xF092,
 *     FACIAL_L_eyelashUpperInner = 0x9B1F,
 *     FACIAL_L_eyesackUpperOuterBulge = 0xA559,
 *     FACIAL_L_eyesackUpperInnerBulge = 0x2F2A,
 *     FACIAL_L_eyesackUpperOuterFurrow = 0xC597,
 *     FACIAL_L_eyesackUpperInnerFurrow = 0x52A7,
 *     FACIAL_forehead = 0x9218,
 *     FACIAL_L_foreheadInner = 0x843,
 *     FACIAL_L_foreheadInnerBulge = 0x767C,
 *     FACIAL_L_foreheadOuter = 0x8DCB,
 *     FACIAL_skull = 0x4221,
 *     FACIAL_foreheadUpper = 0xF7D6,
 *     FACIAL_L_foreheadUpperInner = 0xCF13,
 *     FACIAL_L_foreheadUpperOuter = 0x509B,
 *     FACIAL_R_foreheadUpperInner = 0xCEF3,
 *     FACIAL_R_foreheadUpperOuter = 0x507B,
 *     FACIAL_L_temple = 0xAF79,
 *     FACIAL_L_ear = 0x19DD,
 *     FACIAL_L_earLower = 0x6031,
 *     FACIAL_L_masseter = 0x2810,
 *     FACIAL_L_jawRecess = 0x9C7A,
 *     FACIAL_L_cheekOuterSkin = 0x14A5,
 *     FACIAL_R_cheekLower = 0xF367,
 *     FACIAL_R_cheekLowerBulge1 = 0x599B,
 *     FACIAL_R_cheekLowerBulge2 = 0x599C,
 *     FACIAL_R_masseter = 0x810,
 *     FACIAL_R_jawRecess = 0x93D4,
 *     FACIAL_R_ear = 0x1137,
 *     FACIAL_R_earLower = 0x8031,
 *     FACIAL_R_eyesackLower = 0x777B,
 *     FACIAL_R_nasolabialBulge = 0xD61E,
 *     FACIAL_R_cheekOuter = 0xD32,
 *     FACIAL_R_cheekInner = 0x737C,
 *     FACIAL_R_noseUpper = 0x1CD6,
 *     FACIAL_R_foreheadInner = 0xE43,
 *     FACIAL_R_foreheadInnerBulge = 0x769C,
 *     FACIAL_R_foreheadOuter = 0x8FCB,
 *     FACIAL_R_cheekOuterSkin = 0xB334,
 *     FACIAL_R_eyesackUpperInnerFurrow = 0x9FAE,
 *     FACIAL_R_eyesackUpperOuterFurrow = 0x140F,
 *     FACIAL_R_eyesackUpperInnerBulge = 0xA359,
 *     FACIAL_R_eyesackUpperOuterBulge = 0x1AF9,
 *     FACIAL_R_nasolabialFurrow = 0x2CAA,
 *     FACIAL_R_temple = 0xAF19,
 *     FACIAL_R_eyeball = 0x1944,
 *     FACIAL_R_eyelidUpper = 0x7E14,
 *     FACIAL_R_eyelidUpperOuterSDK = 0xB115,
 *     FACIAL_R_eyelidUpperOuterAnalog = 0xF25A,
 *     FACIAL_R_eyelashUpperOuter = 0xE0A,
 *     FACIAL_R_eyelidUpperInnerSDK = 0xD541,
 *     FACIAL_R_eyelidUpperInnerAnalog = 0x7C63,
 *     FACIAL_R_eyelashUpperInner = 0x8172,
 *     FACIAL_R_eyelidLower = 0x7FDF,
 *     FACIAL_R_eyelidLowerOuterSDK = 0x1BD,
 *     FACIAL_R_eyelidLowerOuterAnalog = 0x457B,
 *     FACIAL_R_eyelashLowerOuter = 0xBE49,
 *     FACIAL_R_eyelidLowerInnerSDK = 0xF351,
 *     FACIAL_R_eyelidLowerInnerAnalog = 0xE13,
 *     FACIAL_R_eyelashLowerInner = 0x3322,
 *     FACIAL_L_lipUpperSDK = 0x8F30,
 *     FACIAL_L_lipUpperAnalog = 0xB1CF,
 *     FACIAL_L_lipUpperThicknessH = 0x37CE,
 *     FACIAL_L_lipUpperThicknessV = 0x38BC,
 *     FACIAL_lipUpperSDK = 0x1774,
 *     FACIAL_lipUpperAnalog = 0xE064,
 *     FACIAL_lipUpperThicknessH = 0x7993,
 *     FACIAL_lipUpperThicknessV = 0x7981,
 *     FACIAL_L_lipCornerSDK = 0xB1C,
 *     FACIAL_L_lipCornerAnalog = 0xE568,
 *     FACIAL_L_lipCornerThicknessUpper = 0x7BC,
 *     FACIAL_L_lipCornerThicknessLower = 0xDD42,
 *     FACIAL_R_lipUpperSDK = 0x7583,
 *     FACIAL_R_lipUpperAnalog = 0x51CF,
 *     FACIAL_R_lipUpperThicknessH = 0x382E,
 *     FACIAL_R_lipUpperThicknessV = 0x385C,
 *     FACIAL_R_lipCornerSDK = 0xB3C,
 *     FACIAL_R_lipCornerAnalog = 0xEE0E,
 *     FACIAL_R_lipCornerThicknessUpper = 0x54C3,
 *     FACIAL_R_lipCornerThicknessLower = 0x2BBA,
 *     MH_MulletRoot = 0x3E73,
 *     MH_MulletScaler = 0xA1C2,
 *     MH_Hair_Scale = 0xC664,
 *     MH_Hair_Crown = 0x1675,
 *     SM_Torch = 0x8D6,
 *     FX_Light = 0x8959,
 *     FX_Light_Scale = 0x5038,
 *     FX_Light_Switch = 0xE18E,
 *     BagRoot = 0xAD09,
 *     BagPivotROOT = 0xB836,
 *     BagPivot = 0x4D11,
 *     BagBody = 0xAB6D,
 *     BagBone_R = 0x937,
 *     BagBone_L = 0x991,
 *     SM_LifeSaver_Front = 0x9420,
 *     SM_R_Pouches_ROOT = 0x2962,
 *     SM_R_Pouches = 0x4141,
 *     SM_L_Pouches_ROOT = 0x2A02,
 *     SM_L_Pouches = 0x4B41,
 *     SM_Suit_Back_Flapper = 0xDA2D,
 *     SPR_CopRadio = 0x8245,
 *     SM_LifeSaver_Back = 0x2127,
 *     MH_BlushSlider = 0xA0CE,
 *     SKEL_Tail_01 = 0x347,
 *     SKEL_Tail_02 = 0x348,
 *     MH_L_Concertina_B = 0xC988,
 *     MH_L_Concertina_A = 0xC987,
 *     MH_R_Concertina_B = 0xC8E8,
 *     MH_R_Concertina_A = 0xC8E7,
 *     MH_L_ShoulderBladeRoot = 0x8711,
 *     MH_L_ShoulderBlade = 0x4EAF,
 *     MH_R_ShoulderBladeRoot = 0x3A0A,
 *     MH_R_ShoulderBlade = 0x54AF,
 *     FB_R_Ear_000 = 0x6CDF,
 *     SPR_R_Ear = 0x63B6,
 *     FB_L_Ear_000 = 0x6439,
 *     SPR_L_Ear = 0x5B10,
 *     FB_TongueA_000 = 0x4206,
 *     FB_TongueB_000 = 0x4207,
 *     FB_TongueC_000 = 0x4208,
 *     SKEL_L_Toe1 = 0x1D6B,
 *     SKEL_R_Toe1 = 0xB23F,
 *     SKEL_Tail_03 = 0x349,
 *     SKEL_Tail_04 = 0x34A,
 *     SKEL_Tail_05 = 0x34B,
 *     SPR_Gonads_ROOT = 0xBFDE,
 *     SPR_Gonads = 0x1C00,
 *     FB_L_Brow_Out_001 = 0xE3DB,
 *     FB_L_Lid_Upper_001 = 0xB2B6,
 *     FB_L_Eye_001 = 0x62AC,
 *     FB_L_CheekBone_001 = 0x542E,
 *     FB_L_Lip_Corner_001 = 0x74AC,
 *     FB_R_Lid_Upper_001 = 0xAA10,
 *     FB_R_Eye_001 = 0x6B52,
 *     FB_R_CheekBone_001 = 0x4B88,
 *     FB_R_Brow_Out_001 = 0x54C,
 *     FB_R_Lip_Corner_001 = 0x2BA6,
 *     FB_Brow_Centre_001 = 0x9149,
 *     FB_UpperLipRoot_001 = 0x4ED2,
 *     FB_UpperLip_001 = 0xF18F,
 *     FB_L_Lip_Top_001 = 0x4F37,
 *     FB_R_Lip_Top_001 = 0x4537,
 *     FB_Jaw_001 = 0xB4A0,
 *     FB_LowerLipRoot_001 = 0x4324,
 *     FB_LowerLip_001 = 0x508F,
 *     FB_L_Lip_Bot_001 = 0xB93B,
 *     FB_R_Lip_Bot_001 = 0xC33B,
 *     FB_Tongue_001 = 0xB987
 * }; 
 * ```
 * @param ped - 
 * @param boneId - 
 * @returns number
 * @remarks Hash: 0x3F428D08BE5AAE31
 */
export function getPedBoneIndex(ped: number, boneId: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x8A4986851C4EF6E7
 */
export function setCreateRandomCopsNotOnScenarios(toggle: number): void;

/**
 * ```
 * Min: 0.00  
 * Max: 10.00  
 * Can be used in combo with fast run cheat.  
 * When value is set to 10.00:  
 * Sprinting without fast run cheat: 66 m/s  
 * Sprinting with fast run cheat: 77 m/s  
 * Needs to be looped!  
 * Note: According to IDA for the Xbox360 xex, when they check bgt they seem to have the min to 0.0f, but the max set to 1.15f not 10.0f.  
 * ```
 * @param ped - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x085BF80FA50A39D1
 */
export function setPedMoveRateOverride(ped: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xDEA92412FCAEB3F5
 */
export function getPedCombatMovement(ped: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xEA9960D07DADCF10
 */
export function 0xea9960d07dadcf10(p0: any): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xF5846EDB26A98A24
 */
export function setPedCanTorsoReactIk(ped: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x1E98817B311AE98A
 */
export function getPedTimeOfDeath(ped: number): number;

/**
 * Input: Haircolor index, value between 0 and 63 (inclusive).
 * Output: RGB values for the haircolor specified in the input.
 * 
 * This is used with the hair color swatches scaleform.
 * 
 * Use [`_0x013E5CFC38CD5387`](#_0x013E5CFC38CD5387) to get the makeup colors.
 * @param hairColorIndex - 
 * @param outR - 
 * @param outG - 
 * @param outB - 
 * @returns void
 * @remarks Hash: 0x4852FC386E2E1BB5
 */
export function GetPedHairRgbColor(hairColorIndex: number, outR: number, outG: number, outB: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x4C5E1F087CD10BB7
 */
export function isPedTracked(ped: number): number;

/**
 * ```
 * works with TASK::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS to make a ped completely oblivious to all events going on around him
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9F8AA94D6D97DBF4
 */
export function setBlockingOfNonTemporaryEvents(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x9911F4A24485F653
 */
export function 0x9911f4a24485f653(p0: number): void;

/**
 * ```
 * state: https://alloc8or.re/gta5/doc/enums/eKnockOffVehicle.txt
 * ```
 * @param ped - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0x7A6535691B477C48
 */
export function setPedCanBeKnockedOffVehicle(ped: number, state: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xE3B6097CC25AA69E
 */
export function isPedRunningRagdollTask(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x814FA8BE5449445D
 */
export function getVehiclePedIsTryingToEnter(ped: number): number;

/**
 * ## Parameters
 * *
 * @param sceneID - 
 * @param rate - 
 * @returns void
 * @remarks Hash: 0xB6C49F8A5E295A5D
 */
export function setSynchronizedSceneRate(sceneID: number, rate: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param targetPed - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x148B08C2D2ACB884
 */
export function ClonePedToTargetEx(ped: number, targetPed: number, p2: any): void;

/**
 * ## Parameters
 * *
 * @param colorId - 
 * @returns number
 * @remarks Hash: 0x3E802F11FBE27674
 */
export function IsPedLipstickColorValid2(colorId: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x9B128DC36C1E04CF
 */
export function getPedsJacker(ped: number): number;

/**
 * ## Parameters
 * *
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @returns number
 * @remarks Hash: 0x8A24B067D175A7BD
 */
export function DoesScenarioBlockingAreaExist(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;

/**
 * Fires a weapon at a coordinate using a ped.
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x96A05E4FB321B1BA
 */
export function setPedShootsAtCoord(ped: number, x: number, y: number, z: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param animName - 
 * @param animDict - 
 * @returns void
 * @remarks Hash: 0xFFC24B988B938B38
 */
export function setFacialIdleAnimOverride(ped: number, animName: string, animDict: string): void;

/**
 * ```
 * Gets a random ped in the x/y/zRadius near the x/y/z coordinates passed.   
 * Ped Types:  
 * Any = -1  
 * Player = 1  
 * Male = 4   
 * Female = 5   
 * Cop = 6  
 * Human = 26  
 * SWAT = 27   
 * Animal = 28  
 * Army = 29  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param xRadius - 
 * @param yRadius - 
 * @param zRadius - 
 * @param pedType - 
 * @returns number
 * @remarks Hash: 0x876046A8E3A4B71C
 */
export function getRandomPedAtCoord(x: number, y: number, z: number, xRadius: number, yRadius: number, zRadius: number, pedType: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns any
 * @remarks Hash: 0xEEED8FAFEC331A70
 */
export function setPedShouldPlayFleeScenarioExit(ped: number, p1: any, p2: any, p3: any): any;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x01FEE67DB37F59B2
 */
export function isPedOnFoot(ped: number): number;

/**
 * Applies lethal damage (FLT_MAX) to the `SKEL_Head` bone of the specified ped using the weapon passed, leading to the
 * ped's untimely demise.
 * 
 * The naming of the native is a legacy leftover (formerly EXPLODE_CHAR_HEAD in GTA3) as in the early 3D GTA games, lethal
 * damage to a ped head would 'explode' it.
 * 
 * Do note that this native function does not work in multiplayer/network environment.
 * @param ped - 
 * @param weaponHash - 
 * @returns void
 * @remarks Hash: 0x2D05CED3A38D0F3A
 */
export function explodePedHead(ped: number, weaponHash: number): void;

/**
 * ```
 * It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.  
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x9C720776DAA43E7E
 */
export function clearPedWetness(ped: number): void;

/**
 * ```
 * Gets the closest ped in a radius.  
 * Ped Types:  
 * Any ped = -1  
 * Player = 1  
 * Male = 4   
 * Female = 5   
 * Cop = 6  
 * Human = 26  
 * SWAT = 27   
 * Animal = 28  
 * Army = 29
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param p4 - 
 * @param p5 - 
 * @param outPed - 
 * @param p7 - 
 * @param p8 - 
 * @param pedType - 
 * @returns number
 * @remarks Hash: 0xC33AB876A77F8164
 */
export function getClosestPed(x: number, y: number, z: number, radius: number, p4: number, p5: number, outPed: number, p7: number, p8: number, pedType: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xFDDB234CF74073D9
 */
export function removePedPreferredCoverSet(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xFD325494792302D7
 */
export function 0xfd325494792302d7(ped: number, toggle: number): void;

/**
 * ```
 * Returns whether the entity is in stealth mode  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x7C2AC9CA66575FBF
 */
export function getPedStealthMovement(ped: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xA52D5247A4227E14
 */
export function 0xa52d5247a4227e14(p0: any): void;

/**
 * ```
 * -1: no landing  
 * 0: landing on both feet  
 * 1: stumbling  
 * 2: rolling  
 * 3: ragdoll  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x8B9F1FC6AE8166C0
 */
export function getPedParachuteLandingType(ped: number): number;

/**
 * ```
 * angle is ped's view cone  
 * ```
 * @param ped - 
 * @param otherPed - 
 * @param angle - 
 * @returns number
 * @remarks Hash: 0xD71649DB0A545AA3
 */
export function isPedFacingPed(ped: number, otherPed: number, angle: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xC70B5FAE151982D8
 */
export function isPedPlantingBomb(ped: number): number;

/**
 * @returns void
 * @remarks Hash: 0x4759CC730F947C81
 */
export function instantlyFillPedPopulation(): void;

/**
 * ```
 * NativeDB Added Parameter 3: BOOL p2
 * ```
 * @param ped - 
 * @param propIndex - 
 * @returns void
 * @remarks Hash: 0x26D83693ED99291C
 */
export function setPedHelmetPropIndex(ped: number, propIndex: number): void;

/**
 * ```
 * Enables diving motion when underwater.  
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF99F62004024D506
 */
export function setEnableScuba(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param colorID - 
 * @returns number
 * @remarks Hash: 0xE0D36E5D9E99CC21
 */
export function IsPedHairColorValid(colorID: number): number;

/**
 * @returns void
 * @remarks Hash: 0xEA16670E7BA4743C
 */
export function resetAiWeaponDamageModifier(): void;

/**
 * ```
 * Likely a char, if that overlay is not set, e.i. "None" option, returns 255;
 * This might be the once removed native GET_PED_HEAD_OVERLAY.
 * ```
 * @param ped - 
 * @param overlayID - 
 * @returns number
 * @remarks Hash: 0xA60EF3B6461A4D43
 */
export function GetPedHeadOverlayValue(ped: number, overlayID: number): number;

/**
 * ```
 * range 0.0f - 1.0f  
 * ```
 * @param driver - 
 * @param aggressiveness - 
 * @returns void
 * @remarks Hash: 0xA731F608CA104E3C
 */
export function setDriverAggressiveness(driver: number, aggressiveness: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xF29CF591C4BF6CEE
 */
export function setPedSeeingRange(ped: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x3C028C636A414ED9
 */
export function setPedAllowVehiclesOverride(ped: number, toggle: number): void;

/**
 * ```
 * Despite this function's name, it simply returns whether the specified handle is a Ped.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x11B499C1E0FF8559
 */
export function wasPedSkeletonUpdated(ped: number): number;

/**
 * ```
 * Gets the relationship between two peds. This should be called twice (once for each ped).  
 * Relationship types:  
 * 0 = Companion  
 * 1 = Respect  
 * 2 = Like  
 * 3 = Neutral  
 * 4 = Dislike  
 * 5 = Hate  
 * 255 = Pedestrians  
 * (Credits: Inco)  
 * Example:  
 * PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, l_1017, 0xA49E591C);  
 * PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, 0xA49E591C, l_1017);  
 * ```
 * @param ped1 - 
 * @param ped2 - 
 * @returns number
 * @remarks Hash: 0xEBA5AD3A0EAF7121
 */
export function getRelationshipBetweenPeds(ped1: number, ped2: number): number;

/**
 * ```
 * stance:  
 * 0 = idle  
 * 1 = walk  
 * 2 = running  
 * p5 = usually set to true  
 * ```
 * 
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param ped - 
 * @param stance - 
 * @param animDictionary - 
 * @param animationName - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x90A43CC281FFAB46
 */
export function setPedAlternateMovementAnim(ped: number, stance: number, animDictionary: string, animationName: string, p4: number, p5: number): void;

/**
 * ```
 * This native refers to the field of vision the ped has above them, starting at 0 degrees. 90f would let the ped see enemies directly above of them.  
 * ```
 * @param ped - 
 * @param angle - 
 * @returns void
 * @remarks Hash: 0x78D0B67629D75856
 */
export function setPedVisualFieldMaxElevationAngle(ped: number, angle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xB782F8238512BAD5
 */
export function spawnpointsGetSearchResultFlags(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x6585D955A68452A5
 */
export function clearPedEnvDirt(ped: number): void;

/**
 * ```
 * p2 is usually -1 in the scripts. action is either 0 or "DEFAULT_ACTION".  
 * ```
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @param action - 
 * @returns void
 * @remarks Hash: 0xD75ACCF5E0FB5367
 */
export function setPedUsingActionMode(ped: number, p1: number, p2: number, action: string): void;

/**
 * Verifies whether a ped is firing within a specific area.
 * @param minX - 
 * @param minY - 
 * @param minZ - 
 * @param maxX - 
 * @param maxY - 
 * @param maxZ - 
 * @param bHighlightArea - 
 * @param bDo3DCheck - 
 * @returns number
 * @remarks Hash: 0xA0D3D71EA1086C55
 */
export function isAnyPedShootingInArea(minX: number, minY: number, minZ: number, maxX: number, maxY: number, maxZ: number, bHighlightArea: number, bDo3DCheck: number): number;

/**
 * ```
 * In agency_heist3b.c4, its like this 90% of the time:  
 * PED::_110F526AB784111F(ped, 0.099);  
 * PED::SET_PED_ENVEFF_SCALE(ped, 1.0);  
 * PED::_D69411AA0CEBF9E9(ped, 87, 81, 68);  
 * PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);  
 * and its like this 10% of the time:  
 * PED::_110F526AB784111F(ped, 0.2);  
 * PED::SET_PED_ENVEFF_SCALE(ped, 0.65);  
 * PED::_D69411AA0CEBF9E9(ped, 74, 69, 60);  
 * PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);  
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x110F526AB784111F
 */
export function 0x110f526ab784111f(ped: number, p1: number): void;

/**
 * ```
 * OverlayID ranges from 0 to 12, index from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1, and opacity from 0.0 to 1.0.   
 * overlayID       Part                  Index, to disable  
 * 0               Blemishes             0 - 23, 255  
 * 1               Facial Hair           0 - 28, 255  
 * 2               Eyebrows              0 - 33, 255  
 * 3               Ageing                0 - 14, 255  
 * 4               Makeup                0 - 74, 255  
 * 5               Blush                 0 - 6, 255  
 * 6               Complexion            0 - 11, 255  
 * 7               Sun Damage            0 - 10, 255  
 * 8               Lipstick              0 - 9, 255  
 * 9               Moles/Freckles        0 - 17, 255  
 * 10              Chest Hair            0 - 16, 255  
 * 11              Body Blemishes        0 - 11, 255  
 * 12              Add Body Blemishes    0 - 1, 255  
 * ```
 * @param ped - 
 * @param overlayID - 
 * @param index - 
 * @param opacity - 
 * @returns void
 * @remarks Hash: 0x48F44967FA05CC1E
 */
export function setPedHeadOverlay(ped: number, overlayID: number, index: number, opacity: number): void;

/**
 * ```
 * Scripts use 0.2, 0.5 and 1.0. Value must be >= 0.0 && <= 1.0
 * ```
 * @param driver - 
 * @param modifier - 
 * @returns void
 * @remarks Hash: 0xDED5AF5A0EA4B297
 */
export function setDriverRacingModifier(driver: number, modifier: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE906EC930F5FE7C8
 */
export function 0xe906ec930f5fe7c8(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x2DFC81C9B9608549
 */
export function 0x2dfc81c9b9608549(ped: number, p1: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x876928DDDFCCC9CD
 */
export function hasPedheadshotImgUploadFailed(): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x784002A632822099
 */
export function hasPedPreloadPropDataFinished(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x94495889E22C6479
 */
export function isPedOnAnyBike(ped: number): number;

/**
 * ```
 * Same function call as PED::GET_MOUNT, aka just returns 0  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x460BC76A0E10655E
 */
export function isPedOnMount(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x8C4F3BF23B6237DB
 */
export function createParachuteBagObject(ped: number, p1: number, p2: number): number;

/**
 * ## Parameters
 * *
 * @param asset - 
 * @returns void
 * @remarks Hash: 0x13E940F88470FA51
 */
export function removeActionModeAsset(asset: string): void;

/**
 * ```
 * Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
 * Used when calling SET_PED_HEAD_BLEND_DATA.
 * ```
 * @param type - 
 * @returns number
 * @remarks Hash: 0x68D353AB88B97E0C
 */
export function getPedHeadBlendFirstIndex(type: number): number;

/**
 * Clears the blood on a ped.
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x8FE22675A5A45817
 */
export function clearPedBloodDamage(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x0E5173C163976E38
 */
export function clearPedDecorations(ped: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x82A3D6D9CC2CB8E3
 */
export function setPedClothProne(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param helmetFlag - 
 * @returns void
 * @remarks Hash: 0xC0E78D5C2CE3EB25
 */
export function setPedHelmetFlag(ped: number, helmetFlag: number): void;

/**
 * ```
 * scar
 * blushing
 * cs_flush_anger
 * cs_flush_anger_face
 * bruise
 * bruise_large
 * herpes
 * ArmorBullet
 * basic_dirt_cloth
 * basic_dirt_skin
 * cs_trev1_dirt
 * ```
 * @param ped - 
 * @param damageZone - 
 * @param xOffset - 
 * @param yOffset - 
 * @param heading - 
 * @param scale - 
 * @param alpha - 
 * @param variation - 
 * @param fadeIn - 
 * @param decalName - 
 * @returns void
 * @remarks Hash: 0x397C38AA7B4A5F83
 */
export function applyPedDamageDecal(ped: number, damageZone: number, xOffset: number, yOffset: number, heading: number, scale: number, alpha: number, variation: number, fadeIn: number, decalName: string): void;

/**
 * Sets the palette index of a ped's phone.
 * 
 * | Value | Color      |
 * | :---: | :-----:    |
 * |  `0`  | Light Blue |
 * |  `1`  | Green      |
 * |  `2`  | Red        |
 * |  `3`  | Orange     |
 * |  `4`  | Grey       |
 * |  `5`  | Purple     |
 * |  `6`  | Pink       |
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param ped - 
 * @param index - 
 * @returns void
 * @remarks Hash: 0x83A169EABCDB10A2
 */
export function setPedPhonePaletteIdx(ped: number, index: number): void;

/**
 * ```c
 * // Potential names and hash collisions included as comments
 * enum ePedConfigFlags {
 * 	CPED_CONFIG_FLAG_CreatedByFactory = 0,
 * 	CPED_CONFIG_FLAG_CanBeShotInVehicle = 1,
 * 	CPED_CONFIG_FLAG_NoCriticalHits = 2,
 * 	CPED_CONFIG_FLAG_DrownsInWater = 3,
 * 	CPED_CONFIG_FLAG_DrownsInSinkingVehicle = 4,
 * 	CPED_CONFIG_FLAG_DiesInstantlyWhenSwimming = 5,
 * 	CPED_CONFIG_FLAG_HasBulletProofVest = 6,
 * 	CPED_CONFIG_FLAG_UpperBodyDamageAnimsOnly = 7,
 * 	CPED_CONFIG_FLAG_NeverFallOffSkis = 8,
 * 	CPED_CONFIG_FLAG_NeverEverTargetThisPed = 9,
 * 	CPED_CONFIG_FLAG_ThisPedIsATargetPriority = 10,
 * 	CPED_CONFIG_FLAG_TargettableWithNoLos = 11,
 * 	CPED_CONFIG_FLAG_DoesntListenToPlayerGroupCommands = 12,
 * 	CPED_CONFIG_FLAG_NeverLeavesGroup = 13,
 * 	CPED_CONFIG_FLAG_DoesntDropWeaponsWhenDead = 14,
 * 	CPED_CONFIG_FLAG_SetDelayedWeaponAsCurrent = 15,
 * 	CPED_CONFIG_FLAG_KeepTasksAfterCleanUp = 16,
 * 	CPED_CONFIG_FLAG_BlockNonTemporaryEvents = 17,
 * 	CPED_CONFIG_FLAG_HasAScriptBrain = 18,
 * 	CPED_CONFIG_FLAG_WaitingForScriptBrainToLoad = 19,
 * 	CPED_CONFIG_FLAG_AllowMedicsToReviveMe = 20,
 * 	CPED_CONFIG_FLAG_MoneyHasBeenGivenByScript = 21,
 * 	CPED_CONFIG_FLAG_NotAllowedToCrouch = 22,
 * 	CPED_CONFIG_FLAG_DeathPickupsPersist = 23,
 * 	CPED_CONFIG_FLAG_IgnoreSeenMelee = 24,
 * 	CPED_CONFIG_FLAG_ForceDieIfInjured = 25,
 * 	CPED_CONFIG_FLAG_DontDragMeOutCar = 26,
 * 	CPED_CONFIG_FLAG_StayInCarOnJack = 27,
 * 	CPED_CONFIG_FLAG_ForceDieInCar = 28,
 * 	CPED_CONFIG_FLAG_GetOutUndriveableVehicle = 29,
 * 	CPED_CONFIG_FLAG_WillRemainOnBoatAfterMissionEnds = 30,
 * 	CPED_CONFIG_FLAG_DontStoreAsPersistent = 31,
 * 	CPED_CONFIG_FLAG_WillFlyThroughWindscreen = 32,
 * 	CPED_CONFIG_FLAG_DieWhenRagdoll = 33,
 * 	CPED_CONFIG_FLAG_HasHelmet = 34,
 * 	CPED_CONFIG_FLAG_UseHelmet = 35,
 * 	CPED_CONFIG_FLAG_DontTakeOffHelmet = 36,
 * 	CPED_CONFIG_FLAG_HideInCutscene = 37,
 * 	CPED_CONFIG_FLAG_PedIsEnemyToPlayer = 38,
 * 	CPED_CONFIG_FLAG_DisableEvasiveDives = 39,
 * 	CPED_CONFIG_FLAG_PedGeneratesDeadBodyEvents = 40,
 * 	CPED_CONFIG_FLAG_DontAttackPlayerWithoutWantedLevel = 41,
 * 	CPED_CONFIG_FLAG_DontInfluenceWantedLevel = 42,
 * 	CPED_CONFIG_FLAG_DisablePlayerLockon = 43,
 * 	CPED_CONFIG_FLAG_DisableLockonToRandomPeds = 44,
 * 	CPED_CONFIG_FLAG_AllowLockonToFriendlyPlayers = 45,
 * 	_0xDB115BFA = 46,
 * 	CPED_CONFIG_FLAG_PedBeingDeleted = 47,
 * 	CPED_CONFIG_FLAG_BlockWeaponSwitching = 48,
 * 	CPED_CONFIG_FLAG_BlockGroupPedAimedAtResponse = 49,
 * 	CPED_CONFIG_FLAG_WillFollowLeaderAnyMeans = 50,
 * 	CPED_CONFIG_FLAG_BlippedByScript = 51,
 * 	CPED_CONFIG_FLAG_DrawRadarVisualField = 52,
 * 	CPED_CONFIG_FLAG_StopWeaponFiringOnImpact = 53,
 * 	CPED_CONFIG_FLAG_DissableAutoFallOffTests = 54,
 * 	CPED_CONFIG_FLAG_SteerAroundDeadBodies = 55,
 * 	CPED_CONFIG_FLAG_ConstrainToNavMesh = 56,
 * 	CPED_CONFIG_FLAG_SyncingAnimatedProps = 57,
 * 	CPED_CONFIG_FLAG_IsFiring = 58,
 * 	CPED_CONFIG_FLAG_WasFiring = 59,
 * 	CPED_CONFIG_FLAG_IsStanding = 60,
 * 	CPED_CONFIG_FLAG_WasStanding = 61,
 * 	CPED_CONFIG_FLAG_InVehicle = 62,
 * 	CPED_CONFIG_FLAG_OnMount = 63,
 * 	CPED_CONFIG_FLAG_AttachedToVehicle = 64,
 * 	CPED_CONFIG_FLAG_IsSwimming = 65,
 * 	CPED_CONFIG_FLAG_WasSwimming = 66,
 * 	CPED_CONFIG_FLAG_IsSkiing = 67,
 * 	CPED_CONFIG_FLAG_IsSitting = 68,
 * 	CPED_CONFIG_FLAG_KilledByStealth = 69,
 * 	CPED_CONFIG_FLAG_KilledByTakedown = 70,
 * 	CPED_CONFIG_FLAG_Knockedout = 71,
 * 	CPED_CONFIG_FLAG_ClearRadarBlipOnDeath = 72,
 * 	CPED_CONFIG_FLAG_JustGotOffTrain = 73,
 * 	CPED_CONFIG_FLAG_JustGotOnTrain = 74,
 * 	CPED_CONFIG_FLAG_UsingCoverPoint = 75,
 * 	CPED_CONFIG_FLAG_IsInTheAir = 76,
 * 	CPED_CONFIG_FLAG_KnockedUpIntoAir = 77,
 * 	CPED_CONFIG_FLAG_IsAimingGun = 78,
 * 	CPED_CONFIG_FLAG_HasJustLeftCar = 79,
 * 	CPED_CONFIG_FLAG_TargetWhenInjuredAllowed = 80,
 * 	CPED_CONFIG_FLAG_CurrLeftFootCollNM = 81,
 * 	CPED_CONFIG_FLAG_PrevLeftFootCollNM = 82,
 * 	CPED_CONFIG_FLAG_CurrRightFootCollNM = 83,
 * 	CPED_CONFIG_FLAG_PrevRightFootCollNM = 84,
 * 	CPED_CONFIG_FLAG_HasBeenBumpedInCar = 85,
 * 	CPED_CONFIG_FLAG_InWaterTaskQuitToClimbLadder = 86,
 * 	CPED_CONFIG_FLAG_NMTwoHandedWeaponBothHandsConstrained = 87,
 * 	CPED_CONFIG_FLAG_CreatedBloodPoolTimer = 88,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromAnyPedImpact = 89,
 * 	CPED_CONFIG_FLAG_GroupPedFailedToEnterCover = 90,
 * 	CPED_CONFIG_FLAG_AlreadyChattedOnPhone = 91,
 * 	CPED_CONFIG_FLAG_AlreadyReactedToPedOnRoof = 92,
 * 	CPED_CONFIG_FLAG_ForcePedLoadCover = 93,
 * 	CPED_CONFIG_FLAG_BlockCoweringInCover = 94,
 * 	CPED_CONFIG_FLAG_BlockPeekingInCover = 95,
 * 	CPED_CONFIG_FLAG_JustLeftCarNotCheckedForDoors = 96,
 * 	CPED_CONFIG_FLAG_VaultFromCover = 97,
 * 	CPED_CONFIG_FLAG_AutoConversationLookAts = 98,
 * 	CPED_CONFIG_FLAG_UsingCrouchedPedCapsule = 99,
 * 	CPED_CONFIG_FLAG_HasDeadPedBeenReported = 100,
 * 	CPED_CONFIG_FLAG_ForcedAim = 101,
 * 	CPED_CONFIG_FLAG_SteersAroundPeds = 102,
 * 	CPED_CONFIG_FLAG_SteersAroundObjects = 103,
 * 	CPED_CONFIG_FLAG_OpenDoorArmIK = 104,
 * 	CPED_CONFIG_FLAG_ForceReload = 105,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromVehicleImpact = 106,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromBulletImpact = 107,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromExplosions = 108,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromFire = 109,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromElectrocution = 110,
 * 	CPED_CONFIG_FLAG_IsBeingDraggedToSafety = 111,
 * 	CPED_CONFIG_FLAG_HasBeenDraggedToSafety = 112,
 * 	CPED_CONFIG_FLAG_KeepWeaponHolsteredUnlessFired = 113,
 * 	CPED_CONFIG_FLAG_ForceScriptControlledKnockout = 114,
 * 	CPED_CONFIG_FLAG_FallOutOfVehicleWhenKilled = 115,
 * 	CPED_CONFIG_FLAG_GetOutBurningVehicle = 116,
 * 	CPED_CONFIG_FLAG_BumpedByPlayer = 117,
 * 	CPED_CONFIG_FLAG_RunFromFiresAndExplosions = 118,
 * 	CPED_CONFIG_FLAG_TreatAsPlayerDuringTargeting = 119,
 * 	CPED_CONFIG_FLAG_IsHandCuffed = 120,
 * 	CPED_CONFIG_FLAG_IsAnkleCuffed = 121,
 * 	CPED_CONFIG_FLAG_DisableMelee = 122,
 * 	CPED_CONFIG_FLAG_DisableUnarmedDrivebys = 123,
 * 	CPED_CONFIG_FLAG_JustGetsPulledOutWhenElectrocuted = 124,
 * 	CPED_CONFIG_FLAG_UNUSED_REPLACE_ME = 125,
 * 	CPED_CONFIG_FLAG_WillNotHotwireLawEnforcementVehicle = 126,
 * 	CPED_CONFIG_FLAG_WillCommandeerRatherThanJack = 127,
 * 	CPED_CONFIG_FLAG_CanBeAgitated = 128,
 * 	CPED_CONFIG_FLAG_ForcePedToFaceLeftInCover = 129,
 * 	CPED_CONFIG_FLAG_ForcePedToFaceRightInCover = 130,
 * 	CPED_CONFIG_FLAG_BlockPedFromTurningInCover = 131,
 * 	CPED_CONFIG_FLAG_KeepRelationshipGroupAfterCleanUp = 132,
 * 	CPED_CONFIG_FLAG_ForcePedToBeDragged = 133,
 * 	CPED_CONFIG_FLAG_PreventPedFromReactingToBeingJacked = 134,
 * 	CPED_CONFIG_FLAG_IsScuba = 135,
 * 	CPED_CONFIG_FLAG_WillArrestRatherThanJack = 136,
 * 	CPED_CONFIG_FLAG_RemoveDeadExtraFarAway = 137,
 * 	CPED_CONFIG_FLAG_RidingTrain = 138,
 * 	CPED_CONFIG_FLAG_ArrestResult = 139,
 * 	CPED_CONFIG_FLAG_CanAttackFriendly = 140,
 * 	CPED_CONFIG_FLAG_WillJackAnyPlayer = 141,
 * 	CPED_CONFIG_FLAG_BumpedByPlayerVehicle = 142,
 * 	CPED_CONFIG_FLAG_DodgedPlayerVehicle = 143,
 * 	CPED_CONFIG_FLAG_WillJackWantedPlayersRatherThanStealCar = 144,
 * 	CPED_CONFIG_FLAG_NoCopWantedAggro = 145,
 * 	CPED_CONFIG_FLAG_DisableLadderClimbing = 146,
 * 	CPED_CONFIG_FLAG_StairsDetected = 147,
 * 	CPED_CONFIG_FLAG_SlopeDetected = 148,
 * 	CPED_CONFIG_FLAG_HelmetHasBeenShot = 149,
 * 	CPED_CONFIG_FLAG_CowerInsteadOfFlee = 150,
 * 	CPED_CONFIG_FLAG_CanActivateRagdollWhenVehicleUpsideDown = 151,
 * 	CPED_CONFIG_FLAG_AlwaysRespondToCriesForHelp = 152,
 * 	CPED_CONFIG_FLAG_DisableBloodPoolCreation = 153,
 * 	CPED_CONFIG_FLAG_ShouldFixIfNoCollision = 154,
 * 	CPED_CONFIG_FLAG_CanPerformArrest = 155,
 * 	CPED_CONFIG_FLAG_CanPerformUncuff = 156,
 * 	CPED_CONFIG_FLAG_CanBeArrested = 157,
 * 	CPED_CONFIG_FLAG_MoverConstrictedByOpposingCollisions = 158,
 * 	CPED_CONFIG_FLAG_PlayerPreferFrontSeatMP = 159,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromImpactObject = 160,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromMelee = 161,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromWaterJet = 162,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromDrowning = 163,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromFalling = 164,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromRubberBullet = 165,
 * 	CPED_CONFIG_FLAG_IsInjured = 166,
 * 	CPED_CONFIG_FLAG_DontEnterVehiclesInPlayersGroup = 167,
 * 	CPED_CONFIG_FLAG_SwimmingTasksRunning = 168,
 * 	CPED_CONFIG_FLAG_PreventAllMeleeTaunts = 169,
 * 	CPED_CONFIG_FLAG_ForceDirectEntry = 170,
 * 	CPED_CONFIG_FLAG_AlwaysSeeApproachingVehicles = 171,
 * 	CPED_CONFIG_FLAG_CanDiveAwayFromApproachingVehicles = 172,
 * 	CPED_CONFIG_FLAG_AllowPlayerToInterruptVehicleEntryExit = 173,
 * 	CPED_CONFIG_FLAG_OnlyAttackLawIfPlayerIsWanted = 174,
 * 	CPED_CONFIG_FLAG_PlayerInContactWithKinematicPed = 175,
 * 	CPED_CONFIG_FLAG_PlayerInContactWithSomethingOtherThanKinematicPed = 176,
 * 	CPED_CONFIG_FLAG_PedsJackingMeDontGetIn = 177,
 * 	CPED_CONFIG_FLAG_AdditionalRappellingPed = 178,
 * 	CPED_CONFIG_FLAG_PedIgnoresAnimInterruptEvents = 179,
 * 	CPED_CONFIG_FLAG_IsInCustody = 180,
 * 	CPED_CONFIG_FLAG_ForceStandardBumpReactionThresholds = 181,
 * 	CPED_CONFIG_FLAG_LawWillOnlyAttackIfPlayerIsWanted = 182,
 * 	CPED_CONFIG_FLAG_IsAgitated = 183,
 * 	CPED_CONFIG_FLAG_PreventAutoShuffleToDriversSeat = 184,
 * 	CPED_CONFIG_FLAG_UseKinematicModeWhenStationary = 185,
 * 	CPED_CONFIG_FLAG_EnableWeaponBlocking = 186,
 * 	CPED_CONFIG_FLAG_HasHurtStarted = 187,
 * 	CPED_CONFIG_FLAG_DisableHurt = 188,
 * 	CPED_CONFIG_FLAG_PlayerIsWeird = 189,
 * 	CPED_CONFIG_FLAG_PedHadPhoneConversation = 190,
 * 	CPED_CONFIG_FLAG_BeganCrossingRoad = 191,
 * 	CPED_CONFIG_FLAG_WarpIntoLeadersVehicle = 192,
 * 	CPED_CONFIG_FLAG_DoNothingWhenOnFootByDefault = 193,
 * 	CPED_CONFIG_FLAG_UsingScenario = 194,
 * 	CPED_CONFIG_FLAG_VisibleOnScreen = 195,
 * 	CPED_CONFIG_FLAG_DontCollideWithKinematic = 196,
 * 	CPED_CONFIG_FLAG_ActivateOnSwitchFromLowPhysicsLod = 197,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollOnPedCollisionWhenDead = 198,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollOnVehicleCollisionWhenDead = 199,
 * 	CPED_CONFIG_FLAG_HasBeenInArmedCombat = 200,
 * 	CPED_CONFIG_FLAG_UseDiminishingAmmoRate = 201,
 * 	CPED_CONFIG_FLAG_Avoidance_Ignore_All = 202,
 * 	CPED_CONFIG_FLAG_Avoidance_Ignored_by_All = 203,
 * 	CPED_CONFIG_FLAG_Avoidance_Ignore_Group1 = 204,
 * 	CPED_CONFIG_FLAG_Avoidance_Member_of_Group1 = 205,
 * 	CPED_CONFIG_FLAG_ForcedToUseSpecificGroupSeatIndex = 206,
 * 	CPED_CONFIG_FLAG_LowPhysicsLodMayPlaceOnNavMesh = 207,
 * 	CPED_CONFIG_FLAG_DisableExplosionReactions = 208,
 * 	CPED_CONFIG_FLAG_DodgedPlayer = 209,
 * 	CPED_CONFIG_FLAG_WaitingForPlayerControlInterrupt = 210,
 * 	CPED_CONFIG_FLAG_ForcedToStayInCover = 211,
 * 	CPED_CONFIG_FLAG_GeneratesSoundEvents = 212,
 * 	CPED_CONFIG_FLAG_ListensToSoundEvents = 213,
 * 	CPED_CONFIG_FLAG_AllowToBeTargetedInAVehicle = 214,
 * 	CPED_CONFIG_FLAG_WaitForDirectEntryPointToBeFreeWhenExiting = 215,
 * 	CPED_CONFIG_FLAG_OnlyRequireOnePressToExitVehicle = 216,
 * 	CPED_CONFIG_FLAG_ForceExitToSkyDive = 217,
 * 	CPED_CONFIG_FLAG_SteersAroundVehicles = 218,
 * 	CPED_CONFIG_FLAG_AllowPedInVehiclesOverrideTaskFlags = 219,
 * 	CPED_CONFIG_FLAG_DontEnterLeadersVehicle = 220,
 * 	CPED_CONFIG_FLAG_DisableExitToSkyDive = 221,
 * 	CPED_CONFIG_FLAG_ScriptHasDisabledCollision = 222,
 * 	CPED_CONFIG_FLAG_UseAmbientModelScaling = 223,
 * 	CPED_CONFIG_FLAG_DontWatchFirstOnNextHurryAway = 224,
 * 	CPED_CONFIG_FLAG_DisablePotentialToBeWalkedIntoResponse = 225,
 * 	CPED_CONFIG_FLAG_DisablePedAvoidance = 226,
 * 	CPED_CONFIG_FLAG_ForceRagdollUponDeath = 227,
 * 	CPED_CONFIG_FLAG_CanLosePropsOnDamage = 228,
 * 	CPED_CONFIG_FLAG_DisablePanicInVehicle = 229,
 * 	CPED_CONFIG_FLAG_AllowedToDetachTrailer = 230,
 * 	CPED_CONFIG_FLAG_HasShotBeenReactedToFromFront = 231,
 * 	CPED_CONFIG_FLAG_HasShotBeenReactedToFromBack = 232,
 * 	CPED_CONFIG_FLAG_HasShotBeenReactedToFromLeft = 233,
 * 	CPED_CONFIG_FLAG_HasShotBeenReactedToFromRight = 234,
 * 	CPED_CONFIG_FLAG_AllowBlockDeadPedRagdollActivation = 235,
 * 	CPED_CONFIG_FLAG_IsHoldingProp = 236,
 * 	CPED_CONFIG_FLAG_BlocksPathingWhenDead = 237,
 * 	CPED_CONFIG_FLAG_ForcePlayNormalScenarioExitOnNextScriptCommand = 238,
 * 	CPED_CONFIG_FLAG_ForcePlayImmediateScenarioExitOnNextScriptCommand = 239,
 * 	CPED_CONFIG_FLAG_ForceSkinCharacterCloth = 240,
 * 	CPED_CONFIG_FLAG_LeaveEngineOnWhenExitingVehicles = 241,
 * 	CPED_CONFIG_FLAG_PhoneDisableTextingAnimations = 242,
 * 	CPED_CONFIG_FLAG_PhoneDisableTalkingAnimations = 243,
 * 	CPED_CONFIG_FLAG_PhoneDisableCameraAnimations = 244,
 * 	CPED_CONFIG_FLAG_DisableBlindFiringInShotReactions = 245,
 * 	CPED_CONFIG_FLAG_AllowNearbyCoverUsage = 246,
 * 	CPED_CONFIG_FLAG_InStrafeTransition = 247,
 * 	CPED_CONFIG_FLAG_CanPlayInCarIdles = 248,
 * 	CPED_CONFIG_FLAG_CanAttackNonWantedPlayerAsLaw = 249,
 * 	CPED_CONFIG_FLAG_WillTakeDamageWhenVehicleCrashes = 250,
 * 	CPED_CONFIG_FLAG_AICanDrivePlayerAsRearPassenger = 251,
 * 	CPED_CONFIG_FLAG_PlayerCanJackFriendlyPlayers = 252,
 * 	CPED_CONFIG_FLAG_OnStairs = 253,
 * 	CPED_CONFIG_FLAG_SimulatingAiming = 254,
 * 	CPED_CONFIG_FLAG_AIDriverAllowFriendlyPassengerSeatEntry = 255,
 * 	CPED_CONFIG_FLAG_ParentCarIsBeingRemoved = 256,
 * 	CPED_CONFIG_FLAG_AllowMissionPedToUseInjuredMovement = 257,
 * 	CPED_CONFIG_FLAG_CanLoseHelmetOnDamage = 258,
 * 	CPED_CONFIG_FLAG_NeverDoScenarioExitProbeChecks = 259,
 * 	CPED_CONFIG_FLAG_SuppressLowLODRagdollSwitchWhenCorpseSettles = 260,
 * 	CPED_CONFIG_FLAG_PreventUsingLowerPrioritySeats = 261,
 * 	CPED_CONFIG_FLAG_JustLeftVehicleNeedsReset = 262,
 * 	CPED_CONFIG_FLAG_TeleportIfCantReachPlayer = 263,
 * 	CPED_CONFIG_FLAG_PedsInVehiclePositionNeedsReset = 264,
 * 	CPED_CONFIG_FLAG_PedsFullyInSeat = 265,
 * 	CPED_CONFIG_FLAG_AllowPlayerLockOnIfFriendly = 266,
 * 	CPED_CONFIG_FLAG_UseCameraHeadingForDesiredDirectionLockOnTest = 267,
 * 	CPED_CONFIG_FLAG_TeleportToLeaderVehicle = 268,
 * 	CPED_CONFIG_FLAG_Avoidance_Ignore_WeirdPedBuffer = 269,
 * 	CPED_CONFIG_FLAG_OnStairSlope = 270,
 * 	CPED_CONFIG_FLAG_HasPlayedNMGetup = 271,
 * 	CPED_CONFIG_FLAG_DontBlipCop = 272,
 * 	CPED_CONFIG_FLAG_SpawnedAtExtendedRangeScenario = 273,
 * 	CPED_CONFIG_FLAG_WalkAlongsideLeaderWhenClose = 274,
 * 	CPED_CONFIG_FLAG_KillWhenTrapped = 275,
 * 	CPED_CONFIG_FLAG_EdgeDetected = 276,
 * 	CPED_CONFIG_FLAG_AlwaysWakeUpPhysicsOfIntersectedPeds = 277,
 * 	CPED_CONFIG_FLAG_EquippedAmbientLoadOutWeapon = 278,
 * 	CPED_CONFIG_FLAG_AvoidTearGas = 279,
 * 	CPED_CONFIG_FLAG_StoppedSpeechUponFreezing = 280,
 * 	CPED_CONFIG_FLAG_DisableGoToWritheWhenInjured = 281,
 * 	CPED_CONFIG_FLAG_OnlyUseForcedSeatWhenEnteringHeliInGroup = 282,
 * 	CPED_CONFIG_FLAG_ThrownFromVehicleDueToExhaustion = 283,
 * 	CPED_CONFIG_FLAG_UpdateEnclosedSearchRegion = 284,
 * 	CPED_CONFIG_FLAG_DisableWeirdPedEvents = 285,
 * 	CPED_CONFIG_FLAG_ShouldChargeNow = 286,
 * 	CPED_CONFIG_FLAG_RagdollingOnBoat = 287,
 * 	CPED_CONFIG_FLAG_HasBrandishedWeapon = 288,
 * 	CPED_CONFIG_FLAG_AllowMinorReactionsAsMissionPed = 289,
 * 	CPED_CONFIG_FLAG_BlockDeadBodyShockingEventsWhenDead = 290,
 * 	CPED_CONFIG_FLAG_PedHasBeenSeen = 291,
 * 	CPED_CONFIG_FLAG_PedIsInReusePool = 292,
 * 	CPED_CONFIG_FLAG_PedWasReused = 293,
 * 	CPED_CONFIG_FLAG_DisableShockingEvents = 294,
 * 	CPED_CONFIG_FLAG_MovedUsingLowLodPhysicsSinceLastActive = 295,
 * 	CPED_CONFIG_FLAG_NeverReactToPedOnRoof = 296,
 * 	CPED_CONFIG_FLAG_ForcePlayFleeScenarioExitOnNextScriptCommand = 297,
 * 	CPED_CONFIG_FLAG_JustBumpedIntoVehicle = 298,
 * 	CPED_CONFIG_FLAG_DisableShockingDrivingOnPavementEvents = 299,
 * 	CPED_CONFIG_FLAG_ShouldThrowSmokeNow = 300,
 * 	CPED_CONFIG_FLAG_DisablePedConstraints = 301,
 * 	CPED_CONFIG_FLAG_ForceInitialPeekInCover = 302,
 * 	CPED_CONFIG_FLAG_CreatedByDispatch = 303,
 * 	CPED_CONFIG_FLAG_PointGunLeftHandSupporting = 304,
 * 	CPED_CONFIG_FLAG_DisableJumpingFromVehiclesAfterLeader = 305,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromPlayerPedImpact = 306,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromAiRagdollImpact = 307,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromPlayerRagdollImpact = 308,
 * 	CPED_CONFIG_FLAG_DisableQuadrupedSpring = 309,
 * 	CPED_CONFIG_FLAG_IsInCluster = 310,
 * 	CPED_CONFIG_FLAG_ShoutToGroupOnPlayerMelee = 311,
 * 	CPED_CONFIG_FLAG_IgnoredByAutoOpenDoors = 312,
 * 	CPED_CONFIG_FLAG_PreferInjuredGetup = 313,
 * 	CPED_CONFIG_FLAG_ForceIgnoreMeleeActiveCombatant = 314,
 * 	CPED_CONFIG_FLAG_CheckLoSForSoundEvents = 315,
 * 	CPED_CONFIG_FLAG_JackedAbandonedCar = 316,
 * 	CPED_CONFIG_FLAG_CanSayFollowedByPlayerAudio = 317,
 * 	CPED_CONFIG_FLAG_ActivateRagdollFromMinorPlayerContact = 318,
 * 	CPED_CONFIG_FLAG_HasPortablePickupAttached = 319,
 * 	CPED_CONFIG_FLAG_ForcePoseCharacterCloth = 320,
 * 	CPED_CONFIG_FLAG_HasClothCollisionBounds = 321,
 * 	CPED_CONFIG_FLAG_HasHighHeels = 322,
 * 	CPED_CONFIG_FLAG_TreatAsAmbientPedForDriverLockOn = 323,
 * 	CPED_CONFIG_FLAG_DontBehaveLikeLaw = 324,
 * 	CPED_CONFIG_FLAG_SpawnedAtScenario = 325,
 * 	CPED_CONFIG_FLAG_DisablePoliceInvestigatingBody = 326,
 * 	CPED_CONFIG_FLAG_DisableWritheShootFromGround = 327,
 * 	CPED_CONFIG_FLAG_LowerPriorityOfWarpSeats = 328,
 * 	CPED_CONFIG_FLAG_DisableTalkTo = 329,
 * 	CPED_CONFIG_FLAG_DontBlip = 330,
 * 	CPED_CONFIG_FLAG_IsSwitchingWeapon = 331,
 * 	CPED_CONFIG_FLAG_IgnoreLegIkRestrictions = 332,
 * 	CPED_CONFIG_FLAG_ScriptForceNoTimesliceIntelligenceUpdate = 333,
 * 	CPED_CONFIG_FLAG_JackedOutOfMyVehicle = 334,
 * 	CPED_CONFIG_FLAG_WentIntoCombatAfterBeingJacked = 335,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollForVehicleGrab = 336,
 * 	CPED_CONFIG_FLAG_ForcePackageCharacterCloth = 337,
 * 	CPED_CONFIG_FLAG_DontRemoveWithValidOrder = 338,
 * 	CPED_CONFIG_FLAG_AllowTaskDoNothingTimeslicing = 339,
 * 	CPED_CONFIG_FLAG_ForcedToStayInCoverDueToPlayerSwitch = 340,
 * 	CPED_CONFIG_FLAG_ForceProneCharacterCloth = 341,
 * 	CPED_CONFIG_FLAG_NotAllowedToJackAnyPlayers = 342,
 * 	CPED_CONFIG_FLAG_InToStrafeTransition = 343,
 * 	CPED_CONFIG_FLAG_KilledByStandardMelee = 344,
 * 	CPED_CONFIG_FLAG_AlwaysLeaveTrainUponArrival = 345,
 * 	CPED_CONFIG_FLAG_ForcePlayDirectedNormalScenarioExitOnNextScriptCommand = 346,
 * 	CPED_CONFIG_FLAG_OnlyWritheFromWeaponDamage = 347,
 * 	CPED_CONFIG_FLAG_UseSloMoBloodVfx = 348,
 * 	CPED_CONFIG_FLAG_EquipJetpack = 349,
 * 	CPED_CONFIG_FLAG_PreventDraggedOutOfCarThreatResponse = 350,
 * 	CPED_CONFIG_FLAG_ScriptHasCompletelyDisabledCollision = 351,
 * 	CPED_CONFIG_FLAG_NeverDoScenarioNavChecks = 352,
 * 	CPED_CONFIG_FLAG_ForceSynchronousScenarioExitChecking = 353,
 * 	CPED_CONFIG_FLAG_ThrowingGrenadeWhileAiming = 354,
 * 	CPED_CONFIG_FLAG_HeadbobToRadioEnabled = 355,
 * 	CPED_CONFIG_FLAG_ForceDeepSurfaceCheck = 356,
 * 	CPED_CONFIG_FLAG_DisableDeepSurfaceAnims = 357,
 * 	CPED_CONFIG_FLAG_DontBlipNotSynced = 358,
 * 	CPED_CONFIG_FLAG_IsDuckingInVehicle = 359,
 * 	CPED_CONFIG_FLAG_PreventAutoShuffleToTurretSeat = 360,
 * 	CPED_CONFIG_FLAG_DisableEventInteriorStatusCheck = 361,
 * 	CPED_CONFIG_FLAG_HasReserveParachute = 362,
 * 	CPED_CONFIG_FLAG_UseReserveParachute = 363,
 * 	CPED_CONFIG_FLAG_TreatDislikeAsHateWhenInCombat = 364,
 * 	CPED_CONFIG_FLAG_OnlyUpdateTargetWantedIfSeen = 365,
 * 	CPED_CONFIG_FLAG_AllowAutoShuffleToDriversSeat = 366,
 * 	CPED_CONFIG_FLAG_DontActivateRagdollFromSmokeGrenade = 367,
 * 	CPED_CONFIG_FLAG_LinkMBRToOwnerOnChain = 368,
 * 	CPED_CONFIG_FLAG_AmbientFriendBumpedByPlayer = 369,
 * 	CPED_CONFIG_FLAG_AmbientFriendBumpedByPlayerVehicle = 370,
 * 	CPED_CONFIG_FLAG_InFPSUnholsterTransition = 371,
 * 	CPED_CONFIG_FLAG_PreventReactingToSilencedCloneBullets = 372,
 * 	CPED_CONFIG_FLAG_DisableInjuredCryForHelpEvents = 373,
 * 	CPED_CONFIG_FLAG_NeverLeaveTrain = 374,
 * 	CPED_CONFIG_FLAG_DontDropJetpackOnDeath = 375,
 * 	CPED_CONFIG_FLAG_UseFPSUnholsterTransitionDuringCombatRoll = 376,
 * 	CPED_CONFIG_FLAG_ExitingFPSCombatRoll = 377,
 * 	CPED_CONFIG_FLAG_ScriptHasControlOfPlayer = 378,
 * 	CPED_CONFIG_FLAG_PlayFPSIdleFidgetsForProjectile = 379,
 * 	CPED_CONFIG_FLAG_DisableAutoEquipHelmetsInBikes = 380,
 * 	CPED_CONFIG_FLAG_DisableAutoEquipHelmetsInAircraft = 381,
 * 	CPED_CONFIG_FLAG_WasPlayingFPSGetup = 382,
 * 	CPED_CONFIG_FLAG_WasPlayingFPSMeleeActionResult = 383,
 * 	CPED_CONFIG_FLAG_PreferNoPriorityRemoval = 384,
 * 	CPED_CONFIG_FLAG_FPSFidgetsAbortedOnFire = 385,
 * 	CPED_CONFIG_FLAG_ForceFPSIKWithUpperBodyAnim = 386,
 * 	CPED_CONFIG_FLAG_SwitchingCharactersInFirstPerson = 387,
 * 	CPED_CONFIG_FLAG_IsClimbingLadder = 388,
 * 	CPED_CONFIG_FLAG_HasBareFeet = 389,
 * 	CPED_CONFIG_FLAG_UNUSED_REPLACE_ME_2 = 390,
 * 	CPED_CONFIG_FLAG_GoOnWithoutVehicleIfItIsUnableToGetBackToRoad = 391,
 * 	CPED_CONFIG_FLAG_BlockDroppingHealthSnacksOnDeath = 392,
 * 	CPED_CONFIG_FLAG_ResetLastVehicleOnVehicleExit = 393,
 * 	CPED_CONFIG_FLAG_ForceThreatResponseToNonFriendToFriendMeleeActions = 394,
 * 	CPED_CONFIG_FLAG_DontRespondToRandomPedsDamage = 395,
 * 	CPED_CONFIG_FLAG_AllowContinuousThreatResponseWantedLevelUpdates = 396,
 * 	CPED_CONFIG_FLAG_KeepTargetLossResponseOnCleanup = 397,
 * 	CPED_CONFIG_FLAG_PlayersDontDragMeOutOfCar = 398,
 * 	CPED_CONFIG_FLAG_BroadcastRepondedToThreatWhenGoingToPointShooting = 399,
 * 	CPED_CONFIG_FLAG_IgnorePedTypeForIsFriendlyWith = 400,
 * 	CPED_CONFIG_FLAG_TreatNonFriendlyAsHateWhenInCombat = 401,
 * 	CPED_CONFIG_FLAG_DontLeaveVehicleIfLeaderNotInVehicle = 402,
 * 	CPED_CONFIG_FLAG_ChangeFromPermanentToAmbientPopTypeOnMigration = 403,
 * 	CPED_CONFIG_FLAG_AllowMeleeReactionIfMeleeProofIsOn = 404,
 * 	CPED_CONFIG_FLAG_UsingLowriderLeans = 405,
 * 	CPED_CONFIG_FLAG_UsingAlternateLowriderLeans = 406,
 * 	CPED_CONFIG_FLAG_UseNormalExplosionDamageWhenBlownUpInVehicle = 407,
 * 	CPED_CONFIG_FLAG_DisableHomingMissileLockForVehiclePedInside = 408,
 * 	CPED_CONFIG_FLAG_DisableTakeOffScubaGear = 409,
 * 	CPED_CONFIG_FLAG_IgnoreMeleeFistWeaponDamageMult = 410,
 * 	CPED_CONFIG_FLAG_LawPedsCanFleeFromNonWantedPlayer = 411,
 * 	CPED_CONFIG_FLAG_ForceBlipSecurityPedsIfPlayerIsWanted = 412,
 * 	CPED_CONFIG_FLAG_IsHolsteringWeapon = 413,
 * 	CPED_CONFIG_FLAG_UseGoToPointForScenarioNavigation = 414,
 * 	CPED_CONFIG_FLAG_DontClearLocalPassengersWantedLevel = 415,
 * 	CPED_CONFIG_FLAG_BlockAutoSwapOnWeaponPickups = 416,
 * 	CPED_CONFIG_FLAG_ThisPedIsATargetPriorityForAI = 417,
 * 	CPED_CONFIG_FLAG_IsSwitchingHelmetVisor = 418,
 * 	CPED_CONFIG_FLAG_ForceHelmetVisorSwitch = 419,
 * 	CPED_CONFIG_FLAG_IsPerformingVehicleMelee = 420,
 * 	CPED_CONFIG_FLAG_UseOverrideFootstepPtFx = 421,
 * 	CPED_CONFIG_FLAG_DisableVehicleCombat = 422,
 * 	CPED_CONFIG_FLAG_TreatAsFriendlyForTargetingAndDamage = 423,
 * 	CPED_CONFIG_FLAG_AllowBikeAlternateAnimations = 424,
 * 	CPED_CONFIG_FLAG_TreatAsFriendlyForTargetingAndDamageNonSynced = 425,
 * 	CPED_CONFIG_FLAG_UseLockpickVehicleEntryAnimations = 426,
 * 	CPED_CONFIG_FLAG_IgnoreInteriorCheckForSprinting = 427,
 * 	CPED_CONFIG_FLAG_SwatHeliSpawnWithinLastSpottedLocation = 428,
 * 	CPED_CONFIG_FLAG_DisableStartEngine = 429,
 * 	CPED_CONFIG_FLAG_IgnoreBeingOnFire = 430,
 * 	CPED_CONFIG_FLAG_DisableTurretOrRearSeatPreference = 431,
 * 	CPED_CONFIG_FLAG_DisableWantedHelicopterSpawning = 432,
 * 	CPED_CONFIG_FLAG_UseTargetPerceptionForCreatingAimedAtEvents = 433,
 * 	CPED_CONFIG_FLAG_DisableHomingMissileLockon = 434,
 * 	CPED_CONFIG_FLAG_ForceIgnoreMaxMeleeActiveSupportCombatants = 435,
 * 	CPED_CONFIG_FLAG_StayInDefensiveAreaWhenInVehicle = 436,
 * 	CPED_CONFIG_FLAG_DontShoutTargetPosition = 437,
 * 	CPED_CONFIG_FLAG_DisableHelmetArmor = 438,
 * 	CPED_CONFIG_FLAG_CreatedByConcealedPlayer = 439,
 * 	CPED_CONFIG_FLAG_PermanentlyDisablePotentialToBeWalkedIntoResponse = 440,
 * 	CPED_CONFIG_FLAG_PreventVehExitDueToInvalidWeapon = 441,
 * 	CPED_CONFIG_FLAG_IgnoreNetSessionFriendlyFireCheckForAllowDamage = 442,
 * 	CPED_CONFIG_FLAG_DontLeaveCombatIfTargetPlayerIsAttackedByPolice = 443,
 * 	CPED_CONFIG_FLAG_CheckLockedBeforeWarp = 444,
 * 	CPED_CONFIG_FLAG_DontShuffleInVehicleToMakeRoom = 445,
 * 	CPED_CONFIG_FLAG_GiveWeaponOnGetup = 446,
 * 	CPED_CONFIG_FLAG_DontHitVehicleWithProjectiles = 447,
 * 	CPED_CONFIG_FLAG_DisableForcedEntryForOpenVehiclesFromTryLockedDoor = 448,
 * 	CPED_CONFIG_FLAG_FiresDummyRockets = 449,
 * 	CPED_CONFIG_FLAG_PedIsArresting = 450,
 * 	CPED_CONFIG_FLAG_IsDecoyPed = 451,
 * 	CPED_CONFIG_FLAG_HasEstablishedDecoy = 452,
 * 	CPED_CONFIG_FLAG_BlockDispatchedHelicoptersFromLanding = 453,
 * 	CPED_CONFIG_FLAG_DontCryForHelpOnStun = 454,
 * 	CPED_CONFIG_FLAG_HitByTranqWeapon = 455,
 * 	CPED_CONFIG_FLAG_CanBeIncapacitated = 456,
 * 	CPED_CONFIG_FLAG_ForcedAimFromArrest = 457,
 * 	CPED_CONFIG_FLAG_DontChangeTargetFromMelee = 458,
 * 	_0x4376ABF2 = 459,
 * 	CPED_CONFIG_FLAG_RagdollFloatsIndefinitely = 460,
 * 	CPED_CONFIG_FLAG_BlockElectricWeaponDamage = 461,
 * 	_0x262A3B8E = 462,
 * 	_0x1AA79A25 = 463,
 * }
 * ```
 * @param ped - 
 * @param flagId - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x1913FE4CBF41C463
 */
export function setPedConfigFlag(ped: number, flagId: number, value: number): void;

/**
 * ```
 * Sends the message that was created by a call to CREATE_NM_MESSAGE to the specified Ped.  
 * If a message hasn't been created already, this function does nothing.  
 * If the Ped is not ragdolled with Euphoria enabled, this function does nothing.  
 * The following call can be used to ragdoll the Ped with Euphoria enabled: SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);  
 * Call order:  
 * SET_PED_TO_RAGDOLL  
 * CREATE_NM_MESSAGE  
 * GIVE_PED_NM_MESSAGE  
 * Multiple messages can be chained. Eg. to make the ped stagger and swing his arms around, the following calls can be made:  
 * SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);  
 * CREATE_NM_MESSAGE(true, 0); // stopAllBehaviours - Stop all other behaviours, in case the Ped is already doing some Euphoria stuff.  
 * GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.  
 * CREATE_NM_MESSAGE(true, 1151); // staggerFall - Attempt to walk while falling.  
 * GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.  
 * CREATE_NM_MESSAGE(true, 372); // armsWindmill - Swing arms around.  
 * GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.  
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xB158DFCCC56E5C5B
 */
export function givePedNmMessage(ped: number): void;

/**
 * ```
 * Something related to the environmental effects natives.
 * In the "agency_heist3b" script, p1 - p3 are always under 100 - usually they are {87, 81, 68}. If SET_PED_ENVEFF_SCALE is set to 0.65 (instead of the usual 1.0), they use {74, 69, 60}
 * ```
 * @param ped - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns void
 * @remarks Hash: 0xD69411AA0CEBF9E9
 */
export function setPedEnveffColorModulator(ped: number, r: number, g: number, b: number): void;

/**
 * Removes the scubagear (for mp male: component id: 8, drawableId: 123, textureId: any) from peds. Does not play the 'remove scuba gear' animation, but instantly removes it.
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xB50EB4CCB29704AC
 */
export function clearPedScubaGearVariation(ped: number): void;

/**
 * ## Parameters
 * *
 * @param asset - 
 * @returns void
 * @remarks Hash: 0x9219857D21F0E842
 */
export function removeStealthModeAsset(asset: string): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xFB92A102F1C4DFA3
 */
export function isPedFalling(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xF79F9DEF0AADE61A
 */
export function releasePedPreloadPropData(ped: number): void;

/**
 * ```
 * CLEAR_PED_*
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xC79196DCB36F6121
 */
export function ClearPedCoverClipsetOverride(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param tintIndex - 
 * @returns void
 * @remarks Hash: 0x333FC8DB079B7186
 */
export function setPedParachuteTintIndex(ped: number, tintIndex: number): void;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param animDict - 
 * @param animName - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param p8 - 
 * @param p9 - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x4B805E6046EE9E47
 */
export function getAnimInitialOffsetRotation(animDict: string, animName: string, x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, p8: number, p9: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xE0A0AEC214B1FABA
 */
export function isConversationPedDead(ped: number): number;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xE163A4BCE4DE6F11
 */
export function setPedModelIsSuppressed(): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xC158D28142A34608
 */
export function stopPedWeaponFiringWhenDropped(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xEC4686EC06434678
 */
export function setPedCanUseAutoConversationLookat(ped: number, toggle: number): void;

/**
 * ```
 * Only appears in lamar1 script.  
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x1A330D297AAC6BC1
 */
export function 0x1a330d297aac6bc1(ped: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x5891CAC5D4ACFF74
 */
export function isPedInGroup(ped: number): number;

/**
 * Sets the IK target for a given IK part belonging to the ped.
 * @param ped - 
 * @param ikIndex - 
 * @param entityLookAt - 
 * @param boneLookAt - 
 * @param offsetX - 
 * @param offsetY - 
 * @param offsetZ - 
 * @param ikTargetFlags - 
 * @param blendInDuration - 
 * @param blendOutDuration - 
 * @returns void
 * @remarks Hash: 0xC32779C16FCEECD9
 */
export function setIkTarget(ped: number, ikIndex: number, entityLookAt: number, boneLookAt: number, offsetX: number, offsetY: number, offsetZ: number, ikTargetFlags: number, blendInDuration: number, blendOutDuration: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x3DBFC55D5C9BB447
 */
export function setPedNeverLeavesGroup(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6B7A646C242A7059
 */
export function setPedCanEvasiveDive(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param pedType - 
 * @param modelHash - 
 * @param seat - 
 * @param isNetwork - 
 * @param bScriptHostPed - 
 * @returns number
 * @remarks Hash: 0x7DD959874C1FD534
 */
export function createPedInsideVehicle(vehicle: number, pedType: number, modelHash: number, seat: number, isNetwork: number, bScriptHostPed: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xEC5F66E459AF3BB2
 */
export function isPedOnSpecificVehicle(ped: number, vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x1C86D8AEF8254B78
 */
export function isPedHangingOnToVehicle(ped: number): number;

/**
 * **Usage:** Call this native every frame
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0x95E3D6257B166CF2
 */
export function setPedDensityMultiplierThisFrame(multiplier: number): void;

/**
 * ```
 * Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).  
 * ```
 * @param ped - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0x9222F300BF8354FE
 */
export function registerHatedTargetsAroundPed(ped: number, radius: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param componentId - 
 * @param drawableId - 
 * @param textureId - 
 * @returns number
 * @remarks Hash: 0x2B16A3BFF1FBCE49
 */
export function setPedPreloadPropData(ped: number, componentId: number, drawableId: number, textureId: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x5086C7843552CF85
 */
export function setScriptedConversionCoordThisFrame(x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param sceneID - 
 * @returns number
 * @remarks Hash: 0xD80932D577274D40
 */
export function getSynchronizedSceneRate(sceneID: number): number;

/**
 * ```
 * Values look to be between 0.0 and 1.0  
 * From decompiled scripts: 0.0, 0.6, 0.65, 0.8, 1.0  
 * You are correct, just looked in IDA it breaks from the function if it's less than 0.0f or greater than 1.0f.  
 * ```
 * @param ped - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xBF29516833893561
 */
export function setPedEnveffScale(ped: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x3F69145BBA87BAE7
 */
export function getPedMoney(ped: number): number;

/**
 * @returns void
 * @remarks Hash: 0xB47BD05FA66B40CF
 */
export function stopAnyPedModelBeingSuppressed(): void;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x65671A4FB8218930
 */
export function GetPedDiesInWater(ped: number): number;

/**
 * ```
 * CLEAR_PED_*
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x80054D7FCC70EEC6
 */
export function 0x80054d7fcc70eec6(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x332B562EEDA62399
 */
export function setPedToLoadCover(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x813A0A7C9D2E831F
 */
export function isPedHeadtrackingEntity(ped: number, entity: number): number;

/**
 * ```
 * Gets ID of vehicle player using. It means it can get ID at any interaction with vehicle. Enter\exit for example. And that means it is faster than GET_VEHICLE_PED_IS_IN but less safe.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x6094AD011A2EA87D
 */
export function getVehiclePedIsUsing(ped: number): number;

/**
 * ```
 * If the ped handle passed through the parenthesis is in a ragdoll state this will return true.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x47E4E977581C5B55
 */
export function isPedRagdoll(ped: number): number;

/**
 * ```
 * Resets the value for the last vehicle driven by the Ped.  
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xBB8DE8CF6A8DD8BB
 */
export function resetPedLastVehicle(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xA3A9299C4F2ADB98
 */
export function setPedShouldPlayNormalScenarioExit(ped: number): void;

/**
 * @returns void
 * @remarks Hash: 0x46E56A7CD1D63C3F
 */
export function resetAiMeleeWeaponDamageModifier(): void;

/**
 * ```
 * Returns size of array, passed into the second variable.  
 * See below for usage information.  
 * This function actually requires a struct, where the first value is the maximum number of elements to return.  Here is a sample of how I was able to get it to work correctly, without yet knowing the struct format.  
 * //Setup the array  
 * 	const int numElements = 10;  
 * 	const int arrSize = numElements * 2 + 2;  
 * 	Any veh[arrSize];  
 * 	//0 index is the size of the array  
 * 	veh[0] = numElements;  
 * 	int count = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), veh);  
 * 	if (veh != NULL)  
 * 	{  
 * //Simple loop to go through results  
 * for (int i = 0; i < count; i++)  
 * {  
 * 	int offsettedID = i * 2 + 2;  
 * 	//Make sure it exists  
 * 	if (veh[offsettedID] != NULL && ENTITY::DOES_ENTITY_EXIST(veh[offsettedID]))  
 * 	{  
 * //Do something  
 * 	}  
 * }  
 * 	}    
 * Here's the right way to do it (console and pc):  
 * pastebin.com/SsFej963  
 * ```
 * @param ped - 
 * @param sizeAndVehs - 
 * @returns number
 * @remarks Hash: 0xCFF869CBFA210D82
 */
export function getPedNearbyVehicles(ped: number, sizeAndVehs: number): number;

/**
 * ```
 * p1 is always 0 in R* scripts; and a quick disassembly seems to indicate that p1 is unused.  
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xC8A9481A01E63C28
 */
export function setPedRandomComponentVariation(ped: number): void;

/**
 * See [`SET_PED_HEAD_BLEND_DATA`](#_0x9414E18B9434C2FE)
 * @param ped - 
 * @param shapeMix - 
 * @param skinMix - 
 * @param thirdMix - 
 * @returns void
 * @remarks Hash: 0x723538F61C647C5A
 */
export function updatePedHeadBlendData(ped: number, shapeMix: number, skinMix: number, thirdMix: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param radius - 
 * @param maxFriends - 
 * @returns void
 * @remarks Hash: 0x112942C6E708F70B
 */
export function setPedToInformRespectedFriends(ped: number, radius: number, maxFriends: number): void;

/**
 * ```
 * teleports ped to coords along with the vehicle ped is in  
 * ```
 * @param ped - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @returns void
 * @remarks Hash: 0x9AFEFF481A85AB2E
 */
export function setPedCoordsKeepVehicle(ped: number, posX: number, posY: number, posZ: number): void;

/**
 * Retrieves the vehicle the specified ped is currently in, or the last vehicle they were in.
 * @param ped - 
 * @param lastVehicle - 
 * @returns number
 * @remarks Hash: 0x9A9112A0FE9A4713
 */
export function getVehiclePedIsIn(ped: number, lastVehicle: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x9E30E91FB03A2CAF
 */
export function 0x9e30e91fb03a2caf(p0: any, p1: any): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x7FB17BA2E7DECA5B
 */
export function setPedGeneratesDeadBodyEvents(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x0EB0585D15254740
 */
export function setPedCanPlayAmbientBaseAnims(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x711794453CFD692B
 */
export function 0x711794453cfd692b(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x73518ECE2485412B
 */
export function setPedCanLegIk(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param sceneID - 
 * @returns number
 * @remarks Hash: 0x62522002E0C391BA
 */
export function isSynchronizedSceneLooped(sceneID: number): number;

/**
 * ```
 * name: "MP_FEMALE_ACTION" found multiple times in the b617d scripts.
 * ```
 * @param ped - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0x781DE8FA214E87D2
 */
export function setMovementModeOverride(ped: number, name: string): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param groupId - 
 * @returns void
 * @remarks Hash: 0x9F3480FE65DB31B5
 */
export function setPedAsGroupMember(ped: number, groupId: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param componentId - 
 * @param drawableId - 
 * @returns number
 * @remarks Hash: 0x8F7156A3142A6BAD
 */
export function getNumberOfPedTextureVariations(ped: number, componentId: number, drawableId: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x412F1364FA066CFB
 */
export function 0x412f1364fa066cfb(p0: any): any;

/**
 * ```
 * Overrides the ped's collision capsule radius for the current tick.  
 * Must be called every tick to be effective.  
 * Setting this to 0.001 will allow warping through some objects.  
 * ```
 * @param ped - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x364DF566EC833DE2
 */
export function setPedCapsule(ped: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xE3B27E70CEAB9F0C
 */
export function clearPedDecorationsLeaveScars(ped: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x3E9679C1DFCF422C
 */
export function 0x3e9679c1dfcf422c(p0: any, p1: any): void;

/**
 * ```
 * Detect if ped is in any vehicle  
 * [True/False]  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x826AA586EDB9FEF8
 */
export function isPedSittingInAnyVehicle(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x3C06B8786DD94CD1
 */
export function getPedDefensiveAreaPosition(ped: number, p1: number): { x: number, y: number, z: number };

/**
 * Creates a ped (biped character, pedestrian, actor) with the specified model at the specified position and heading.
 * This ped will initially be owned by the creating script as a mission entity, and the model should be loaded already
 * (e.g. using REQUEST_MODEL).
 * @param pedType - 
 * @param modelHash - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param heading - 
 * @param isNetwork - 
 * @param bScriptHostPed - 
 * @returns number
 * @remarks Hash: 0xD49F9B0955C367DE
 */
export function createPed(pedType: number, modelHash: number, x: number, y: number, z: number, heading: number, isNetwork: number, bScriptHostPed: number): number;

/**
 * Prevents ambient peds from dropping their weapons for the current frame.
 * 
 * ```
 * NativeDB Introduced: v3258
 * ```
 * @returns void
 * @remarks Hash: 0xC73EFFC5E043A8BA
 */
export function SetBlockAmbientPedsFromDroppingWeaponsThisFrame(): void;

/**
 * ```
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/  
 * ```
 * @param id - 
 * @returns number
 * @remarks Hash: 0xA0A9668F158129A2
 */
export function isPedheadshotValid(id: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xFD4CCDBCC59941B7
 */
export function isPedPerformingStealthKill(ped: number): number;

/**
 * Used with [SET_ENABLE_HANDCUFFS](#_0xDF1AF8B5D56542FA) in decompiled scripts. From my observations, I have noticed that while being ragdolled you are not able to get up but you can still run. Your legs can also bend.
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC52E0F855C58FC2E
 */
export function setEnableBoundAnkles(ped: number, toggle: number): void;

/**
 * ```
 * From the scripts:  
 * PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),  
 * "ANIM_GROUP_GESTURE_MISS_FRA0");  
 * PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),  
 * "ANIM_GROUP_GESTURE_MISS_DocksSetup1");  
 * ```
 * @param ped - 
 * @param animGroupGesture - 
 * @returns void
 * @remarks Hash: 0xDDF803377F94AAA8
 */
export function setPedGestureGroup(ped: number, animGroupGesture: string): void;

/**
 * ```
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x4462658788425076
 */
export function registerPedheadshot(ped: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param object - 
 * @returns number
 * @remarks Hash: 0x62EC273D00187DCA
 */
export function CreateSynchronizedScene2(x: number, y: number, z: number, radius: number, object: number): number;

/**
 * ## Parameters
 * *
 * @param groupId - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x1D9D45004C28C916
 */
export function setGroupFormationSpacing(groupId: number, p1: number, p2: number, p3: number): void;

/**
 * ```
 * p1 is always 0  
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x4FBACCE3B4138EE8
 */
export function isPedBeingStunned(ped: number, p1: number): number;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param ped - 
 * @param eventType - 
 * @param outData - 
 * @returns number
 * @remarks Hash: 0xBA656A3BB01BDEA3
 */
export function GetPedEventData(ped: number, eventType: number, outData: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns number
 * @remarks Hash: 0x06087579E7AA85A9
 */
export function 0x06087579e7aa85a9(p0: any, p1: any, p2: number, p3: number, p4: number, p5: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDF993EE5E90ABA25
 */
export function setPedCanRagdollFromPlayerImpact(ped: number, toggle: number): void;

/**
 * ```
 * Returns true/false if the ped is/isn't male.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x6D9F5FAA7488BA46
 */
export function isPedMale(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x816F6981C60BF53B
 */
export function applyPedBloodDamageByZone(ped: number, p1: any, p2: number, p3: number, p4: any): void;

/**
 * ```
 * combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function  
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xB5485E4907B53019
 */
export function setPedWetnessEnabledThisFrame(ped: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x88274C11CF0D866D
 */
export function IsScubaGearLightEnabled(ped: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns any
 * @remarks Hash: 0x336B3D200AB007CB
 */
export function 0x336b3d200ab007cb(p0: any, p1: number, p2: number, p3: number, p4: number): any;

/**
 * ```
 * Gets the position of the specified bone of the specified ped.  
 * ped: The ped to get the position of a bone from.  
 * boneId: The ID of the bone to get the position from. This is NOT the index.  
 * offsetX: The X-component of the offset to add to the position relative to the bone's rotation.  
 * offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.  
 * offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.  
 * ```
 * @param ped - 
 * @param boneId - 
 * @param offsetX - 
 * @param offsetY - 
 * @param offsetZ - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x17C07FC640E86B4E
 */
export function getPedBoneCoords(ped: number, boneId: number, offsetX: number, offsetY: number, offsetZ: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param asset - 
 * @returns number
 * @remarks Hash: 0xE977FC5B08AF3441
 */
export function hasStealthModeAssetLoaded(asset: string): number;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param ped - 
 * @param animDict - 
 * @param animName - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x6C60394CB4F75E9A
 */
export function setPedAlternateWalkAnim(ped: number, animDict: string, animName: string, p3: number, p4: number): void;

/**
 * ```
 * Judging purely from a quick disassembly, if the ped is in a vehicle, the ped will be deleted immediately. If not, it'll be marked as no longer needed. 
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xAC6D445B994DF95E
 */
export function removePedElegantly(ped: number): void;

/**
 * [`SET_VEHICLE_STEER_BIAS`](#_0x42A8EC77D5150CBE) for peds, e.g., `_SET_PED_STEER_BIAS`.
 * @param ped - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x288DF530C92DAD6F
 */
export function 0x288df530c92dad6f(ped: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x22EF8FF8778030EB
 */
export function resetPedInVehicleContext(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param target - 
 * @returns number
 * @remarks Hash: 0xEAD42DE3610D0721
 */
export function canPedInCombatSeeTarget(ped: number, target: number): number;

/**
 * Kicks the ped from the current vehicle and keeps the rendering-focus on this ped (also disables its collision). If doing this for your player ped, you'll still be able to drive the vehicle.  
 * Only to be used in very specific situations where the ped needs to be inside the car still but not attached.
 * @param ped - 
 * @param noCollisionUntilClear - 
 * @returns void
 * @remarks Hash: 0xF9ACF4A08098EA25
 */
export function specialFunctionDoNotUse(ped: number, noCollisionUntilClear: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x20510814175EA477
 */
export function resetPedStrafeClipset(ped: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5EE2CAFF7F17770D
 */
export function canCreateRandomCops(): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDA1F1B7BE1A8766F
 */
export function setPedAllowedToDuck(ped: number, toggle: number): void;

/**
 * ```
 * REQUEST_*
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xCD018C591F94CB43
 */
export function 0xcd018c591f94cb43(ped: number, p1: number): void;

/**
 * Used for freemode (online) characters.  
 * 
 * Indices:
 *   1. black
 *   2. very light blue/green
 *   3. dark blue
 *   4. brown
 *   5. darker brown
 *   6. light brown
 *   7. blue
 *   8. light blue
 *   9. pink
 *   10. yellow
 *   11. purple
 *   12. black
 *   13. dark green
 *   14. light brown
 *   15. yellow/black pattern
 *   16. light colored spiral pattern
 *   17. shiny red
 *   18. shiny half blue/half red
 *   19. half black/half light blue
 *   20. white/red perimter
 *   21. green snake
 *   22. red snake
 *   23. dark blue snake
 *   24. dark yellow
 *   25. bright yellow
 *   26. all black
 *   28. red small pupil
 *   29. devil blue/black
 *   30. white small pupil
 *   31. glossed over
 * @param ped - 
 * @param index - 
 * @returns void
 * @remarks Hash: 0x50B56988B170AFDF
 */
export function SetPedEyeColor(ped: number, index: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xC2EE020F5FB4DB53
 */
export function 0xc2ee020f5fb4db53(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param player - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x66B57B72E0836A76
 */
export function setPedCanBeTargettedByPlayer(ped: number, player: number, toggle: number): void;

/**
 * ```
 * SET_PED_*  
 * Has most likely to do with some shooting attributes as it sets the float which is in the same range as shootRate.  
 * ```
 * @param ped - 
 * @param unk - 
 * @returns void
 * @remarks Hash: 0xEC4B4B3B9908052A
 */
export function 0xec4b4b3b9908052a(ped: number, unk: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xB8EB95E5B4E56978
 */
export function canCreateRandomDriver(): number;

/**
 * @returns void
 * @remarks Hash: 0xFEE4A5459472A9F8
 */
export function spawnpointsCancelSearch(): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x5BA7919BED300023
 */
export function setPedDiesWhenInjured(ped: number, toggle: number): void;

/**
 * ```
 * Somehow related to changing ped's clothes.  
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x56E3B78C5408D9F4
 */
export function clearPedBloodDamageByZone(ped: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x2E0E1C2B4F6CB339
 */
export function isPedInAnyBoat(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x687C0B594907D2E8
 */
export function clearPedStoredHatProp(ped: number): void;

/**
 * ```
 * Gets a value indicating whether the specified ped is on top of any vehicle.  
 * Return 1 when ped is on vehicle.  
 * Return 0 when ped is not on a vehicle.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x67722AEB798E5FAB
 */
export function isPedOnVehicle(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param heading - 
 * @returns void
 * @remarks Hash: 0xAA5A7ECE2AA8FE70
 */
export function setPedDesiredHeading(ped: number, heading: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xEACEEDA81751915C
 */
export function canCreateRandomBikeRider(): number;

/**
 * ```
 * Presumably returns the Entity that the Ped is currently diving out of the way of.
 * var num3;
 *     if (PED::IS_PED_EVASIVE_DIVING(A_0, &num3) != 0)
 *         if (ENTITY::IS_ENTITY_A_VEHICLE(num3) != 0)
 * ```
 * @param ped - 
 * @param evadingEntity - 
 * @returns number
 * @remarks Hash: 0x414641C26E105898
 */
export function isPedEvasiveDiving(ped: number, evadingEntity: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xA21C118553BBDF02
 */
export function disableHeadBlendPaletteColor(ped: number): void;

/**
 * ```
 * Can't select void. This function returns nothing. The hash of the created relationship group is output in the second parameter.  
 * ```
 * @param name - 
 * @param groupHash - 
 * @returns any
 * @remarks Hash: 0xF372BC22FCB88606
 */
export function addRelationshipGroup(name: string, groupHash: number): any;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x9F65DBC537E59AD5
 */
export function isPedGoingIntoCover(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x5AAB586FFEC0FD96
 */
export function releasePedPreloadVariationData(ped: number): void;

/**
 * See [`TASK_START_SCENARIO_IN_PLACE`](#_0x142A02425FF02BD9) for a list of scenarios.
 * @param ped - 
 * @param scenario - 
 * @returns number
 * @remarks Hash: 0x1BF094736DD62C2E
 */
export function isPedUsingScenario(ped: number, scenario: string): number;

/**
 * ```
 * The distance between these points, is the diagonal of a box (remember it's 3D).  
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @returns void
 * @remarks Hash: 0xEE01041D559983EA
 */
export function setPedNonCreationArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x433083750C5E064A
 */
export function setPedMaxMoveBlendRatio(ped: number, value: number): void;

/**
 * Returns whether the specified ped is in any vehicle. If `atGetIn` is set to true, also returns true if the ped is
 * currently in the process of entering a vehicle (a specific stage check for `CTaskEnterVehicle`).
 * @param ped - 
 * @param atGetIn - 
 * @returns number
 * @remarks Hash: 0x997ABD671D25CA0B
 */
export function isPedInAnyVehicle(ped: number, atGetIn: number): number;

/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param range - 
 * @returns number
 * @remarks Hash: 0x082D79E15302F0C2
 */
export function isPedInSphereAreaOfAnyEnemyPeds(ped: number, x: number, y: number, z: number, range: number): number;

/**
 * ## Parameters
 * *
 * @param sceneID - 
 * @param phase - 
 * @returns void
 * @remarks Hash: 0x734292F4F0ABF6D0
 */
export function setSynchronizedScenePhase(sceneID: number, phase: number): void;

/**
 * ```
 * 0 - Stationary (Will just stand in place)  
 * 1 - Defensive (Will try to find cover and very likely to blind fire)  
 * 2 - Offensive (Will attempt to charge at enemy but take cover as well)  
 * 3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)  
 * ```
 * @param ped - 
 * @param combatMovement - 
 * @returns void
 * @remarks Hash: 0x4D9CA1009AFBD057
 */
export function setPedCombatMovement(ped: number, combatMovement: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x6F972C1AB75A1ED0
 */
export function isPedInAnyTrain(ped: number): number;

/**
 * ```
 * GET_*
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x511F1A683387C7E2
 */
export function 0x511f1a683387c7e2(ped: number): number;

/**
 * ## Parameters
 * *
 * @param asset - 
 * @returns number
 * @remarks Hash: 0xE4B5F4BF2CB24E65
 */
export function hasActionModeAssetLoaded(asset: string): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param interiorFlags - 
 * @param scale - 
 * @param duration - 
 * @returns void
 * @remarks Hash: 0x2DF9038C90AD5264
 */
export function spawnpointsStartSearch(p0: number, p1: number, p2: number, p3: number, p4: number, interiorFlags: number, scale: number, duration: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x9D728C1E12BF5518
 */
export function getPedHelmetStoredHatTexIndex(ped: number): number;

/**
 * ```
 * Works for both player and peds, but some flags don't seem to work for the player (1, for example)  
 * 1 - Blocks ragdolling when shot.  
 * 2 - Blocks ragdolling when hit by a vehicle. The ped still might play a falling animation.  
 * 4 - Blocks ragdolling when set on fire.
 * @param ped - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0x26695EC767728D84
 */
export function setRagdollBlockingFlags(ped: number, flags: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param hash - 
 * @returns void
 * @remarks Hash: 0xC80A74AC829DDD92
 */
export function setPedRelationshipGroupHash(ped: number, hash: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x129466ED55140F8D
 */
export function setForceFootstepUpdate(ped: number, toggle: number): void;

/**
 * ```
 * Sets a value indicating whether scenario peds should be returned by the next call to a command that returns peds. Eg. GET_CLOSEST_PED.  
 * ```
 * @param value - 
 * @returns void
 * @remarks Hash: 0x14F19A8782C8071E
 */
export function setScenarioPedsToBeReturnedByNextCommand(value: number): void;

/**
 * ```
 * Returns true if the given ped has a valid pointer to CPlayerInfo in its CPed class. That's all.
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x12534C348C6CB68B
 */
export function isPedAPlayer(ped: number): number;

/**
 * ```
 * p2 usually 0  
 * ```
 * @param ped - 
 * @param toggle - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xF833DDBA3B104D43
 */
export function setPedCanPlayVisemeAnims(ped: number, toggle: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC7EF1BA83230BA07
 */
export function setPedCanBeShotInVehicle(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x654CD0A825161131
 */
export function hasPedHeadBlendFinished(ped: number): number;

/**
 * ```
 * Returns whether the specified ped is shooting.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x34616828CD07F1A1
 */
export function isPedShooting(ped: number): number;

/**
 * Set the maximum time a ped can stay underwater. Maximum seems to be 50 seconds.
 * @param ped - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x6BA428C528D9E522
 */
export function setPedMaxTimeUnderwater(ped: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6C3B4D6D13B4C841
 */
export function setPedCanArmIk(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x02A0C9720B854BFA
 */
export function setPedAsEnemy(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param attachPed - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @returns void
 * @remarks Hash: 0x4EF47FE21698A8B6
 */
export function setPedDefensiveAreaAttachedToPed(ped: number, attachPed: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9A77DFD295E29B09
 */
export function 0x9a77dfd295e29b09(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0x5615E0C5EB2BC6E2
 */
export function SetRelationshipGroupDontAffectWantedLevel(): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xE43A13C9E4CCCBCF
 */
export function BlockPedDeadBodyShockingEvents(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param combatType - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xFF41B4B141ED981C
 */
export function setCombatFloat(ped: number, combatType: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x0F62619393661D6E
 */
export function 0x0f62619393661d6e(p0: any, p1: any, p2: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x9E8C908F41584ECD
 */
export function setPedMoveAnimsBlendOut(ped: number): void;

/**
 * If the ped is attempting to enter a locked vehicle.
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x44D28D5DDFE5F68C
 */
export function isPedTryingToEnterALockedVehicle(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x9C6A6C19B6C0C496
 */
export function 0x9c6a6c19b6c0c496(ped: number): number;

/**
 * Sets the tint index for the hair on the specified ped.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param ped - 
 * @param colorID - 
 * @param highlightColorID - 
 * @returns void
 * @remarks Hash: 0x4CFFC65454C93A49
 */
export function setPedHairTint(ped: number, colorID: number, highlightColorID: number): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xDFE68C4B787E1BFB
 */
export function 0xdfe68c4b787e1bfb(ped: number): void;

/**
 * Sets the IsHandCuffed (120) config flag on the ped. This blocks the ped from switching weapons (with the exception of switching to `weapon_unarmed`), makes the ped ragdoll on getting punched and forces a different get-up animation after ragdolling. The ped can also not vault over or climb on top of objects.
 * 
 * Used in combination with [SET_ENABLE_BOUND_ANKLES](#_0xC52E0F855C58FC2E) in decompiled scripts.
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDF1AF8B5D56542FA
 */
export function setEnableHandcuffs(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x71EAB450D86954A1
 */
export function getPedDecorationsState(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x97A790315D3831FD
 */
export function setPedEnableWeaponBlocking(ped: number, toggle: number): void;

/**
 * ```
 * List of movement clipsets:
 * Thanks to elsewhat for list.
 *  "ANIM_GROUP_MOVE_BALLISTIC"
 *  "ANIM_GROUP_MOVE_LEMAR_ALLEY"
 *  "clipset@move@trash_fast_turn"
 *  "FEMALE_FAST_RUNNER"
 *  "missfbi4prepp1_garbageman"
 *  "move_characters@franklin@fire"
 *  "move_characters@Jimmy@slow@"
 *  "move_characters@michael@fire"
 *  "move_f@flee@a"
 *  "move_f@scared"
 *  "move_f@sexy@a"
 *  "move_heist_lester"
 *  "move_injured_generic"
 *  "move_lester_CaneUp"
 *  "move_m@bag"
 *  "MOVE_M@BAIL_BOND_NOT_TAZERED"
 *  "MOVE_M@BAIL_BOND_TAZERED"
 *  "move_m@brave"
 *  "move_m@casual@d"
 *  "move_m@drunk@moderatedrunk"
 *  "MOVE_M@DRUNK@MODERATEDRUNK"
 *  "MOVE_M@DRUNK@MODERATEDRUNK_HEAD_UP"
 *  "MOVE_M@DRUNK@SLIGHTLYDRUNK"
 *  "MOVE_M@DRUNK@VERYDRUNK"
 *  "move_m@fire"
 *  "move_m@gangster@var_e"
 *  "move_m@gangster@var_f"
 *  "move_m@gangster@var_i"
 *  "move_m@JOG@"
 *  "MOVE_M@PRISON_GAURD"
 *  "MOVE_P_M_ONE"
 *  "MOVE_P_M_ONE_BRIEFCASE"
 *  "move_p_m_zero_janitor"
 *  "move_p_m_zero_slow"
 *  "move_ped_bucket"
 *  "move_ped_crouched"
 *  "move_ped_mop"
 *  "MOVE_M@FEMME@"
 *  "MOVE_F@FEMME@"
 *  "MOVE_M@GANGSTER@NG"
 *  "MOVE_F@GANGSTER@NG"
 *  "MOVE_M@POSH@"
 *  "MOVE_F@POSH@"
 *  "MOVE_M@TOUGH_GUY@"
 *  "MOVE_F@TOUGH_GUY@"
 * ~ NotCrunchyTaco
 * ```
 * @param ped - 
 * @param clipSet - 
 * @param transitionSpeed - 
 * @returns void
 * @remarks Hash: 0xAF8A94EDE7712BEF
 */
export function setPedMovementClipset(ped: number, clipSet: string, transitionSpeed: number): void;

/**
 * ```
 * Min and max are usually 100.0 and 200.0
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param min - 
 * @param max - 
 * @returns void
 * @remarks Hash: 0xD8C3BE3EE94CAF2D
 */
export function setPopControlSphereThisFrame(x: number, y: number, z: number, min: number, max: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param animName - 
 * @param animDict - 
 * @returns void
 * @remarks Hash: 0xE1E65CA8AC9C00ED
 */
export function playFacialAnim(ped: number, animName: string, animDict: string): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x37F4AD56ECBC0CD6
 */
export function getPedAccuracy(ped: number): number;

/**
 * ## Parameters
 * *
 * @param groupId - 
 * @returns void
 * @remarks Hash: 0x8EB2F69076AF7053
 */
export function removeGroup(groupId: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x18A3E9EE1297FD39
 */
export function getMeleeTargetForPed(ped: number): number;

/**
 * ```
 * from fm_mission_controller.c4 (variable names changed for clarity):  
 * int groupID = PLAYER::GET_PLAYER_GROUP(PLAYER::PLAYER_ID());  
 * PED::GET_GROUP_SIZE(group, &unused, &groupSize);  
 * if (groupSize >= 1) {  
 * . . . . for (int memberNumber = 0; memberNumber < groupSize; memberNumber++) {  
 * . . . . . . . . Ped ped1 = PED::GET_PED_AS_GROUP_MEMBER(groupID, memberNumber);  
 * . . . . . . . . //and so on  
 * ```
 * @param groupID - 
 * @param memberNumber - 
 * @returns number
 * @remarks Hash: 0x51455483CF23ED97
 */
export function getPedAsGroupMember(groupID: number, memberNumber: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x733C87D4CE22BEA2
 */
export function 0x733c87d4ce22bea2(ped: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param range - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x28157D43CF600981
 */
export function setScenarioPedsSpawnInSphereArea(x: number, y: number, z: number, range: number, p4: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC514825C507E3736
 */
export function setPedCanPeekInCover(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x2AFE52F782F25775
 */
export function isPedRunningMobilePhoneTask(ped: number): number;

/**
 * ## Parameters
 * *
 * @param sceneID - 
 * @returns number
 * @remarks Hash: 0x7F2F4F13AC5257EF
 */
export function isSynchronizedSceneHoldLastFrame(sceneID: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x53E8CB4F48BFE623
 */
export function isPedClimbing(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param target - 
 * @param xOffset - 
 * @param yOffset - 
 * @param zOffset - 
 * @param radius - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0xF9B8F91AAD3B953E
 */
export function setPedDefensiveSphereAttachedToPed(ped: number, target: number, xOffset: number, yOffset: number, zOffset: number, radius: number, p6: number): void;

/**
 * Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
 * Needs to be recalled after each ragdoll from a Collision.
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF0A4F1BBF4FA7497
 */
export function setPedRagdollOnCollision(ped: number, toggle: number): void;

/**
 * ```
 * Detect if ped is sitting in the specified vehicle  
 * [True/False]  
 * ```
 * @param ped - 
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xA808AA1D79230FC2
 */
export function isPedSittingInVehicle(ped: number, vehicle: number): number;

/**
 * ```
 * It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.  
 * ```
 * @param ped - 
 * @param height - 
 * @returns void
 * @remarks Hash: 0x44CB6447D2571AA0
 */
export function setPedWetnessHeight(ped: number, height: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x3F7325574E41B44D
 */
export function SetPedHelmetUnk(ped: number, p1: number, p2: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1509C089ADC208BF
 */
export function setPedSteersAroundObjects(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x5486A79D9FBD342D
 */
export function getJackTarget(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x00E73468D085F745
 */
export function isPedUsingActionMode(ped: number): number;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x32C27A11307B01CC
 */
export function GetPedTaskCombatTarget(ped: number, p1: any): number;

/**
 * ## Parameters
 * *
 * @param modelHash - 
 * @param p1 - 
 * @param p2 - 
 * @returns any
 * @remarks Hash: 0xC56FBF2F228E1DAC
 */
export function 0xc56fbf2f228e1dac(modelHash: number, p1: any, p2: any): any;

/**
 * ```
 * p1 may be a BOOL representing whether or not the group even exists  
 * ```
 * @param groupID - 
 * @param unknown - 
 * @param sizeInMembers - 
 * @returns void
 * @remarks Hash: 0x8DE69FE35CA09A45
 */
export function getGroupSize(groupID: number, unknown: any, sizeInMembers: number): void;

/**
 * ```
 * Copies ped's components and props to targetPed.
 * ```
 * @param ped - 
 * @param targetPed - 
 * @returns void
 * @remarks Hash: 0xE952D6431689AD9A
 */
export function clonePedToTarget(ped: number, targetPed: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x845333B3150583AB
 */
export function isPedInCoverFacingLeft(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param componentId - 
 * @returns number
 * @remarks Hash: 0xE131A28626F81AB2
 */
export function getPedPropTextureIndex(ped: number, componentId: number): number;

/**
 * ## Parameters
 * *
 * @param sceneID - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param roll - 
 * @param pitch - 
 * @param yaw - 
 * @param p7 - 
 * @returns void
 * @remarks Hash: 0x6ACF6B7225801CD7
 */
export function setSynchronizedSceneOrigin(sceneID: number, x: number, y: number, z: number, roll: number, pitch: number, yaw: number, p7: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xED74007FFB146BC2
 */
export function removePedFromGroup(ped: number): void;

/**
 * ```
 * Only 1 and 2 appear in the scripts. combatbehaviour.meta seems to only have TLR_SearchForTarget for all peds, but we don't know if that's 1 or 2.  
 * ```
 * @param ped - 
 * @param responseType - 
 * @returns void
 * @remarks Hash: 0x0703B9079823DA4A
 */
export function setPedTargetLossResponse(ped: number, responseType: number): void;

/**
 * Ped types:
 * 
 * ```cpp
 * enum ePedType
 * {
 * 	PED_TYPE_PLAYER_0 = 0,
 * 	PED_TYPE_PLAYER_1 = 1,
 * 	PED_TYPE_NETWORK_PLAYER = 2,
 * 	PED_TYPE_PLAYER_2 = 3,
 * 	PED_TYPE_CIVMALE = 4,
 * 	PED_TYPE_CIVFEMALE = 5,
 * 	PED_TYPE_COP = 6,
 * 	PED_TYPE_GANG_ALBANIAN = 7,
 * 	PED_TYPE_GANG_BIKER_1 = 8,
 * 	PED_TYPE_GANG_BIKER_2 = 9,
 * 	PED_TYPE_GANG_ITALIAN = 10,
 * 	PED_TYPE_GANG_RUSSIAN = 11,
 * 	PED_TYPE_GANG_RUSSIAN_2 = 12,
 * 	PED_TYPE_GANG_IRISH = 13,
 * 	PED_TYPE_GANG_JAMAICAN = 14,
 * 	PED_TYPE_GANG_AFRICAN_AMERICAN = 15,
 * 	PED_TYPE_GANG_KOREAN = 16,
 * 	PED_TYPE_GANG_CHINESE_JAPANESE = 17,
 * 	PED_TYPE_GANG_PUERTO_RICAN = 18,
 * 	PED_TYPE_DEALER = 19,
 * 	PED_TYPE_MEDIC = 20,
 * 	PED_TYPE_FIREMAN = 21,
 * 	PED_TYPE_CRIMINAL = 22,
 * 	PED_TYPE_BUM = 23,
 * 	PED_TYPE_PROSTITUTE = 24,
 * 	PED_TYPE_SPECIAL = 25,
 * 	PED_TYPE_MISSION = 26,
 * 	PED_TYPE_SWAT = 27,
 * 	PED_TYPE_ANIMAL = 28,
 * 	PED_TYPE_ARMY = 29
 * };
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xFF059E1E4C01E63C
 */
export function getPedType(ped: number): number;

/**
 * ## Parameters
 * *
 * @param colorID - 
 * @returns number
 * @remarks Hash: 0x604E810189EE3A59
 */
export function IsPedBlushColorValid(colorID: number): number;

/**
 * Indicates whether this ped's health is below its injured threshold.
 * The default threshold is 100, these are stored in the `pedhealth.meta` file located in `common:\data\`
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x84A2DD9AC37C35C1
 */
export function isPedInjured(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xE6CA85E7259CE16B
 */
export function clearAllPedVehicleForcedSeatUsage(ped: number): void;

/**
 * ```
 * Returns the ped's alertness (0-3).  
 * Values :   
 * 0 : Neutral  
 * 1 : Heard something (gun shot, hit, etc)  
 * 2 : Knows (the origin of the event)  
 * 3 : Fully alerted (is facing the event?)  
 * If the Ped does not exist, returns -1.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xF6AA118530443FD2
 */
export function getPedAlertness(ped: number): number;

/**
 * ```
 * Returns true if the ped doesn't do any movement. If the ped is being pushed forwards by using APPLY_FORCE_TO_ENTITY for example, the function returns false.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x530944F6F4B8A214
 */
export function isPedStopped(ped: number): number;

/**
 * ```
 * "IK" stands for "Inverse kinematics." I assume this has something to do with how the ped uses his legs to balance. In the scripts, the second parameter is always an int with a value of 2, 0, or sometimes 1  
 * ```
 * @param ped - 
 * @param mode - 
 * @returns void
 * @remarks Hash: 0xC396F5B86FF9FEBD
 */
export function setPedLegIkMode(ped: number, mode: number): void;

/**
 * ```
 * Returns whether the specified ped is hurt.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x5983BB449D7FDB12
 */
export function isPedHurt(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x51AC07A44D4F5B8A
 */
export function canKnockPedOffVehicle(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x9FA4664CF62E47E8
 */
export function resetPedRagdollTimer(ped: number): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0xCC6E3B6BB69501F1
 */
export function DoesRelationshipGroupExist(): number;

/**
 * ```
 * value ranges from 0 to 3.  
 * ```
 * @param ped - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xDBA71115ED9941A6
 */
export function setPedAlertness(ped: number, value: number): void;

/**
 * ```
 * Damage Packs:  
 * "SCR_TrevorTreeBang"  
 * "HOSPITAL_0"  
 * "HOSPITAL_1"  
 * "HOSPITAL_2"  
 * "HOSPITAL_3"  
 * "HOSPITAL_4"  
 * "HOSPITAL_5"  
 * "HOSPITAL_6"  
 * "HOSPITAL_7"  
 * "HOSPITAL_8"  
 * "HOSPITAL_9"  
 * "SCR_Dumpster"  
 * "BigHitByVehicle"  
 * "SCR_Finale_Michael_Face"  
 * "SCR_Franklin_finb"  
 * "SCR_Finale_Michael"  
 * "SCR_Franklin_finb2"  
 * "Explosion_Med"  
 * "SCR_Torture"  
 * "SCR_TracySplash"  
 * "Skin_Melee_0"  
 * Additional damage packs:  
 * gist.github.com/alexguirre/f3f47f75ddcf617f416f3c8a55ae2227  
 * ```
 * @param ped - 
 * @param damagePack - 
 * @param damage - 
 * @param mult - 
 * @returns void
 * @remarks Hash: 0x46DF918788CB093F
 */
export function applyPedDamagePack(ped: number, damagePack: string, damage: number, mult: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param textureIndex - 
 * @returns void
 * @remarks Hash: 0xF1550C4BD22582E2
 */
export function setPedHelmetTextureIndex(ped: number, textureIndex: number): void;

/**
 * ```
 * SET_PED_*
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xAFC976FD0580C7B3
 */
export function 0xafc976fd0580c7b3(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param propId - 
 * @returns number
 * @remarks Hash: 0x5FAF9754E789FB47
 */
export function getNumberOfPedPropDrawableVariations(ped: number, propId: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xBA8805A1108A2515
 */
export function RegisterPedheadshot3(ped: number): number;

/**
 * ```
 * Returns:  
 * -1: Normal  
 * 0: Wearing parachute on back  
 * 1: Parachute opening  
 * 2: Parachute open  
 * 3: Falling to doom (e.g. after exiting parachute)  
 * Normal means no parachute?  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x79CFD9827CC979B6
 */
export function getPedParachuteState(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param hash - 
 * @returns void
 * @remarks Hash: 0xADB3F206518799E8
 */
export function setPedRelationshipGroupDefaultHash(ped: number, hash: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF2B7106D37947CE0
 */
export function setPedCanTorsoIk(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x0BD04E29640C9C12
 */
export function isPedInAnyPoliceVehicle(ped: number): number;

/**
 * ```
 * Returns the group id of which the specified ped is a member of.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xF162E133B4E7A675
 */
export function getPedGroupIndex(ped: number): number;

/**
 * ## Parameters
 * *
 * @param colorID - 
 * @returns number
 * @remarks Hash: 0x0525A2C2562F3CD4
 */
export function IsPedLipstickColorValid(colorID: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns any
 * @remarks Hash: 0x25361A96E0F7E419
 */
export function 0x25361a96e0f7e419(p0: any, p1: any, p2: any, p3: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xA660FAF550EB37E5
 */
export function 0xa660faf550eb37e5(p0: any, p1: number): void;

/**
 * ## Parameters
 * *
 * @param colorId - 
 * @returns number
 * @remarks Hash: 0xF41B5D290C99A3D6
 */
export function IsPedBlushColorValid2(colorId: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param angle - 
 * @returns void
 * @remarks Hash: 0x3B6405E8AB34A907
 */
export function setPedVisualFieldCenterAngle(ped: number, angle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2B694AFCF64E6994
 */
export function 0x2b694afcf64e6994(ped: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x4AE4FF911DFB61DA
 */
export function isPedJacking(ped: number): number;

/**
 * ```
 * SET_A*
 * ```
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0x87DDEB611B329A9C
 */
export function 0x87ddeb611b329a9c(multiplier: number): void;

/**
 * This native sets the glow intensity of illuminated clothing items.
 * 
 * This native does
 * @param ped - 
 * @param intensity - 
 * @returns void
 * @remarks Hash: 0x4E90D746056E273D
 */
export function SetPedEmissiveIntensity(ped: number, intensity: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xBA63D9FE45412247
 */
export function isPedDefensiveAreaActive(ped: number, p1: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x971D38760FBC02EF
 */
export function setPedKeepTask(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xCD8A7537A9B52F06
 */
export function clearAllPedProps(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns number
 * @remarks Hash: 0x68772DB2B2526F9F
 */
export function isAnyHostilePedNearPoint(ped: number, x: number, y: number, z: number, radius: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xCEDABC5900A0BF97
 */
export function isPedJumping(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x5FFF4CFC74D8FB80
 */
export function isPedInAnyPlane(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xF107E836A70DCE05
 */
export function setPedIdRange(ped: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0x9D3151A373974804
 */
export function setPedSphereDefensiveArea(ped: number, x: number, y: number, z: number, radius: number, p5: number, p6: number): void;

/**
 * ```
 * accuracy = 0-100, 100 being perfectly accurate
 * ```
 * @param ped - 
 * @param accuracy - 
 * @returns void
 * @remarks Hash: 0x7AEFB85C1D49DEB6
 */
export function setPedAccuracy(ped: number, accuracy: number): void;

/**
 * ```
 * SET_PED_STE*
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2016C603D6B8987C
 */
export function 0x2016c603d6b8987c(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC1670E958EEE24E5
 */
export function setPedCanBeDraggedOut(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x5B6010B3CBC29095
 */
export function 0x5b6010b3cbc29095(p0: any, p1: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x43C851690662113D
 */
export function setPedMaxTimeInWater(ped: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD2C5AA0C0E8D0F1E
 */
export function setEnablePedEnveffScale(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x102E68B2024D536D
 */
export function setCreateRandomCops(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param propId - 
 * @returns void
 * @remarks Hash: 0x0943E5B8E078E76E
 */
export function clearPedProp(ped: number, propId: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC11C18092C5530DC
 */
export function setPedCanHeadIk(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xF9D9F7F2DB8E2FA0
 */
export function getPedCombatRange(ped: number): number;

/**
 * ```
 * Found one occurence in re_crashrescue.c4  
 * PED::APPLY_PED_BLOOD(l_4B, 3, 0.0, 0.0, 0.0, "wound_sheet");  
 * ```
 * @param ped - 
 * @param boneIndex - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param woundType - 
 * @returns void
 * @remarks Hash: 0x83F7E01C7B769A26
 */
export function applyPedBlood(ped: number, boneIndex: number, xRot: number, yRot: number, zRot: number, woundType: string): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xC44AA05345C992C6
 */
export function setPedRandomProps(ped: number): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * 
 * ```
 * Points to the same function as for example GET_RANDOM_VEHICLE_MODEL_IN_MEMORY and it does absolutely nothing.  
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x94D94BF1A75AED3D
 */
export function setPedPlaysHeadOnHornAnimWhenDiesInVehicle(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x4328652AE5769C71
 */
export function setPedCanBeTargetedWithoutLos(ped: number, toggle: number): void;

/**
 * ```
 * This function will simply bring the dead person back to life.
 * Try not to use it alone, since using this function alone, will make peds fall through ground in hell(well for the most of the times).
 * Instead, before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at.(For instance, Around 2 floats of Player's current position.)
 * Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x71BC8E838B9C6035
 */
export function resurrectPed(ped: number): void;

/**
 * ```
 * p0: Ped Handle  
 * p1: int i | 0 <= i <= 27  
 * p1 probably refers to the attributes configured in combatbehavior.meta. There are 13. Example:  
 * <BlindFireChance value="0.1"/>  
 * <WeaponShootRateModifier value="1.0"/>  
 * <TimeBetweenBurstsInCover value="1.25"/>  
 * <BurstDurationInCover value="2.0"/>  
 * <TimeBetweenPeeks value="10.0"/>  
 * <WeaponAccuracy value="0.18"/>  
 * <FightProficiency value="0.8"/>  
 * <StrafeWhenMovingChance value="1.0"/>  
 * <WalkWhenStrafingChance value="0.0"/>  
 * <AttackWindowDistanceForCover value="55.0"/>  
 * <TimeToInvalidateInjuredTarget value="9.0"/>  
 * <TriggerChargeTime_Near value="4.0"/>  
 * <TriggerChargeTime_Far value="10.0"/>
 * @param ped - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x52DFF8A10508090A
 */
export function getCombatFloat(ped: number, p1: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param type - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xCB968B53FC7F916D
 */
export function setForceStepType(ped: number, p1: number, type: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x78C4E9961DB3EB5B
 */
export function setPedClothPackageIndex(ped: number, p1: number): void;

/**
 * ```
 * Found in the b617d scripts:
 * PED::_9DBA107B4937F809(v_7, "trevor_heist_cover_2h");
 * SET_PED_MO*
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x9DBA107B4937F809
 */
export function SetPedCoverClipsetOverride(ped: number, p1: string): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xEF2C71A32CAD5FBD
 */
export function GetPedVisualFieldCenterAngle(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xBBCCE00B381F8482
 */
export function isPedFleeing(ped: number): number;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xEE2476B9EE4A094F
 */
export function SetEnableScubaGearLight(ped: number, toggle: number): void;

/**
 * ```
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/  
 * ```
 * @param id - 
 * @returns string
 * @remarks Hash: 0xDB4EACD4AD0A5D6B
 */
export function getPedheadshotTxdString(id: number): string;

/**
 * ```
 * Related to Peds dropping pickup_health_snack; p0 is a value between [0.0, 1.0] that corresponds to drop rate
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xFF4803BC019852D9
 */
export function 0xff4803bc019852d9(p0: number, p1: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2735233A786B1BEF
 */
export function 0x2735233a786b1bef(ped: number, p1: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA635C11B8C44AFC2
 */
export function spawnpointsGetNumSearchResults(): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x01A898D26E2333DD
 */
export function setPedMinMoveBlendRatio(ped: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns any
 * @remarks Hash: 0xFE07FF6495D52E2A
 */
export function setPedPanicExitScenario(ped: number, x: number, y: number, z: number): any;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param range - 
 * @returns void
 * @remarks Hash: 0x9C74B0BC831B753A
 */
export function setPedVisualFieldPeripheralRange(ped: number, range: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xFBFC01CCFB35D99E
 */
export function isPedInAnySub(ped: number): number;

/**
 * SET_A*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xFAB944D4D481ACCB
 */
export function 0xfab944d4d481accb(ped: number, toggle: number): void;

/**
 * ```
 * Sweat is set to 100.0 or 0.0 in the decompiled scripts.  
 * ```
 * @param ped - 
 * @param sweat - 
 * @returns void
 * @remarks Hash: 0x27B0405F59637D1F
 */
export function setPedSweat(ped: number, sweat: number): void;

/**
 * ```
 * p1 is nearly always 0 in the scripts.  
 * ```
 * @param ped - 
 * @param exceptUseWeapon - 
 * @returns number
 * @remarks Hash: 0x60DFD0691A170B88
 */
export function isPedInCover(ped: number, exceptUseWeapon: number): number;

/**
 * ## Parameters
 * *
 * @param Ped - 
 * @returns number
 * @remarks Hash: 0x3795688A307E1EB6
 */
export function IsPedSwappingWeapon(Ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x2208438012482A1A
 */
export function forcePedAiAndAnimationUpdate(ped: number, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x451D05012CCEC234
 */
export function IsPedDoingBeastJump(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x3998B1276A3300E5
 */
export function isPedAimingFromCover(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xBC0ED94165A48BC2
 */
export function setPedGetOutUpsideDownVehicle(ped: number, toggle: number): void;

/**
 * ```
 * REQUEST_*
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x75BA1CB3B7D40CAF
 */
export function 0x75ba1cb3b7d40caf(ped: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x433DDFFE2044B636
 */
export function isPedJumpingOutOfVehicle(ped: number): number;

/**
 * ## Parameters
 * *
 * @param asset - 
 * @returns void
 * @remarks Hash: 0x290E2780BB7AA598
 */
export function requestActionModeAsset(asset: string): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xD6A86331A537A7B9
 */
export function isPedProne(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x298B91AE825E5705
 */
export function isPedInAnyHeli(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xD33DAA36272177C4
 */
export function 0xd33daa36272177c4(ped: number): void;

/**
 * ```
 * p6 always 2 (but it doesnt seem to matter...)  
 * roll and pitch 0  
 * yaw to Ped.rotation  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param roll - 
 * @param pitch - 
 * @param yaw - 
 * @param p6 - 
 * @returns number
 * @remarks Hash: 0x8C18E0F9080ADD73
 */
export function createSynchronizedScene(x: number, y: number, z: number, roll: number, pitch: number, yaw: number, p6: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x63F58F7C80513AAD
 */
export function setPedCanBeTargetted(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param sceneID - 
 * @returns void
 * @remarks Hash: 0x6D38F1F04CBB37EA
 */
export function detachSynchronizedScene(sceneID: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param father - 
 * @param mother - 
 * @param fathersSide - 
 * @param mothersSide - 
 * @returns void
 * @remarks Hash: 0x137BBD05230DB22D
 */
export function setPedBlendFromParents(ped: number, father: number, mother: number, fathersSide: number, mothersSide: number): void;

/**
 * @returns void
 * @remarks Hash: 0x5A7F62FDA59759BD
 */
export function 0x5a7f62fda59759bd(): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x7DCE8BDA0F1C1200
 */
export function isPedInParachuteFreeFall(ped: number): number;

/**
 * ```
 * p1 is usually 0 in the scripts. action is either 0 or a pointer to "DEFAULT_ACTION".  
 * ```
 * @param ped - 
 * @param p1 - 
 * @param action - 
 * @returns void
 * @remarks Hash: 0x88CBB5CEB96B7BD2
 */
export function setPedStealthMovement(ped: number, p1: number, action: string): void;

/**
 * ```
 * Creates a new ped group.  
 * Groups can contain up to 8 peds.  
 * The parameter is unused.  
 * Returns a handle to the created group, or 0 if a group couldn't be created.  
 * ```
 * @param unused - 
 * @returns number
 * @remarks Hash: 0x90370EBE0FEE1A3D
 */
export function createGroup(unused: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param outBone - 
 * @returns number
 * @remarks Hash: 0xD75960F6BD9EA49C
 */
export function getPedLastDamageBone(ped: number, outBone: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x33A8F7F7D5F7F33C
 */
export function setPedHearingRange(ped: number, value: number): void;

/**
 * ```
 * Returns the hash of the weapon/model/object that killed the ped.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x16FFE42AB2D2DC59
 */
export function getPedCauseOfDeath(ped: number): number;

/**
 * ```
 * from extreme3.c4
 * PED::_39D55A620FCB6A3A(PLAYER::PLAYER_PED_ID(), 8, PED::GET_PED_DRAWABLE_VARIATION(PLAYER::PLAYER_PED_ID(), 8), PED::GET_PED_TEXTURE_VARIATION(PLAYER::PLAYER_PED_ID(), 8));
 * p1 is probably componentId
 * ```
 * @param ped - 
 * @param slot - 
 * @param drawableId - 
 * @param textureId - 
 * @returns any
 * @remarks Hash: 0x39D55A620FCB6A3A
 */
export function setPedPreloadVariationData(ped: number, slot: number, drawableId: number, textureId: number): any;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x01F6594B923B9251
 */
export function setPedRagdollForceFall(ped: number): void;

/**
 * Native to check whether [`_SET_PED_SCUBA_GEAR_VARIATION`](#_0x36C6984C3ED0C911) is enabled/actived.
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xFEC9A3B1820F3331
 */
export function 0xfec9a3b1820f3331(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param stance - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xD8D19675ED5FBDCE
 */
export function clearPedAlternateMovementAnim(ped: number, stance: number, p2: number): void;

/**
 * This native is used to set component variation on a ped. Components, drawables and textures IDs are related to the ped model.
 * @param ped - 
 * @param componentId - 
 * @param drawableId - 
 * @param textureId - 
 * @param paletteId - 
 * @returns void
 * @remarks Hash: 0x262B14F48D29DE80
 */
export function setPedComponentVariation(ped: number, componentId: number, drawableId: number, textureId: number, paletteId: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6373D1349925A70E
 */
export function setPedCanPlayAmbientAnims(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param scene - 
 * @returns void
 * @remarks Hash: 0xCD9CC7E200A52A6F
 */
export function takeOwnershipOfSynchronizedScene(scene: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x726256CC1EEB182F
 */
export function clearFacialIdleAnimOverride(ped: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x6B0E6172C9A4D902
 */
export function setAmbientPedsDropMoney(p0: number): void;

/**
 * ```
 * Gets the relationship between two groups. This should be called twice (once for each group).  
 * Relationship types:  
 * 0 = Companion  
 * 1 = Respect  
 * 2 = Like  
 * 3 = Neutral  
 * 4 = Dislike  
 * 5 = Hate  
 * 255 = Pedestrians  
 * Example:  
 * PED::GET_RELATIONSHIP_BETWEEN_GROUPS(l_1017, 0xA49E591C);  
 * PED::GET_RELATIONSHIP_BETWEEN_GROUPS(0xA49E591C, l_1017);  
 * ```
 * @param group1 - 
 * @param group2 - 
 * @returns number
 * @remarks Hash: 0x9E6B70061662AE5C
 */
export function getRelationshipBetweenGroups(group1: number, group2: number): number;

/**
 * p4/p5: Unusued in TU27
 * @param ped - 
 * @param minTime - 
 * @param maxTime - 
 * @param ragdollType - 
 * @param bAbortIfInjured - 
 * @param bAbortIfDead - 
 * @param bForceScriptControl - 
 * @returns number
 * @remarks Hash: 0xAE99FB955581844A
 */
export function setPedToRagdoll(ped: number, minTime: number, maxTime: number, ragdollType: number, bAbortIfInjured: number, bAbortIfDead: number, bForceScriptControl: number): number;

/**
 * ```
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/  
 * ```
 * @param id - 
 * @returns void
 * @remarks Hash: 0x96B1361D9B24C2FF
 */
export function unregisterPedheadshot(id: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xDCCA191DF9980FD7
 */
export function isPedPerformingMeleeAction(ped: number): number;

/**
 * ## Parameters
 * *
 * @param groupHash - 
 * @returns void
 * @remarks Hash: 0xB6BA2444AB393DA2
 */
export function removeRelationshipGroup(groupHash: number): void;

/**
 * ```
 * Sets the armor of the specified ped.  
 * ped: The Ped to set the armor of.  
 * amount: A value between 0 and 100 indicating the value to set the Ped's armor to.  
 * ```
 * @param ped - 
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xCEA04D83135264CC
 */
export function setPedArmour(ped: number, amount: number): void;

/**
 * Sets an area where scenarios are blocked
 * @param posMinX - 
 * @param posMinY - 
 * @param posMinZ - 
 * @param posMaxX - 
 * @param posMaxY - 
 * @param posMaxZ - 
 * @param network - 
 * @param cancelActive - 
 * @param blockPeds - 
 * @param blockVehicles - 
 * @returns number
 * @remarks Hash: 0x1B5C85C612E5256E
 */
export function addScenarioBlockingArea(posMinX: number, posMinY: number, posMinZ: number, posMaxX: number, posMaxY: number, posMaxZ: number, network: number, cancelActive: number, blockPeds: number, blockVehicles: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns number
 * @remarks Hash: 0x083961498679DC9F
 */
export function isAnyPedNearPoint(x: number, y: number, z: number, radius: number): number;

/**
 * ```
 * GET_*
 * ```
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xF033419D1B81FAE8
 */
export function 0xf033419d1b81fae8(p0: any): any;

/**
 * ```
 * Gets the offset the specified ped has moved since the previous tick.  
 * If worldSpace is false, the returned offset is relative to the ped. That is, if the ped has moved 1 meter right and 5 meters forward, it'll return 1,5,0.  
 * If worldSpace is true, the returned offset is relative to the world. That is, if the ped has moved 1 meter on the X axis and 5 meters on the Y axis, it'll return 1,5,0.  
 * ```
 * @param ped - 
 * @param worldSpace - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xE0AF41401ADF87E3
 */
export function getPedExtractedDisplacement(ped: number, worldSpace: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @returns void
 * @remarks Hash: 0xC7F76DF27A5045A1
 */
export function setPedAngledDefensiveArea(ped: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xC024869A53992F34
 */
export function isPedSwimmingUnderWater(ped: number): number;

/**
 * ## Parameters
 * *
 * @param asset - 
 * @returns void
 * @remarks Hash: 0x2A0A62FCDEE16D4F
 */
export function requestStealthModeAsset(asset: string): void;

/**
 * ```
 * Need to check behavior when drawableId = -1
 * ```
 * @param ped - 
 * @param propId - 
 * @param drawableId - 
 * @returns number
 * @remarks Hash: 0xA6E7F1CEB523E171
 */
export function getNumberOfPedPropTextureVariations(ped: number, propId: number, drawableId: number): number;

/**
 * Use [`SetPedIlluminatedClothingGlowIntensity`](#_0x4E90D746056E273D) to set the illuminated clothing glow intensity for a specific ped.
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x1461B28A06717D68
 */
export function GetPedEmissiveIntensity(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x7F08E26039C7347C
 */
export function wasPedKilledByTakedown(ped: number): number;

/**
 * ```
 * Notes: The function only returns true while the ped is:   
 * A.) Swinging a random melee attack (including pistol-whipping)  
 * B.) Reacting to being hit by a melee attack (including pistol-whipping)  
 * C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter).   
 * You don't have to be holding the melee-targetting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x4E209B2C1EAD5159
 */
export function isPedInMeleeCombat(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x16E42E800B472221
 */
export function forcePedToOpenParachute(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param clipset - 
 * @returns void
 * @remarks Hash: 0xED34AB6C5CB36520
 */
export function setPedDriveByClipsetOverride(ped: number, clipset: string): void;

/**
 * Set the number of scenario peds on the entire map
 * @param interiorMult - 
 * @param exteriorMult - 
 * @returns void
 * @remarks Hash: 0x7A556143A1C03898
 */
export function setScenarioPedDensityMultiplierThisFrame(interiorMult: number, exteriorMult: number): void;

/**
 * ```
 * p1: from 0 to 5 in the b617d scripts.  
 * p2: "blushing" and "ALL" found in the b617d scripts.  
 * ```
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x523C79AEEFCC4A2A
 */
export function clearPedDamageDecalByZone(ped: number, p1: number, p2: string): void;

/**
 * ```
 * GET_TIME_*
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x36B77BB84687C318
 */
export function GetTimeOfLastPedWeaponDamage(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xB8B52E498014F5B0
 */
export function 0xb8b52e498014f5b0(ped: number): number;

/**
 * ```
 * Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.
 * collection - PedDecorationCollection filename hash
 * overlay - Item name hash
 * Example:
 * Entry inside "mpbeach_overlays.xml" -
 * <Item>
 *   <uvPos x="0.500000" y="0.500000" />
 *   <scale x="0.600000" y="0.500000" />
 *   <rotation value="0.000000" />
 *   <nameHash>FM_Hair_Fuzz</nameHash>
 *   <txdHash>mp_hair_fuzz</txdHash>
 *   <txtHash>mp_hair_fuzz</txtHash>
 *   <zone>ZONE_HEAD</zone>
 *   <type>TYPE_TATTOO</type>
 *   <faction>FM</faction>
 *   <garment>All</garment>
 *   <gender>GENDER_DONTCARE</gender>
 *   <award />
 *   <awardLevel />
 * </Item>
 * Code:
 * PED::_0x5F5D1665E352A839(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("mpbeach_overlays"), MISC::GET_HASH_KEY("fm_hair_fuzz"))
 * ```
 * @param ped - 
 * @param collection - 
 * @param overlay - 
 * @returns void
 * @remarks Hash: 0x5F5D1665E352A839
 */
export function addPedDecorationFromHashes(ped: number, collection: number, overlay: number): void;

/**
 * ```
 * Used for freemode (online) characters.  
 * ```
 * @returns number
 * @remarks Hash: 0xE5C0CF872C2AD150
 */
export function GetNumHairColors(): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param transitionSpeed - 
 * @returns void
 * @remarks Hash: 0xAA74EC0CB0AAEA2C
 */
export function resetPedMovementClipset(ped: number, transitionSpeed: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @returns number
 * @remarks Hash: 0x03EA03AF85A85CB7
 */
export function 0x03ea03af85a85cb7(ped: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: any): number;

/**
 * ## Parameters
 * *
 * @param unk - 
 * @returns number
 * @remarks Hash: 0x3E8349C08E4B82E4
 */
export function canCreateRandomPed(unk: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x2DB492222FB21E26
 */
export function setPedVisualFieldMinAngle(ped: number, value: number): void;

/**
 * Define the scope within which the ped will engage in combat with the target.
 * 
 * ```c
 * enum eCombatRange {
 *     CR_NEAR = 0, // keeps within 5-15m
 *     CR_MEDIUM = 1, // keeps within 7-30m
 *     CR_FAR = 2, // keeps within 15-40m
 *     CR_VERY_FAR = 3 // keeps within 22-45m
 * };
 * ```
 * @param ped - 
 * @param range - 
 * @returns void
 * @remarks Hash: 0x3C606747B23E497B
 */
export function setPedCombatRange(ped: number, range: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x7DBDD04862D95F04
 */
export function getPedRelationshipGroupHash(ped: number): number;

/**
 * Initial guess of native: `_IS_PED_WEARING_MOTORCYCLE_HELMET`.
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xF2385935BFFD4D92
 */
export function 0xf2385935bffd4d92(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x45BBCBA77C29A841
 */
export function knockPedOffVehicle(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x117C70D1F5730B5E
 */
export function isPedVaulting(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x3311E47B91EDCBBC
 */
export function applyPedBloodByZone(ped: number, p1: any, p2: number, p3: number, p4: any): void;

/**
 * It makes the ped lose (or not lose) their props (like glasses or helmets/hat) when someone punches or pushes the ped.
 * This is probably what's being used in GTA:O to keep players from knocking other player's hats/glasses off when in combat.
 * @param ped - 
 * @param loseProps - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xE861D0B05C7662B8
 */
export function setPedCanLosePropsOnDamage(ped: number, loseProps: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xF92691AED837A5FC
 */
export function getVehiclePedIsEntering(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x42FDD0F017B1E38E
 */
export function getPedRelationshipGroupDefaultHash(ped: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xD1F7CA1535D22818
 */
export function GetNumMakeupColors(): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param index - 
 * @returns void
 * @remarks Hash: 0x0BDDB8D9EC6BCF3C
 */
export function setPedGroupMemberPassengerIndex(ped: number, index: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x52D59AB61DDC05DD
 */
export function setPedHighlyPerceptive(ped: number, toggle: number): void;

/**
 * See [`SET_PED_CONFIG_FLAG`](#_0x1913FE4CBF41C463).
 * @param ped - 
 * @param flagId - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x7EE53118C892B513
 */
export function getPedConfigFlag(ped: number, flagId: number, p2: number): number;

/**
 * ## Parameters
 * *
 * @param sceneID - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x394B9CD12435C981
 */
export function setSynchronizedSceneHoldLastFrame(sceneID: number, toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA586FBEB32A53DBB
 */
export function spawnpointsIsSearchComplete(): number;

/**
 * ```
 * Sets the relationship between two groups. This should be called twice (once for each group).  
 * Relationship types:  
 * 0 = Companion  
 * 1 = Respect  
 * 2 = Like  
 * 3 = Neutral  
 * 4 = Dislike  
 * 5 = Hate  
 * 255 = Pedestrians  
 * Example:  
 * PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);  
 * PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);  
 * ```
 * @param relationship - 
 * @param group1 - 
 * @param group2 - 
 * @returns void
 * @remarks Hash: 0xBF25EB89375A37AD
 */
export function setRelationshipBetweenGroups(relationship: number, group1: number, group2: number): void;

/**
 * ## Parameters
 * *
 * @param sceneID - 
 * @param entity - 
 * @param boneIndex - 
 * @returns void
 * @remarks Hash: 0x272E4723B56A3B96
 */
export function attachSynchronizedSceneToEntity(sceneID: number, entity: number, boneIndex: number): void;

/**
 * ```
 * Returns true if a synchronized scene is running  
 * ```
 * @param sceneId - 
 * @returns number
 * @remarks Hash: 0x25D39B935A038A26
 */
export function isSynchronizedSceneRunning(sceneId: number): number;

/**
 * A getter for [`_SET_PED_EYE_COLOR`](#_0x50B56988B170AFDF).
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x76BBA2CEE66D47E9
 */
export function GetPedEyeColor(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x57AB4A3080F85143
 */
export function isPedUsingAnyScenario(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param eventId - 
 * @returns number
 * @remarks Hash: 0x8507BCB710FA6DC0
 */
export function hasPedReceivedEvent(ped: number, eventId: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x4668D80430D6C299
 */
export function finalizeHeadBlend(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB128377056A54E2A
 */
export function setPedCanRagdoll(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x8EF6B7AC68E2F01B
 */
export function clearPedLastDamageBone(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param bone - 
 * @returns number
 * @remarks Hash: 0x2057EF813397A772
 */
export function getPedRagdollBoneIndex(ped: number, bone: number): number;

/**
 * Overwrites the minimum time the ped will stay on the ground for after being stunned. Setting this while the ped is stunned will not alter the duration of the current stun but will still effect future stuns.
 * 
 * Passing -1 into the second parameter `minTimeInMs` will reset the modifier, making it use the weapons original `DamageTime` as the stun duration (see `update/update.rpf/common/data/ai/weapons.meta`)
 * @param ped - 
 * @param minTimeInMs - 
 * @returns void
 * @remarks Hash: 0xFA0675AB151073FA
 */
export function setPedMinGroundTimeForStungun(ped: number, minTimeInMs: number): void;

/**
 * ```
 * Returns true/false if the ped is/isn't humanoid.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xB980061DA992779D
 */
export function isPedHuman(ped: number): number;

/**
 * ```
 * Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.  
 * ```
 * @param type - 
 * @returns number
 * @remarks Hash: 0x5EF37013A6539C9D
 */
export function getPedHeadBlendNumHeads(type: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x9134873537FA419C
 */
export function isPedInFlyingVehicle(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped1 - 
 * @param ped2 - 
 * @returns number
 * @remarks Hash: 0x5CD3CB88A7F8850D
 */
export function isPedHeadtrackingPed(ped1: number, ped2: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xAAA6A3698A69E048
 */
export function 0xaaa6a3698a69e048(p0: any): any;

/**
 * Similar to REGISTER_PEDHEADSHOT but creates a transparent background instead of black.
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x953563CE563143AF
 */
export function registerPedheadshotTransparent(ped: number): number;

/**
 * ## Parameters
 * *
 * @param outComponent - 
 * @returns void
 * @remarks Hash: 0x1E8C308FD312C036
 */
export function initShopPedComponent(outComponent: number): void;

/**
 * ```
 * From fm_deathmatch_creator and fm_race_creator:
 * 
 * FILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP_SP"));
 * FILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP"));
 * 
 * NativeDB Introduced: v1604
 * ```
 * @param hash - 
 * @returns void
 * @remarks Hash: 0x3C1978285B036B25
 */
export function UnloadContentChangeSetGroup(hash: number): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0xD4D7B033C3AA243C
 */
export function isContentItemLocked(): number;

/**
 * ```
 * p0 seems to be the weapon index  
 * p1 seems to be the weapon component index  
 * struct DlcComponentData{  
 * int attachBone;  
 * int padding1;  
 * int bActiveByDefault;  
 * int padding2;  
 * int unk;  
 * int padding3;  
 * int componentHash;  
 * int padding4;  
 * int unk2;  
 * int padding5;  
 * int componentCost;  
 * int padding6;  
 * char nameLabel[64];  
 * char descLabel[64];  
 * };  
 * ```
 * @param dlcWeaponIndex - 
 * @param dlcWeapCompIndex - 
 * @returns number
 * @remarks Hash: 0x6CF598A2957C2BF8
 */
export function getDlcWeaponComponentData(dlcWeaponIndex: number, dlcWeapCompIndex: number): number;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x0564B9FF9631B82C
 */
export function isDlcVehicleMod(): number;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0xC098810437312FFF
 */
export function getDlcVehicleModLockHash(): number;

/**
 * ```
 * Returns number of possible values of the forcedPropIndex argument of GET_FORCED_PROP.
 * ```
 * @returns number
 * @remarks Hash: 0x017568A8182D98A6
 */
export function getShopPedApparelForcedPropCount(): number;

/**
 * ## Parameters
 * *
 * @param componentId - 
 * @param outProp - 
 * @returns void
 * @remarks Hash: 0xDE44A00999B2837D
 */
export function getShopPedQueryProp(componentId: number, outProp: any): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param componentId - 
 * @param propIndex - 
 * @param propTextureIndex - 
 * @returns number
 * @remarks Hash: 0x5D6160275CAEC8DD
 */
export function getHashNameForProp(entity: number, componentId: number, propIndex: number, propTextureIndex: number): number;

/**
 * ## Parameters
 * *
 * @param componentHash - 
 * @param restrictionTagHash - 
 * @param componentId - 
 * @returns number
 * @remarks Hash: 0x341DE7ED1D2A1BFD
 */
export function doesShopPedApparelHaveRestrictionTag(componentHash: number, restrictionTagHash: number, componentId: number): number;

/**
 * Returns the total number of DLC weapons that are available in SP (availableInSP field in shop_weapon.meta).
 * 
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @returns number
 * @remarks Hash: 0x4160B65AE085B5A9
 */
export function GetNumDlcWeaponsSp(): number;

/**
 * ```
 * Returns number of possible values of the forcedComponentIndex argument of GET_FORCED_COMPONENT.
 * ```
 * @param componentHash - 
 * @returns number
 * @remarks Hash: 0xC6B9DB42C04DD8C3
 */
export function getShopPedApparelForcedComponentCount(componentHash: number): number;

/**
 * Same as GET_DLC_WEAPON_COMPONENT_DATA but only works for DLC components that are available in SP.
 * 
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param dlcWeaponIndex - 
 * @param dlcWeapCompIndex - 
 * @param ComponentDataPtr - 
 * @returns number
 * @remarks Hash: 0x31D5E073B6F93CDC
 */
export function GetDlcWeaponComponentDataSp(dlcWeaponIndex: number, dlcWeapCompIndex: number, ComponentDataPtr: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x073CA26B079F956E
 */
export function getShopPedOutfitLocate(p0: any): number;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xD81B7F27BC773E66
 */
export function GetVariantProp(): void;

/**
 * ```
 * characters
 * 0: Michael
 * 1: Franklin
 * 2: Trevor
 * 3: MPMale
 * 4: MPFemale
 * ```
 * @param character - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xF3FBE2D50A6A8C28
 */
export function setupShopPedOutfitQuery(character: number, p1: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param componentId - 
 * @param drawableVariant - 
 * @param textureVariant - 
 * @returns number
 * @remarks Hash: 0x0368B3A838070348
 */
export function getHashNameForComponent(entity: number, componentId: number, drawableVariant: number, textureVariant: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xB7952076E444979D
 */
export function getShopPedOutfit(p0: any, p1: any): void;

/**
 * ```
 * More info here: https://gist.github.com/root-cause/3b80234367b0c856d60bf5cb4b826f86
 * ```
 * @param componentHash - 
 * @param outComponent - 
 * @returns void
 * @remarks Hash: 0x74C0E2A57EC66760
 */
export function getShopPedComponent(componentHash: number, outComponent: any): void;

/**
 * ```
 * Returns the total number of DLC weapons.
 * ```
 * @returns number
 * @remarks Hash: 0xEE47635F352DA367
 */
export function getNumDlcWeapons(): number;

/**
 * ```
 * dlcVehicleIndex is 0 to GET_NUM_DLC_VEHICLS()  
 * ```
 * @param dlcVehicleIndex - 
 * @returns number
 * @remarks Hash: 0xECC01B7C5763333C
 */
export function getDlcVehicleModel(dlcVehicleIndex: number): number;

/**
 * ```
 * dlcWeaponIndex takes a number from 0 - GET_NUM_DLC_WEAPONS() - 1.  
 * struct DlcWeaponData  
 * {  
 * int emptyCheck; //use DLC1::_IS_DLC_DATA_EMPTY on this  
 * int padding1;  
 * int weaponHash;  
 * int padding2;  
 * int unk;  
 * int padding3;  
 * int weaponCost;  
 * int padding4;  
 * int ammoCost;  
 * int padding5;  
 * int ammoType;  
 * int padding6;  
 * int defaultClipSize;  
 * int padding7;  
 * char nameLabel[64];  
 * char descLabel[64];  
 * char desc2Label[64]; // usually "the" + name  
 * char upperCaseNameLabel[64];  
 * };  
 * ```
 * @param dlcWeaponIndex - 
 * @param outData - 
 * @returns number
 * @remarks Hash: 0x79923CD21BECE14E
 */
export function getDlcWeaponData(dlcWeaponIndex: number, outData: number): number;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @returns number
 * @remarks Hash: 0x10144267DD22866C
 */
export function getTattooShopDlcItemIndex(): number;

/**
 * ```
 * Returns the total number of DLC weapon components.
 * ```
 * @param dlcWeaponIndex - 
 * @returns number
 * @remarks Hash: 0x405425358A7D61FE
 */
export function getNumDlcWeaponComponents(dlcWeaponIndex: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x50F457823CE6EB5F
 */
export function setupShopPedApparelQuery(p0: number, p1: number, p2: number, p3: number): number;

/**
 * ```
 * character is 0 for Michael, 1 for Franklin, 2 for Trevor, 3 for freemode male, and 4 for freemode female.
 * componentId is between 0 and 11 and corresponds to the usual component slots.
 * p1 could be the outfit number; unsure.
 * p2 is usually -1; unknown function.
 * p3 appears to be for selecting between clothes and props; false is used with components/clothes, true is used with props.
 * p4 is usually -1; unknown function.
 * componentId is -1 when p3 is true in decompiled scripts.
 * ```
 * @param character - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param componentId - 
 * @returns number
 * @remarks Hash: 0x9BDF59818B1E38C1
 */
export function setupShopPedApparelQueryTu(character: number, p1: number, p2: number, p3: number, p4: number, componentId: number): number;

/**
 * ## Parameters
 * *
 * @param propHash - 
 * @returns number
 * @remarks Hash: 0xD40AAC51E8E4C663
 */
export function GetShopPedApparelVariantPropCount(propHash: number): number;

/**
 * ## Parameters
 * *
 * @param componentHash - 
 * @param forcedComponentIndex - 
 * @returns void
 * @remarks Hash: 0x6C93ED8C2F74859B
 */
export function getForcedComponent(componentHash: number, forcedComponentIndex: number): void;

/**
 * Returns some sort of index/offset for components.
 * Needs _GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = false and componentId with the drawable's component slot first, returns -1 otherwise.
 * 
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param componentHash - 
 * @returns number
 * @remarks Hash: 0x96E2929292A4DB77
 */
export function 0x96e2929292a4db77(componentHash: number): number;

/**
 * ## Parameters
 * *
 * @param componentHash - 
 * @returns number
 * @remarks Hash: 0xC17AD0E5752BECDA
 */
export function getShopPedApparelVariantComponentCount(componentHash: number): number;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0xA9F9C2E0FDE11CBB
 */
export function getShopPedOutfitPropVariant(): number;

/**
 * ## Parameters
 * *
 * @param componentHash - 
 * @param variantComponentIndex - 
 * @returns void
 * @remarks Hash: 0x6E11F282F11863B6
 */
export function getVariantComponent(componentHash: number, variantComponentIndex: number): void;

/**
 * ## Parameters
 * *
 * @param dlcVehicleIndex - 
 * @returns number
 * @remarks Hash: 0x5549EE11FA22FCF2
 */
export function getDlcVehicleFlags(dlcVehicleIndex: number): number;

/**
 * ```
 * From fm_deathmatch_creator and fm_race_creator:
 * 
 * FILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP_SP"));
 * FILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP"));
 * 
 * NativeDB Introduced: v1604
 * ```
 * @param hash - 
 * @returns void
 * @remarks Hash: 0x6BEDF5769AC2DC07
 */
export function LoadContentChangeSetGroup(hash: number): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xE1CA84EBF72E691D
 */
export function getForcedProp(): void;

/**
 * Returns the total number of DLC vehicles.
 * @returns number
 * @remarks Hash: 0xA7A866D21CD2329B
 */
export function getNumDlcVehicles(): number;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0x5D5CAFF661DDF6FC
 */
export function getShopPedProp(): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x19F2A026EDF0013F
 */
export function getShopPedOutfitComponentVariant(): number;

/**
 * Returns the total number of DLC weapon components that are available in SP.
 * 
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param dlcWeaponIndex - 
 * @returns number
 * @remarks Hash: 0xAD2A7A6DFF55841B
 */
export function GetNumDlcWeaponComponentsSp(dlcWeaponIndex: number): number;

/**
 * ## Parameters
 * *
 * @param componentId - 
 * @param outComponent - 
 * @returns void
 * @remarks Hash: 0x249E310B2D920699
 */
export function getShopPedQueryComponent(componentId: number, outComponent: number): void;

/**
 * Same as GET_DLC_WEAPON_DATA but only works for DLC weapons that are available in SP.
 * 
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param dlcWeaponIndex - 
 * @param outData - 
 * @returns number
 * @remarks Hash: 0x310836EE7129BA33
 */
export function GetDlcWeaponDataSp(dlcWeaponIndex: number, outData: number): number;

/**
 * ```
 * struct Outfit_s  
 * {  
 * 	int mask, torso, pants, parachute, shoes, misc1, tops1, armour, crew, tops2, hat, glasses, earpiece;  
 * 	int maskTexture, torsoTexture, pantsTexture, parachuteTexture, shoesTexture, misc1Texture, tops1Texture,   
 * 		armourTexture, crewTexture, tops2Texture, hatTexture, glassesTexture, earpieceTexture;  
 * };  
 * ```
 * @param outfitIndex - 
 * @param outfit - 
 * @returns void
 * @remarks Hash: 0x6D793F03A631FE56
 */
export function getShopPedQueryOutfit(outfitIndex: number, outfit: any): void;

/**
 * The Second item in the struct `*(Hash *)(outData + 1)` is the vehicle hash.
 * @param dlcVehicleIndex - 
 * @param outData - 
 * @returns number
 * @remarks Hash: 0x33468EDC08E371F6
 */
export function getDlcVehicleData(dlcVehicleIndex: number, outData: any): number;

/**
 * Returns data that adheres to the tattoo shop item data that is used in shop_tattoo.meta
 * 
 * Character types:
 * ```c
 * enum eTattooFaction
 * {
 * 	TATTOO_SP_MICHAEL = 0,
 * 	TATTOO_SP_FRANKLIN = 1,
 * 	TATTOO_SP_TREVOR = 2,
 * 	TATTOO_MP_FM = 3,
 * 	TATTOO_MP_FM_F = 4
 * }
 * ```
 * 
 * Returned struct properties:
 * ```c
 * struct sTattooShopItemValues
 * {
 * 	// Lock hash, used with IS_CONTENT_ITEM_LOCKED
 * 	int LockHash;
 * 	// Unique ID of this slot. It can also be 0.
 * 	int Index;
 * 	// Collection hash of this tattoo
 * 	int CollectionHash;
 * 	// Preset hash of this tattoo
 * 	int PresetHash;
 * 	// Cost of this tattoo in shops.
 * 	int Cost;
 * 	// Secondary placement of this tattoo.
 * 	int eFacing;
 * 	// Location of this tattoo on the body (for example, for torso there would be chest upper, stomach, etc)
 * 	int UpdateGroup;
 * 	// This tattoo's name in the form of a text label.
 * 	const char* NameTextLabel;
 * };
 * ```
 * @param characterType - 
 * @param decorationIndex - 
 * @param outComponent - 
 * @returns number
 * @remarks Hash: 0xFF56381874F82086
 */
export function getTattooShopDlcItemData(characterType: number, decorationIndex: number, outComponent: any): number;

/**
 * ```
 * Character types:
 * 0 = Michael,
 * 1 = Franklin,
 * 2 = Trevor,
 * 3 = MPMale,
 * 4 = MPFemale
 * ```
 * @param character - 
 * @returns number
 * @remarks Hash: 0x278F76C3B0A8F109
 */
export function getNumTattooShopDlcItems(character: number): number;

/**
 * ## Parameters
 * *
 * @param outProp - 
 * @returns void
 * @remarks Hash: 0xEB0A2B758F7B850F
 */
export function initShopPedProp(outProp: number): void;

/**
 * Returns some sort of index/offset for props.
 * Needs _GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = true and componentId = -1 first, returns -1 otherwise.
 * 
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param componentHash - 
 * @returns number
 * @remarks Hash: 0x6CEBE002E58DEE97
 */
export function 0x6cebe002e58dee97(componentHash: number): number;

/**
 * @returns void
 * @remarks Hash: 0x2F9A292AD0A3BD89
 */
export function suppressShockingEventsNextFrame(): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0xB604A2942ADED0EE
 */
export function setDecisionMaker(ped: number, name: number): void;

/**
 * ```
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 * ```
 * @param eventType - 
 * @returns void
 * @remarks Hash: 0x3FD2EC8BF1F1CF30
 */
export function suppressShockingEventTypeNextFrame(eventType: number): void;

/**
 * @returns void
 * @remarks Hash: 0x340F1415B68AEADE
 */
export function removeShockingEventSpawnBlockingAreas(): void;

/**
 * ```
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 * ```
 * @param eventType - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param duration - 
 * @returns any
 * @remarks Hash: 0xD9F8455409B525E9
 */
export function addShockingEventAtPosition(eventType: number, x: number, y: number, z: number, duration: number): any;

/**
 * ```
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 * This is limited to 4 blocked events at a time.
 * ```
 * @param name - 
 * @param eventType - 
 * @returns void
 * @remarks Hash: 0xE42FCDFD0E4196F7
 */
export function blockDecisionMakerEvent(name: number, eventType: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xEAABE8FDFA21274C
 */
export function removeAllShockingEvents(p0: number): void;

/**
 * ```
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 * ```
 * @param eventType - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns number
 * @remarks Hash: 0x1374ABB7C15BAB92
 */
export function isShockingEventInSphere(eventType: number, x: number, y: number, z: number, radius: number): number;

/**
 * ```
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 * ```
 * @param name - 
 * @param eventType - 
 * @returns void
 * @remarks Hash: 0xD7CD9CF34F2C99E8
 */
export function unblockDecisionMakerEvent(name: number, eventType: number): void;

/**
 * @returns void
 * @remarks Hash: 0x5F3B7749C112D552
 */
export function suppressAgitationEventsNextFrame(): void;

/**
 * ## Parameters
 * *
 * @param event - 
 * @returns number
 * @remarks Hash: 0x2CDA538C44C6CCE5
 */
export function removeShockingEvent(event: any): number;

/**
 * ```
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 * ```
 * @param eventType - 
 * @param entity - 
 * @param duration - 
 * @returns any
 * @remarks Hash: 0x7FD8F3BE76F89422
 */
export function addShockingEventForEntity(eventType: number, entity: number, duration: number): any;

/**
 * ```
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 * ```
 * @param name - 
 * @param eventType - 
 * @returns void
 * @remarks Hash: 0x4FC9381A7AEE8968
 */
export function clearDecisionMakerEventResponse(name: number, eventType: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x7F0DD2EBBB651AFF
 */
export function stopEntityFire(entity: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x28D3FED7190D3A0B
 */
export function isEntityOnFire(entity: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param explosionType - 
 * @param damageScale - 
 * @param isAudible - 
 * @param isInvisible - 
 * @param cameraShake - 
 * @returns void
 * @remarks Hash: 0x172AA1B624FA1013
 */
export function addOwnedExplosion(ped: number, x: number, y: number, z: number, explosionType: number, damageScale: number, isAudible: number, isInvisible: number, cameraShake: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param explosionType - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns number
 * @remarks Hash: 0xB3CD51E3DB86F176
 */
export function GetEntityInsideExplosionSphere(explosionType: number, x: number, y: number, z: number, radius: number): number;

/**
 * ## Parameters
 * *
 * @param fireHandle - 
 * @returns void
 * @remarks Hash: 0x7FF548385680673F
 */
export function removeScriptFire(fireHandle: number): void;

/**
 * ```
 * NativeDB Added Parameter 9: BOOL noDamage
 * ```
 * 
 * ```
 * BOOL isAudible = If explosion makes a sound.  
 * BOOL isInvisible = If the explosion is invisible or not.
 * BOOL noDamage = false: damage || nodamage = true: no damage
 * ```
 * 
 * ```c
 * enum eExplosionTag
 * {
 * 	DONTCARE = -1,
 * 	GRENADE = 0,
 * 	GRENADELAUNCHER = 1,
 * 	STICKYBOMB = 2,
 * 	MOLOTOV = 3,
 * 	ROCKET = 4,
 * 	TANKSHELL = 5,
 * 	HI_OCTANE = 6,
 * 	CAR = 7,
 * 	PLANE = 8,
 * 	PETROL_PUMP = 9,
 * 	BIKE = 10,
 * 	DIR_STEAM = 11,
 * 	DIR_FLAME = 12,
 * 	DIR_WATER_HYDRANT = 13,
 * 	DIR_GAS_CANISTER = 14,
 * 	BOAT = 15,
 * 	SHIP_DESTROY = 16,
 * 	TRUCK = 17,
 * 	BULLET = 18,
 * 	SMOKE_GRENADE_LAUNCHER = 19,
 * 	SMOKE_GRENADE = 20,
 * 	BZGAS = 21,
 * 	FLARE = 22,
 * 	GAS_CANISTER = 23,
 * 	EXTINGUISHER = 24,
 * 	PROGRAMMABLEAR = 25,
 * 	TRAIN = 26,
 * 	BARREL = 27,
 * 	PROPANE = 28,
 * 	BLIMP = 29,
 * 	DIR_FLAME_EXPLODE = 30,
 * 	TANKER = 31,
 * 	PLANE_ROCKET = 32,
 * 	VEHICLE_BULLET = 33,
 * 	GAS_TANK = 34,
 * 	BIRD_CRAP = 35,
 * 	RAILGUN = 36,
 * 	BLIMP2 = 37,
 * 	FIREWORK = 38,
 * 	SNOWBALL = 39,
 * 	PROXMINE = 40,
 * 	VALKYRIE_CANNON = 41,
 * 	AIR_DEFENCE = 42,
 * 	PIPEBOMB = 43,
 * 	VEHICLEMINE = 44,
 * 	EXPLOSIVEAMMO = 45,
 * 	APCSHELL = 46,
 * 	BOMB_CLUSTER = 47,
 * 	BOMB_GAS = 48,
 * 	BOMB_INCENDIARY = 49,
 * 	BOMB_STANDARD = 50,
 * 	TORPEDO = 51,
 * 	TORPEDO_UNDERWATER = 52,
 * 	BOMBUSHKA_CANNON = 53,
 * 	BOMB_CLUSTER_SECONDARY = 54,
 * 	HUNTER_BARRAGE = 55,
 * 	HUNTER_CANNON = 56,
 * 	ROGUE_CANNON = 57,
 * 	MINE_UNDERWATER = 58,
 * 	ORBITAL_CANNON = 59,
 * 	BOMB_STANDARD_WIDE = 60,
 * 	EXPLOSIVEAMMO_SHOTGUN = 61,
 * 	OPPRESSOR2_CANNON = 62,
 * 	MORTAR_KINETIC = 63,
 * 	VEHICLEMINE_KINETIC = 64,
 * 	VEHICLEMINE_EMP = 65,
 * 	VEHICLEMINE_SPIKE = 66,
 * 	VEHICLEMINE_SLICK = 67,
 * 	VEHICLEMINE_TAR = 68,
 * 	SCRIPT_DRONE = 69,
 * 	RAYGUN = 70,
 * 	BURIEDMINE = 71,
 * 	SCRIPT_MISSILE = 72,
 * 	RCTANK_ROCKET = 73,
 * 	BOMB_WATER = 74,
 * 	BOMB_WATER_SECONDARY = 75,
 * 	MINE_CNCSPIKE = 76,
 * 	BZGAS_MK2 = 77,
 * 	FLASHGRENADE = 78,
 * 	STUNGRENADE = 79,
 * 	CNC_KINETICRAM = 80,
 * 	SCRIPT_MISSILE_LARGE = 81,
 * 	SUBMARINE_BIG = 82,
 * 	EMPLAUNCHER_EMP = 83
 * };
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param explosionType - 
 * @param damageScale - 
 * @param isAudible - 
 * @param isInvisible - 
 * @param cameraShake - 
 * @returns void
 * @remarks Hash: 0xE3AD2BDBAEE269AC
 */
export function addExplosion(x: number, y: number, z: number, explosionType: number, damageScale: number, isAudible: number, isInvisible: number, cameraShake: number): void;

/**
 * ```
 * Returns a handle to the first entity within the a circle spawned inside the 2 points from a radius.
 * ```
 * @param explosionType - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param radius - 
 * @returns number
 * @remarks Hash: 0x14BA4BA137AF6CEC
 */
export function GetEntityInsideExplosionArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number): number;

/**
 * ## Parameters
 * *
 * @param explosionType - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @returns number
 * @remarks Hash: 0x2E2EBA0EE7CED0E0
 */
export function isExplosionInArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;

/**
 * SET_FIRE_*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x8F390AC4155099BA
 */
export function SetFireSpreadRate(p0: number): void;

/**
 * ```
 * Returns TRUE if it found something. FALSE if not.  
 * ```
 * @param outPosition - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns number
 * @remarks Hash: 0x352A9F6BCF90081F
 */
export function getClosestFirePos(outPosition: { x: number, y: number, z: number }, x: number, y: number, z: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0x056A8A219B8E829F
 */
export function stopFireInRange(x: number, y: number, z: number, radius: number): void;

/**
 * See [`IS_POINT_IN_ANGLED_AREA`](#_0x2A70BAE8883E4C81) for the definition of an angled area.
 * @param explosionType - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param width - 
 * @returns number
 * @remarks Hash: 0xA079A6C51525DC4B
 */
export function isExplosionInAngledArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xF6A9D9708F6F23DF
 */
export function startEntityFire(entity: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param explosionType - 
 * @param explosionFx - 
 * @param damageScale - 
 * @param isAudible - 
 * @param isInvisible - 
 * @param cameraShake - 
 * @returns void
 * @remarks Hash: 0x36DD3FE58B5E5212
 */
export function addExplosionWithUserVfx(x: number, y: number, z: number, explosionType: number, explosionFx: number, damageScale: number, isAudible: number, isInvisible: number, cameraShake: number): void;

/**
 * ```
 * Starts a fire:  
 * xyz: Location of fire  
 * maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.  
 * isGasFire: Whether or not the fire is powered by gasoline.  
 * ```
 * @param X - 
 * @param Y - 
 * @param Z - 
 * @param maxChildren - 
 * @param isGasFire - 
 * @returns number
 * @remarks Hash: 0x6B83617E04503888
 */
export function startScriptFire(X: number, Y: number, Z: number, maxChildren: number, isGasFire: number): number;

/**
 * ## Parameters
 * *
 * @param explosionType - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns number
 * @remarks Hash: 0xAB0F816885B0E483
 */
export function isExplosionInSphere(explosionType: number, x: number, y: number, z: number, radius: number): number;

/**
 * ## Parameters
 * *
 * @param explosionType - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @returns number
 * @remarks Hash: 0x6070104B699B2EF4
 */
export function isExplosionActiveInArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns number
 * @remarks Hash: 0x50CAD495A460B305
 */
export function getNumberOfFiresInRange(x: number, y: number, z: number, radius: number): number;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x631F1CB8FB4130AA
 */
export function NetworkEarnFromArenaWar(amount: number, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x6D3A430D1A809179
 */
export function networkSpentBuyPassiveMode(p0: any, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param characterSlot - 
 * @returns number
 * @remarks Hash: 0xA40F9C2623F6A8B5
 */
export function networkGetVcWalletBalance(characterSlot: number): number;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xF6B170F9A02E9E87
 */
export function NetworkEarnBountyHunterReward(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xD7CCCBA28C4ECAF0
 */
export function NetworkSpentBaService(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x31BA138F6304FB9F
 */
export function 0x31ba138f6304fb9f(p0: any, p1: any): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x7A5349B773584675
 */
export function NetworkEarnFromRdrBonus(amount: number, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xB162DC95C0A3317B
 */
export function networkSpentAmmoDrop(p0: any, p1: number, p2: number): void;

/**
 * ```
 * Returns false if amount > wallet balance or daily transfer limit has been hit.
 * 
 * NativeDB Introduced: v323
 * ```
 * @param amount - 
 * @returns number
 * @remarks Hash: 0x08E8EEADFD0DC4A0
 */
export function 0x08e8eeadfd0dc4a0(amount: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x6EA318C91C1A8786
 */
export function networkEarnFromDailyObjectives(p0: number, p1: string, p2: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x5BCDE0F640C773D2
 */
export function NetworkSpentJukebox(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xD987F2489969668C
 */
export function networkBuyLotteryTicket(p0: number, p1: number, p2: number, p3: number): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x18B7AE224B087E26
 */
export function NetworkDeductCash(amount: number, p1: string, p2: string, p3: number, p4: number, p5: number): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0xD21D111C46BA9F15
 */
export function NetworkEarnIslandHeist(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xDD21B016E4289465
 */
export function NetworkSpentNightclubBarDrink(amount: number, p1: any, p2: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param wallet - 
 * @param bank - 
 * @returns void
 * @remarks Hash: 0x3DA5ECD1A56CBA6D
 */
export function networkInitializeCash(wallet: number, bank: number): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x5128DF14A5BB86FC
 */
export function NetworkEarnFromDailyObjectiveEvent(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x533073E8A596008C
 */
export function NetworkEarnFromVehicleAutoshop(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x6B38ECB05A63A685
 */
export function networkSpentCinema(p0: any, p1: any, p2: number, p3: number): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x84FF63BD4966F33D
 */
export function NetworkEarnFromCollectionItem(amount: number, p1: any): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2DCB19ABAB0380A8
 */
export function NetworkEarnFromGangopsWages(amount: number, p1: number): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xA51338E0DCCD4065
 */
export function 0xa51338e0dccd4065(p0: any, p1: any, p2: any): void;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x59498BC8B1C8B15C
 */
export function NetworkEarnFromBusinessHubSource(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x5D17BE59D2123284
 */
export function networkCanReceivePlayerCash(p0: any, p1: any, p2: any, p3: any): number;

/**
 * ```
 * DSPORT  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x515B4A22E4D3C6D7
 */
export function networkEarnFromAiTargetKill(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x6FD97159FE3C971A
 */
export function 0x6fd97159fe3c971a(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xE86689E5F82DE429
 */
export function NetworkSpentIslandHeist(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x948705F6F9C50824
 */
export function NetworkSpentCargoSourcing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;

/**
 * ```
 * Example for p1: "AM_DISTRACT_COPS"  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xFB6DB092FBAE29E6
 */
export function networkEarnFromAmbientJob(p0: number, p1: string, p2: any): void;

/**
 * ```
 * index
 * @param index - 
 * @param context - 
 * @param reason - 
 * @param unk - 
 * @returns void
 * @remarks Hash: 0xF9C812CD7C46E817
 */
export function networkRefundCash(index: number, context: string, reason: string, unk: number): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0x4F54F3B6C202FB4E
 */
export function networkGetPvcBalance(): number;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param item - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param item_name - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @returns void
 * @remarks Hash: 0xF0077C797F66A355
 */
export function networkBuyItem(amount: number, item: number, p2: any, p3: any, p4: number, item_name: string, p6: any, p7: any, p8: any, p9: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x5182A339A3474510
 */
export function NetworkSpentVipUtilityCharges(p0: any, p1: any, p2: any): void;

/**
 * ```
 * According to how I understood this in the freemode script alone,
 * The first parameter is determined by a function named, func_5749 within the freemode script which has a list of all the vehicles and a set price to return which some vehicles deals with globals as well. So the first parameter is basically the set in stone insurance cost it's gonna charge you for that specific vehicle model.
 * The second parameter whoever put it was right, they call GET_ENTITY_MODEL with the vehicle as the paremeter.
 * The third parameter is the network handle as they call their little struct<13> func or atleast how the script decompiled it to look which in lamens terms just returns the network handle of the previous owner based on DECOR_GET_INT(vehicle, "Previous_Owner").
 * The fourth parameter is a bool that returns true/false depending on if your bank balance is greater then 0.
 * The fifth and last parameter is a bool that returns true/false depending on if you have the money for the car based on the cost returned by func_5749. In the freemode script eg,
 * bool hasTheMoney = MONEY::_GET_BANK_BALANCE() < carCost.
 * ```
 * @param amount - 
 * @param vehicleModel - 
 * @param networkHandle - 
 * @param notBankrupt - 
 * @param hasTheMoney - 
 * @returns void
 * @remarks Hash: 0x9FF28D88C766E3E8
 */
export function networkSpentPayVehicleInsurancePremium(amount: number, vehicleModel: number, networkHandle: number, notBankrupt: number, hasTheMoney: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xA51B086B0B2C0F7A
 */
export function 0xa51b086b0b2c0f7a(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xDE68E30D89F97132
 */
export function 0xde68e30d89f97132(amount: number, p1: any): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xFA009A62990671D4
 */
export function NetworkEarnFromCriminalMastermindBonus(p0: any, p1: any, p2: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @returns void
 * @remarks Hash: 0xB539BD8A4C1EECF8
 */
export function networkEarnFromVehicle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;

/**
 * ```
 * Only used once in a script (am_contact_requests)  
 * p1 = 0  
 * p2 = 1  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xE404BFB981665BF0
 */
export function networkSpentHireMugger(p0: any, p1: number, p2: number): void;

/**
 * ```
 * Same as 0xEA560AC9EEB1E19B.
 * ```
 * 
 * ```
 * Same as 0xEA560AC9EEB1E19B.
 * 
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0x13A8DE2FD77D04F3
 */
export function networkGetPvcTransferBalance(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x69EF772B192614C1
 */
export function 0x69ef772b192614c1(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x005ACA7100BD101D
 */
export function NetworkEarnFromWagePaymentBonus(amount: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x675D19C6067CAE08
 */
export function 0x675d19c6067cae08(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xEC03C719DB2F4306
 */
export function networkSpentCarwash(p0: any, p1: any, p2: any, p3: number, p4: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x771ADB0E7635B7BF
 */
export function NetworkSpentGangopsCannon(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x676C48776CACBB5A
 */
export function NetworkEarnFromSpinTheWheelCash(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x1DC9B749E7AE282B
 */
export function 0x1dc9b749e7ae282b(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x615EB504B0788DAF
 */
export function NetworkSpentUpgradeHangar(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xA75EAC69F59E96E7
 */
export function NetworkEarnFromClubManagementParticipation(p0: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param networkHandle - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x131BB5DA15453ACF
 */
export function networkEarnFromBounty(amount: number, networkHandle: number, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x75AF80E61248EEBD
 */
export function networkBuySmokes(p0: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x35F8DA0E8A31EF1B
 */
export function NetworkEarnFromWagePayment(amount: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x05F04155A226FBBF
 */
export function NetworkSpentOrderWarehouseVehicle(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * NativeDB Added Parameter 3: Any p2
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x8BCB27A057DF7B7F
 */
export function NetworkEarnFromSellingVehicle(amount: number): void;

/**
 * ## Return value
 * @returns string
 * @remarks Hash: 0xA6FA3979BED01B81
 */
export function networkGetStringBankBalance(): string;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param amount - 
 * @param baseNameHash - 
 * @returns void
 * @remarks Hash: 0x0E1E2FF3F4EC11AA
 */
export function NetworkEarnFromSellBase(amount: number, baseNameHash: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xE284D46FFDB82E36
 */
export function NetworkSpentRdrhatchetBonus(amount: number, p1: number, p2: number): void;

/**
 * ```
 * This function is hard-coded to always return 1.  
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xE154B48B68EF72BC
 */
export function 0xe154b48b68ef72bc(p0: any): number;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xE0F82D68C7039158
 */
export function 0xe0f82d68c7039158(p0: any): void;

/**
 * ## Parameters
 * *
 * @param characterSlot - 
 * @returns void
 * @remarks Hash: 0xA921DED15FDF28F5
 */
export function networkClearCharacterWallet(characterSlot: number): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x88BF9B612B84D3C3
 */
export function NetworkSpentCasinoGeneric(amount: number, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC66D1CF99ED7FE25
 */
export function NetworkEarnFromAutoshopIncome(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x15BB2A5C757EB91F
 */
export function NetworkEarnFromGangopsWagesBonus(amount: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param networkHandle - 
 * @returns void
 * @remarks Hash: 0xFB18DF9CB95E0105
 */
export function networkGivePlayerJobshareCash(amount: number, networkHandle: number): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xFBBE0570EDF39D46
 */
export function NetworkSpentCasinoMembership(amount: number, p1: number, p2: number, p3: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xFE65AFE7308E32B2
 */
export function NetworkEarnFromVehicleAutoshopBonus(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x0B39CF0D53F1C883
 */
export function NetworkEarnFromBusinessHubSell(p0: any, p1: any, p2: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xB2CC4836834E8A98
 */
export function networkEarnFromJob(amount: number, p1: string): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x30FD873ECE50E9F6
 */
export function NetworkBuyContraband(p0: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x7BF1D73DB2ECA492
 */
export function networkSpentHeliPickup(p0: any, p1: number, p2: number): void;

/**
 * ```
 * Hardcoded to return 0.
 * 
 * NativeDB Introduced: v323
 * ```
 * @returns any
 * @remarks Hash: 0x9B5016A6433A68C5
 */
export function 0x9b5016a6433a68c5(): any;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x02D24A35A9CC3503
 */
export function NetworkSpentVehicleRequested(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xDFF49EE984E7AAE8
 */
export function NetworkEarnFromRcTimeTrial(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * 
 * NativeDB Removed Parameter 4: BOOL p3
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x9A5BD1D0000B339C
 */
export function NetworkSpentSpinTheWheelPayment(amount: number, p1: any, p2: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x8204DA7934DF3155
 */
export function networkSpentRequestJob(p0: any, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0x5D1E75F91C07DEE5
 */
export function networkGetEvcBalance(): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x2A7CEC72C3443BCC
 */
export function 0x2a7cec72c3443bcc(p0: any, p1: any, p2: any): void;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2C5809EB9DF57257
 */
export function NetworkEarnFromBikeShopBusiness(p0: any, p1: any): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xEEB7E5D1FEB20869
 */
export function NetworkSpentBuyAutoshop(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xF6C8A544E4CF14FC
 */
export function NetworkSpentRehireDj(amount: number, p1: any, p2: number, p3: number): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x0819DB99FD2FBBD8
 */
export function NetworkEarnFromTimeTrialWin(amount: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x0C82D21A77C22D49
 */
export function NetworkSpentUpgradeBunker(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xED26584F6BDCBBFD
 */
export function NetworkEarnFromGangopsJobsPrepParticipation(amount: number): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param propertyName - 
 * @returns void
 * @remarks Hash: 0x849648349D77F5C5
 */
export function networkEarnFromProperty(amount: number, propertyName: number): void;

/**
 * ```
 * NativeDB Added Parameter 1: int amount
 * NativeDB Added Parameter 2: int id
 * ```
 * @returns void
 * @remarks Hash: 0x3E4ADAFF1830F146
 */
export function NetworkEarnFromWarehouse(): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xED1517D3AF17C698
 */
export function networkEarnFromPickup(amount: number): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x289016EC778D60E0
 */
export function networkSpentCashDrop(amount: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param amount - 
 * @param unk - 
 * @param actIndex - 
 * @returns void
 * @remarks Hash: 0x2597A0D4A4FC2C77
 */
export function NetworkEarnFromGangopsElite(amount: number, unk: string, actIndex: number): void;

/**
 * GTAO_CASINO_HOUSE
 * GTAO_CASINO_INSIDETRACK
 * GTAO_CASINO_LUCKYWHEEL
 * GTAO_CASINO_BLACKJACK
 * GTAO_CASINO_ROULETTE
 * GTAO_CASINO_SLOTS
 * GTAO_CASINO_PURCHASE_CHIPS
 * NETWORK_C*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param hash - 
 * @returns number
 * @remarks Hash: 0x158C16F5E4CF41F8
 */
export function NetworkCasinoCanUseGamblingType(hash: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x0FE8E1FCD2B86B33
 */
export function NetworkSpentPaServiceHeliPickup(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xDEBBF584665411D0
 */
export function NetworkEarnFromJobX2(amount: number, p1: string): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0x650A08A280870AF6
 */
export function networkBuyProperty(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x2AFC2D19B50797F2
 */
export function 0x2afc2d19b50797f2(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xCA230C9682556CF1
 */
export function networkSpentBankInterest(p0: number, p1: number, p2: number): void;

/**
 * ```
 * p1 is just an assumption. p2 was false and p3 was true.  
 * ```
 * @param amount - 
 * @param victim - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x7B718E197453F2D9
 */
export function networkBuyBounty(amount: number, victim: number, p2: number, p3: number): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @returns void
 * @remarks Hash: 0xC991C255AA6D90B2
 */
export function NetworkSpentCasinoClubGeneric(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x3DD3F33A5D55EA6F
 */
export function NetworkSpentUpgradeBase(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x40D5DA9550B7CB46
 */
export function NetworkSpentBuyArena(amount: number, p1: number, p2: number, p3: string): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @returns void
 * @remarks Hash: 0xA75CCF58A60A5FD1
 */
export function NetworkSpentVehicleExportMods(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xE7DF4E0545DFB56E
 */
export function NetworkSpentMoveYacht(amount: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xBC6227792A188E2E
 */
export function NetworkEarnFromCarclubMembership(p0: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x5D97630A8A0EF123
 */
export function NetworkSpentBallisticEquipment(amount: number, p1: number, p2: number): void;

/**
 * ```
 * p1 = 0 (always)  
 * p2 = 1 (always)  
 * ```
 * @param cost - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x81AA4610E3FD3A69
 */
export function networkBuyHeliStrike(cost: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x0DD362F14F18942A
 */
export function 0x0dd362f14f18942a(amount: number, p1: any, p2: any): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xB5B58E24868CB09E
 */
export function 0xb5b58e24868cb09e(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * NETWORK_CAN_R??? or NETWORK_CAN_S???  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 7: Any p6
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns number
 * @remarks Hash: 0x7303E27CC6532080
 */
export function NetworkCanSpendMoney2(p0: any, p1: number, p2: number, p3: number, p4: any, p5: any): number;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x487009DD91D93429
 */
export function NetworkSpentCasinoHeistSkipMission(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xFA700D8A9905F78A
 */
export function NetworkEarnFromAssassinateTargetKilled(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xB846F547D3792DF6
 */
export function NetworkEarnFromTunerAward(p0: any, p1: any, p2: any): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xE5F5A060439C2F5D
 */
export function NetworkSpentMakeItRain(amount: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xA82959062361B259
 */
export function NetworkEarnFromBbEventCargo(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x5E7AE8AABE8B7C0D
 */
export function NetworkEarnFromAssassinateTargetKilled2(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE2BB399D90942091
 */
export function 0xe2bb399d90942091(p0: any, p1: any): void;

/**
 * ```
 * Returns true if bank balance + wallet balance >= amount.
 * ```
 * @param amount - 
 * @param characterSlot - 
 * @returns number
 * @remarks Hash: 0xDC18531D7019A535
 */
export function NetworkGetVcBankWalletBalanceIsNotLessThan(amount: number, characterSlot: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xED5FD7AF10F5E262
 */
export function 0xed5fd7af10f5e262(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x65482BFD0923C8A1
 */
export function 0x65482bfd0923c8a1(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x4128464231E3CA0B
 */
export function 0x4128464231e3ca0b(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xA6DD8458CE24012C
 */
export function networkSpentBullShark(p0: any, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x5FD5ED82CBBE9989
 */
export function networkPayEmployeeWage(p0: any, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x71BEC32FA466E105
 */
export function NetworkEarnFromBikerIncome(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x83AD64F53F4E9483
 */
export function NetworkEarnFromCompleteCollection(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param data - 
 * @returns void
 * @remarks Hash: 0x4740D62BC1B4EBEA
 */
export function NetworkSpentUpgradeCasino(amount: number, p1: number, p2: number, data: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x0CB1BE0633C024A8
 */
export function NetworkEarnBossAgency(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns string
 * @remarks Hash: 0x700AF71AE615E6DD
 */
export function networkGetStringBankWalletBalance(): string;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x36A7FD5A7194B03E
 */
export function NetworkEarnFromAutoshopBusiness(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xDBC966A01C02BCA7
 */
export function NetworkSpentPayBoss(p0: any, p1: any, p2: any): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x037ABB06825D7AB1
 */
export function NetworkSpentUpgradeArena(amount: number, p1: number, p2: number, p3: string): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x9346E14F2AF74D46
 */
export function networkPayMatchEntryFee(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @param hash - 
 * @returns void
 * @remarks Hash: 0x973A9781A34F8DEB
 */
export function NetworkEarnFromCasinoAward(amount: number, hash: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xCDA1C62BE2777802
 */
export function NetworkEarnGoon(p0: any, p1: any, p2: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param data - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x33981D6804E62F49
 */
export function NetworkSpentPurchaseWarehouse(amount: number, data: any, p2: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xAFE08B35EC0C9EAE
 */
export function networkPayUtilityBill(amount: number, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x4337511FA8221D36
 */
export function networkEarnFromNotBadsport(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x1464E17207CD36E2
 */
export function NetworkSpentCarclubMembership(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param characterSlot - 
 * @returns string
 * @remarks Hash: 0xF9B10B529DCFB33B
 */
export function networkGetStringWalletBalance(characterSlot: number): string;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xAC95ED552157E092
 */
export function NetworkEarnFromCasinoStoryMissionReward(amount: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xC1952F3773BA18FE
 */
export function NetworkSpentImportExportRepair(p0: any, p1: any, p2: any): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xCAC672087B4A24AB
 */
export function NetworkEarnFromDarChallenge(amount: number, p1: any): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x4C3B75694F7E0D9C
 */
export function 0x4c3b75694f7e0d9c(p0: any, p1: any, p2: any): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0xFB2456B2040A6A67
 */
export function NetworkGetIsHighEarner(): number;

/**
 * ```
 * p1 = 0 (always)  
 * p2 = 1 (always)  
 * ```
 * @param cost - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x763B4BD305338F19
 */
export function networkBuyAirstrike(cost: number, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xB4C2EC463672474E
 */
export function 0xb4c2ec463672474e(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Added Parameter 1: int amount
 * NativeDB Added Parameter 2: BOOL p1
 * NativeDB Added Parameter 3: BOOL p2
 * ```
 * @returns number
 * @remarks Hash: 0xFFBE02CD385356BD
 */
export function NetworkSpentBoss(): number;

/**
 * ```
 * Returns true if bank balance >= amount.
 * 
 * NativeDB Introduced: v323
 * ```
 * @param amount - 
 * @returns number
 * @remarks Hash: 0xA31FD6A0865B6D14
 */
export function NetworkGetVcBankBalanceIsNotLessThan(amount: number): number;

/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * NativeDB Added Parameter 2: int p1
 * NativeDB Added Parameter 3: int amount
 * NativeDB Added Parameter 4: int* p3
 * ```
 * @returns number
 * @remarks Hash: 0x9777734DAD16992F
 */
export function CanPayGoon(): number;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x89049A84065CE68E
 */
export function NetworkSpentUpgradeSub(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x9D4FDBB035229669
 */
export function NetworkEarnJobBonusHeistAward(p0: any, p1: any, p2: any): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5CBAD97E059E1B94
 */
export function networkGetVcBalance(): number;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xFDD8D2440DAF1590
 */
export function NetworkEarnFromBbEventBonus(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xBCB266247193AC61
 */
export function NetworkEarnFromTunerFinale(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xD29334ED1A256DBF
 */
export function 0xd29334ed1a256dbf(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xA95F667A755725DA
 */
export function 0xa95f667a755725da(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x4EA3F425C7744D21
 */
export function NetworkSpentBuyBase(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xB1CC1B9EC3007A2A
 */
export function networkEarnFromCrateDrop(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xD1E46824E6FB92B5
 */
export function NetworkSpentCarclubTakeover(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x02CE1D6AC0FC73EA
 */
export function networkEarnFromRockstar(amount: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xFA07759E6FDDD7CF
 */
export function 0xfa07759e6fddd7cf(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xD99DB210089617FE
 */
export function NetworkSpentWager(p0: any, p1: any, amount: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xBD0EFB25CCA8F97A
 */
export function 0xbd0efb25cca8f97a(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xA95CFB4E02390842
 */
export function 0xa95cfb4e02390842(p0: any, p1: any, p2: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x0035BB914316F1E3
 */
export function NetworkSpentBusiness(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xB4DEAE67F35E2ACD
 */
export function 0xb4deae67f35e2acd(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE08256F972C7BB2C
 */
export function NetworkEarnFromArenaSkillLevelProgression(amount: number, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x7C99101F7FCE2EE5
 */
export function networkSpentPlayerHealthcare(p0: number, p1: number, p2: number, p3: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xB9F7A469460E7A4A
 */
export function NetworkSpentFromBank(p0: any, p1: any, p2: any, p3: number): void;

/**
 * ```
 * Returns true if wallet balance >= amount.
 * 
 * NativeDB Introduced: v323
 * ```
 * @param amount - 
 * @param characterSlot - 
 * @returns number
 * @remarks Hash: 0xED5AB8860415BABA
 */
export function NetworkGetVcWalletBalanceIsNotLessThan(amount: number, characterSlot: number): number;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x619496D837EFD920
 */
export function NetworkSpentArenaPremium(amount: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xB40F96D6D252839B
 */
export function NetworkSpentAutoshopPropertyUtilityFee(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xA628A745E2275C5D
 */
export function networkSpentBuyOfftheradar(p0: any, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xDD829AA198FDC46C
 */
export function NetworkSpentUpgradeAutoshop(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xECA658CE2A4E5A72
 */
export function NetworkEarnFromContraband(amount: number, p1: any): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x5ECE6FD7B4EC8D6A
 */
export function NetworkSpentGangopsTripSkip(amount: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xB18AC2ECBB15CB6A
 */
export function NetworkSpentHangarUtilityCharges(amount: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x54ABA22FA6371249
 */
export function NetworkSpentBeachPartyGeneric(p0: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x995A65F15F581359
 */
export function networkSpentRobbedByMugger(amount: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x6B7E4FB50D5F3D65
 */
export function 0x6b7e4fb50d5f3d65(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x2A93C46AAB1EACC9
 */
export function 0x2a93c46aab1eacc9(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x93AA4165CB67E925
 */
export function NetworkSpentImAbility(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xACDE7185B374177C
 */
export function networkSpentCallPlayer(p0: any, p1: any, p2: number, p3: number): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x5517F90043466049
 */
export function NetworkEarnFromCollectablesActionFigures(amount: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x7FE61782AD94CC09
 */
export function networkSpentTelescope(p0: any, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x42FCE14F50F27291
 */
export function NetworkEarnFromBusinessBattle(p0: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param heistHash - 
 * @returns void
 * @remarks Hash: 0x61326EE6DF15B0CA
 */
export function networkEarnFromBendJob(amount: number, heistHash: string): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns number
 * @remarks Hash: 0x3A54E33660DED67F
 */
export function networkCanBet(amount: number): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x0CCE73BC7A11E885
 */
export function NetworkSpentBuyTiltrotor(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x7C4FCCD2E4DEB394
 */
export function 0x7c4fccd2e4deb394(): number;

/**
 * ```
 * This function is hard-coded to always return 1.
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x6FCF8DDEA146C45B
 */
export function 0x6fcf8ddea146c45b(p0: any): number;

/**
 * NETWORK_C*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x3BD101471C7F9EEC
 */
export function NetworkCasinoPurchaseChips(p0: number, p1: number): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x165E135D6DFA2907
 */
export function NetworkSpentUpgradeTiltrotor(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xB1F1346FD57685D7
 */
export function NetworkSpentHangarStaffCharges(amount: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param amount - 
 * @param unk - 
 * @returns void
 * @remarks Hash: 0x1C121FC9545E0D52
 */
export function NetworkEarnFromGangopsJobsFinale(amount: number, unk: string): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x870289A558348378
 */
export function 0x870289a558348378(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x226C284C830D0CA8
 */
export function 0x226c284c830d0ca8(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xC8407624CEF2354B
 */
export function NetworkEarnFromPremiumJob(amount: number, p1: string): void;

/**
 * ```
 * Does nothing and always returns false.
 * ```
 * @param amount - 
 * @returns number
 * @remarks Hash: 0xE260E0BB9CD995AC
 */
export function depositVc(amount: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xB21B89501CFAC79E
 */
export function networkSpentProstitutes(p0: any, p1: number, p2: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x1C2473301B1C66BA
 */
export function networkCanShareJobCash(): number;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x43AA7FAC4E6D6687
 */
export function NetworkSpentArcadeGeneric(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x6E176F1B18BC0637
 */
export function networkSpentBuyRevealPlayers(p0: any, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x9251B6ABF2D0A5B4
 */
export function NetworkEarnFromSellBunker(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0xC6E74CF8C884C880
 */
export function 0xc6e74cf8c884c880(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x7049BF858601DC0F
 */
export function NetworkSpentArenaSpectatorBox(amount: number, p1: any, p2: number, p3: number): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xCCB339CC970452DA
 */
export function NetworkSpentPurchaseHangar(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param characterSlot - 
 * @returns void
 * @remarks Hash: 0x821418C727FCACD7
 */
export function NetworkManualDeleteCharacter(characterSlot: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xFC4EE00A7B3BFB76
 */
export function NetworkSpentRenameOrganization(p0: any, p1: any, p2: any): void;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x45087AE480B233AC
 */
export function NetworkEarnFromSightseeing(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x9D26502BB97BFE62
 */
export function networkSpentRequestHeist(p0: any, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x827A5BA1A44ACA6D
 */
export function networkEarnFromBetting(amount: number, p1: string): void;

/**
 * ```
 * NativeDB Added Parameter 6: Any p5
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0xAB3CAA6B422164DA
 */
export function networkCanSpendMoney(p0: any, p1: number, p2: number, p3: number, p4: any): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x5B669CF2299A271F
 */
export function NetworkEarnFromTargetRefund(amount: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xB49ECA122467D05F
 */
export function NetworkSpentPaServiceDancer(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * Note the 2nd parameters are always 1, 0. I have a feeling it deals with your money, wallet, bank. So when you delete the character it of course wipes the wallet cash at that time. So if that was the case, it would be eg, NETWORK_DELETE_CHARACTER(characterIndex, deleteWalletCash, deleteBankCash);  
 * ```
 * @param characterSlot - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x05A50AF38947EB8D
 */
export function networkDeleteCharacter(characterSlot: number, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xA03D4ACE0A3284CE
 */
export function NetworkEarnFromGangPickup(amount: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x112209CE0290C03A
 */
export function 0x112209ce0290c03a(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xA3EDDAA42411D3B9
 */
export function networkBuyBackupGang(p0: number, p1: number, p2: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param bank - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x6A445B64ED7ABEB5
 */
export function networkSpentFromRockstar(bank: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xC10322A8D3E061EE
 */
export function NetworkEarnFromUpgradeAutoshopLocation(p0: any, p1: any): void;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x7E2F4E8F44CAF4E0
 */
export function NetworkSpentSalesDisplay(p0: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param earnedMoney - 
 * @returns void
 * @remarks Hash: 0x1B882107C23A9022
 */
export function NetworkRivalDeliveryCompleted(earnedMoney: number): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0x72E7C7B9615FA3C3
 */
export function NetworkEarnCasinoHeist(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x1C436FD11FFA692F
 */
export function networkSpentBetting(amount: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x81404F3DC124FE5B
 */
export function networkMoneyCanBet(amount: number, p1: number, p2: number): number;

/**
 * Same as 0x8968D4D8C6C40C11.
 * NETWORK_C*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @returns number
 * @remarks Hash: 0x394DCDB9E836B7A9
 */
export function NetworkCasinoCanPurchaseChipsWithPvc(): number;

/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE2E244AB823B4483
 */
export function 0xe2e244ab823b4483(amount: number, p1: any): void;

/**
 * NETWORK_C*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xED44897CB336F480
 */
export function NetworkCasinoSellChips(p0: number, p1: number): number;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x6C8BC1488527AAAB
 */
export function NetworkSpentSubmarine(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x12D148D26538D0F9
 */
export function NetworkSpentBuyBunker(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xCD4D66B43B1DD28D
 */
export function 0xcd4d66b43b1dd28d(p0: any, p1: any, p2: any): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x566FD402B25787DE
 */
export function NetworkEarnFromCasinoMissionReward(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x09E8F18641BE2575
 */
export function NetworkEarnFromCasinoMissionParticipation(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x5574637681911FDA
 */
export function 0x5574637681911fda(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xDEE612F2D71B0308
 */
export function NetworkEarnFromSmuggling(amount: number, p1: any, p2: any, p3: any): void;

/**
 * ```
 * Does nothing and always returns 0.
 * ```
 * @param amount - 
 * @returns number
 * @remarks Hash: 0xF70EFA14FE091429
 */
export function withdrawVc(amount: number): number;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xF92A014A634442D6
 */
export function networkEarnFromImportExport(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x1FDA0AA679C9919B
 */
export function NetworkEarnFromFmbbBossWork(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x2B171E6B2F64D8DF
 */
export function networkEarnFromChallengeWin(p0: any, p1: any, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x925227803A0EAA1B
 */
export function NetworkSpentCarclub(p0: any, p1: number, p2: number, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @param amount - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xE8815FE993896AD3
 */
export function NetworkEarnFromHackerTruckMission(p0: any, amount: number, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xFFFBA1B1F7C0B6F4
 */
export function NetworkEarnFmbbWageBonus(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @returns void
 * @remarks Hash: 0x3F4D00167E41E0AD
 */
export function networkEarnFromPersonalVehicle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xE23ADC6FCB1F29AE
 */
export function 0xe23adc6fcb1f29ae(p0: any, p1: any, p2: any): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC5156361F26E2212
 */
export function NetworkEarnFromFmbbPhonecallMission(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param player - 
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x876056684281655D
 */
export function NetworkSpentNightclubEntryFee(player: number, amount: number, p1: any, p2: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xEE99784E4467689C
 */
export function networkSpentInStripclub(p0: any, p1: number, p2: any, p3: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xED76D195E6E3BF7F
 */
export function 0xed76d195e6e3bf7f(p0: any, p1: any, p2: any, p3: any): void;

/**
 * Same as 0x394DCDB9E836B7A9.
 * NETWORK_C*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @returns number
 * @remarks Hash: 0x8968D4D8C6C40C11
 */
export function NetworkCasinoCanPurchaseChipsWithPvc2(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x524EE43A37232C00
 */
export function networkSpentBoatPickup(p0: any, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x8586789730B10CAF
 */
export function NetworkEarnFromBusinessProduct(amount: number, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x998E18CEB44487FC
 */
export function 0x998e18ceb44487fc(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param cost - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xD9B067E55253E3DD
 */
export function networkBuyHealthcare(cost: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param amount - 
 * @param unk - 
 * @returns void
 * @remarks Hash: 0xA9160796D47A2CF8
 */
export function NetworkEarnFromGangopsJobsSetup(amount: number, unk: string): void;

/**
 * ```
 * For the money bags that drop a max of $40,000. Often called 40k bags.
 * Most likely NETWORK_EARN_FROM_ROB***
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xF514621E8EA463D0
 */
export function NetworkEarnFromArmourTruck(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x14EAEA58F93B55AF
 */
export function NetworkSpentArenaJoinSpectator(amount: number, p1: any, p2: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x5F456788B05FAEAC
 */
export function 0x5f456788b05faeac(p0: any, p1: any, p2: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xAC272C0AE01B4BD8
 */
export function NetworkSpentBuyTruck(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x84C0116D012E8FC2
 */
export function NetworkEarnFromDestroyingContraband(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @returns void
 * @remarks Hash: 0xD30E8392F407C328
 */
export function NetworkSpentCasinoHeist(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x5BBBD92186E1F1C5
 */
export function NetworkSpentEmployAssassins(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x45B8154E077D9E4D
 */
export function networkEarnFromHoldups(amount: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns string
 * @remarks Hash: 0x20194D48EAEC9A41
 */
export function processCashGift(p0: number, p1: number, p2: string): string;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x812F5488B1B2A299
 */
export function networkSpentArrestBail(p0: any, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param type - 
 * @param amount - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xA19EC0786E326E06
 */
export function NetworkSpentGangopsStartStrand(type: number, amount: number, p2: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xE1B13771A843C4F6
 */
export function networkSpentBuyWantedlevel(p0: any, p1: any, p2: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x08B0CA7A6AB3AC32
 */
export function NetworkEarnBoss(p0: any, p1: any, p2: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x55A1E095DB052FA5
 */
export function 0x55a1e095db052fa5(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xE8B0B270B6E7C76E
 */
export function NetworkSpentOrderBodyguardVehicle(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param cost - 
 * @returns number
 * @remarks Hash: 0xC62DD18375C99130
 */
export function networkCanBuyLotteryTicket(cost: number): number;

/**
 * ```
 * Does nothing (it's a nullsub).
 * 
 * NativeDB Introduced: v323
 * ```
 * @returns void
 * @remarks Hash: 0xCD0F5B5D932AE473
 */
export function 0xcd0f5b5d932ae473(): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x3EC7471E6909798A
 */
export function NetworkEarnCasinoHeistBonus(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xD9B86B9872039763
 */
export function networkSpentHoldups(p0: any, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x2CEB0E0BC2A77C05
 */
export function NetworkSpentGunrunningContactService(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param amount - 
 * @param matchId - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x28F174A67B8D0C2F
 */
export function NetworkSpentJobSkip(amount: number, matchId: string, p2: number, p3: number): void;

/**
 * ```
 * Same as 0x13A8DE2FD77D04F3.
 * 
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0xEA560AC9EEB1E19B
 */
export function networkGetRemainingTransferBalance(): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xDA947AE8880D5C18
 */
export function NetworkSpentGangopsStartMission(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x90CD7C6871FBF1B4
 */
export function 0x90cd7c6871fbf1b4(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x923AEA8E78F8DF0B
 */
export function NetworkSpentBikeShopModify(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x08A1B82B91900682
 */
export function NetworkSpentPayGoon(p0: number, p1: number, amount: number): void;

/**
 * ## Parameters
 * *
 * @param value - 
 * @param networkHandle - 
 * @returns void
 * @remarks Hash: 0x56A3B51944C50598
 */
export function networkReceivePlayerJobshareCash(value: number, networkHandle: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xEFE9C9A1651B81E6
 */
export function NetworkEarnFromCashingOut(amount: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param amount - 
 * @param vehicleHash - 
 * @returns void
 * @remarks Hash: 0x128A747F4A230952
 */
export function NetworkEarnFromDoomsdayFinaleBonus(amount: number, vehicleHash: number): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @param data - 
 * @returns void
 * @remarks Hash: 0x34A6FC4D06C4DA0F
 */
export function NetworkSpentBuyCasino(amount: number, p1: number, p2: number, data: any): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x11B0A20C493F7E36
 */
export function NetworkEarnJobBonusFirstTimeBonus(p0: any, p1: any, p2: any): void;

/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x5C9B198AF5A54FA6
 */
export function NetworkEarnCollectableCompletedCollection(amount: number, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x0D30EB83668E63C5
 */
export function 0x0d30eb83668e63c5(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xEAD3D81F2C3A1458
 */
export function NetworkSpentArcadeGame(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x365E877C61D6988B
 */
export function NetworkSpentUpgradeTruck(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x6816FB4416760775
 */
export function networkEarnFromJobBonus(p0: any, p1: any, p2: any): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x76EF28DA05EA395A
 */
export function networkGetVcBankBalance(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x2FAB6614CE22E196
 */
export function 0x2fab6614ce22e196(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x17C3A7D31EAE39F9
 */
export function networkSpentTaxi(amount: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param amount - 
 * @param unk - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xA9A31475F530DFDA
 */
export function NetworkEarnFromGangopsAwards(amount: number, unk: string, p2: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xE7B80E2BF9D80BD6
 */
export function networkSpentHireMercenary(p0: any, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xD5BB406F4E04019F
 */
export function networkSpentNoCops(p0: any, p1: number, p2: number): void;

/**
 * ```
 * The first parameter is the amount spent which is store in a global when this native is called. The global returns 10. Which is the price for both rides.  
 * The last 3 parameters are,   
 * 2,0,1 in the am_ferriswheel.c  
 * 1,0,1 in the am_rollercoaster.c  
 * ```
 * @param amountSpent - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x8A7B3952DD64D2B5
 */
export function networkBuyFairgroundRide(amountSpent: number, p1: any, p2: number, p3: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x1BEA0CD93470BB1F
 */
export function NetworkSpentBountyHunterMission(amount: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x9BEA350D7C48061B
 */
export function NetworkSpentAutoshopModifications(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x29B260B84947DFCC
 */
export function networkSpentBounty(p0: any, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param amount - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x0F99F70C61F14619
 */
export function NetworkEarnFromArenaCareerProgression(amount: number, p1: any): void;

/**
 * NETWORK_C*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xF62F6D9528358FE4
 */
export function NetworkCasinoCanGamble(p0: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x8E243837643D9583
 */
export function 0x8e243837643d9583(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xEDEAD9A91EC768B3
 */
export function NetworkEarnFromVehicleExport(amount: number, p1: any, p2: any): void;

/**
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x9CB0BFA7A9342C3D
 */
export function datafileSelectUgcStats(p0: number, p1: number): number;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xDBF860CF1DB8E599
 */
export function 0xdbf860cf1db8e599(p0: any): any;

/**
 * ## Parameters
 * *
 * @param objectData - 
 * @param key - 
 * @returns number
 * @remarks Hash: 0x78F06F6B1FB5A80C
 */
export function datadictGetInt(objectData: any, key: string): number;

/**
 * ## Parameters
 * *
 * @param arrayData - 
 * @param arrayIndex - 
 * @returns string
 * @remarks Hash: 0xD3F2FFEB8D836F52
 */
export function dataarrayGetString(arrayData: any, arrayIndex: number): string;

/**
 * ```
 * Example:  
 * if (!DATAFILE::_BEDB96A7584AA8CF())  
 * {  
 *     if (!g_109E3)  
 * 	{  
 *         if (((sub_d4f() == 2) == 0) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()))  
 * {  
 *             if (NETWORK::NETWORK_IS_CLOUD_AVAILABLE())  
 * 	{  
 *                 g_17A8B = 0;  
 *             }  
 *             if (!g_D52C)  
 * 	{  
 *                 sub_730();  
 *             }  
 *         }  
 *     }  
 * }  
 * ```
 * @returns number
 * @remarks Hash: 0xBEDB96A7584AA8CF
 */
export function datafileIsSavePending(): number;

/**
 * ## Parameters
 * *
 * @param objectData - 
 * @param key - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x46CD3CB66E0825CC
 */
export function datadictGetVector(objectData: any, key: string): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param arrayData - 
 * @param arrayIndex - 
 * @returns number
 * @remarks Hash: 0x3E5AE19425CD74BE
 */
export function dataarrayGetInt(arrayData: any, arrayIndex: number): number;

/**
 * ## Parameters
 * *
 * @param arrayData - 
 * @param arrayIndex - 
 * @returns number
 * @remarks Hash: 0xC0C527B525D7CFB5
 */
export function dataarrayGetFloat(arrayData: any, arrayIndex: number): number;

/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * ```
 * @returns void
 * @remarks Hash: 0x2ED61456317B8178
 */
export function datafileStoreMissionHeader(): void;

/**
 * ## Parameters
 * *
 * @param objectData - 
 * @param key - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xC27E1CC2D795105E
 */
export function datadictSetFloat(objectData: any, key: string, value: number): void;

/**
 * ## Parameters
 * *
 * @param objectData - 
 * @param key - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xE7E035450A7948D5
 */
export function datadictSetInt(objectData: any, key: string, value: number): void;

/**
 * ## Parameters
 * *
 * @param objectData - 
 * @param key - 
 * @returns number
 * @remarks Hash: 0x1186940ED72FFEEC
 */
export function datadictGetBool(objectData: any, key: string): number;

/**
 * ## Parameters
 * *
 * @param arrayData - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xF8B0F5A43E928C76
 */
export function dataarrayAddBool(arrayData: any, value: number): void;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x01095C95CD46B624
 */
export function datafileSelectCreatorStats(p0: number): number;

/**
 * ```
 * Types:  
 * 1 = Boolean  
 * 2 = Integer  
 * 3 = Float  
 * 4 = String  
 * 5 = Vector3  
 * 6 = Object  
 * 7 = Array  
 * ```
 * @param arrayData - 
 * @param arrayIndex - 
 * @returns number
 * @remarks Hash: 0x3A0014ADB172A3C5
 */
export function dataarrayGetType(arrayData: any, arrayIndex: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x8F5EA1C01D65A100
 */
export function datafileDeleteRequestedFile(p0: any): number;

/**
 * ## Parameters
 * *
 * @param index - 
 * @returns number
 * @remarks Hash: 0xFCCAE5B92A830878
 */
export function datafileIsValidRequestId(index: number): number;

/**
 * ```
 * Adds the given request ID to the watch list.
 * ```
 * @param id - 
 * @returns void
 * @remarks Hash: 0xAD6875BBC0FC899C
 */
export function datafileWatchRequestId(id: number): void;

/**
 * ## Parameters
 * *
 * @param arrayData - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x2F0661C155AEEEAA
 */
export function dataarrayAddString(arrayData: any, value: string): void;

/**
 * ## Parameters
 * *
 * @param objectData - 
 * @param key - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x35124302A556A325
 */
export function datadictSetBool(objectData: any, key: string, value: number): void;

/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * ```
 * @returns string
 * @remarks Hash: 0x906B778CA1DC72B6
 */
export function datafileGetFileDict(): string;

/**
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * @param contentId - 
 * @param rating - 
 * @param contentTypeName - 
 * @returns number
 * @remarks Hash: 0x692D808C34A82143
 */
export function ugcSetPlayerData(contentId: string, rating: number, contentTypeName: string): number;

/**
 * ## Parameters
 * *
 * @param arrayData - 
 * @param arrayIndex - 
 * @returns number
 * @remarks Hash: 0x50C1B2874E50C114
 */
export function dataarrayGetBool(arrayData: any, arrayIndex: number): number;

/**
 * @returns void
 * @remarks Hash: 0xC55854C7D7274882
 */
export function datafileFlushMissionHeader(): void;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x22DA66936E0FFF37
 */
export function datafileSelectActiveFile(p0: any): number;

/**
 * ## Parameters
 * *
 * @param objectData - 
 * @param key - 
 * @returns number
 * @remarks Hash: 0x06610343E73B9727
 */
export function datadictGetFloat(objectData: any, key: string): number;

/**
 * ## Parameters
 * *
 * @param objectData - 
 * @param key - 
 * @param valueX - 
 * @param valueY - 
 * @param valueZ - 
 * @returns void
 * @remarks Hash: 0x4CD49B76338C7DEE
 */
export function datadictSetVector(objectData: any, key: string, valueX: number, valueY: number, valueZ: number): void;

/**
 * ```
 * Types:  
 * 1 = Boolean  
 * 2 = Integer  
 * 3 = Float  
 * 4 = String  
 * 5 = Vector3  
 * 6 = Object  
 * 7 = Array  
 * ```
 * @param objectData - 
 * @param key - 
 * @returns number
 * @remarks Hash: 0x031C55ED33227371
 */
export function datadictGetType(objectData: any, key: string): number;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xA69AC4ADE82B57A4
 */
export function datafileSelectUgcData(p0: number): number;

/**
 * ## Parameters
 * *
 * @param arrayData - 
 * @param valueX - 
 * @param valueY - 
 * @param valueZ - 
 * @returns void
 * @remarks Hash: 0x407F8D034F70F0C2
 */
export function dataarrayAddVector(arrayData: any, valueX: number, valueY: number, valueZ: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x4DFDD9EB705F8140
 */
export function datafileUpdateSaveToCloud(p0: number): number;

/**
 * ## Parameters
 * *
 * @param objectData - 
 * @param key - 
 * @returns any
 * @remarks Hash: 0x5B11728527CA6E5F
 */
export function datadictCreateArray(objectData: any, key: string): any;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x52818819057F2B40
 */
export function datafileSelectUgcPlayerData(p0: number): number;

/**
 * ## Parameters
 * *
 * @param objectData - 
 * @param key - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x8FF3847DADD8E30C
 */
export function datadictSetString(objectData: any, key: string, value: string): void;

/**
 * ## Parameters
 * *
 * @param arrayData - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xCABDB751D86FE93B
 */
export function dataarrayAddInt(arrayData: any, value: number): void;

/**
 * ```
 * NativeDB Added Parameter 6: Any p5
 * ```
 * @param contentName - 
 * @param description - 
 * @param tagsCsv - 
 * @param contentTypeName - 
 * @param publish - 
 * @returns number
 * @remarks Hash: 0xA5EFC3E847D60507
 */
export function ugcCreateMission(contentName: string, description: string, tagsCsv: string, contentTypeName: string, publish: number): number;

/**
 * ## Parameters
 * *
 * @param arrayData - 
 * @returns number
 * @remarks Hash: 0x065DB281590CEA2D
 */
export function dataarrayGetCount(arrayData: any): number;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param filename - 
 * @returns number
 * @remarks Hash: 0x83BCCE3224735F05
 */
export function datafileStartSaveToCloud(filename: string): number;

/**
 * ```
 * Loads a User-Generated Content (UGC) file. These files can be found in "[GTA5]\data\ugc" and "[GTA5]\common\patch\ugc". They seem to follow a naming convention, most likely of "[name]_[part].ugc". See example below for usage.
 * Returns whether or not the file was successfully loaded.
 * Example:
 * DATAFILE::_LOAD_UGC_FILE("RockstarPlaylists") // loads "rockstarplaylists_00.ugc"
 * ```
 * 
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param filename - 
 * @returns number
 * @remarks Hash: 0xC5238C011AF405E4
 */
export function datafileLoadOfflineUgc(filename: string): number;

/**
 * ```
 * NativeDB Added Parameter 8: Any p7
 * ```
 * @param data - 
 * @returns number
 * @remarks Hash: 0xC84527E235FCA219
 */
export function ugcCreateContent(data: string): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x15FF52B809DB2353
 */
export function datafileHasLoadedFileData(p0: any): number;

/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * ```
 * @returns void
 * @remarks Hash: 0xD27058A1CA2B13EE
 */
export function datafileCreate(): void;

/**
 * ## Parameters
 * *
 * @param arrayData - 
 * @returns any
 * @remarks Hash: 0x6889498B3E19C797
 */
export function dataarrayAddDict(arrayData: any): any;

/**
 * ## Parameters
 * *
 * @param objectData - 
 * @param key - 
 * @returns any
 * @remarks Hash: 0xB6B9DDC412FCEEE2
 */
export function datadictGetDict(objectData: any, key: string): any;

/**
 * ```
 * NativeDB Added Parameter 8: Any p7
 * ```
 * @param contentId - 
 * @param data - 
 * @returns number
 * @remarks Hash: 0x648E7A5434AF7969
 */
export function ugcUpdateContent(contentId: string, data: any): number;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x6AD0BD5E087866CB
 */
export function 0x6ad0bd5e087866cb(p0: any): void;

/**
 * ## Parameters
 * *
 * @param objectData - 
 * @param key - 
 * @returns any
 * @remarks Hash: 0x7A983AA9DA2659ED
 */
export function datadictGetArray(objectData: any, key: string): any;

/**
 * ## Parameters
 * *
 * @param arrayData - 
 * @param arrayIndex - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x8D2064E5B64A628A
 */
export function dataarrayGetVector(arrayData: any, arrayIndex: number): { x: number, y: number, z: number };

/**
 * ```
 * NativeDB Added Parameter 6: Any p5
 * ```
 * @param contentId - 
 * @param contentName - 
 * @param description - 
 * @param tagsCsv - 
 * @param contentTypeName - 
 * @returns number
 * @remarks Hash: 0x4645DE9980999E93
 */
export function ugcUpdateMission(contentId: string, contentName: string, description: string, tagsCsv: string, contentTypeName: string): number;

/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * ```
 * @returns void
 * @remarks Hash: 0x9AB9C1CFC8862DFB
 */
export function datafileDelete(): void;

/**
 * ## Parameters
 * *
 * @param objectData - 
 * @param key - 
 * @returns string
 * @remarks Hash: 0x3D2FD9E763B24472
 */
export function datadictGetString(objectData: any, key: string): string;

/**
 * ## Parameters
 * *
 * @param objectData - 
 * @param key - 
 * @returns any
 * @remarks Hash: 0xA358F56F10732EE1
 */
export function datadictCreateDict(objectData: any, key: string): any;

/**
 * @returns void
 * @remarks Hash: 0x6CC86E78358D5119
 */
export function datafileClearWatchList(): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0xA6EEF01087181EDD
 */
export function 0xa6eef01087181edd(p0: any, p1: any): any;

/**
 * ## Parameters
 * *
 * @param arrayData - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x57A995FD75D37F56
 */
export function dataarrayAddFloat(arrayData: any, value: number): void;

/**
 * ## Parameters
 * *
 * @param arrayData - 
 * @param arrayIndex - 
 * @returns any
 * @remarks Hash: 0x8B5FADCC4E3A145F
 */
export function dataarrayGetDict(arrayData: any, arrayIndex: number): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xF8CC1EBE0B62E29F
 */
export function datafileHasValidFileData(p0: any): number;

/**
 * ```
 * Sets (almost, not sure) all Rockstar Editor values (bIsRecording etc) to 0.  
 * ```
 * @returns void
 * @remarks Hash: 0x3353D13F09307691
 */
export function ResetEditorValues(): void;

/**
 * ```
 * Disables some other rendering (internal)  
 * ```
 * @returns void
 * @remarks Hash: 0x5AD3932DAEB1E5D3
 */
export function 0x5ad3932daeb1e5d3(): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * 
 * ```
 * Something to do with phone cameras.  
 * startup.c4:  
 * void sub_2a3d() {  
 *     UNK2::_7E2BD3EF6C205F09("No_Filter", 1);  
 *     UNK2::_7E2BD3EF6C205F09("phone_cam1", 1);  
 *     UNK2::_7E2BD3EF6C205F09("phone_cam2", 1);  
 *     UNK2::_7E2BD3EF6C205F09("phone_cam3", 1);  
 *     UNK2::_7E2BD3EF6C205F09("phone_cam4", 1);  
 *     UNK2::_7E2BD3EF6C205F09("phone_cam5", 1);  
 *     UNK2::_7E2BD3EF6C205F09("phone_cam6", 1);  
 *     UNK2::_7E2BD3EF6C205F09("phone_cam7", 1);  
 *     UNK2::_7E2BD3EF6C205F09("phone_cam9", 1);  
 *     UNK2::_7E2BD3EF6C205F09("phone_cam12", 0);  
 * }  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x7E2BD3EF6C205F09
 */
export function 0x7e2bd3ef6c205f09(p0: string, p1: number): void;

/**
 * Please note that you will need to call DO_SCREEN_FADE_IN after exiting the Rockstar Editor when you call this.
 * 
 * ```
 * NativeDB Added Parameter 1: int p0
 * ```
 * @returns void
 * @remarks Hash: 0x49DA8145672B2725
 */
export function ActivateRockstarEditor(): void;

/**
 * ```
 * Returns a bool if interior rendering is disabled, if yes, all "normal" rendered interiors are invisible  
 * ```
 * @returns number
 * @remarks Hash: 0x95AB8B5C992C7B58
 */
export function IsInteriorRenderingDisabled(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xE058175F8EAFE79A
 */
export function 0xe058175f8eafe79a(p0: number): void;

/**
 * ```
 * Spawns one or more money pickups.  
 * x: The X-component of the world position to spawn the money pickups at.  
 * y: The Y-component of the world position to spawn the money pickups at.  
 * z: The Z-component of the world position to spawn the money pickups at.  
 * value: The combined value of the pickups (in dollars).  
 * amount: The number of pickups to spawn.  
 * model: The model to use, or 0 for default money model.  
 * Example:  
 * CREATE_MONEY_PICKUPS(x, y, z, 1000, 3, 0x684a97ae);  
 * Spawns 3 spray cans that'll collectively give $1000 when picked up. (Three spray cans, each giving $334, $334, $332 = $1000).  
 * ==============================================  
 * Max is 2000 in MP. So if you put the amount to 20, but the value to $400,000 eg. They will only be able to pickup 20 - $2,000 bags. So, $40,000  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param value - 
 * @param amount - 
 * @param model - 
 * @returns void
 * @remarks Hash: 0x0589B5E791CE9B2B
 */
export function createMoneyPickups(x: number, y: number, z: number, value: number, amount: number, model: number): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x90E47239EA1980B8
 */
export function isGarageEmpty(): number;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x834344A414C7C85D
 */
export function 0x834344a414c7c85d(p0: any, p1: any): void;

/**
 * ```
 * Defines the state of a destructible object.
 * Use the GET_RAYFIRE_MAP_OBJECT native to find an object's handle with its name / coords.
 * State 2 == object just spawned
 * State 4 == Beginning of the animation
 * State 6 == Start animation
 * State 9 == End of the animation
 * ```
 * @param object - 
 * @param state - 
 * @returns void
 * @remarks Hash: 0x5C29F698D404C5E1
 */
export function setStateOfRayfireMapObject(object: number, state: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x78857FC65CADB909
 */
export function setLocalPlayerCanCollectPortablePickups(p0: number): void;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x8881C98A31117998
 */
export function 0x8881c98a31117998(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xB6FBFD079B8D0596
 */
export function getObjectFragmentDamageHealth(p0: any, p1: number): number;

/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * @param object - 
 * @returns number
 * @remarks Hash: 0x0378C08504160D0D
 */
export function isObjectAPortablePickup(object: number): number;

/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x63ECF581BC70E363
 */
export function 0x63ecf581bc70e363(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param pickup - 
 * @returns void
 * @remarks Hash: 0x3288D8ACAECD2AB2
 */
export function removePickup(pickup: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x39A5FB7EAF150840
 */
export function 0x39a5fb7eaf150840(p0: any, p1: any): void;

/**
 * Hardcoded not to work in multiplayer environments.
 * Native name between `SET_LOCAL_PLAYER_VISIBLE_LOCALLY` & `SET_MAX_WANTED_LEVEL`.
 * 
 * ```
 * OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 0, 0.0, 50.0, 0);  //door unlocked
 * OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 1, 0.0, 50.0, 0);  //door locked
 * ```
 * @param modelHash - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param locked - 
 * @param xRotMult - 
 * @param yRotMult - 
 * @param zRotMult - 
 * @returns void
 * @remarks Hash: 0x9B12F9A24FABEDB0
 */
export function DoorControl(modelHash: number, x: number, y: number, z: number, locked: number, xRotMult: number, yRotMult: number, zRotMult: number): void;

/**
 * ```
 * NativeDB Removed Parameter 3: int R
 * NativeDB Removed Parameter 4: int G
 * NativeDB Removed Parameter 5: int B
 * NativeDB Introduced: v757
 * ```
 * @param object - 
 * @returns void
 * @remarks Hash: 0x3B2FD68DB5F8331C
 */
export function 0x3b2fd68db5f8331c(object: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x46F3ADD1E2D5BAF2
 */
export function 0x46f3add1e2d5baf2(p0: any, p1: any): void;

/**
 * Includes networking check: ownership vs. or the door itself
 * @param doorHash - 
 * @param rate - 
 * @param requestDoor - 
 * @param forceUpdate - 
 * @returns void
 * @remarks Hash: 0x03C27E13B42A0E82
 */
export function doorSystemSetAutomaticRate(doorHash: number, rate: number, requestDoor: number, forceUpdate: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x3BD770D281982DB5
 */
export function 0x3bd770d281982db5(p0: any, p1: any): any;

/**
 * ```
 * if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(doorHash))
 * {
 *     OBJECT::REMOVE_DOOR_FROM_SYSTEM(doorHash);
 * }
 * ```
 * @param doorHash - 
 * @returns number
 * @remarks Hash: 0xC153C43EA202C8C1
 */
export function isDoorRegisteredWithSystem(doorHash: number): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xBFFE53AE7E67FCDC
 */
export function 0xbffe53ae7e67fcdc(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x826D1EE4D1CAFC78
 */
export function 0x826d1ee4d1cafc78(p0: any, p1: any): void;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param object - 
 * @returns number
 * @remarks Hash: 0x8ABFB70C49CC43E2
 */
export function hasObjectBeenBroken(object: number): number;

/**
 * ## Parameters
 * *
 * @param modelHash - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x0BF3B3BD47D79C08
 */
export function setMaxNumPortablePickupsCarriedByPlayer(modelHash: number, p1: number): void;

/**
 * ```
 * Sets the ajar angle of a door.
 * Ranges from -1.0 to 1.0, and 0.0 is closed / default.
 * ```
 * @param doorHash - 
 * @param ajar - 
 * @param requestDoor - 
 * @param forceUpdate - 
 * @returns void
 * @remarks Hash: 0xB6E6FBA95C7324AC
 */
export function doorSystemSetOpenRatio(doorHash: number, ajar: number, requestDoor: number, forceUpdate: number): void;

/**
 * ```
 * Adds an area that seems to be related to pickup physics behavior.
 * Max amount of areas is 10. Only works in multiplayer.
 * 
 * ADD_*
 * 
 * NativeDB Introduced: v1290
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0xD4A7A435B3710D05
 */
export function 0xd4a7a435b3710d05(x: number, y: number, z: number, radius: number): void;

/**
 * ```
 * Disabling/enabling a player from getting pickups. From the scripts:
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 1);
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 0);
 * OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 1);
 * SET_PLAYER_*
 * ```
 * @param player - 
 * @param pickupHash - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x616093EC6B139DD9
 */
export function ToggleUsePickupsForPlayer(player: number, pickupHash: number, toggle: number): void;

/**
 * Creates an ambient pickup given the hash. Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
 * @param pickupHash - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param flags - 
 * @param value - 
 * @param modelHash - 
 * @param returnHandle - 
 * @param p8 - 
 * @returns number
 * @remarks Hash: 0x673966A0C0FD7171
 */
export function createAmbientPickup(pickupHash: number, posX: number, posY: number, posZ: number, flags: number, value: number, modelHash: number, returnHandle: number, p8: number): number;

/**
 * Overrides a flag on the object which determines if the object should be avoided by a vehicle in task: CTaskVehicleGoToPointWithAvoidanceAutomobile.
 * Tested on vehicles that were created by the vehicle generators.
 * @param object - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x77F33F2CCF64B3AA
 */
export function setObjectForceVehiclesToAvoid(object: number, toggle: number): void;

/**
 * ```
 * `object`: The des-object handle to get the animation progress from.
 * Return value is a float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
 * ```
 * @param object - 
 * @returns number
 * @remarks Hash: 0x260EE4FDBDF4DB01
 */
export function getRayfireMapObjectAnimPhase(object: number): number;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0x190428512B240692
 */
export function clearObjectsInsideGarage(): void;

/**
 * Sets color of embedded light source.
 * Only appears in am_mp_nightclub.c for the nightclub dancefloor.
 * 
 * Not sure what p1 does, seems to only ever be '1' in scripts.
 * 
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param object - 
 * @param p1 - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns any
 * @remarks Hash: 0x5F048334B4A4E774
 */
export function SetObjectLightColor(object: number, p1: number, r: number, g: number, b: number): any;

/**
 * ## Parameters
 * *
 * @param doorHash - 
 * @returns number
 * @remarks Hash: 0xC531EE8A1145A149
 */
export function isDoorClosed(doorHash: number): number;

/**
 * Clears the fields sets by [N_0xc7f29ca00f46350e](#_0xC7F29CA00F46350E) (1604 retail: 0x1424A7A10, 0x1424A7A11) and iterates over the global CDoor's bucket-list.
 * 
 * Related to its "Pre-networked state"?
 * @returns void
 * @remarks Hash: 0x701FDA1E82076BA4
 */
export function 0x701fda1e82076ba4(): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns number
 * @remarks Hash: 0xF12E33034D887F66
 */
export function SetTextureVariationOfClosestObjectOfType(x: number, y: number, z: number, radius: number): number;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x4C134B4DF76025D0
 */
export function 0x4c134b4df76025d0(p0: any, p1: any): void;

/**
 * Includes networking check: ownership vs. or the door itself
 * @param doorHash - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD9B71952F78A2640
 */
export function doorSystemSetHoldOpen(doorHash: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param object - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB2D0BDE54F0E8E5A
 */
export function 0xb2d0bde54f0e8e5a(object: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param object - 
 * @returns number
 * @remarks Hash: 0xFC481C641EBBD27D
 */
export function isObjectAPickup(object: number): number;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x08F96CA6C551AD51
 */
export function getWeaponTypeFromPickupType(): number;

/**
 * @returns void
 * @remarks Hash: 0x394CD08E31313C28
 */
export function 0x394cd08e31313c28(): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xAA059C615DE9DD03
 */
export function 0xaa059c615de9dd03(p0: any, p1: any): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xADF084FB8F075D06
 */
export function 0xadf084fb8f075d06(p0: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xB3ECA65C7317F174
 */
export function GetPickupGenerationRangeMultiplier(): number;

/**
 * ```
 * Maximum amount of pickup models that can be disallowed is 30.
 * SET_LOCAL_PLAYER_*
 * ```
 * @param modelHash - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x88EAEC617CD26926
 */
export function SetLocalPlayerCanUsePickupsWithThisModel(modelHash: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x734E1714D077DA9A
 */
export function 0x734e1714d077da9a(p0: any, p1: any): void;

/**
 * Lockstates not applied and CNetObjDoor's not created until [DOOR_SYSTEM_GET_IS_PHYSICS_LOADED](#_0xDF97CDD4FC08FD34) returns true.
 * @param doorHash - 
 * @param state - 
 * @param requestDoor - 
 * @param forceUpdate - 
 * @returns void
 * @remarks Hash: 0x6BAB9442830C7F53
 */
export function doorSystemSetDoorState(doorHash: number, state: number, requestDoor: number, forceUpdate: number): void;

/**
 * p5 only set to true in single player native scripts. Door hashes normally look like `PROP_[int]_DOOR_[int]` for interior doors and `PROP_BUILDING_[int]_DOOR_[int]` exterior doors but you can just make up your own hash if you want.
 * 
 * If scriptDoor is true, register the door on the script handler host (note: there's a hardcap on the number of script IDs that can be added to the system at a given time). If scriptDoor and isLocal are both false, the door is considered to be in a "Persists w/o netobj" state.
 * 
 * A simple "localized" door-system (with hundreds/thousands of doors) can be created by setting p5, p6, and p7 to false and using EventHandlers to synchronize the states to: [DOOR_SYSTEM_SET_DOOR_STATE](#_0x6BAB9442830C7F53), [DOOR_SYSTEM_SET_OPEN_RATIO](#_0xB6E6FBA95C7324AC), [DOOR_SYSTEM_SET_HOLD_OPEN](#_0xD9B71952F78A2640), etc.
 * @param doorHash - 
 * @param modelHash - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p5 - 
 * @param scriptDoor - 
 * @param isLocal - 
 * @returns void
 * @remarks Hash: 0x6F8838D03D1DC226
 */
export function addDoorToSystem(doorHash: number, modelHash: number, x: number, y: number, z: number, p5: number, scriptDoor: number, isLocal: number): void;

/**
 * ```
 * Pickup hashes: pastebin.com/8EuSv2r1  
 * flags:  
 * 8 (1 << 3): place on ground  
 * 512 (1 << 9): spin around  
 * ```
 * @param pickupHash - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param flag - 
 * @param amount - 
 * @param p9 - 
 * @param p10 - 
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x891804727E0A98B7
 */
export function createPickupRotate(pickupHash: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, flag: number, amount: number, p9: any, p10: number, modelHash: number): number;

/**
 * ## Parameters
 * *
 * @param pickupObject - 
 * @returns number
 * @remarks Hash: 0xD9EFB6DBF7DAAEA3
 */
export function doesPickupObjectExist(pickupObject: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param modelHash - 
 * @param p5 - 
 * @returns number
 * @remarks Hash: 0x46494A2475701343
 */
export function hasClosestObjectOfTypeBeenCompletelyDestroyed(x: number, y: number, z: number, radius: number, modelHash: number, p5: number): number;

/**
 * ## Parameters
 * *
 * @param doorHash - 
 * @param distance - 
 * @param requestDoor - 
 * @param forceUpdate - 
 * @returns void
 * @remarks Hash: 0x9BA001CB45CBF627
 */
export function doorSystemSetAutomaticDistance(doorHash: number, distance: number, requestDoor: number, forceUpdate: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xA08FE5E49BDC39DD
 */
export function 0xa08fe5e49bdc39dd(p0: any, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param object - 
 * @returns number
 * @remarks Hash: 0x8B32ACE6326A7546
 */
export function isObjectVisible(object: number): number;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param entity - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x43C677F1E1158005
 */
export function GetIsArenaPropPhysicsDisabled(entity: number, p1: any): number;

/**
 * An
 * @param xPos - 
 * @param yPos - 
 * @param zPos - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param width - 
 * @param p10 - 
 * @param includez - 
 * @returns number
 * @remarks Hash: 0x2A70BAE8883E4C81
 */
export function isPointInAngledArea(xPos: number, yPos: number, zPos: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, p10: number, includez: number): number;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x2542269291C6AC84
 */
export function 0x2542269291c6ac84(p0: any): any;

/**
 * Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
 * @param pickupHash - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param p4 - 
 * @param value - 
 * @param p6 - 
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0xFBA08C503DD5FA58
 */
export function createPickup(pickupHash: number, posX: number, posY: number, posZ: number, p4: number, value: number, p6: number, modelHash: number): number;

/**
 * ```
 * Returns true if a destructible object with this handle exists, false otherwise.  
 * ```
 * @param object - 
 * @returns number
 * @remarks Hash: 0x52AF537A0C5B8AAD
 */
export function doesRayfireMapObjectExist(object: number): number;

/**
 * Resets and brings back all the children of a fragment based object.
 * This should be used when attaching or detaching an object from another entity, especially when the object being detached consists of multiple fragments.
 * 
 * Attempting to teleport a fragment-based object using [`SET_ENTITY_COORDS`](#_0x06843DA7060A026B) such as a flag object, will result in it remaining in place and failing to teleport, given the condition mentioned in the preceding statement.
 * 
 * The native should be executed after detaching the object from its parent entity and before calling [`SET_ENTITY_COORDS`](#_0x06843DA7060A026B).
 * 
 * Example given down below.
 * @param object - 
 * @returns void
 * @remarks Hash: 0xF9C1681347C8BD15
 */
export function fixObjectFragment(object: number): void;

/**
 * Search radius: 0.5
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns number
 * @remarks Hash: 0x589F80B325CC82C5
 */
export function doorSystemFindExistingDoor(x: number, y: number, z: number): number;

/**
 * Sets the 34th and 35th object flags related to player peds.
 * 
 * ```
 * NativeDB Introduced: v3258
 * ```
 * @param object - 
 * @param setFlag34 - 
 * @param setFlag35 - 
 * @returns void
 * @remarks Hash: 0xB39F03368DB0CAA2
 */
export function SetObjectTargettableByPlayer(object: number, setFlag34: number, setFlag35: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param modelHash - 
 * @param p5 - 
 * @returns number
 * @remarks Hash: 0x761B0E69AC4D007E
 */
export function hasClosestObjectOfTypeBeenBroken(p0: number, p1: number, p2: number, p3: number, modelHash: number, p5: any): number;

/**
 * ```
 * Activate the physics to: "xs_prop_arena_{flipper,wall,bollard,turntable,pit}"
 * ```
 * 
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param entity - 
 * @param toggle - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x911024442F4898F0
 */
export function SetEnableArenaPropPhysics(entity: number, toggle: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x8CAAB2BD3EA58BD4
 */
export function 0x8caab2bd3ea58bd4(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x1C57C94A6446492A
 */
export function 0x1c57c94a6446492a(p0: any, p1: any): void;

/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * @param value - 
 * @returns void
 * @remarks Hash: 0xABDABF4E1EDECBFA
 */
export function SetUnkGlobalBoolRelatedToDamage(value: number): void;

/**
 * ## Parameters
 * *
 * @param object - 
 * @returns void
 * @remarks Hash: 0xB252BC036B525623
 */
export function trackObjectVisibility(object: number): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0xDF97CDD4FC08FD34
 */
export function doorSystemGetIsPhysicsLoaded(): number;

/**
 * ```c
 * enum eObjectPaintVariants
 * {  
 * 	Pacific = 0,  
 * 	Azure = 1,  
 * 	Nautical = 2,  
 * 	Continental = 3,  
 * 	Battleship = 4,  
 * 	Intrepid = 5,  
 * 	Uniform = 6,  
 * 	Classico = 7,  
 * 	Mediterranean = 8,  
 * 	Command = 9,  
 * 	Mariner = 10,  
 * 	Ruby = 11,  
 * 	Vintage = 12,  
 * 	Pristine = 13,  
 * 	Merchant = 14,  
 * 	Voyager = 15  
 * };  
 * ```
 * @param object - 
 * @param textureVariation - 
 * @returns void
 * @remarks Hash: 0x971DA0055324D033
 */
export function SetObjectTextureVariation(object: number, textureVariation: number): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param object - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0xAFE24E4D29249E4A
 */
export function 0xafe24e4d29249e4a(object: number, p1: number, p2: number, p3: number): number;

/**
 * ## Parameters
 * *
 * @param object - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x92AEFB5F6E294023
 */
export function preventCollectionOfPortablePickup(object: number, p1: number, p2: number): void;

/**
 * Creates an object (prop) with the specified model centered at the specified position.
 * This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
 * @param modelHash - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param isNetwork - 
 * @param netMissionEntity - 
 * @param doorFlag - 
 * @returns number
 * @remarks Hash: 0x9A294B2138ABB884
 */
export function createObjectNoOffset(modelHash: number, x: number, y: number, z: number, isNetwork: number, netMissionEntity: number, doorFlag: number): number;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x1A6CBB06E2D0D79D
 */
export function 0x1a6cbb06e2d0d79d(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param object - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x406137F8EF90EAF5
 */
export function setActivateObjectPhysicsAsSoonAsItIsUnfrozen(object: number, toggle: number): void;

/**
 * CDoor and CDoorSystemData still internally allocated (and their associations between doorHash, modelHash, and coordinates).
 * 
 * Only its NetObj removed and flag ``*(v2 + 192) |= 8u`` (1604 retail) toggled.
 * @param doorHash - 
 * @returns void
 * @remarks Hash: 0x464D8E1427156FE4
 */
export function removeDoorFromSystem(doorHash: number): void;

/**
 * Calculates the world coordinates after applying the specified offsets to the given position, relative to a certain heading.
 * This native is similar to [`GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS`](#_0x1899F328B0E12848), but uses a world position and heading as the reference point.
 * @param xPos - 
 * @param yPos - 
 * @param zPos - 
 * @param heading - 
 * @param xOffset - 
 * @param yOffset - 
 * @param zOffset - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x163E252DE035A133
 */
export function getOffsetFromCoordAndHeadingInWorldCoords(xPos: number, yPos: number, zPos: number, heading: number, xOffset: number, yOffset: number, zOffset: number): { x: number, y: number, z: number };

/**
 * Casts a ray downward from the object's position and places the object on the surface it hits (including world surface and objects). Use [`PLACE_OBJECT_ON_GROUND_PROPERLY`](#_0x58A850EAEE20FAA3) to not include objects when determining the surface.
 * @param object - 
 * @returns number
 * @remarks Hash: 0xD76EEEF746057FD6
 */
export function placeObjectOnGroundOrObjectProperly(object: number): number;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x8DCA505A5C196F05
 */
export function 0x8dca505a5c196f05(p0: any, p1: any): void;

/**
 * Sets the intensity of Speed Boost and Slow Down props.
 * 
 * The corresponding values for Speed Boosts in the Creator are:  
 * Weak: `15`  
 * Normal: `25`  
 * Strong: `35`  
 * Extra Strong: `45`  
 * Ultra Strong: `100`
 * 
 * For Slow Downs:  
 * Weak: `44`  
 * Normal: `30`  
 * Strong: `16`
 * @param object - 
 * @param intensity - 
 * @returns void
 * @remarks Hash: 0x96EE0EBA0163DF80
 */
export function SetObjectStuntPropSpeedup(object: number, intensity: number): void;

/**
 * ## Parameters
 * *
 * @param object - 
 * @returns void
 * @remarks Hash: 0x4A39DB43E47CF3AA
 */
export function removeObjectHighDetailModel(object: number): void;

/**
 * ## Parameters
 * *
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0x318516E02DE3ECE2
 */
export function setPickupGenerationRangeMultiplier(multiplier: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param range - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0x397DC58FF00298D1
 */
export function isAnyObjectNearPoint(x: number, y: number, z: number, range: number, p4: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x762DB2D380B48D04
 */
export function 0x762db2d380b48d04(p0: any): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xF538081986E49E9D
 */
export function setForceObjectThisFrame(): void;

/**
 * See [`N_0x701fda1e82076ba4`](#_0x701FDA1E82076BA4).
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC7F29CA00F46350E
 */
export function 0xc7f29ca00f46350e(p0: number): void;

/**
 * ## Parameters
 * *
 * @param pickup - 
 * @returns number
 * @remarks Hash: 0x80EC48E6679313F9
 */
export function hasPickupBeenCollected(pickup: number): number;

/**
 * ```
 * returns pickup hash.
 * ```
 * @returns number
 * @remarks Hash: 0x5EAAD83F8CFB4575
 */
export function GetPickupHash(): number;

/**
 * Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
 * @param pickupHash - 
 * @returns void
 * @remarks Hash: 0x27F9D613092159CF
 */
export function removeAllPickupsOfType(pickupHash: number): void;

/**
 * ## Parameters
 * *
 * @param garageHash - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF2E1A7133DD356A6
 */
export function enableSavingInGarage(garageHash: number, toggle: number): void;

/**
 * ```
 * Hardcoded to not work in multiplayer.  
 * Used to lock/unlock doors to interior areas of the game.  
 * (Possible) Door Types:  
 * pastebin.com/9S2m3qA4  
 * Heading is either 1, 0 or -1 in the scripts. Means default closed(0) or opened either into(1) or out(-1) of the interior.  
 * Locked means that the heading is locked.    
 * p6 is always 0.   
 * 225 door types, model names and coords found in stripclub.c4:  
 * pastebin.com/gywnbzsH  
 * get door info: pastebin.com/i14rbekD  
 * ```
 * @param type - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param locked - 
 * @param heading - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0xF82D8F1926A02C3D
 */
export function setStateOfClosestDoorOfType(type: number, x: number, y: number, z: number, locked: number, heading: number, p6: number): void;

/**
 * ## Parameters
 * *
 * @param object - 
 * @returns number
 * @remarks Hash: 0x11D1E53A726891FE
 */
export function isPickupWeaponObjectValid(object: number): number;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xE05F6AEEFEB0BB02
 */
export function 0xe05f6aeefeb0bb02(p0: any, p1: any, p2: any): void;

/**
 * ```
 * NativeDB Introduced: v757
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x8CFF648FBD7330F1
 */
export function 0x8cff648fbd7330f1(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param doorHash - 
 * @returns number
 * @remarks Hash: 0xE851471AEFC3374F
 */
export function DoorSystemGetAutomaticDistance(doorHash: number): number;

/**
 * A*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param pickupHash - 
 * @returns void
 * @remarks Hash: 0xFDC07C58E8AAB715
 */
export function 0xfdc07c58e8aab715(pickupHash: number): void;

/**
 * ## Parameters
 * *
 * @param pickupObject - 
 * @returns void
 * @remarks Hash: 0xCF463D1E9A0AECB1
 */
export function detachPortablePickupFromPed(pickupObject: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xEB6F1A9B5510A5D2
 */
export function 0xeb6f1a9b5510a5d2(p0: any, p1: number): void;

/**
 * Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
 * @param pickupHash - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns number
 * @remarks Hash: 0xF9C36251F6E48E33
 */
export function doesPickupOfTypeExistInArea(pickupHash: number, x: number, y: number, z: number, radius: number): number;

/**
 * ```
 * rage::phArchetypeDamp
 * p9: Some phBoundGeometry margin value, limited to (0.0, 0.1) exclusive.
 * ```
 * @param object - 
 * @param mass - 
 * @param gravityFactor - 
 * @param linearC - 
 * @param linearV - 
 * @param linearV2 - 
 * @param angularC - 
 * @param angularV - 
 * @param angularV2 - 
 * @param p9 - 
 * @param maxAngSpeed - 
 * @param buoyancyFactor - 
 * @returns void
 * @remarks Hash: 0xF6DF6E90DE7DF90F
 */
export function setObjectPhysicsParams(object: number, mass: number, gravityFactor: number, linearC: number, linearV: number, linearV2: number, angularC: number, angularV: number, angularV2: number, p9: number, maxAngSpeed: number, buoyancyFactor: number): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0xF0EED5A6BC7B237A
 */
export function isObjectPartiallyInsideGarage(): number;

/**
 * ```
 * Requires a component_at_*_flsh to be attached to the weapon object
 * ```
 * @param object - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xBCE595371A5FBAAF
 */
export function SetCreateWeaponObjectLightSource(object: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xDB41D07A45A6D4B7
 */
export function 0xdb41d07a45a6d4b7(p0: any): any;

/**
 * ```
 * p5 is usually 0.  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param hash - 
 * @param p5 - 
 * @returns number
 * @remarks Hash: 0xBFA48E2FF417213F
 */
export function doesObjectOfTypeExistAtCoords(x: number, y: number, z: number, radius: number, hash: number, p5: number): number;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xDA05194260CDCDF9
 */
export function ClearGarageArea(): void;

/**
 * Creates an object (prop) with the specified model at the specified position, offset on the Z axis by the radius of the object's model.
 * This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
 * @returns number
 * @remarks Hash: 0x509D5878EB39E842
 */
export function createObject(): number;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param pickupHash - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param flags - 
 * @param value - 
 * @param modelHash - 
 * @param p7 - 
 * @param p8 - 
 * @returns any
 * @remarks Hash: 0x9C93764223E29C50
 */
export function CreateNonNetworkedAmbientPickup(pickupHash: any, posX: number, posY: number, posZ: number, flags: number, value: number, modelHash: any, p7: number, p8: number): any;

/**
 * SET_PICKUP_*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param pickup - 
 * @returns void
 * @remarks Hash: 0x7813E8B8C4AE4799
 */
export function 0x7813e8b8c4ae4799(pickup: number): void;

/**
 * ## Parameters
 * *
 * @param pickupHash - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param placeOnGround - 
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x125494B98A21AAF7
 */
export function createNonNetworkedPortablePickup(pickupHash: number, x: number, y: number, z: number, placeOnGround: number, modelHash: number): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x659F9D71F52843F8
 */
export function 0x659f9d71f52843f8(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x62454A641B41F3C5
 */
export function 0x62454a641b41f3c5(p0: any): void;

/**
 * ```
 * draws circular marker at pos
 * -1 = none
 * 0 = red
 * 1 = green
 * 2 = blue
 * 3 = green larger
 * 4 = nothing
 * 5 = green small
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param colorIndex - 
 * @returns void
 * @remarks Hash: 0x3430676B11CDF21D
 */
export function renderFakePickupGlow(x: number, y: number, z: number, colorIndex: number): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x31574B1B41268673
 */
export function 0x31574b1b41268673(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xE7E4C198B0185900
 */
export function breakObjectFragmentChild(p0: number, p1: any, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xB5B7742424BD4445
 */
export function 0xb5b7742424bd4445(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x641F272B52E2F0F8
 */
export function 0x641f272b52e2f0f8(p0: any, p1: any): void;

/**
 * Deletes the specified object.
 * @param object - 
 * @returns void
 * @remarks Hash: 0x539E0AE3E6634B9F
 */
export function deleteObject(object: number): void;

/**
 * ## Parameters
 * *
 * @param pickup - 
 * @param duration - 
 * @returns void
 * @remarks Hash: 0x78015C9B4B3ECC9D
 */
export function setPickupRegenerationTime(pickup: number, duration: number): void;

/**
 * ## Parameters
 * *
 * @param doorHash - 
 * @returns number
 * @remarks Hash: 0x4BC2854478F3A749
 */
export function doorSystemGetDoorPendingState(doorHash: number): number;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x006E4B040ED37EC3
 */
export function 0x006e4b040ed37ec3(p0: any): void;

/**
 * ## Parameters
 * *
 * @param object - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x53E0DF1A2A3CF0CA
 */
export function setTeamPickupObject(object: number, p1: any, p2: number): void;

/**
 * ## Parameters
 * *
 * @param doorHash - 
 * @returns number
 * @remarks Hash: 0x160AA1B32F6139B8
 */
export function doorSystemGetDoorState(doorHash: number): number;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x024A60DEB0EA69F0
 */
export function isPlayerEntirelyInsideGarage(): number;

/**
 * ```
 * Has 8 params in the latest patches.  
 * isMission - if true doesn't return mission objects  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param modelHash - 
 * @param isMission - 
 * @param p6 - 
 * @param p7 - 
 * @returns number
 * @remarks Hash: 0xE143FA2249364369
 */
export function getClosestObjectOfType(x: number, y: number, z: number, radius: number, modelHash: number, isMission: number, p6: number, p7: number): number;

/**
 * ## Parameters
 * *
 * @param objectHash - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param range - 
 * @returns number
 * @remarks Hash: 0x8C90FE4B381BA60A
 */
export function isObjectNearPoint(objectHash: number, x: number, y: number, z: number, range: number): number;

/**
 * ```
 * CLEAR_*
 * ```
 * @returns void
 * @remarks Hash: 0xA2C1F5E92AFE49ED
 */
export function 0xa2c1f5e92afe49ed(): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xD05A3241B9A86F19
 */
export function 0xd05a3241b9a86f19(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param modelHash - 
 * @param outPosition - 
 * @param outRotation - 
 * @param rotationOrder - 
 * @returns any
 * @remarks Hash: 0x163F8B586BC95F2A
 */
export function getCoordsAndRotationOfClosestObjectOfType(x: number, y: number, z: number, radius: number, modelHash: number, outPosition: { x: number, y: number, z: number }, outRotation: { x: number, y: number, z: number }, rotationOrder: number): any;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x6E16BC2503FF1FF0
 */
export function getSafePickupCoords(x: number, y: number, z: number): { x: number, y: number, z: number };

/**
 * Includes networking check: ownership vs. or the door itself
 * @param doorHash - 
 * @param removed - 
 * @param requestDoor - 
 * @param forceUpdate - 
 * @returns void
 * @remarks Hash: 0xC485E07E4F0B7958
 */
export function doorSystemSetSpringRemoved(doorHash: number, removed: number, requestDoor: number, forceUpdate: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param weapon - 
 * @returns number
 * @remarks Hash: 0xD6429A016084F1A5
 */
export function GetPickupHashFromWeapon(weapon: number): number;

/**
 * ```
 * Overrides the climbing/blocking flags of the object, used in the native scripts mostly for "prop_dock_bouy_*"
 * ```
 * @param object - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x4D89D607CB3DD1D2
 */
export function setObjectAllowLowLodBuoyancy(object: number, toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0x66A49D021870FE88
 */
export function 0x66a49d021870fe88(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x3ED2B83AB2E82799
 */
export function SetPickupHiddenWhenUncollectable(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param object - 
 * @returns number
 * @remarks Hash: 0xE84EB93729C5F36A
 */
export function GetObjectTextureVariation(object: number): number;

/**
 * ## Parameters
 * *
 * @param object - 
 * @returns number
 * @remarks Hash: 0x58A850EAEE20FAA3
 */
export function placeObjectOnGroundProperly(object: number): number;

/**
 * ```
 * Returns true if the object has finished moving.  
 * If false, moves the object towards the specified X, Y and Z coordinates with the specified X, Y and Z speed.  
 * See also: https://gtagmodding.com/opcode-database/opcode/034E/
 * Has to be looped until it returns true.   
 * ```
 * @param object - 
 * @param toX - 
 * @param toY - 
 * @param toZ - 
 * @param speedX - 
 * @param speedY - 
 * @param speedZ - 
 * @param collision - 
 * @returns number
 * @remarks Hash: 0x2FDFF4107B8C1147
 */
export function slideObject(object: number, toX: number, toY: number, toZ: number, speedX: number, speedY: number, speedZ: number, collision: number): number;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param entity - 
 * @param toggle - 
 * @param p2 - 
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xB20834A7DD3D8896
 */
export function SetEnableArenaPropPhysicsOnPed(entity: number, toggle: number, p2: number, ped: number): void;

/**
 * ## Parameters
 * *
 * @param pickupObject - 
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x8DC39368BDD57755
 */
export function attachPortablePickupToPed(pickupObject: number, ped: number): void;

/**
 * ## Parameters
 * *
 * @param pickup - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x867458251D47CCB2
 */
export function hidePortablePickupWhenDetached(pickup: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x673ED815D6E323B7
 */
export function isAnyEntityEntirelyInsideGarage(): number;

/**
 * ## Parameters
 * *
 * @param object - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC6033D32241F6FB5
 */
export function 0xc6033d32241f6fb5(object: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x758A5C1B3B1E1990
 */
export function ForcePickupRegenerate(p0: any): void;

/**
 * ## Parameters
 * *
 * @param pickup - 
 * @returns number
 * @remarks Hash: 0xAFC1CA75AD4074D1
 */
export function doesPickupExist(pickup: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x0596843B34B95CE5
 */
export function 0x0596843b34b95ce5(p0: any, p1: any): void;

/**
 * Some property related to gates. Native name between ``DOOR_SYSTEM_SET_AUTOMATIC_RATE`` and ``DOOR_SYSTEM_SET_DOOR_STATE``.
 * @param doorHash - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xA85A21582451E951
 */
export function 0xa85a21582451e951(doorHash: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param object - 
 * @param duration - 
 * @returns void
 * @remarks Hash: 0xDF6CA0330F2E737B
 */
export function SetObjectStuntPropDuration(object: number, duration: number): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x372EF6699146A1E4
 */
export function isObjectEntirelyInsideGarage(): number;

/**
 * ```
 * Clears all areas created by 0xD4A7A435B3710D05
 * 
 * CLEAR_*
 * 
 * NativeDB Introduced: v1290
 * ```
 * @returns void
 * @remarks Hash: 0xB7C6D80FB371659A
 */
export function 0xb7c6d80fb371659a(): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x27F248C3FEBFAAD3
 */
export function 0x27f248c3febfaad3(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x31F924B53EADDF65
 */
export function 0x31f924b53eaddf65(p0: number): void;

/**
 * ```
 * is this like setting is as no longer needed?  
 * ```
 * @param object - 
 * @returns void
 * @remarks Hash: 0xADBE4809F19F927A
 */
export function MarkObjectForDeletion(object: number): void;

/**
 * ## Parameters
 * *
 * @param doorHash - 
 * @returns number
 * @remarks Hash: 0x65499865FCA6E5EC
 */
export function doorSystemGetOpenRatio(doorHash: number): number;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x1761DC5D8471CBAA
 */
export function isPlayerPartiallyInsideGarage(): number;

/**
 * See [`SET_STATE_OF_RAYFIRE_MAP_OBJECT`](#_0x5C29F698D404C5E1) to see the different states
 * 
 * Get a destructible object's state. Substract 1 to get the real state. For example, if the object just spawned (state 2), the native will return 3.
 * @param object - 
 * @returns number
 * @remarks Hash: 0x899BA936634A322E
 */
export function getStateOfRayfireMapObject(object: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x1C1B69FAE509BA97
 */
export function SetPickupUncollectable(p0: any, p1: any): void;

/**
 * ```
 * locked is 0 if no door is found  
 * locked is 0 if door is unlocked  
 * locked is 1 if door is found and unlocked.
 * @param type - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param locked - 
 * @param heading - 
 * @returns void
 * @remarks Hash: 0xEDC1A5B84AEF33FF
 */
export function getStateOfClosestDoorOfType(type: number, x: number, y: number, z: number, locked: number, heading: number): void;

/**
 * Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
 * @param pickupHash - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param placeOnGround - 
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x2EAF1FDB2FB55698
 */
export function createPortablePickup(pickupHash: number, x: number, y: number, z: number, placeOnGround: number, modelHash: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x1E3F1B1B891A2AAA
 */
export function 0x1e3f1b1b891a2aaa(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x85B6C850546FDDE2
 */
export function areEntitiesEntirelyInsideGarage(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x858EC9FD25DE04AA
 */
export function 0x858ec9fd25de04aa(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param object - 
 * @param targettable - 
 * @returns void
 * @remarks Hash: 0x8A7391690F5AFD81
 */
export function setObjectTargettable(object: number, targettable: number): void;

/**
 * ## Parameters
 * *
 * @param pickup - 
 * @returns number
 * @remarks Hash: 0x5099BC55630B25AE
 */
export function getPickupObject(pickup: number): number;

/**
 * ## Parameters
 * *
 * @param pickup - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x225B8B35C88029B3
 */
export function getPickupCoords(pickup: number): { x: number, y: number, z: number };

/**
 * ```
 * Example:
 * OBJECT::GET_RAYFIRE_MAP_OBJECT(-809.9619750976562, 170.919, 75.7406997680664, 3.0, "des_tvsmash");
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param name - 
 * @returns number
 * @remarks Hash: 0xB48FCED898292E52
 */
export function getRayfireMapObject(x: number, y: number, z: number, radius: number, name: string): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xF92099527DB8E2A7
 */
export function 0xf92099527db8e2a7(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x47EFA040EBB8E2EA
 */
export function waypointPlaybackStopAimingOrShooting(p0: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xA320EF046186FA3B
 */
export function isMountedWeaponTaskUnderneathDrivingTask(ped: number): number;

/**
 * See [`FORCE_PED_MOTION_STATE`](#_0xF28965D04F570DCA)
 * @param ped - 
 * @param state - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x4F056E1AFFEF17AB
 */
export function taskForceMotionState(ped: number, state: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param pilot - 
 * @param heli1 - 
 * @param heli2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0xB385523325077210
 */
export function TaskHeliEscortHeli(pilot: number, heli1: number, heli2: number, p3: number, p4: number, p5: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x701375A7D43F01CB
 */
export function waypointPlaybackGetIsPaused(p0: any): number;

/**
 * ```
 *  TASK::TASK_SYNCHRONIZED_SCENE(ped, scene, "creatures@rottweiler@in_vehicle@std_car", "get_in", 1000.0, -8.0, 4, 0, 0x447a0000, 0);
 * ```
 * @param ped - 
 * @param scene - 
 * @param animDictionary - 
 * @param animationName - 
 * @param speed - 
 * @param speedMultiplier - 
 * @param duration - 
 * @param flag - 
 * @param playbackRate - 
 * @param p9 - 
 * @returns void
 * @remarks Hash: 0xEEA929141F699854
 */
export function taskSynchronizedScene(ped: number, scene: number, animDictionary: string, animationName: string, speed: number, speedMultiplier: number, duration: number, flag: number, playbackRate: number, p9: any): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xF1B9F16E89E2C93A
 */
export function setNextDesiredMoveState(p0: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xB6C987F9285A3814
 */
export function taskClimbLadder(ped: number, p1: number): void;

/**
 * ```
 * Makes the specified ped shuffle to the next vehicle seat.  
 * The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * @param ped - 
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x7AA80209BDA643EB
 */
export function taskShuffleToNextVehicleSeat(ped: number, vehicle: number): void;

/**
 * ```
 * Occurrences in the b617d scripts:
 * "ARMY_GUARD",
 * "ARMY_HELI",
 * "Cinema_Downtown",
 * "Cinema_Morningwood",
 * "Cinema_Textile",
 * "City_Banks",
 * "Countryside_Banks",
 * "DEALERSHIP",
 * "GRAPESEED_PLANES",
 * "KORTZ_SECURITY",
 * "LOST_BIKERS",
 * "LSA_Planes",
 * "LSA_Planes",
 * "MP_POLICE",
 * "Observatory_Bikers",
 * "POLICE_POUND1",
 * "POLICE_POUND2",
 * "POLICE_POUND3",
 * "POLICE_POUND4",
 * "POLICE_POUND5"
 * "QUARRY",
 * "SANDY_PLANES",
 * "SCRAP_SECURITY",
 * "SEW_MACHINE",
 * "SOLOMON_GATE",
 * "Triathlon_1_Start",
 * "Triathlon_2_Start",
 * "Triathlon_3_Start"
 * Sometimes used with IS_SCENARIO_GROUP_ENABLED:
 * if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") && (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {
 * else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {
 * ```
 * @param scenarioGroup - 
 * @returns number
 * @remarks Hash: 0xF9034C136C9E00D3
 */
export function doesScenarioGroupExist(scenarioGroup: string): number;

/**
 * ```
 * Birds will try to reach the given height.  
 * ```
 * @param height - 
 * @returns void
 * @remarks Hash: 0x6C6B148586F934F7
 */
export function setGlobalMinBirdFlightHeight(height: number): void;

/**
 * ```
 * From re_prisonvanbreak:
 * TASK::TASK_GUARD_CURRENT_POSITION(l_DD, 35.0, 35.0, 1);
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x4A58A47A72E3FCB4
 */
export function taskGuardCurrentPosition(p0: number, p1: number, p2: number, p3: number): void;

/**
 * All parameters except ped, vehicle, x, y, z and speed are optional; with `missionType` being only those that don't require a target entity.
 * 
 * If you don't want to use a parameter; pass `0` for int parameters, and `-1.0f` for the remaining float parameters.
 * @param ped - 
 * @param vehicle - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param missionType - 
 * @param speed - 
 * @param drivingStyle - 
 * @param radius - 
 * @param straightLineDist - 
 * @param DriveAgainstTraffic - 
 * @returns void
 * @remarks Hash: 0xF0AF20AA7731F8C3
 */
export function taskVehicleMissionCoorsTarget(ped: number, vehicle: number, x: number, y: number, z: number, missionType: number, speed: number, drivingStyle: number, radius: number, straightLineDist: number, DriveAgainstTraffic: number): void;

/**
 * ```
 * Actually has 3 params, not 2.  
 * p0: Ped  
 * p1: int (or bool?)  
 * p2: int  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xBD2A8EC3AF4DE7DB
 */
export function taskUseMobilePhone(ped: number, p1: number): void;

/**
 * ```
 * For a full list of the points, see here: goo.gl/wIH0vn
 * ```
 * @param name - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param point - 
 * @returns number
 * @remarks Hash: 0xB629A298081F876F
 */
export function waypointRecordingGetClosestWaypoint(name: string, x: number, y: number, z: number, point: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x0759591819534F7B
 */
export function taskFollowWaypointRecording(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param ped - 
 * @param signalName - 
 * @returns number
 * @remarks Hash: 0x44AB0B3AFECCE242
 */
export function GetTaskMoveNetworkSignalFloat(ped: number, signalName: string): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x207F1A47C0342F48
 */
export function setAnimWeight(p0: any, p1: number, p2: any, p3: any, p4: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xA5B769058763E497
 */
export function getWaypointDistanceAlongRoute(p0: string, p1: number): number;

/**
 * Clears the current point route. Call this before [TASK_EXTEND_ROUTE](#_0x1E7889778264843A) and [TASK_FOLLOW_POINT_ROUTE](#_0x595583281858626E).
 * @returns void
 * @remarks Hash: 0x841142A1376E9006
 */
export function taskFlushRoute(): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x176CECF6F920D707
 */
export function clearPedSecondaryTask(ped: number): void;

/**
 * ```
 * The ped will walk or run towards goToLocation, aiming towards goToLocation or focusLocation (depending on the aimingFlag) and shooting if shootAtEnemies = true to any enemy in his path.
 * If the ped is closer than noRoadsDistance, the ped will ignore pathing/navmesh and go towards goToLocation directly. This could cause the ped to get stuck behind tall walls if the goToLocation is on the other side. To avoid this, use 0.0f and the ped will always use pathing/navmesh to reach his destination.
 * If the speed is set to 0.0f, the ped will just stand there while aiming, if set to 1.0f he will walk while aiming, 2.0f will run while aiming.
 * The ped will stop aiming when he is closer than distanceToStopAt to goToLocation.
 * I still can't figure out what unkTrue is used for. I don't notice any difference if I set it to false but in the decompiled scripts is always true.
 * I think that unkFlag, like the driving styles, could be a flag that "work as a list of 32 bits converted to a decimal integer. Each bit acts as a flag, and enables or disables a function". What leads me to this conclusion is the fact that in the decompiled scripts, unkFlag takes values like: 0, 1, 5 (101 in binary) and 4097 (4096 + 1 or 1000000000001 in binary). For now, I don't know what behavior enable or disable this possible flag so I leave it at 0.
 * Note: After some testing, using unkFlag = 16 (0x10) enables the use of sidewalks while moving towards goToLocation.
 * The aimingFlag takes 2 values: 0 to aim at the focusLocation, 1 to aim at where the ped is heading (goToLocation).
 * Example:
 * enum AimFlag
 * {
 *    AimAtFocusLocation,
 *    AimAtGoToLocation
 * };
 * Vector3 goToLocation1 = { 996.2867f, 0, -2143.044f, 0, 28.4763f, 0 }; // remember the padding.
 * Vector3 goToLocation2 = { 990.2867f, 0, -2140.044f, 0, 28.4763f, 0 }; // remember the padding.
 * Vector3 focusLocation = { 994.3478f, 0, -2136.118f, 0, 29.2463f, 0 }; // the coord z should be a little higher, around +1.0f to avoid aiming at the ground
 * // 1st example
 * TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation1.x, goToLocation1.y, goToLocation1.z, focusLocation.x, focusLocation.y, focusLocation.z, 2.0f /*run*/, true /*shoot*/, 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimFlag::AimAtGoToLocation, -957453492 /*FullAuto pattern*/);
 * // 2nd example
 * TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation2.x, goToLocation2.y, goToLocation2.z, focusLocation.x, focusLocation.y, focusLocation.z, 1.0f /*walk*/, false /*don't shoot*/, 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimFlag::AimAtFocusLocation, -957453492 /*FullAuto pattern*/);
 * 1st example: The ped (pedhandle) will run towards goToLocation1. While running and aiming towards goToLocation1, the ped will shoot on sight to any enemy in his path, using "FullAuto" firing pattern. The ped will stop once he is closer than distanceToStopAt to goToLocation1.
 * 2nd example: The ped will walk towards goToLocation2. This time, while walking towards goToLocation2 and aiming at focusLocation, the ped will point his weapon on sight to any enemy in his path without shooting. The ped will stop once he is closer than distanceToStopAt to goToLocation2.
 * ```
 * @param pedHandle - 
 * @param goToLocationX - 
 * @param goToLocationY - 
 * @param goToLocationZ - 
 * @param focusLocationX - 
 * @param focusLocationY - 
 * @param focusLocationZ - 
 * @param speed - 
 * @param shootAtEnemies - 
 * @param distanceToStopAt - 
 * @param noRoadsDistance - 
 * @param unkTrue - 
 * @param unkFlag - 
 * @param aimingFlag - 
 * @param firingPattern - 
 * @returns void
 * @remarks Hash: 0xA55547801EB331FC
 */
export function taskGoToCoordAndAimAtHatedEntitiesNearCoord(pedHandle: number, goToLocationX: number, goToLocationY: number, goToLocationZ: number, focusLocationX: number, focusLocationY: number, focusLocationZ: number, speed: number, shootAtEnemies: number, distanceToStopAt: number, noRoadsDistance: number, unkTrue: number, unkFlag: number, aimingFlag: number, firingPattern: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns string
 * @remarks Hash: 0x717E4D1F2048376D
 */
export function getTaskMoveNetworkState(ped: number): string;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x404A5AA9B9F0B746
 */
export function setDriveTaskMaxCruiseSpeed(p0: any, p1: number): void;

/**
 * ```
 * Makes a ped run away from another ped (fleeTarget).  
 * distance = ped will flee this distance.  
 * fleeTime = ped will flee for this amount of time, set to "-1" to flee forever  
 * ```
 * @param ped - 
 * @param fleeTarget - 
 * @param distance - 
 * @param fleeTime - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x22B0D0E37CCB840D
 */
export function taskSmartFleePed(ped: number, fleeTarget: number, distance: number, fleeTime: any, p4: number, p5: number): void;

/**
 * ```
 * NativeDB Added Parameter 14: Any p13
 * ```
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param speed - 
 * @param p5 - 
 * @param p6 - 
 * @param walkingStyle - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @param p11 - 
 * @param p12 - 
 * @returns void
 * @remarks Hash: 0xB8ECD61F531A7B02
 */
export function taskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(ped: number, x: number, y: number, z: number, speed: number, p5: any, p6: number, walkingStyle: number, p8: number, p9: any, p10: any, p11: any, p12: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x057A25CFCC9DB671
 */
export function waypointPlaybackStartShootingAtCoord(p0: any, p1: number, p2: number, p3: number, p4: number, p5: any): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xF5134943EA29868C
 */
export function isWaypointPlaybackGoingOnForVehicle(vehicle: number): number;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param ped - 
 * @param animDict - 
 * @param animName - 
 * @returns void
 * @remarks Hash: 0x748040460F8DF5DC
 */
export function playAnimOnRunningScenario(ped: number, animDict: string, animName: string): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param b - 
 * @returns number
 * @remarks Hash: 0x5A59271FFADD33C1
 */
export function doesScenarioExistInArea(x: number, y: number, z: number, radius: number, b: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param mayEnterWater - 
 * @returns void
 * @remarks Hash: 0xF35425A4204367EC
 */
export function setPedPathMayEnterWater(ped: number, mayEnterWater: number): void;

/**
 * ```
 * speed 1.0 = walk, 2.0 = run  
 * p5 1 = normal, 3 = teleport to vehicle, 8 = normal/carjack ped from seat, 16 = teleport directly into vehicle  
 * p6 is always 0  
 * ```
 * @param ped - 
 * @param vehicle - 
 * @param timeout - 
 * @param seatIndex - 
 * @param speed - 
 * @param flag - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0xC20E50AA46D09CA8
 */
export function taskEnterVehicle(ped: number, vehicle: number, timeout: number, seatIndex: number, speed: number, flag: number, p6: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xBB106883F5201FC4
 */
export function updateTaskSweepAimPosition(p0: any, p1: number, p2: number, p3: number): void;

/**
 * ```
 * For a full list of the points, see here: goo.gl/wIH0vn
 * ```
 * @param name - 
 * @param points - 
 * @returns number
 * @remarks Hash: 0x5343532C01A07234
 */
export function waypointRecordingGetNumPoints(name: string, points: number): number;

/**
 * ## Parameters
 * *
 * @param route - 
 * @returns void
 * @remarks Hash: 0x3548536485DD792B
 */
export function assistedMovementRemoveRoute(route: string): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x9D252648778160DF
 */
export function 0x9d252648778160df(p0: any): any;

/**
 * Gives the plane a mission (purpose or objective), the mission is passed onto the `iMissionIndex` parameter.
 * 
 * ```c
 * enum eVehicleMission {
 *     MISSION_NONE = 0,
 *     MISSION_CRUISE, // 1
 *     MISSION_RAM, // 2
 *     MISSION_BLOCK, // 3
 *     MISSION_GOTO, // 4
 *     MISSION_STOP, // 5
 *     MISSION_ATTACK, // 6
 *     MISSION_FOLLOW, // 7
 *     MISSION_FLEE, // 8
 *     MISSION_CIRCLE, // 9
 *     MISSION_ESCORT_LEFT, // 10
 *     MISSION_ESCORT_RIGHT, // 11
 *     MISSION_ESCORT_REAR, // 12
 *     MISSION_ESCORT_FRONT, // 13
 *     MISSION_GOTO_RACING, // 14
 *     MISSION_FOLLOW_RECORDING, // 15
 *     MISSION_POLICE_BEHAVIOUR, // 16
 *     MISSION_PARK_PERPENDICULAR, // 17
 *     MISSION_PARK_PARALLEL, // 18
 *     MISSION_LAND, // 19
 *     MISSION_LAND_AND_WAIT, // 20
 *     MISSION_CRASH, // 21
 *     MISSION_PULL_OVER, // 22
 *     MISSION_PROTECT // 23
 * };
 * ```
 * @param ped - 
 * @param vehicle - 
 * @param targetVehicle - 
 * @param targetPed - 
 * @param fTargetCoordX - 
 * @param fTargetCoordY - 
 * @param fTargetCoordZ - 
 * @param iMissionIndex - 
 * @param fCruiseSpeed - 
 * @param fTargetReachedDist - 
 * @param fOrientation - 
 * @returns void
 * @remarks Hash: 0x23703CD154E83B88
 */
export function taskPlaneMission(ped: number, vehicle: number, targetVehicle: number, targetPed: number, fTargetCoordX: number, fTargetCoordY: number, fTargetCoordZ: number, iMissionIndex: number, fCruiseSpeed: number, fTargetReachedDist: number, fOrientation: number): void;

/**
 * @returns void
 * @remarks Hash: 0x0D40EE2A7F2B2D6D
 */
export function resetScenarioTypesEnabled(): void;

/**
 * ```
 * Occurrences in the b617d scripts: pastebin.com/Tvg2PRHU  
 * ```
 * @param scenarioGroup - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x02C8E5B49848664E
 */
export function setScenarioGroupEnabled(scenarioGroup: string, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x7D7D2B47FA788E85
 */
export function waypointPlaybackOverrideSpeed(p0: any, p1: number, p2: number): void;

/**
 * ```
 * Occurrences in the b617d scripts:
 * "PROP_HUMAN_SEAT_CHAIR",
 * "WORLD_HUMAN_DRINKING",
 * "WORLD_HUMAN_HANG_OUT_STREET",
 * "WORLD_HUMAN_SMOKING",
 * "WORLD_MOUNTAIN_LION_WANDER",
 * "WORLD_HUMAN_DRINKING"
 * Sometimes used together with MISC::IS_STRING_NULL_OR_EMPTY in the scripts.
 * scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.
 * ```
 * @param scenarioType - 
 * @returns number
 * @remarks Hash: 0x3A815DB3EA088722
 */
export function isScenarioTypeEnabled(scenarioType: string): number;

/**
 * ```
 * Note: Look in decompiled scripts and the times that p1 and p2 aren't 0. They are filled with vars. If you look through out that script what other natives those vars are used in, you can tell p1 is a ped and p2 is a vehicle. Which most likely means if you want the mounted weapon to target a ped set targetVehicle to 0 or vice-versa.  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 7: Any p6
 * NativeDB Added Parameter 8: Any p7
 * ```
 * @param shootingPed - 
 * @param targetPed - 
 * @param targetVehicle - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xCCD892192C6D2BB9
 */
export function setMountedWeaponTarget(shootingPed: number, targetPed: number, targetVehicle: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x5CEB25A7D2848963
 */
export function vehicleWaypointPlaybackUseDefaultSpeed(vehicle: number): void;

/**
 * ```
 *  Occurrences in the b617d scripts:
 *  "ARMY_GUARD",
 *  "ARMY_HELI",
 *  "BLIMP",
 *  "Cinema_Downtown",
 *  "Cinema_Morningwood",
 *  "Cinema_Textile",
 *  "City_Banks",
 *  "Countryside_Banks",
 *  "DEALERSHIP",
 *  "KORTZ_SECURITY",
 *  "LSA_Planes",
 *  "MP_POLICE",
 *  "Observatory_Bikers",
 *  "POLICE_POUND1",
 *  "POLICE_POUND2",
 *  "POLICE_POUND3",
 *  "POLICE_POUND4",
 *  "POLICE_POUND5",
 *  "Rampage1",
 *  "SANDY_PLANES",
 *  "SCRAP_SECURITY",
 *  "SEW_MACHINE",
 *  "SOLOMON_GATE"
 * Sometimes used with DOES_SCENARIO_GROUP_EXIST:
 * if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") &&   (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {
 * else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {
 * ```
 * @param scenarioGroup - 
 * @returns number
 * @remarks Hash: 0x367A09DED4E05B99
 */
export function isScenarioGroupEnabled(scenarioGroup: string): number;

/**
 * This native checks if a ped is on the ground, in pain from a (gunshot) wound.
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xDEB6D52126E7D640
 */
export function isPedInWrithe(ped: number): number;

/**
 * Adds a new point to the current point route; a maximum of 8 points can be added.
 * 
 * Call [TASK_FLUSH_ROUTE](#_0x841142A1376E9006) before the first call to this. Call [TASK_FOLLOW_POINT_ROUTE](#_0x595583281858626E) to make the Ped go the route.
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x1E7889778264843A
 */
export function taskExtendRoute(x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x2720AAA75001E094
 */
export function getPedWaypointProgress(ped: number): number;

/**
 * ```
 * CLEAR_*
 * 
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xDBBC7A2432524127
 */
export function ClearVehicleTasks(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x57E457CD2C0FC168
 */
export function isPedSprinting(ped: number): number;

/**
 * @returns void
 * @remarks Hash: 0xAF8A443CCC8018DC
 */
export function createPatrolRoute(): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param duration - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x75AC2B60386D89F2
 */
export function taskSeekCoverFromPos(ped: number, x: number, y: number, z: number, duration: number, p5: number): void;

/**
 * ```
 * //this part of the code is to determine at which entity the player is aiming, for example if you want to create a mod where you give orders to peds
 * Entity aimedentity;
 * Player player = PLAYER::PLAYER_ID();
 * PLAYER::_GET_AIMED_ENTITY(player, &aimedentity);
 * //bg is an array of peds
 * TASK::TASK_SHOOT_AT_ENTITY(bg[i], aimedentity, 5000, MISC::GET_HASH_KEY("FIRING_PATTERN_FULL_AUTO"));
 * in practical usage, getting the entity the player is aiming at and then task the peds to shoot at the entity, at a button press event would be better.
 * Firing Pattern Hash Information: https://pastebin.com/Px036isB
 * ```
 * @param entity - 
 * @param target - 
 * @param duration - 
 * @param firingPattern - 
 * @returns void
 * @remarks Hash: 0x08DA95E8298AE772
 */
export function taskShootAtEntity(entity: number, target: number, duration: number, firingPattern: number): void;

/**
 * Drive randomly with no destination set.
 * @param ped - 
 * @param vehicle - 
 * @param speed - 
 * @param drivingStyle - 
 * @returns void
 * @remarks Hash: 0x480142959D337D00
 */
export function taskVehicleDriveWander(ped: number, vehicle: number, speed: number, drivingStyle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @returns void
 * @remarks Hash: 0x1F351CF1C6475734
 */
export function 0x1f351cf1c6475734(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;

/**
 * ```
 * info about driving modes: HTTP://gtaforums.com/topic/822314-guide-driving-styles/
 * @param ped - 
 * @param vehicle - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param speed - 
 * @param p6 - 
 * @param vehicleModel - 
 * @param drivingMode - 
 * @param stopRange - 
 * @param p10 - 
 * @returns void
 * @remarks Hash: 0xE2A2AA2F659D77A7
 */
export function taskVehicleDriveToCoord(ped: number, vehicle: number, x: number, y: number, z: number, speed: number, p6: any, vehicleModel: number, drivingMode: number, stopRange: number, p10: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x3DC52677769B4AE0
 */
export function isPedRunningArrestTask(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param taskIndex - 
 * @param progress1 - 
 * @param progress2 - 
 * @returns void
 * @remarks Hash: 0x89221B16730234F0
 */
export function taskPerformSequenceFromProgress(ped: number, taskIndex: number, progress1: number, progress2: number): void;

/**
 * Makes the ped go on a point route.
 * 
 * ```c
 * enum eFollowPointRouteMode {
 * 	TICKET_SINGLE = 0,
 * 	TICKET_RETURN = 1,
 * 	TICKET_SEASON = 2,
 * 	TICKET_LOOP = 3
 * }
 * ```
 * 
 * This native is often times used with [`TASK_FLUSH_ROUTE`](#_0x841142A1376E9006) and [`TASK_EXTEND_ROUTE`](#_0x1E7889778264843A)
 * @param ped - 
 * @param speed - 
 * @param routeMode - 
 * @returns void
 * @remarks Hash: 0x595583281858626E
 */
export function taskFollowPointRoute(ped: number, speed: number, routeMode: number): void;

/**
 * ## Parameters
 * *
 * @param name - 
 * @returns number
 * @remarks Hash: 0xCB4E8BE8A0063C5D
 */
export function getIsWaypointRecordingLoaded(name: string): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param scriptTask - 
 * @param bDisableBlockingClip - 
 * @param bInstantBlendToAim - 
 * @returns void
 * @remarks Hash: 0x7A192BE16D373D00
 */
export function taskAimGunScripted(ped: number, scriptTask: number, bDisableBlockingClip: number, bInstantBlendToAim: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x5190796ED39C9B6D
 */
export function taskVehicleShootAtCoord(ped: number, x: number, y: number, z: number, p4: number): void;

/**
 * ```
 * Checks if there is a cover point at position  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns number
 * @remarks Hash: 0xA98B8E3C088E5A31
 */
export function doesScriptedCoverPointExistAtCoords(x: number, y: number, z: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x447C1E9EF844BC0F
 */
export function taskVehicleAimAtCoord(ped: number, x: number, y: number, z: number): void;

/**
 * ```
 * x, y, z: offset in world coords from some entity.  
 * ```
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x5CF0D8F9BBA0DD75
 */
export function addVehicleSubtaskAttackCoord(ped: number, x: number, y: number, z: number): void;

/**
 * Instructs the ped to go to the entity with the given offset.
 * 
 * ```c
 * enum eSeekEntityOffsetFlags {
 *     ESEEK_OFFSET_ORIENTATES_WITH_ENTITY = 1,
 *     ESEEK_KEEP_TO_PAVEMENTS = 2
 * };
 * ```
 * @param ped - 
 * @param entity - 
 * @param duration - 
 * @param seekRadius - 
 * @param seekAngleDeg - 
 * @param moveBlendRatio - 
 * @param gotoEntityOffsetFlags - 
 * @returns void
 * @remarks Hash: 0xE39B4FF4FDEBDE27
 */
export function taskGotoEntityOffset(ped: number, entity: number, duration: number, seekRadius: number, seekAngleDeg: number, moveBlendRatio: number, gotoEntityOffsetFlags: number): void;

/**
 * Prevents a ped from playing ambient idle animations.
 * @param ped - 
 * @param bBlockIdleClips - 
 * @param bRemoveIdleClipIfPlaying - 
 * @returns void
 * @remarks Hash: 0x8FD89A6240813FD0
 */
export function setPedCanPlayAmbientIdles(ped: number, bBlockIdleClips: number, bRemoveIdleClipIfPlaying: number): void;

/**
 * This tasks the ped to do nothing for the specified amount of miliseconds.
 * This is useful if you want to add a delay between tasks when using a sequence task.
 * @param ped - 
 * @param ms - 
 * @returns void
 * @remarks Hash: 0xE73A266DB0CA9042
 */
export function taskPause(ped: number, ms: number): void;

/**
 * ```
 * Modes:  
 * 0 - ignore heading  
 * 1 - park forward  
 * 2 - park backwards  
 * Depending on the angle of approach, the vehicle can park at the specified heading or at its exact opposite (-180) angle.  
 * Radius seems to define how close the vehicle has to be -after parking- to the position for this task considered completed. If the value is too small, the vehicle will try to park again until it's exactly where it should be. 20.0 Works well but lower values don't, like the radius is measured in centimeters or something.  
 * ```
 * @param ped - 
 * @param vehicle - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param heading - 
 * @param mode - 
 * @param radius - 
 * @param keepEngineOn - 
 * @returns void
 * @remarks Hash: 0x0F3E34E968EA374E
 */
export function taskVehiclePark(ped: number, vehicle: number, x: number, y: number, z: number, heading: number, mode: number, radius: number, keepEngineOn: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x77A1EEC547E7FCF1
 */
export function playEntityScriptedAnim(p0: any, p1: any, p2: any, p3: any, p4: number, p5: number): void;

/**
 * ```
 * Makes ped walk around the area.  
 * set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.  
 * ```
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xBB9CE077274F6A1B
 */
export function taskWanderStandard(ped: number, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xD4D8636C0199A939
 */
export function isMoveBlendRatioRunning(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param target - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x10AB107B887214D8
 */
export function taskVehicleShootAtPed(ped: number, target: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param dist - 
 * @returns void
 * @remarks Hash: 0x13945951E16EF912
 */
export function assistedMovementOverrideLoadDistanceThisFrame(dist: number): void;

/**
 * ```
 * Example:
 * TASK::TASK_MOVE_NETWORK_ADVANCED_BY_NAME(PLAYER::PLAYER_PED_ID(), "minigame_tattoo_michael_parts", 324.13f, 181.29f, 102.6f, 0.0f, 0.0f, 22.32f, 2, 0, false, 0, 0);
 * ```
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @param animDict - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0xD5B35BEA41919ACB
 */
export function taskMoveNetworkAdvancedByName(ped: number, p1: string, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: any, p9: number, p10: number, animDict: string, flags: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x20E330937C399D29
 */
export function waypointPlaybackStartAimingAtPed(p0: any, p1: any, p2: number): void;

/**
 * ## Parameters
 * *
 * @param route - 
 * @param props - 
 * @returns void
 * @remarks Hash: 0xD5002D78B7162E1B
 */
export function assistedMovementSetRouteProperties(route: string, props: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x70033C3CC29A1FF4
 */
export function setAnimLooped(p0: any, p1: number, p2: any, p3: number): void;

/**
 * ```
 * returned values:
 * 0 to 7 = task that's currently in progress, 0 meaning the first one.
 * -1 no task sequence in progress.
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x00A9010CFE1E3533
 */
export function getSequenceProgress(ped: number): number;

/**
 * Sometimes a path may not be able to be found. This could happen because there simply isn't any way to get there, or maybe a bunch of dynamic objects have blocked the way, 
 * or maybe the destination is too far away. In this case the ped will simply stand still.
 * To identify when this has happened, you can use GET_NAVMESH_ROUTE_RESULT. This will help you find situations where peds cannot get to their target.
 * 
 * ```c
 * enum eNavScriptFlags {
 *     // Default flag
 *     ENAV_DEFAULT = 0,
 *     // Will ensure the ped continues to move whilst waiting for the path
 *     // to be found, and will not slow down at the end of their route.
 *     ENAV_NO_STOPPING = 1,
 *     // Performs a slide-to-coord at the end of the task. This requires that the
 *     // accompanying NAVDATA structure has the 'SlideToCoordHeading' member set correctly.
 *     ENAV_ADV_SLIDE_TO_COORD_AND_ACHIEVE_HEADING_AT_END = 2,
 *     // If the navmesh is not loaded in under the target position, then this will
 *     // cause the ped to get as close as is possible on whatever navmesh is loaded.
 *     // The navmesh must still be loaded at the path start.
 *     ENAV_GO_FAR_AS_POSSIBLE_IF_TARGET_NAVMESH_NOT_LOADED = 4,
 *     // Will allow navigation underwater - by default this is not allowed.
 *     ENAV_ALLOW_SWIMMING_UNDERWATER = 8,
 *     // Will only allow navigation on pavements. If the path starts or ends off
 *     // the pavement, the command will fail. Likewise if no pavement-only route
 *     // can be found even although the start and end are on pavement.
 *     ENAV_KEEP_TO_PAVEMENTS = 16,
 *     // Prevents the path from entering water at all.
 *     ENAV_NEVER_ENTER_WATER = 32,
 *     // Disables object-avoidance for this path. The ped may still make minor
 *     // steering adjustments to avoid objects, but will not pathfind around them.
 *     ENAV_DONT_AVOID_OBJECTS = 64,
 *     // Specifies that the navmesh route will only be able to traverse up slopes
 *     // which are under the angle specified, in the MaxSlopeNavigable member of the accompanying NAVDATA structure.
 *     ENAV_ADVANCED_USE_MAX_SLOPE_NAVIGABLE = 128,
 *     // Unused.
 *     ENAV_STOP_EXACTLY = 512,
 *     // The entity will look ahead in its path for a longer distance to make the
 *     // walk/run start go more in the right direction.
 *     ENAV_ACCURATE_WALKRUN_START = 1024,
 *     // Disables ped-avoidance for this path while we move.
 *     ENAV_DONT_AVOID_PEDS = 2048,
 *     // If target pos is inside the boundingbox of an object it will otherwise be pushed out.
 *     ENAV_DONT_ADJUST_TARGET_POSITION = 4096,
 *     // Turns off the default behaviour, which is to stop exactly at the target position.
 *     // Occasionally this can cause footsliding/skating problems.
 *     ENAV_SUPPRESS_EXACT_STOP = 8192,
 *     // Prevents the path-search from finding paths outside of this search distance.
 *     // This can be used to prevent peds from finding long undesired routes.
 *     ENAV_ADVANCED_USE_CLAMP_MAX_SEARCH_DISTANCE = 16384,
 *     // Pulls out the paths from edges at corners for a longer distance, to prevent peds walking into stuff.
 *     ENAV_PULL_FROM_EDGE_EXTRA = 32768
 * };
 * ```
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param moveBlendRatio - 
 * @param time - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0x15D3A79D4E44B913
 */
export function taskFollowNavMeshToCoord(ped: number, x: number, y: number, z: number, moveBlendRatio: number, time: number, radius: number): void;

/**
 * Related to [`_CLEAR_VEHICLE_TASKS`](#_0xDBBC7A2432524127) and requires more research (e.g., _CLEAR_VEHICLE_SECONDARY_TASKS).
 * 
 * ```
 * CLEAR_*
 * 
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x53DDC75BC3AC0A90
 */
export function 0x53ddc75bc3ac0a90(vehicle: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param ped - 
 * @param vehicle - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @returns void
 * @remarks Hash: 0xF7F9DCCA89E7505B
 */
export function TaskPlaneGotoPreciseVtol(ped: number, vehicle: number, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param signalName - 
 * @returns number
 * @remarks Hash: 0xA7FFBA498E4AAF67
 */
export function getTaskMoveNetworkSignalBool(ped: number, signalName: string): number;

/**
 * ```
 * Makes the specified ped achieve the specified heading.  
 * pedHandle: The handle of the ped to assign the task to.  
 * heading: The desired heading.  
 * timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is cancelled, and the ped will stay at the heading it managed to reach in the time.  
 * ```
 * @param ped - 
 * @param heading - 
 * @param timeout - 
 * @returns void
 * @remarks Hash: 0x93B93A37987F1F3D
 */
export function taskAchieveHeading(ped: number, heading: number, timeout: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param speed - 
 * @param timeout - 
 * @param targetHeading - 
 * @param distanceToSlide - 
 * @returns void
 * @remarks Hash: 0xD76B57B44F1E6F8B
 */
export function taskGoStraightToCoord(ped: number, x: number, y: number, z: number, speed: number, timeout: number, targetHeading: number, distanceToSlide: number): void;

/**
 * All parameters except ped, vehicle, vehicleTarget and speed are optional; with `missionType` being only those that require a target entity.
 * 
 * If you don't want to use a parameter; pass `0` for int parameters, and `-1.0f` for the remaining float parameters.
 * 
 * ```c
 * enum eVehicleMissionType
 * {
 *   None = 0,
 *   Cruise = 1,
 *   Ram = 2,
 *   Block = 3,
 *   GoTo = 4,
 *   Stop = 5,
 *   Attack = 6,
 *   Follow = 7,
 *   Flee = 8,
 *   Circle = 9,
 *   Escort = 12,
 *   GoToRacing = 14,
 *   FollowRecording = 15,
 *   PoliceBehaviour = 16,
 *   Land = 19,
 *   LandAndWait = 20,
 *   Crash = 21,
 *   PullOver = 22,
 *   HeliProtect = 23
 * }
 * ```
 * @param ped - 
 * @param vehicle - 
 * @param vehicleTarget - 
 * @param missionType - 
 * @param speed - 
 * @param drivingStyle - 
 * @param radius - 
 * @param straightLineDist - 
 * @param DriveAgainstTraffic - 
 * @returns void
 * @remarks Hash: 0x659427E0EF36BCDE
 */
export function taskVehicleMission(ped: number, vehicle: number, vehicleTarget: number, missionType: number, speed: number, drivingStyle: number, radius: number, straightLineDist: number, DriveAgainstTraffic: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x24A2AD74FA9814E2
 */
export function isMoveBlendRatioSprinting(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param time - 
 * @param bInstantBlendToAim - 
 * @param bPlayAimIntro - 
 * @returns void
 * @remarks Hash: 0x6671F3EEC681BDA1
 */
export function taskAimGunAtCoord(ped: number, x: number, y: number, z: number, time: number, bInstantBlendToAim: number, bPlayAimIntro: number): void;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param ped - 
 * @param animDictionary - 
 * @param animationName - 
 * @param animExitSpeed - 
 * @returns void
 * @remarks Hash: 0x97FF36A1D40EA00A
 */
export function stopAnimTask(ped: number, animDictionary: string, animationName: string, animExitSpeed: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x0F342546AA06FED5
 */
export function waypointPlaybackPause(p0: any, p1: number, p2: number): void;

/**
 * ```
 * param3: duration in ms, use -1 to look forever  
 * param4: using 2048 is fine  
 * param5: using 3 is fine  
 * ```
 * @param ped - 
 * @param lookAt - 
 * @param duration - 
 * @param unknown1 - 
 * @param unknown2 - 
 * @returns void
 * @remarks Hash: 0x69F4BE8C8CC4796C
 */
export function taskLookAtEntity(ped: number, lookAt: number, duration: number, unknown1: number, unknown2: number): void;

/**
 * ```
 * From the b617d scripts:
 * TASK::DELETE_PATROL_ROUTE("miss_merc0");
 * TASK::DELETE_PATROL_ROUTE("miss_merc1");
 * TASK::DELETE_PATROL_ROUTE("miss_merc2");
 * TASK::DELETE_PATROL_ROUTE("miss_dock");
 * ```
 * @param patrolRoute - 
 * @returns void
 * @remarks Hash: 0x7767DD9D65E91319
 */
export function deletePatrolRoute(patrolRoute: string): void;

/**
 * ```
 * Despite its name, it only attacks ONE hated target. The one closest hated target.  
 * p2 seems to be always 0  
 * ```
 * @param ped - 
 * @param radius - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x7BF835BB9E2698C8
 */
export function taskCombatHatedTargetsAroundPed(ped: number, radius: number, p2: number): void;

/**
 * ```
 * p0 - Guessing PedID  
 * p1, p2, p3 - XYZ?  
 * p4 - ???  
 * p5 - Maybe the size of sphere from XYZ?  
 * p6 - ???  
 * p7, p8, p9 - XYZ again?  
 * p10 - Maybe the size of sphere from second XYZ?  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @returns void
 * @remarks Hash: 0xC946FE14BE0EB5E2
 */
export function taskGuardSphereDefensiveArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: any, p7: number, p8: number, p9: number, p10: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x79B258E397854D29
 */
export function taskExitCover(p0: any, p1: any, p2: number, p3: number, p4: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xDC04FCAA7839D492
 */
export function vehicleWaypointPlaybackResume(vehicle: number): void;

/**
 * ```
 * Only appears twice in the scripts.
 * TASK::TASK_RAPPEL_FROM_HELI(PLAYER::PLAYER_PED_ID(), 0x41200000);
 * TASK::TASK_RAPPEL_FROM_HELI(a_0, 0x41200000);
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x09693B0312F91649
 */
export function taskRappelFromHeli(ped: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param avoidWater - 
 * @returns void
 * @remarks Hash: 0x38FE1EC73743793C
 */
export function setPedPathPreferToAvoidWater(ped: number, avoidWater: number): void;

/**
 * Gets the status of a spesifed script-assigned task on the given ped. The return value is always an int between 0-7.  
 * 
 * You can set taskHash to `SCRIPT_TASK_ANY` to check if any task is active, it will return 1 for active, 3 for no active. 
 * `SCRIPT_TASK_INVALID` can be similarly used, it returns 7 if there are any active task, and 3 if there are no active tasks.
 * 
 * taskHash list: https://alloc8or.re/gta5/doc/enums/eScriptTaskHash.txt  
 * 
 * Returns:  
 * ```
 * 0 = WAITING_TO_START_TASK
 * 1 = PERFORMING_TASK
 * 2 = DORMANT_TASK
 * 3 = VACANT_STAGE
 * 7 = TASK_FINISHED_OR_NOT_FOUND
 * ```
 * @param ped - 
 * @param taskHash - 
 * @returns number
 * @remarks Hash: 0x77F1BEB8863288D5
 */
export function getScriptTaskStatus(ped: number, taskHash: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param signalName - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xB0A6CFD2C69C1088
 */
export function setTaskMoveNetworkSignalBool(ped: number, signalName: string, value: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param Toggle - 
 * @returns void
 * @remarks Hash: 0x8E06A6FE76C9EFF4
 */
export function setPedPathCanUseClimbovers(ped: number, Toggle: number): void;

/**
 * Instructs the ped to go to the entity with the given offset.
 * @param ped - 
 * @param entity - 
 * @param duration - 
 * @param targetRadius - 
 * @param offsetX - 
 * @param offsetY - 
 * @param moveBlendRatio - 
 * @returns void
 * @remarks Hash: 0x338E7EF52B6095A9
 */
export function taskGotoEntityOffsetXy(ped: number, entity: number, duration: number, targetRadius: number, offsetX: number, offsetY: number, moveBlendRatio: number): void;

/**
 * Makes a ped wander/patrol around the specified area.
 * 
 * The ped will continue to wander after getting distracted, but only if this additional task is temporary, ie. killing a target, after killing the target it will continue to wander around.
 * 
 * Use `GetIsTaskActive(ped, 222)` to check if the ped is still wandering the area.
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0xE054346CA3A0F315
 */
export function taskWanderInArea(ped: number, x: number, y: number, z: number, radius: number): void;

/**
 * ```
 * * Flag 1: Aggressive ramming of suspect
 * * Flag 2: Ram attempts
 * * Flag 8: Medium-aggressive boxing tactic with a bit of PIT
 * * Flag 16: Ramming, seems to be slightly less aggressive than 1-2.
 * * Flag 32: Stay back from suspect, no tactical contact. Convoy-like.
 * ```
 * @param ped - 
 * @param flag - 
 * @param set - 
 * @returns void
 * @remarks Hash: 0xCC665AAC360D31E7
 */
export function setTaskVehicleChaseBehaviorFlag(ped: number, flag: number, set: number): void;

/**
 * ## Parameters
 * *
 * @param name - 
 * @param point - 
 * @returns number
 * @remarks Hash: 0x005622AEBC33ACA9
 */
export function waypointRecordingGetSpeedAtPoint(name: string, point: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x921CE12C489C4C41
 */
export function isTaskMoveNetworkActive(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xC35B5CDB2824CF69
 */
export function clearDrivebyTaskUnderneathDrivingTask(ped: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x6599D834B12D0800
 */
export function waypointPlaybackUseDefaultSpeed(p0: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param duration - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x8C825BDC7741D37C
 */
export function setHighFallTask(ped: number, duration: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param speed - 
 * @returns void
 * @remarks Hash: 0x121F0593E0A431D7
 */
export function vehicleWaypointPlaybackOverrideSpeed(vehicle: number, speed: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xC5286FFC176F28A2
 */
export function isPedRunning(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x67406F2C8F87FC4F
 */
export function uncuffPed(ped: number): void;

/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xF6DC48E56BE1243A
 */
export function clearPedScriptTaskIfRunningThreatResponseNonTempTask(ped: number): void;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)  
 * 
 * ```c
 * enum eScriptedAnimFlags
 * {
 *     AF_LOOPING = 1,
 *     AF_HOLD_LAST_FRAME = 2,
 *     AF_REPOSITION_WHEN_FINISHED = 4,
 *     AF_NOT_INTERRUPTABLE = 8,
 *     AF_UPPERBODY = 16,
 *     AF_SECONDARY = 32,
 *     AF_REORIENT_WHEN_FINISHED = 64,
 *     AF_ABORT_ON_PED_MOVEMENT = 128,
 *     AF_ADDITIVE = 256,
 *     AF_TURN_OFF_COLLISION = 512,
 *     AF_OVERRIDE_PHYSICS = 1024,
 *     AF_IGNORE_GRAVITY = 2048,
 *     AF_EXTRACT_INITIAL_OFFSET = 4096,
 *     AF_EXIT_AFTER_INTERRUPTED = 8192,
 *     AF_TAG_SYNC_IN = 16384,
 *     AF_TAG_SYNC_OUT = 32768,
 *     AF_TAG_SYNC_CONTINUOUS = 65536,
 *     AF_FORCE_START = 131072,
 *     AF_USE_KINEMATIC_PHYSICS = 262144,
 *     AF_USE_MOVER_EXTRACTION = 524288,
 *     AF_HIDE_WEAPON = 1048576,
 *     AF_ENDS_IN_DEAD_POSE = 2097152,
 *     AF_ACTIVATE_RAGDOLL_ON_COLLISION = 4194304,
 *     AF_DONT_EXIT_ON_DEATH = 8388608,
 *     AF_ABORT_ON_WEAPON_DAMAGE = 16777216,
 *     AF_DISABLE_FORCED_PHYSICS_UPDATE = 33554432,
 *     AF_PROCESS_ATTACHMENTS_ON_START = 67108864,
 *     AF_EXPAND_PED_CAPSULE_FROM_SKELETON = 134217728,
 *     AF_USE_ALTERNATIVE_FP_ANIM = 268435456,
 *     AF_BLENDOUT_WRT_LAST_FRAME = 536870912,
 *     AF_USE_FULL_BLENDING = 1073741824
 * }
 * ```
 * @param ped - 
 * @param animDictionary - 
 * @param animationName - 
 * @param blendInSpeed - 
 * @param blendOutSpeed - 
 * @param duration - 
 * @param flag - 
 * @param playbackRate - 
 * @param lockX - 
 * @param lockY - 
 * @param lockZ - 
 * @returns void
 * @remarks Hash: 0xEA47FE3719165B94
 */
export function taskPlayAnim(ped: number, animDictionary: string, animationName: string, blendInSpeed: number, blendOutSpeed: number, duration: number, flag: number, playbackRate: number, lockX: number, lockY: number, lockZ: number): void;

/**
 * ```
 * Definition is wrong. This has 4 parameters (Not sure when they were added. v350 has 2, v678 has 4).  
 * v350: Ped ped, bool unused  
 * v678: Ped ped, bool unused, bool flag1, bool flag2  
 * flag1 = super jump, flag2 = do nothing if flag1 is false and doubles super jump height if flag1 is true.  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 3: Any p2
 * NativeDB Added Parameter 4: Any p3
 * ```
 * @param ped - 
 * @param unused - 
 * @returns void
 * @remarks Hash: 0x0AE4086104E067B1
 */
export function taskJump(ped: number, unused: number): void;

/**
 * All parameters except ped and boat are optional, with `pedTarget`, `vehicleTarget`, `x`, `y`, `z` being dependent on `missionType` (ie. Attack/Flee mission types require a target ped/vehicle, whereas GoTo mission types require either `x`, `y`, `z` or a target ped/vehicle).
 * 
 * If you don't want to use a parameter; pass `0.0f` for `x`, `y` and `z`, `0` for `pedTarget`, `vehicleTarget` and other int parameters, and `-1.0f` for the remaining float parameters.
 * 
 * ```c
 * enum eBoatMissionFlags
 * {
 *   None = 0,
 *   StopAtEnd = 1,
 *   StopAtShore = 2,
 *   AvoidShore = 4,
 *   PreferForward = 8,
 *   NeverStop = 16,
 *   NeverNavMesh = 32,
 *   NeverRoute = 64,
 *   ForceBeached = 128,
 *   UseWanderRoute = 256,
 *   UseFleeRoute = 512,
 *   NeverPause = 1024,
 *   // StopAtEnd | StopAtShore | AvoidShore
 *   DefaultSettings = 7,
 *   // StopAtEnd | StopAtShore | AvoidShore | PreferForward | NeverNavMesh | NeverRoute
 *   OpenOceanSettings = 111,
 *   // StopAtEnd | StopAtShore | AvoidShore | PreferForward | NeverNavMesh | NeverPause
 *   BoatTaxiSettings = 1071,
 * }
 * ```
 * @param ped - 
 * @param boat - 
 * @param vehicleTarget - 
 * @param pedTarget - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param missionType - 
 * @param speed - 
 * @param drivingStyle - 
 * @param radius - 
 * @param missionFlags - 
 * @returns void
 * @remarks Hash: 0x15C86013127CE63F
 */
export function taskBoatMission(ped: number, boat: number, vehicleTarget: number, pedTarget: number, x: number, y: number, z: number, missionType: number, speed: number, drivingStyle: number, radius: number, missionFlags: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param ped2 - 
 * @returns void
 * @remarks Hash: 0x19D1B791CB3670FE
 */
export function TaskAgitatedAction(ped: number, ped2: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param name - 
 * @returns number
 * @remarks Hash: 0xD01015C7316AE176
 */
export function requestTaskMoveNetworkStateTransition(ped: number, name: string): number;

/**
 * ```
 * Example:
 * TASK::TASK_DRIVE_BY(l_467[1/*22*/], PLAYER::PLAYER_PED_ID(), 0, 0.0, 0.0, 2.0, 300.0, 100, 0, ${firing_pattern_burst_fire_driveby});
 * Needs working example. Doesn't seem to do anything.
 * I marked p2 as targetVehicle as all these shooting related tasks seem to have that in common.
 * I marked p6 as distanceToShoot as if you think of GTA's Logic with the native SET_VEHICLE_SHOOT natives, it won't shoot till it gets within a certain distance of the target.
 * I marked p7 as pedAccuracy as it seems it's mostly 100 (Completely Accurate), 75, 90, etc. Although this could be the ammo count within the gun, but I highly doubt it. I will change this comment once I find out if it's ammo count or not.
 * ```
 * @param driverPed - 
 * @param targetPed - 
 * @param targetVehicle - 
 * @param targetX - 
 * @param targetY - 
 * @param targetZ - 
 * @param distanceToShoot - 
 * @param pedAccuracy - 
 * @param p8 - 
 * @param firingPattern - 
 * @returns void
 * @remarks Hash: 0x2F8AF0E82773A171
 */
export function taskDriveBy(driverPed: number, targetPed: number, targetVehicle: number, targetX: number, targetY: number, targetZ: number, distanceToShoot: number, pedAccuracy: number, p8: number, firingPattern: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xC313379AF0FCEDA7
 */
export function setParachuteTaskTarget(ped: number, x: number, y: number, z: number): void;

/**
 * The given ped will try to drive the plane to the given coordinates and will then drive around the given coords (the plane will form 8s on the ground)
 * @param pilot - 
 * @param aircraft - 
 * @returns void
 * @remarks Hash: 0x92C360B5F15D2302
 */
export function taskPlaneTaxi(pilot: number, aircraft: number): void;

/**
 * ```
 * Used only once in the scripts (am_mp_nightclub)
 * ```
 * 
 * ```
 * Used only once in the scripts (am_mp_nightclub)
 * 
 * NativeDB Introduced: v1493
 * ```
 * @param ped - 
 * @param p1 - 
 * @param data - 
 * @param p3 - 
 * @param p4 - 
 * @param animDict - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0x3D45B0B355C5E0C9
 */
export function TaskMoveNetworkByNameWithInitParams(ped: number, p1: string, data: any, p3: number, p4: number, animDict: string, flags: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xE03B3F2D3DC59B64
 */
export function isWaypointPlaybackGoingOnForPed(p0: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x8968400D900ED8B3
 */
export function waypointPlaybackStartAimingAtCoord(p0: any, p1: number, p2: number, p3: number, p4: number): void;

/**
 * ```
 * After looking at some scripts the second parameter seems to be an id of some kind. Here are some I found from some R* scripts:
 * "miss_Tower_01" (this went from 01 - 10)
 * "miss_Ass0" (0, 4, 6, 3)
 * "MISS_PATROL_8"
 * I think they're patrol routes, but I'm not sure. And I believe the 3rd parameter is a BOOL, but I can't confirm other than only seeing 0 and 1 being passed.
 * As far as I can see the patrol routes names such as "miss_Ass0" have been defined earlier in the scripts. This leads me to believe we can defined our own new patrol routes by following the same approach.
 * From the scripts
 *     TASK::OPEN_PATROL_ROUTE("miss_Ass0");
 *     TASK::ADD_PATROL_ROUTE_NODE(0, "WORLD_HUMAN_GUARD_STAND", l_738[0/*3*/], -139.4076690673828, -993.4732055664062, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
 *     TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_738[1/*3*/], -116.1391830444336, -987.4984130859375, 26.38541030883789, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
 *     TASK::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", l_738[2/*3*/], -128.46847534179688, -979.0340576171875, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
 *     TASK::ADD_PATROL_ROUTE_LINK(0, 1);
 *     TASK::ADD_PATROL_ROUTE_LINK(1, 2);
 *     TASK::ADD_PATROL_ROUTE_LINK(2, 0);
 *     TASK::CLOSE_PATROL_ROUTE();
 *     TASK::CREATE_PATROL_ROUTE();
 * ```
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xBDA5DF49D080FE4E
 */
export function taskPatrol(ped: number, p1: string, p2: any, p3: number, p4: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0xD43D95C7A869447F
 */
export function taskSeekCoverToCoverPoint(p0: any, p1: any, p2: number, p3: number, p4: number, p5: any, p6: number): void;

/**
 * For an example on how to use this please refer to [OPEN_SEQUENCE_TASK](#_0xE8854A4326B9E12B)
 * @param ped - 
 * @param taskSequenceId - 
 * @returns void
 * @remarks Hash: 0x5ABA3986D90D8A3B
 */
export function taskPerformSequence(ped: number, taskSequenceId: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x933C06518B52A9A4
 */
export function taskSetSphereDefensiveArea(p0: any, p1: number, p2: number, p3: number, p4: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param ped - 
 * @param p1 - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x8634CEF2522D987B
 */
export function 0x8634cef2522d987b(ped: number, p1: string, value: number): void;

/**
 * ```
 * p2 tend to be 16, 17 or 1  
 * p3 to p7 tend to be 0.0  
 * ```
 * @param ped - 
 * @param target - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @returns void
 * @remarks Hash: 0x8C338E0263E4FD19
 */
export function taskChatToPed(ped: number, target: number, p2: any, p3: number, p4: number, p5: number, p6: number, p7: number): void;

/**
 * For an example on how to use this please refer to [OPEN_SEQUENCE_TASK](#_0xE8854A4326B9E12B)
 * @param taskSequenceId - 
 * @returns void
 * @remarks Hash: 0x3841422E9C488D8C
 */
export function clearSequenceTask(taskSequenceId: number): void;

/**
 * ```
 * scenarioName example: "WORLD_HUMAN_GUARD_STAND"  
 * ```
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param heading - 
 * @param scenarioName - 
 * @returns void
 * @remarks Hash: 0xAE032F8BBA959E90
 */
export function taskStandGuard(ped: number, x: number, y: number, z: number, heading: number, scenarioName: string): void;

/**
 * ```
 * Task index enum: https://alloc8or.re/gta5/doc/enums/eTaskTypeIndex.txt
 * ```
 * @param ped - 
 * @param taskIndex - 
 * @returns number
 * @remarks Hash: 0xB0760331C7AA4155
 */
export function getIsTaskActive(ped: number, taskIndex: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param ped2 - 
 * @returns void
 * @remarks Hash: 0x85F462BADC7DA47F
 */
export function addVehicleSubtaskAttackPed(ped: number, ped2: number): void;

/**
 * connects/links 2 [route nodes](#_0x8EDF950167586B7C)  
 * image representing the cyclic example below:  
 * ![image](https://user-images.githubusercontent.com/55803068/188470866-c32c6a9f-a25d-4772-9b18-5be46e2c14a1.png)
 * @param id1 - 
 * @param id2 - 
 * @returns void
 * @remarks Hash: 0x23083260DEC3A551
 */
export function addPatrolRouteLink(id1: number, id2: number): void;

/**
 * ```
 * For a full list of the points, see here: goo.gl/wIH0vn
 * Max number of loaded recordings is 32.
 * ```
 * @param name - 
 * @returns void
 * @remarks Hash: 0x9EEFB62EB27B5792
 */
export function requestWaypointRecording(name: string): void;

/**
 * ```
 * This function is hard-coded to always return 0.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x90A09F3A45FED688
 */
export function isPedBeingArrested(ped: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x9824CFF8FC66E159
 */
export function getVehicleWaypointProgress(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param eventHandle - 
 * @returns void
 * @remarks Hash: 0x452419CBD838065B
 */
export function taskShockingEventReact(ped: number, eventHandle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param ped - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x944F30DCB7096BDE
 */
export function taskCombatPedTimed(p0: any, ped: number, p2: number, p3: any): void;

/**
 * ```
 * The patrol route name must starts with "miss_" to be properly created. 
 * 
 *  patrolRoutes found in the b617d scripts:
 *  "miss_Ass0",
 *  "miss_Ass1",
 *  "miss_Ass2",
 *  "miss_Ass3",
 *  "miss_Ass4",
 *  "miss_Ass5",
 *  "miss_Ass6",
 *  "MISS_PATROL_6",
 *  "MISS_PATROL_7",
 *  "MISS_PATROL_8",
 *  "MISS_PATROL_9",
 *  "miss_Tower_01",
 *  "miss_Tower_02",
 *  "miss_Tower_03",
 *  "miss_Tower_04",
 *  "miss_Tower_05",
 *  "miss_Tower_06",
 *  "miss_Tower_07",
 *  "miss_Tower_08",
 *  "miss_Tower_10"
 * ```
 * @param patrolRoute - 
 * @returns void
 * @remarks Hash: 0xA36BFB5EE89F3D82
 */
export function openPatrolRoute(patrolRoute: string): void;

/**
 * @returns void
 * @remarks Hash: 0xDB6708C0B46F56D8
 */
export function removeAllCoverBlockingAreas(): void;

/**
 * See [`GET_NAVMESH_ROUTE_DISTANCE_REMAINING`](#_0xC6F5C0BCDC74D62D) for more details.
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x632E831F382A0FA8
 */
export function getNavmeshRouteResult(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x349CE7B56DAFD95C
 */
export function isMoveBlendRatioStill(ped: number): number;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x6919A2F136426098
 */
export function TaskWanderSpecific(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param pilot - 
 * @param entityToFollow - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x2D2386F273FF7A25
 */
export function taskPlaneChase(pilot: number, entityToFollow: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xF133BBBE91E1691F
 */
export function isMoveBlendRatioWalking(ped: number): number;

/**
 * ```
 * NativeDB Added Parameter 13: Any p12
 * ```
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param speed - 
 * @param p5 - 
 * @param p6 - 
 * @param walkingStyle - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @param p11 - 
 * @returns void
 * @remarks Hash: 0x1DD45F9ECFDB1BC9
 */
export function taskGoToCoordAnyMeansExtraParams(ped: number, x: number, y: number, z: number, speed: number, p5: any, p6: number, walkingStyle: number, p8: number, p9: any, p10: any, p11: any): void;

/**
 * ```
 * Example from the scripts:
 * TASK::TASK_PLAY_PHONE_GESTURE_ANIMATION(PLAYER::PLAYER_PED_ID(), v_3, v_2, v_4, 0.25, 0.25, 0, 0);
 * =========================================================
 * ^^ No offense, but Idk how that would really help anyone.
 * As for the animDict & animation, they're both store in a global in all 5 scripts. So if anyone would be so kind as to read that global and comment what strings they use. Thanks.
 * Known boneMaskTypes'
 * "BONEMASK_HEADONLY"
 * "BONEMASK_HEAD_NECK_AND_ARMS"
 * "BONEMASK_HEAD_NECK_AND_L_ARM"
 * "BONEMASK_HEAD_NECK_AND_R_ARM"
 * p4 known args - 0.0f, 0.5f, 0.25f
 * p5 known args - 0.0f, 0.25f
 * p6 known args - 1 if a global if check is passed.
 * p7 known args - 1 if a global if check is passed.
 * The values found above, I found within the 5 scripts this is ever called in. (fmmc_launcher, fm_deathmatch_controller, fm_impromptu_dm_controller, fm_mission_controller, and freemode).
 * =========================================================
 * ```
 * @param ped - 
 * @param animDict - 
 * @param animation - 
 * @param boneMaskType - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @returns void
 * @remarks Hash: 0x8FBB6758B3B3E9EC
 */
export function taskPlayPhoneGestureAnimation(ped: number, animDict: string, animation: string, boneMaskType: string, p4: number, p5: number, p6: number, p7: number): void;

/**
 * ```
 * REMOVE_*
 * 
 * NativeDB Introduced: v1493
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xFA83CA6776038F64
 */
export function 0xfa83ca6776038f64(x: number, y: number, z: number): void;

/**
 * ```
 * p0 - PLAYER::PLAYER_PED_ID();
 * p1 - "Phase", "Wobble", "x_axis","y_axis","introphase","speed".
 * p2 - From what i can see it goes up to 1f (maybe).
 * -LcGamingHD
 * Example: TASK::_D5BB4025AE449A4E(PLAYER::PLAYER_PED_ID(), "Phase", 0.5);
 * ```
 * @param ped - 
 * @param signalName - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xD5BB4025AE449A4E
 */
export function setTaskMoveNetworkSignalFloat(ped: number, signalName: string, value: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param heading - 
 * @returns void
 * @remarks Hash: 0x965FEC691D55E9BF
 */
export function taskPlantBomb(ped: number, x: number, y: number, z: number, heading: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x244F70C84C547D2D
 */
export function waypointPlaybackResume(p0: any, p1: number, p2: any, p3: any): void;

/**
 * ```
 * Forces the ped to use the mounted weapon.  
 * Returns false if task is not possible.  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xDCFE42068FE0135A
 */
export function controlMountedWeapon(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x8517D4A6CA8513ED
 */
export function getPedDesiredMoveBlendRatio(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x30ED88D5E0C56A37
 */
export function isTaskMoveNetworkReadyForTransition(ped: number): number;

/**
 * ```
 * task_vehicle_follow_waypoint_recording(Ped p0, Vehicle p1, string p2, int p3, int p4, int p5, int p6, float.x p7, float.Y p8, float.Z p9, bool p10, int p11)
 * p2 = Waypoint recording string (found in update\update.rpf\x64\levels\gta5\waypointrec.rpf
 * p3 = 786468
 * p4 = 0
 * p5 = 16
 * p6 = -1 (angle?)
 * p7/8/9 = usually v3.zero
 * p10 = bool (repeat?)
 * p11 = 1073741824
 * -khorio
 * ```
 * @param ped - 
 * @param vehicle - 
 * @param WPRecording - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @returns void
 * @remarks Hash: 0x3123FAA6DB1CF7ED
 */
export function taskVehicleFollowWaypointRecording(ped: number, vehicle: number, WPRecording: string, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number): void;

/**
 * ## Parameters
 * *
 * @param coverpoint - 
 * @returns void
 * @remarks Hash: 0xAE287C923D891715
 */
export function removeCoverPoint(coverpoint: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param avoidFire - 
 * @returns void
 * @remarks Hash: 0x4455517B28441E60
 */
export function setPedPathAvoidFire(ped: number, avoidFire: number): void;

/**
 * ```
 * Firing Pattern Hash Information: https://pastebin.com/Px036isB
 * ```
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param duration - 
 * @param firingPattern - 
 * @returns void
 * @remarks Hash: 0x46A6CC01E0826106
 */
export function taskShootAtCoord(ped: number, x: number, y: number, z: number, duration: number, firingPattern: number): void;

/**
 * ## Parameters
 * *
 * @param taskSequenceId - 
 * @param repeat - 
 * @returns void
 * @remarks Hash: 0x58C70CF3A41E4AE7
 */
export function setSequenceToRepeat(taskSequenceId: number, repeat: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x416B62AC8B9E5BBD
 */
export function getVehicleWaypointTargetPoint(vehicle: number): number;

/**
 * ```
 * The 2nd param (unused) is not implemented.
 * @param ped - 
 * @param unused - 
 * @returns void
 * @remarks Hash: 0x62D2916F56B9CD2D
 */
export function taskReloadWeapon(ped: number, unused: number): void;

/**
 * The given ped will try to open the nearest door to 'seat'.
 * 
 * Example: telling the ped to open the door for the driver seat does not necessarily mean it will open the driver door, it may choose to open the passenger door instead if that one is closer.
 * @param ped - 
 * @param vehicle - 
 * @param timeOut - 
 * @param seat - 
 * @param speed - 
 * @returns void
 * @remarks Hash: 0x965791A9A488A062
 */
export function taskOpenVehicleDoor(ped: number, vehicle: number, timeOut: number, seat: number, speed: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @returns void
 * @remarks Hash: 0x7AFE8FDC10BC07D2
 */
export function taskSweepAimPosition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: number, p7: number, p8: number, p9: number, p10: number): void;

/**
 * ```
 * Groups found in the scripts used with this native:  
 * "AMMUNATION",  
 * "QUARRY",  
 * "Triathlon_1",  
 * "Triathlon_2",  
 * "Triathlon_3"  
 * ```
 * @param scenarioGroup - 
 * @returns void
 * @remarks Hash: 0x535E97E1F7FC0C6A
 */
export function setExclusiveScenarioGroup(scenarioGroup: string): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x58E2E0F23F6B76C3
 */
export function taskUseNearestScenarioToCoordWarp(ped: number, x: number, y: number, z: number, radius: number, p5: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param boat - 
 * @returns void
 * @remarks Hash: 0x9C00E77AF14B2DFF
 */
export function taskGetOffBoat(ped: number, boat: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param target - 
 * @param duration - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x84D32B3BEC531324
 */
export function taskSeekCoverFromPed(ped: number, target: number, duration: number, p3: number): void;

/**
 * ```
 * p1 is always GET_HASH_KEY("empty") in scripts, for the rare times this is used  
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xEB8517DDA73720DA
 */
export function taskSetDecisionMaker(ped: number, p1: number): void;

/**
 * ```
 * used in sequence task  
 * both parameters seems to be always 0  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xAC96609B9995EDF8
 */
export function taskToggleDuck(p0: number, p1: number): void;

/**
 * ```
 * Despite its name, it only attacks ONE hated target. The one closest to the specified position.  
 * ```
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x4CF5F55DAC3280A0
 */
export function taskCombatHatedTargetsInArea(ped: number, x: number, y: number, z: number, radius: number, p5: any): void;

/**
 * This task warps a ped directly into a cover position closest to the specified point. This can be used to quickly place peds in strategic positions during gameplay.
 * 
 * ```
 * NativeDB Introduced: 2545
 * ```
 * @param ped - 
 * @param time - 
 * @param canPeekAndAim - 
 * @param forceInitialFacingDirection - 
 * @param forceFaceLeft - 
 * @param coverIndex - 
 * @returns void
 * @remarks Hash: 0x6E01E9E8D89F8276
 */
export function taskWarpPedDirectlyIntoCover(ped: number, time: number, canPeekAndAim: number, forceInitialFacingDirection: number, forceFaceLeft: number, coverIndex: number): void;

/**
 * ```
 * chases targetEnt fast and aggressively  
 * --  
 * Makes ped (needs to be in vehicle) chase targetEnt.  
 * ```
 * @param driver - 
 * @param targetEnt - 
 * @returns void
 * @remarks Hash: 0x3C08A8E30363B353
 */
export function taskVehicleChase(driver: number, targetEnt: number): void;

/**
 * ### NOTE
 * If this returns 0 that means it failed to get a sequence id.
 * 
 * If you fail to call [`CLOSE_SEQUENCE_TASK`](#_0x39E72BC99E6360CB) and [`CLEAR_SEQUENCE_TASK`](#_0x3841422E9C488D8C) the sequence system can get stuck in a broken state until you restart your client.
 * @param taskSequenceId - 
 * @returns void
 * @remarks Hash: 0xE8854A4326B9E12B
 */
export function openSequenceTask(taskSequenceId: number): void;

/**
 * ```
 * Example:
 * TASK::TASK_MOVE_NETWORK_BY_NAME(PLAYER::PLAYER_PED_ID(), "arm_wrestling_sweep_paired_a_rev3", 0.0f, true, "mini@arm_wrestling", 0);
 * ```
 * @param ped - 
 * @param task - 
 * @param multiplier - 
 * @param p3 - 
 * @param animDict - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0x2D537BA194896636
 */
export function taskMoveNetworkByName(ped: number, task: string, multiplier: number, p3: number, animDict: string, flags: number): void;

/**
 * ```
 * The entity will move towards the target until time is over (duration) or get in target's range (distance). p5 and p6 are unknown, but you could leave p5 = 1073741824 or 100 or even 0 (didn't see any difference but on the decompiled scripts, they use 1073741824 mostly) and p6 = 0
 * Note: I've only tested it on entity -> ped and target -> vehicle. It could work differently on other entities, didn't try it yet.
 * Example: TASK::TASK_GO_TO_ENTITY(pedHandle, vehicleHandle, 5000, 4.0, 100, 1073741824, 0)
 * Ped will run towards the vehicle for 5 seconds and stop when time is over or when he gets 4 meters(?) around the vehicle (with duration = -1, the task duration will be ignored).
 * ```
 * @param entity - 
 * @param target - 
 * @param duration - 
 * @param distance - 
 * @param speed - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0x6A071245EB0D1882
 */
export function taskGoToEntity(entity: number, target: number, duration: number, distance: number, speed: number, p5: number, p6: number): void;

/**
 * Similar in functionality to [`TASK_PLAY_ANIM`](#_0xEA47FE3719165B94), except the position and rotation parameters let you specify the initial position and rotation of the task. The ped is teleported to the position specified.
 * 
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param ped - 
 * @param animDictionary - 
 * @param animationName - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param blendInSpeed - 
 * @param blendOutSpeed - 
 * @param duration - 
 * @param flag - 
 * @param animTime - 
 * @param p14 - 
 * @param p15 - 
 * @returns void
 * @remarks Hash: 0x83CDB10EA29B370B
 */
export function taskPlayAnimAdvanced(ped: number, animDictionary: string, animationName: string, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, blendInSpeed: number, blendOutSpeed: number, duration: number, flag: any, animTime: number, p14: any, p15: any): void;

/**
 * ## Parameters
 * *
 * @param pilot - 
 * @param plane - 
 * @param runwayStartX - 
 * @param runwayStartY - 
 * @param runwayStartZ - 
 * @param runwayEndX - 
 * @param runwayEndY - 
 * @param runwayEndZ - 
 * @returns void
 * @remarks Hash: 0xBF19721FA34D32C0
 */
export function taskPlaneLand(pilot: number, plane: number, runwayStartX: number, runwayStartY: number, runwayStartZ: number, runwayEndX: number, runwayEndY: number, runwayEndZ: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xA21C51255B205245
 */
export function taskSwapWeapon(ped: number, p1: number): void;

/**
 * ```
 * from armenian3.c4
 * TASK::TASK_PUT_PED_DIRECTLY_INTO_MELEE(PlayerPed, armenianPed, 0.0, -1.0, 0.0, 0);
 * ```
 * @param ped - 
 * @param meleeTarget - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x1C6CD14A876FFE39
 */
export function taskPutPedDirectlyIntoMelee(ped: number, meleeTarget: number, p2: number, p3: number, p4: number, p5: number): void;

/**
 * ```
 * Ped pilot should be in a heli.  
 * EntityToFollow can be a vehicle or Ped.  
 * x,y,z appear to be how close to the EntityToFollow the heli should be. Scripts use 0.0, 0.0, 80.0. Then the heli tries to position itself 80 units above the EntityToFollow. If you reduce it to -5.0, it tries to go below (if the EntityToFollow is a heli or plane)  
 * NOTE: If the pilot finds enemies, it will engage them, then remain there idle, not continuing to chase the Entity given.  
 * ```
 * @param pilot - 
 * @param entityToFollow - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xAC83B1DB38D0ADA0
 */
export function taskHeliChase(pilot: number, entityToFollow: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param duration - 
 * @returns void
 * @remarks Hash: 0xA98FCAFD7893C834
 */
export function updateTaskHandsUpDuration(ped: number, duration: number): void;

/**
 * ## Parameters
 * *
 * @param driver - 
 * @param cruiseSpeed - 
 * @returns void
 * @remarks Hash: 0x5C9B84BD7D31D908
 */
export function setDriveTaskCruiseSpeed(driver: number, cruiseSpeed: number): void;

/**
 * You can let your character drive to the destination at the speed and driving style you set. You can use map marks to set the destination.
 * 
 * ```c
 * enum eDriveBehaviorFlags {
 *   DF_StopForCars = 1,
 *   DF_StopForPeds = 2,
 *   DF_SwerveAroundAllCars = 4,
 *   DF_SteerAroundStationaryCars = 8,
 *   DF_SteerAroundPeds = 16,
 *   DF_SteerAroundObjects = 32,
 *   DF_DontSteerAroundPlayerPed = 64,
 *   DF_StopAtLights = 128,
 *   DF_GoOffRoadWhenAvoiding = 256,
 *   DF_DriveIntoOncomingTraffic = 512,
 *   DF_DriveInReverse = 1024,
 *   DF_UseWanderFallbackInsteadOfStraightLine = 2048,
 *   DF_AvoidRestrictedAreas = 4096,
 *   DF_PreventBackgroundPathfinding = 8192, //
 * @param ped - 
 * @param vehicle - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param speed - 
 * @param drivingStyle - 
 * @param stopRange - 
 * @returns void
 * @remarks Hash: 0x158BB33F920D360C
 */
export function taskVehicleDriveToCoordLongrange(ped: number, vehicle: number, x: number, y: number, z: number, speed: number, drivingStyle: number, stopRange: number): void;

/**
 * ## Parameters
 * *
 * @param coverpoint - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x594A1028FC2A3E85
 */
export function getScriptedCoverPointCoords(coverpoint: any): { x: number, y: number, z: number };

/**
 * ```
 * shootatEntity:  
 * If true, peds will shoot at Entity till it is dead.  
 * If false, peds will just walk till they reach the entity and will cease shooting.  
 * ```
 * @param ped - 
 * @param entityToWalkTo - 
 * @param entityToAimAt - 
 * @param speed - 
 * @param shootatEntity - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param firingPattern - 
 * @returns void
 * @remarks Hash: 0x97465886D35210E9
 */
export function taskGoToEntityWhileAimingAtEntity(ped: number, entityToWalkTo: number, entityToAimAt: number, speed: number, shootatEntity: number, p5: number, p6: number, p7: number, p8: number, firingPattern: number): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @param p11 - 
 * @param p12 - 
 * @param p13 - 
 * @returns void
 * @remarks Hash: 0x29682E2CCF21E9B5
 */
export function 0x29682e2ccf21e9b5(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xE6A877C64CAF1BC5
 */
export function getPedWaypointDistance(p0: any): number;

/**
 * ```
 * In every case of this native, I've only seen the first parameter passed as 0, although I believe it's a Ped after seeing tasks around it using 0. That's because it's used in a Sequence Task.  
 * The last 3 parameters are definitely coordinates after seeing them passed in other scripts, and even being used straight from the player's coordinates.
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x7285951DBF6B5A51
 */
export function taskThrowProjectile(ped: number, x: number, y: number, z: number): void;

/**
 * All parameters except ped, vehicle, pedTarget and speed are optional; with `missionType` being only those that require a target entity.
 * 
 * If you don't want to use a parameter; pass `0` for int parameters, and `-1.0f` for the remaining float parameters.
 * @param ped - 
 * @param vehicle - 
 * @param pedTarget - 
 * @param missionType - 
 * @param speed - 
 * @param drivingStyle - 
 * @param radius - 
 * @param straightLineDist - 
 * @param DriveAgainstTraffic - 
 * @returns void
 * @remarks Hash: 0x9454528DF15D657A
 */
export function taskVehicleMissionPedTarget(ped: number, vehicle: number, pedTarget: number, missionType: number, speed: number, drivingStyle: number, radius: number, straightLineDist: number, DriveAgainstTraffic: number): void;

/**
 * Doesn't actually return anything.
 * 
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x0FFB3C758E8C07B9
 */
export function 0x0ffb3c758e8c07b9(ped: number, p1: number): any;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param Toggle - 
 * @returns void
 * @remarks Hash: 0xE361C5C71C431A4F
 */
export function setPedPathCanDropFromHeight(ped: number, Toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param Toggle - 
 * @returns void
 * @remarks Hash: 0x77A5B103C87F476E
 */
export function setPedPathCanUseLadders(ped: number, Toggle: number): void;

/**
 * All parameters except ped, heli and speed are optional, with `pedTarget`, `vehicleTarget`, `x`, `y`, `z` being dependent on `missionType` (ie. Attack/Flee mission types require a target ped/vehicle, whereas GoTo mission types require either `x`, `y`, `z` or a target ped/vehicle).
 * 
 * If you don't want to use a parameter; pass `0.0f` for `x`, `y` and `z`, `0` for `pedTarget`, `vehicleTarget`, `0` for other int parameters, and `-1.0f` for the remaining float parameters.
 * 
 * ```c
 * enum eHeliMissionFlags
 * {
 *   None = 0,
 *   AttainRequestedOrientation = 1,
 *   DontModifyOrientation = 2,
 *   DontModifyPitch = 4,
 *   DontModifyThrottle = 8,
 *   DontModifyRoll = 16,
 *   LandOnArrival = 32,
 *   DontDoAvoidance = 64,
 *   StartEngineImmediately = 128,
 *   ForceHeightMapAvoidance = 256,
 *   DontClampProbesToDestination = 512,
 *   EnableTimeslicingWhenPossible = 1024,
 *   CircleOppositeDirection = 2048,
 *   MaintainHeightAboveTerrain = 4096,
 *   IgnoreHiddenEntitiesDuringLand = 8192,
 *   DisableAllHeightMapAvoidance = 16384,
 *   // ForceHeightMapAvoidance | DontDoAvoidance
 *   HeightMapOnlyAvoidance = 320,
 * }
 * ```
 * @param ped - 
 * @param heli - 
 * @param vehicleTarget - 
 * @param pedTarget - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param missionType - 
 * @param speed - 
 * @param radius - 
 * @param heading - 
 * @returns void
 * @remarks Hash: 0xDAD029E187A2BEB4
 */
export function taskHeliMission(ped: number, heli: number, vehicleTarget: number, pedTarget: number, x: number, y: number, z: number, missionType: number, speed: number, radius: number, heading: number): void;

/**
 * ```
 * Makes a ped in a vehicle follow an entity (ped, vehicle, etc.)
 * drivingStyle: http://gtaforums.com/topic/822314-guide-driving-styles/
 * ```
 * @param driver - 
 * @param vehicle - 
 * @param targetEntity - 
 * @param speed - 
 * @param drivingStyle - 
 * @param minDistance - 
 * @returns void
 * @remarks Hash: 0xFC545A9F0626E3B6
 */
export function taskVehicleFollow(driver: number, vehicle: number, targetEntity: number, speed: number, drivingStyle: number, minDistance: number): void;

/**
 * ```
 * Most probably plays a specific animation on vehicle. For example getting chop out of van etc...
 * Here's how its used -
 * TASK::TASK_VEHICLE_PLAY_ANIM(l_325, "rcmnigel1b", "idle_speedo");
 * TASK::TASK_VEHICLE_PLAY_ANIM(l_556[0/*1*/], "missfra0_chop_drhome", "InCar_GetOutofBack_Speedo");
 * FYI : Speedo is the name of van in which chop was put in the mission.
 * ```
 * @param vehicle - 
 * @param animationSet - 
 * @param animationName - 
 * @returns void
 * @remarks Hash: 0x69F5C3BD0F3EBD89
 */
export function taskVehiclePlayAnim(vehicle: number, animationSet: string, animationName: string): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * 
 * Warp a ped into a vehicle.
 * @param ped - 
 * @param vehicle - 
 * @param seatIndex - 
 * @returns void
 * @remarks Hash: 0x9A7D091411C5F684
 */
export function taskWarpPedIntoVehicle(ped: number, vehicle: number, seatIndex: number): void;

/**
 * Attaches a ped to a rope and allows player control to rappel down a wall.
 * Disables all collisions while on the rope.
 * 
 * NativeDB Introduced: v1868
 * @param ped - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param minZ - 
 * @param ropeId - 
 * @param clipset - 
 * @param p10 - 
 * @returns void
 * @remarks Hash: 0xEAF66ACDDC794793
 */
export function TaskRappelDownWall(ped: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, minZ: number, ropeId: number, clipset: string, p10: any): void;

/**
 * ```
 * What's strafing?  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xE45B7F222DE47E09
 */
export function isPedStrafing(ped: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x97A28E63F0BA5631
 */
export function taskUseNearestScenarioChainToCoordWarp(p0: any, p1: number, p2: number, p3: number, p4: number, p5: any): void;

/**
 * Clear a ped's tasks. Stop animations and other tasks created by scripts.
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xE1EF3C1216AFF2CD
 */
export function clearPedTasks(ped: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x7F93691AB4B92272
 */
export function taskEveryoneLeaveVehicle(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x032D49C5E359C847
 */
export function setAnimRate(p0: any, p1: number, p2: any, p3: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xE70BA7B90F8390DC
 */
export function waypointPlaybackStartShootingAtPed(p0: any, p1: any, p2: number, p3: any): void;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x3FA00D4F4641BFAE
 */
export function taskStopPhoneGestureAnimation(ped: number): void;

/**
 * ## Parameters
 * *
 * @param name - 
 * @returns void
 * @remarks Hash: 0xFF1B8B4AA1C25DC8
 */
export function removeWaypointRecording(name: string): void;

/**
 * ```
 * IS_*
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x3E38E28A1D80DDF6
 */
export function 0x3e38e28a1d80ddf6(ped: number): number;

/**
 * ```
 * seems to enable/disable specific scenario-types from happening in the game world.
 * Here are some scenario types from the scripts:
 * "WORLD_MOUNTAIN_LION_REST"
 * "WORLD_MOUNTAIN_LION_WANDER"
 * "DRIVE"
 * "WORLD_VEHICLE_POLICE_BIKE"
 * "WORLD_VEHICLE_POLICE_CAR"
 * "WORLD_VEHICLE_POLICE_NEXT_TO_CAR"
 * "WORLD_VEHICLE_DRIVE_SOLO"
 * "WORLD_VEHICLE_BIKER"
 * "WORLD_VEHICLE_DRIVE_PASSENGERS"
 * "WORLD_VEHICLE_SALTON_DIRT_BIKE"
 * "WORLD_VEHICLE_BICYCLE_MOUNTAIN"
 * "PROP_HUMAN_SEAT_CHAIR"
 * "WORLD_VEHICLE_ATTRACTOR"
 * "WORLD_HUMAN_LEANING"
 * "WORLD_HUMAN_HANG_OUT_STREET"
 * "WORLD_HUMAN_DRINKING"
 * "WORLD_HUMAN_SMOKING"
 * "WORLD_HUMAN_GUARD_STAND"
 * "WORLD_HUMAN_CLIPBOARD"
 * "WORLD_HUMAN_HIKER"
 * "WORLD_VEHICLE_EMPTY"
 * "WORLD_VEHICLE_BIKE_OFF_ROAD_RACE"
 * "WORLD_HUMAN_PAPARAZZI"
 * "WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN"
 * "WORLD_VEHICLE_PARK_PARALLEL"
 * "WORLD_VEHICLE_CONSTRUCTION_SOLO"
 * "WORLD_VEHICLE_CONSTRUCTION_PASSENGERS"
 * "WORLD_VEHICLE_TRUCK_LOGS"
 * scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.
 * ```
 * @param scenarioType - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xEB47EC4E34FB7EE1
 */
export function setScenarioTypeEnabled(scenarioType: string, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @returns any
 * @remarks Hash: 0xD5C12A75C7B9497F
 */
export function addCoverPoint(p0: number, p1: number, p2: number, p3: number, p4: any, p5: any, p6: any, p7: number): any;

/**
 * ```
 * In the scripts, p3 was always -1.  
 * p3 seems to be duration or timeout of turn animation.  
 * Also facingPed can be 0 or -1 so ped will just raise hands up.  
 * ```
 * @param ped - 
 * @param duration - 
 * @param facingPed - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xF2EAB31979A7F910
 */
export function taskHandsUp(ped: number, duration: number, facingPed: number, p3: number, p4: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param heading - 
 * @param duration - 
 * @returns void
 * @remarks Hash: 0xD04FE6765D990A06
 */
export function taskPedSlideToCoord(ped: number, x: number, y: number, z: number, heading: number, duration: number): void;

/**
 * ```
 * Makes the ped run to take cover  
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xE5DA8615A6180789
 */
export function taskStayInCover(ped: number): void;

/**
 * ```
 * Makes the specified ped attack the target ped.  
 * p2 should be 0  
 * p3 should be 16  
 * ```
 * @param ped - 
 * @param targetPed - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xF166E48407BAC484
 */
export function taskCombatPed(ped: number, targetPed: number, p2: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param distance - 
 * @returns void
 * @remarks Hash: 0x639B642FACBE4EDD
 */
export function setTaskVehicleChaseIdealPursuitDistance(ped: number, distance: number): void;

/**
 * Sets the driving style for a ped currently performing a driving task.
 * 
 * Each flag in the `eVehicleDrivingFlags` enum can be combined to create a driving style, with each enabling or disabling a specific driving behavior. The driving style can be set to one of the predefined driving styles, or a custom driving style can be created by combining the flags. This can be done by using the bitwise OR operator (`|`) to combine the flags or by adding the decimal values of the flags together.
 * 
 * ```c
 * enum eVehicleDrivingFlags
 * {
 *   None = 0,
 *   StopForVehicles = 1,
 *   StopForPeds = 2,
 *   SwerveAroundAllVehicles = 4,
 *   SteerAroundStationaryVehicles = 8,
 *   SteerAroundPeds = 16,
 *   SteerAroundObjects = 32,
 *   DontSteerAroundPlayerPed = 64,
 *   StopAtTrafficLights = 128,
 *   GoOffRoadWhenAvoiding = 256,
 *   AllowGoingWrongWay = 512,
 *   Reverse = 1024,
 *   UseWanderFallbackInsteadOfStraightLine = 2048,
 *   AvoidRestrictedAreas = 4096,
 *   PreventBackgroundPathfinding = 8192,
 *   AdjustCruiseSpeedBasedOnRoadSpeed = 16384,
 *   UseShortCutLinks = 262144,
 *   ChangeLanesAroundObstructions = 524288,
 *   UseSwitchedOffNodes = 2097152,
 *   PreferNavmeshRoute = 4194304,
 *   PlaneTaxiMode = 8388608,
 *   ForceStraightLine = 16777216,
 *   UseStringPullingAtJunctions = 33554432,
 *   TryToAvoidHighways = 536870912,
 *   ForceJoinInRoadDirection = 1073741824,
 *   StopAtDestination = 2147483648,
 *   // StopForVehicles | StopForPeds | SteerAroundObjects | SteerAroundStationaryVehicles | StopAtTrafficLights | UseShortCutLinks | ChangeLanesAroundObstructions
 *   DrivingModeStopForVehicles = 786603,
 *   // StopForVehicles | StopForPeds | StopAtTrafficLights | UseShortCutLinks
 *   DrivingModeStopForVehiclesStrict = 262275,
 *   // SwerveAroundAllVehicles | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions | StopForVehicles
 *   DrivingModeAvoidVehicles = 786469,
 *   // SwerveAroundAllVehicles | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions
 *   DrivingModeAvoidVehiclesReckless = 786468,
 *   // StopForVehicles | SteerAroundStationaryVehicles | StopForPeds | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions
 *   DrivingModeStopForVehiclesIgnoreLights = 786475,
 *   // SwerveAroundAllVehicles | StopAtTrafficLights | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions | StopForVehicles
 *   DrivingModeAvoidVehiclesObeyLights = 786597,
 *   // SwerveAroundAllVehicles | StopAtTrafficLights | StopForPeds | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions | StopForVehicles
 *   DrivingModeAvoidVehiclesStopForPedsObeyLights = 786599,
 * }
 * ```
 * @param ped - 
 * @param drivingStyle - 
 * @returns void
 * @remarks Hash: 0xDACE1BE37D88AF67
 */
export function setDriveTaskDrivingStyle(ped: number, drivingStyle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns any
 * @remarks Hash: 0xED98E10B0AFCE4B4
 */
export function setPedWaypointRouteOffset(p0: any, p1: any, p2: any, p3: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x9724FB59A3E72AD0
 */
export function updateTaskAimGunScriptedTarget(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x2BBA30B854534A0C
 */
export function taskCombatHatedTargetsAroundPedTimed(p0: any, p1: number, p2: any, p3: any): void;

/**
 * x2,y2 and z2 are the coordinates to which the ped should look at
 * @param id - 
 * @param guardScenario - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param waitTime - 
 * @returns void
 * @remarks Hash: 0x8EDF950167586B7C
 */
export function addPatrolRouteNode(id: number, guardScenario: string, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, waitTime: number): void;

/**
 * For an example on how to use this please refer to [OPEN_SEQUENCE_TASK](#_0xE8854A4326B9E12B)
 * @param taskSequenceId - 
 * @returns void
 * @remarks Hash: 0x39E72BC99E6360CB
 */
export function closeSequenceTask(taskSequenceId: number): void;

/**
 * The ped will act like NPC's involved in a gunfight. The ped will squat down with their heads held in place and look around.
 * @param ped - 
 * @param duration - 
 * @returns void
 * @remarks Hash: 0x3EB1FE9E8E908E15
 */
export function taskCower(ped: number, duration: number): void;

/**
 * ```
 * I cant believe I have to define this, this is one of the best natives.  
 * It makes the ped ignore basically all shocking events around it. Occasionally the ped may comment or gesture, but other than that they just continue their daily activities. This includes shooting and wounding the ped. And - most importantly - they do not flee.  
 * Since it is a task, every time the native is called the ped will stop for a moment.  
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x90D2156198831D69
 */
export function taskSetBlockingOfNonTemporaryEvents(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xAC29253EEF8F0180
 */
export function isPedStill(ped: number): number;

/**
 * ```
 * Not clear what it actually does, but here's how script uses it -
 * if (OBJECT::HAS_PICKUP_BEEN_COLLECTED(...)
 * {
 *  if(ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
 *     {
 *      TASK::TASK_CLEAR_LOOK_AT(PLAYER::PLAYER_PED_ID());
 *   }
 *  ...
 * }
 * Another one where it doesn't "look" at current player -
 * TASK::TASK_PLAY_ANIM(l_3ED, "missheist_agency2aig_2", "look_at_phone_a", 1000.0, -2.0, -1, 48, v_2, 0, 0, 0);
 * PED::_2208438012482A1A(l_3ED, 0, 0);
 * TASK::TASK_CLEAR_LOOK_AT(l_3ED);
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x0F804F1DB19B9689
 */
export function taskClearLookAt(ped: number): void;

/**
 * ```
 * For p1 & p2 (Ped, Vehicle). I could be wrong, as the only time this native is called in scripts is once and both are 0, but I assume this native will work like SET_MOUNTED_WEAPON_TARGET in which has the same exact amount of parameters and the 1st and last 3 parameters are right and the same for both natives.  
 * ```
 * @param shootingPed - 
 * @param targetPed - 
 * @param targetVehicle - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xE5B302114D8162EE
 */
export function setDrivebyTaskTarget(shootingPed: number, targetPed: number, targetVehicle: number, x: number, y: number, z: number): void;

/**
 * ```
 * From fm_mission_controller.c:  
 * reserve_network_mission_objects(get_num_reserved_mission_objects(0) + 1);  
 * 	vVar28 = {0.094f, 0.02f, -0.005f};  
 * 	vVar29 = {-92.24f, 63.64f, 150.24f};  
 * 	func_253(&uVar30, joaat("prop_ld_case_01"), Global_1592429.imm_34757[iParam1 <268>], 1, 1, 0, 1);  
 * 	set_entity_lod_dist(net_to_ent(uVar30), 500);  
 * 	attach_entity_to_entity(net_to_ent(uVar30), iParam0, get_ped_bone_index(iParam0, 28422), vVar28, vVar29, 1, 0, 0, 0, 2, 1);  
 * 	Var31.imm_4 = 1065353216;  
 * 	Var31.imm_5 = 1065353216;  
 * 	Var31.imm_9 = 1065353216;  
 * 	Var31.imm_10 = 1065353216;  
 * 	Var31.imm_14 = 1065353216;  
 * 	Var31.imm_15 = 1065353216;  
 * 	Var31.imm_17 = 1040187392;  
 * 	Var31.imm_18 = 1040187392;  
 * 	Var31.imm_19 = -1;  
 * 	Var32.imm_4 = 1065353216;  
 * 	Var32.imm_5 = 1065353216;  
 * 	Var32.imm_9 = 1065353216;  
 * 	Var32.imm_10 = 1065353216;  
 * 	Var32.imm_14 = 1065353216;  
 * 	Var32.imm_15 = 1065353216;  
 * 	Var32.imm_17 = 1040187392;  
 * 	Var32.imm_18 = 1040187392;  
 * 	Var32.imm_19 = -1;  
 * 	Var31 = 1;  
 * 	Var31.imm_1 = "weapons@misc@jerrycan@mp_male";  
 * 	Var31.imm_2 = "idle";  
 * 	Var31.imm_20 = 1048633;  
 * 	Var31.imm_4 = 0.5f;  
 * 	Var31.imm_16 = get_hash_key("BONEMASK_ARMONLY_R");  
 * 	task_scripted_animation(iParam0, &Var31, &Var32, &Var32, 0f, 0.25f);  
 * 	set_model_as_no_longer_needed(joaat("prop_ld_case_01"));  
 * 	remove_anim_dict("anim@heists@biolab@");  
 * ```
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x126EF75F1E17ABE5
 */
export function taskScriptedAnimation(ped: number, p1: any, p2: any, p3: any, p4: number, p5: number): void;

/**
 * This is a stricter version of [`IS_PED_USING_ANY_SCENARIO`](#_0x57AB4A3080F85143). It only returns true if the ped is playing the ambient animations associated with the scenario.
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xAA135F9482C82CC3
 */
export function isPedActiveInScenario(ped: number): number;

/**
 * @returns void
 * @remarks Hash: 0xDD902D0349AFAD3A
 */
export function resetScenarioGroupsEnabled(): void;

/**
 * ```
 * Makes the specified ped flee the specified distance from the specified position.  
 * ```
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param distance - 
 * @param time - 
 * @param p6 - 
 * @param p7 - 
 * @returns void
 * @remarks Hash: 0x94587F17E9C365D5
 */
export function taskSmartFleeCoord(ped: number, x: number, y: number, z: number, distance: number, time: number, p6: number, p7: number): void;

/**
 * The ped will move or warp to the position and heading given, then start the scenario passed. See [`TASK_START_SCENARIO_IN_PLACE`](#_0x142A02425FF02BD9) for a list of scenarios.
 * @param ped - 
 * @param scenarioName - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param heading - 
 * @param timeToLeave - 
 * @param playIntro - 
 * @param warp - 
 * @returns void
 * @remarks Hash: 0xFA4EFC79F69D4F07
 */
export function taskStartScenarioAtPosition(ped: number, scenarioName: string, x: number, y: number, z: number, heading: number, timeToLeave: number, playIntro: number, warp: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @param p11 - 
 * @returns void
 * @remarks Hash: 0x04701832B739DCE5
 */
export function taskGoToEntityWhileAimingAtCoord(p0: any, p1: any, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number, p11: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x9FDA1B3D7E7028B3
 */
export function taskUseNearestScenarioChainToCoord(p0: any, p1: number, p2: number, p3: number, p4: number, p5: any): void;

/**
 * ## Parameters
 * *
 * @param entity1 - 
 * @param entity2 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0x61E360B7E040D12E
 */
export function taskGoStraightToCoordRelativeToEntity(entity1: number, entity2: number, p2: number, p3: number, p4: number, p5: number, p6: any): void;

/**
 * ```
 * p6 always -1  
 * p7 always 10.0  
 * p8 always 1  
 * ```
 * @param ped - 
 * @param entity - 
 * @param offsetX - 
 * @param offsetY - 
 * @param offsetZ - 
 * @param movementSpeed - 
 * @param timeout - 
 * @param stoppingRange - 
 * @param persistFollowing - 
 * @returns void
 * @remarks Hash: 0x304AE42E357B8C7E
 */
export function taskFollowToOffsetOfEntity(ped: number, entity: number, offsetX: number, offsetY: number, offsetZ: number, movementSpeed: number, timeout: number, stoppingRange: number, persistFollowing: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0x788756D73AC2E07C
 */
export function isScenarioOccupied(p0: number, p1: number, p2: number, p3: number, p4: number): number;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param ped - 
 * @param signalName - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x373EF409B82697A3
 */
export function SetTaskMoveNetworkSignalFloat2(ped: number, signalName: string, value: number): void;

/**
 * For an example on how to use this please refer to [OPEN_SEQUENCE_TASK](#_0xE8854A4326B9E12B
 * @param ped - 
 * @param taskSequenceId - 
 * @returns void
 * @remarks Hash: 0x8C33220C8D78CA0D
 */
export function taskPerformSequenceLocally(ped: number, taskSequenceId: number): void;

/**
 * ```
 * https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x534AEBA6E5ED4CAB
 */
export function getActiveVehicleMissionType(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x1EE0F68A7C25DEC6
 */
export function getPhoneGestureAnimTotalTime(ped: number): number;

/**
 * Flags are the same flags used in [`TASK_LEAVE_VEHICLE`](#_0xD3DBCE61A490BE02)
 * @param ped - 
 * @param p1 - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0x504D54DF3F6F2247
 */
export function taskLeaveAnyVehicle(ped: number, p1: number, flags: number): void;

/**
 * ## Parameters
 * *
 * @param playerX - 
 * @param playerY - 
 * @param playerZ - 
 * @param radiusX - 
 * @param radiusY - 
 * @param radiusZ - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @returns void
 * @remarks Hash: 0x45C597097DD7CB81
 */
export function addCoverBlockingArea(playerX: number, playerY: number, playerZ: number, radiusX: number, radiusY: number, radiusZ: number, p6: number, p7: number, p8: number, p9: number): void;

/**
 * Will make the ped move to a coordinate while aiming (and optionally shooting) at given coordinates.
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param aimAtX - 
 * @param aimAtY - 
 * @param aimAtZ - 
 * @param moveSpeed - 
 * @param shoot - 
 * @param p9 - 
 * @param p10 - 
 * @param p11 - 
 * @param flags - 
 * @param p13 - 
 * @param firingPattern - 
 * @returns void
 * @remarks Hash: 0x11315AB3385B8AC0
 */
export function taskGoToCoordWhileAimingAtCoord(ped: number, x: number, y: number, z: number, aimAtX: number, aimAtY: number, aimAtZ: number, moveSpeed: number, shoot: number, p9: number, p10: number, p11: number, flags: any, p13: number, firingPattern: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xE4973DBDBE6E44B3
 */
export function updateTaskSweepAimEntity(ped: number, entity: number): void;

/**
 * ```
 * NativeDB Added Parameter 5: Any p4
 * NativeDB Added Parameter 6: Any p5
 * ```
 * @param ped - 
 * @param target - 
 * @param time - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xCDDC2B77CE54AC6E
 */
export function taskWrithe(ped: number, target: number, time: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x2A74E1D5F2F00EEC
 */
export function isPedGettingUp(ped: number): number;

/**
 * Makes a shark ped circle around specified coordinates.
 * 
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param moveBlendRatio - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0x60A19CF85FF4CEFA
 */
export function taskSharkCircleCoord(ped: number, x: number, y: number, z: number, moveBlendRatio: number, radius: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x8A4E6AC373666BC5
 */
export function vehicleWaypointPlaybackPause(vehicle: number): void;

/**
 * ```
 * duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped  
 * ```
 * @param ped - 
 * @param entity - 
 * @param duration - 
 * @returns void
 * @remarks Hash: 0x5AD23D40115353AC
 */
export function taskTurnPedToFaceEntity(ped: number, entity: number, duration: number): void;

/**
 * Gives the vehicle a temporary action.
 * @param driver - 
 * @param vehicle - 
 * @param action - 
 * @param time - 
 * @returns void
 * @remarks Hash: 0xC429DCEEB339E129
 */
export function taskVehicleTempAction(driver: number, vehicle: number, action: number, time: number): void;

/**
 * ```
 * from michael2:
 * TASK::TASK_SEEK_COVER_TO_COORDS(ped, 967.5164794921875, -2121.603515625, 30.479299545288086, 978.94677734375, -2125.84130859375, 29.4752, -1, 1);
 * appears to be shorter variation
 * from michael3:
 * TASK::TASK_SEEK_COVER_TO_COORDS(ped, -2231.011474609375, 263.6326599121094, 173.60195922851562, -1, 0);
 * ```
 * @param ped - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param p7 - 
 * @param p8 - 
 * @returns void
 * @remarks Hash: 0x39246A6958EF072C
 */
export function taskSeekCoverToCoords(ped: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p7: any, p8: number): void;

/**
 * ```
 * Climbs or vaults the nearest thing.  
 * ```
 * @param ped - 
 * @param unused - 
 * @returns void
 * @remarks Hash: 0x89D9FCC2435112F1
 */
export function taskClimb(ped: number, unused: number): void;

/**
 * ## Parameters
 * *
 * @param route - 
 * @returns number
 * @remarks Hash: 0x60F9A4393A21F741
 */
export function assistedMovementIsRouteLoaded(route: string): number;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param entity - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xDDF3CB5A0A4C0B49
 */
export function setAnimPhase(entity: number, p1: number, p2: any, p3: number): void;

/**
 * ```
 * Differs from TASK_VEHICLE_DRIVE_TO_COORDS in that it will pick the shortest possible road route without taking one-way streets and other "road laws" into consideration.  
 * WARNING:  
 * A behaviorFlag value of 0 will result in a clunky, stupid driver!  
 * Recommended settings:  
 * speed = 30.0f,  
 * behaviorFlag = 156,   
 * stoppingRange = 5.0f;  
 * If you simply want to have your driver move to a fixed location, call it only once, or, when necessary in the event of interruption.   
 * If using this to continually follow a Ped who is on foot:  You will need to run this in a tick loop.  Call it in with the Ped's updated coordinates every 20 ticks or so and you will have one hell of a smart, fast-reacting NPC driver -- provided he doesn't get stuck.  If your update frequency is too fast, the Ped may not have enough time to figure his way out of being stuck, and thus, remain stuck.  One way around this would be to implement an "anti-stuck" mechanism, which allows the driver to realize he's stuck, temporarily pause the tick, unstuck, then resume the tick.  
 * EDIT:  This is being discussed in more detail at http://gtaforums.com/topic/818504-any-idea-on-how-to-make-peds-clever-and-insanely-fast-c/  
 * ```
 * @param ped - 
 * @param vehicle - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param speed - 
 * @param behaviorFlag - 
 * @param stoppingRange - 
 * @returns void
 * @remarks Hash: 0x195AEEB13CEFE2EE
 */
export function taskVehicleGotoNavmesh(ped: number, vehicle: number, x: number, y: number, z: number, speed: number, behaviorFlag: number, stoppingRange: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x621C6E4729388E41
 */
export function isPedPlayingBaseClipInScenario(ped: number): number;

/**
 * Immediately stops the pedestrian from whatever it's doing. The difference between this and [CLEAR_PED_TASKS](#_0xE1EF3C1216AFF2CD) is that this one teleports the ped but does not change the position of the ped.
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xAAA34F8A7CB32098
 */
export function clearPedTasksImmediately(ped: number): void;

/**
 * ```
 * Used only once in the scripts (fm_mission_controller) like so:
 * 
 * TASK::_0xAB13A5565480B6D9(iLocal_3160, "Cutting");
 * 
 * SET_*
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0xAB13A5565480B6D9
 */
export function 0xab13a5565480b6d9(ped: number, p1: string): any;

/**
 * ```
 * duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped  
 * ```
 * @param ped - 
 * @param entity - 
 * @param duration - 
 * @param bInstantBlendToAim - 
 * @returns void
 * @remarks Hash: 0x9B53BB6E8943AF53
 */
export function taskAimGunAtEntity(ped: number, entity: number, duration: number, bInstantBlendToAim: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x295E3CCEC879CCD7
 */
export function pedHasUseScenarioTask(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xB8EBB1E9D3588C10
 */
export function isPlayingPhoneGestureAnim(ped: number): number;

/**
 * ```
 * eg
 *  TASK::TASK_GOTO_ENTITY_AIMING(v_2, PLAYER::PLAYER_PED_ID(), 5.0, 25.0);
 * ped = Ped you want to perform this task.
 * target = the Entity they should aim at.
 * distanceToStopAt = distance from the target, where the ped should stop to aim.
 * StartAimingDist = distance where the ped should start to aim.
 * ```
 * @param ped - 
 * @param target - 
 * @param distanceToStopAt - 
 * @param StartAimingDist - 
 * @returns void
 * @remarks Hash: 0xA9DA48FAB8A76C12
 */
export function taskGotoEntityAiming(ped: number, target: number, distanceToStopAt: number, StartAimingDist: number): void;

/**
 * ```
 * Default modifier is 1.0, minimum is 0.0 and maximum is 10.0.
 * ```
 * @param ped - 
 * @param modifier - 
 * @returns void
 * @remarks Hash: 0x88E32DB8C1A4AA4B
 */
export function setPedPathClimbCostModifier(ped: number, modifier: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param targetPed - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x8605AF0DE8B3A5AC
 */
export function taskAimGunScriptedWithTarget(ped: number, targetPed: number, x: number, y: number, z: number): void;

/**
 * ```
 * duration in milliseconds  
 * ```
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param duration - 
 * @returns void
 * @remarks Hash: 0x1DDA930A0AC38571
 */
export function taskTurnPedToFaceCoord(ped: number, x: number, y: number, z: number, duration: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x8423541E8B3A1589
 */
export function 0x8423541e8b3a1589(p0: any, p1: any, p2: any): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x8785E6E40C7A8818
 */
export function isDrivebyTaskUnderneathDrivingTask(ped: number): number;

/**
 * ```
 * Looks like p1 may be a flag, still need to do some research, though.
 * ```
 * @param ped - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xEE08C992D238C5D1
 */
export function stopAnimPlayback(ped: number, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xDE4C184B2B9B071A
 */
export function isPedWalking(ped: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x74E559B3BC910685
 */
export function isPedCuffed(ped: number): number;

/**
 * ```
 * Looks like the last parameter returns true if the path has been calculated, while the first returns the remaining distance to the end of the path.
 * Return value of native is the same as GET_NAVMESH_ROUTE_RESULT
 * Looks like the native returns an int for the path's state:
 * 1 - ???
 * 2 - ???
 * 3 - Finished Generating
 * ```
 * @param ped - 
 * @param distanceRemaining - 
 * @param isPathReady - 
 * @returns number
 * @remarks Hash: 0xC6F5C0BCDC74D62D
 */
export function getNavmeshRouteDistanceRemaining(ped: number, distanceRemaining: number, isPathReady: number): number;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x6FA46612594F7973
 */
export function taskLookAtCoord(entity: number, x: number, y: number, z: number): void;

/**
 * ```
 * For a full list of the points, see here: goo.gl/wIH0vn
 * ```
 * @param name - 
 * @param point - 
 * @param coord - 
 * @returns number
 * @remarks Hash: 0x2FB897405C90B361
 */
export function waypointRecordingGetCoord(name: string, point: number, coord: { x: number, y: number, z: number }): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x1E982AC8716912C5
 */
export function setPedDesiredMoveBlendRatio(ped: number, p1: number): void;

/**
 * ```
 * Makes a ped follow the targetVehicle with <minDistance> in between.  
 * note: minDistance is ignored if drivingstyle is avoiding traffic, but Rushed is fine.  
 * Mode: The mode defines the relative position to the targetVehicle. The ped will try to position its vehicle there.  
 * -1 = behind  
 * 0 = ahead  
 * 1 = left  
 * 2 = right  
 * 3 = back left  
 * 4 = back right  
 * if the target is closer than noRoadsDistance, the driver will ignore pathing/roads and follow you directly.  
 * Driving Styles guide: gtaforums.com/topic/822314-guide-driving-styles/  
 * ```
 * @param ped - 
 * @param vehicle - 
 * @param targetVehicle - 
 * @param mode - 
 * @param speed - 
 * @param drivingStyle - 
 * @param minDistance - 
 * @param p7 - 
 * @param noRoadsDistance - 
 * @returns void
 * @remarks Hash: 0x0FA6E4B75F302400
 */
export function taskVehicleEscort(ped: number, vehicle: number, targetVehicle: number, mode: number, speed: number, drivingStyle: number, minDistance: number, p7: number, noRoadsDistance: number): void;

/**
 * @returns void
 * @remarks Hash: 0x4202BBCB8684563D
 */
export function resetExclusiveScenarioGroup(): void;

/**
 * ```
 * This function is called on peds in vehicles.  
 * anim: animation name  
 * p2, p3, p4: "sweep_low", "sweep_med" or "sweep_high"  
 * p5: no idea what it does but is usually -1  
 * ```
 * @param ped - 
 * @param anim - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param vehicle - 
 * @param p7 - 
 * @param p8 - 
 * @returns void
 * @remarks Hash: 0x2047C02158D6405A
 */
export function taskSweepAimEntity(ped: number, anim: string, p2: string, p3: string, p4: string, p5: number, vehicle: number, p7: number, p8: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns string
 * @remarks Hash: 0x3A8CADC7D37AACC5
 */
export function getClipSetForScriptedGunTask(p0: number): string;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns number
 * @remarks Hash: 0x0A9D0C2A3BBC86C1
 */
export function doesScenarioOfTypeExistInArea(p0: number, p1: number, p2: number, p3: string, p4: number, p5: number): number;

/**
 * ```
 * Stealth kill action name hashes:  
 * stealth kills can be found here: Grand Theft Auto V\common.rpf\data\action\stealth_kills.meta  
 * ...  
 * {  
 *     "ACT_stealth_kill_a",  
 *     "ACT_stealth_kill_weapon",  
 *     "ACT_stealth_kill_b",  
 *     "ACT_stealth_kill_c",  
 *     "ACT_stealth_kill_d",  
 *     "ACT_stealth_kill_a_gardener"  
 * }  
 * Only known script using this native: fbi4_prep2  
 * EXAMPLE:  
 * ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key("AR_stealth_kill_a"), 1f, 0);ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key("AR_stealth_kill_knife"), 1f, 0);  
 * Also it may be important to note, that each time this task is called, it's followed by AI::CLEAR_PED_TASKS on the target  
 * ```
 * @param killer - 
 * @param target - 
 * @param actionType - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xAA5DC05579D60BD9
 */
export function taskStealthKill(killer: number, target: number, actionType: number, p3: number, p4: any): void;

/**
 * ```
 * Makes the specified ped stand still for (time) milliseconds.  
 * ```
 * @param ped - 
 * @param time - 
 * @returns void
 * @remarks Hash: 0x919BE13EED931959
 */
export function taskStandStill(ped: number, time: number): void;

/**
 * ## Parameters
 * *
 * @param name - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x5A353B8E6B1095B5
 */
export function useWaypointRecordingAsAssistedMovementRoute(name: string, p1: number, p2: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param duration - 
 * @returns void
 * @remarks Hash: 0x5EE02954A14C69DB
 */
export function taskUseMobilePhoneTimed(ped: number, duration: number): void;

/**
 * Will make the ped move to a coordinate while aiming (and optionally shooting) at the given entity.
 * 
 * ```c
 * enum eFiringPatternHashes {
 *     FIRING_PATTERN_DEFAULT = 0,
 *     FIRING_PATTERN_BURST_FIRE = -687903391,
 *     FIRING_PATTERN_BURST_FIRE_DRIVEBY = -753768974,
 *     FIRING_PATTERN_FULL_AUTO = -957453492,
 *     FIRING_PATTERN_SINGLE_SHOT = 1566631136,
 *     FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 2055493265,
 *     FIRING_PATTERN_BURST_FIRE_HELI = -1857128337,
 *     FIRING_PATTERN_SHORT_BURSTS = 445831135,
 *     FIRING_PATTERN_BURST_FIRE_MICRO = 1122960381,
 *     FIRING_PATTERN_SLOW_FIRE_TANK = -490063247,
 *     FIRING_PATTERN_TAMPA_MORTAR = -1842093953
 * }
 * ```
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param entityToAimAt - 
 * @param moveSpeed - 
 * @param shoot - 
 * @param targetRadius - 
 * @param slowDistance - 
 * @param useNavMesh - 
 * @param navFlags - 
 * @param instantBlendAtAim - 
 * @returns void
 * @remarks Hash: 0xB2A16444EAD9AE47
 */
export function taskGoToCoordWhileAimingAtEntity(ped: number, x: number, y: number, z: number, entityToAimAt: number, moveSpeed: number, shoot: number, targetRadius: number, slowDistance: number, useNavMesh: number, navFlags: number, instantBlendAtAim: number): void;

/**
 * ```
 * This function has a third parameter as well (bool).  
 * Second parameter is unused.  
 * seconds parameter was for jetpack in the early stages of gta and the hard coded code is now removed  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 3: BOOL p2
 * ```
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xD2F1C53C97EE81AB
 */
export function taskParachute(ped: number, p1: number): void;

/**
 * Used in am_vehicle_spawn.ysc and am_mp_submarine.ysc.
 * p0 is always 0, p5 is always 1
 * p1 is the vehicle handle of the submarine. Submarine must have a driver, but the ped handle is not passed to the native.
 * Speed can be set by calling SET_DRIVE_TASK_CRUISE_SPEED after
 * 
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param submarine - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0xC22B40579A498CA4
 */
export function TaskSubmarineGotoAndStop(p0: any, submarine: number, x: number, y: number, z: number, p5: any): void;

/**
 * ```
 * Example from "me_amanda1.ysc.c4":
 * TASK::TASK_ARREST_PED(l_19F /* This is a Ped */ , PLAYER::PLAYER_PED_ID());
 * Example from "armenian1.ysc.c4":
 * if (!PED::IS_PED_INJURED(l_B18[0/*1*/])) {
 *     TASK::TASK_ARREST_PED(l_B18[0/*1*/], PLAYER::PLAYER_PED_ID());
 * }
 * I would love to have time to experiment to see if a player Ped can arrest another Ped. Might make for a good cop mod.
 * Looks like only the player can be arrested this way. Peds react and try to arrest you if you task them, but the player charater doesn't do anything if tasked to arrest another ped.
 * ```
 * @param ped - 
 * @param target - 
 * @returns void
 * @remarks Hash: 0xF3B9A78A178572B1
 */
export function taskArrestPed(ped: number, target: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param fleeTarget - 
 * @returns void
 * @remarks Hash: 0x72C896464915D1B1
 */
export function taskReactAndFleePed(ped: number, fleeTarget: number): void;

/**
 * ```
 * pilot, vehicle and altitude are rather self-explanatory.  
 * p4: is unused variable in the function.  
 * entityToFollow: you can provide a Vehicle entity or a Ped entity, the heli will protect them.  
 * 'targetSpeed':  The pilot will dip the nose AS MUCH AS POSSIBLE so as to reach this value AS FAST AS POSSIBLE.  As such, you'll want to modulate it as opposed to calling it via a hard-wired, constant #.  
 * 'radius' isn't just "stop within radius of X of target" like with ground vehicles.  In this case, the pilot will fly an entire circle around 'radius' and continue to do so.  
 * NOT CONFIRMED:  p7 appears to be a FlyingStyle enum.  Still investigating it as of this writing, but playing around with values here appears to result in different -behavior- as opposed to offsetting coordinates, altitude, target speed, etc.  
 * NOTE: If the pilot finds enemies, it will engage them until it kills them, but will return to protect the ped/vehicle given shortly thereafter.  
 * ```
 * @param pilot - 
 * @param vehicle - 
 * @param entityToFollow - 
 * @param targetSpeed - 
 * @param p4 - 
 * @param radius - 
 * @param altitude - 
 * @param p7 - 
 * @returns void
 * @remarks Hash: 0x1E09C32048FEFD1C
 */
export function taskVehicleHeliProtect(pilot: number, vehicle: number, entityToFollow: number, targetSpeed: number, p4: number, radius: number, altitude: number, p7: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param speed - 
 * @param timeout - 
 * @param unkFloat - 
 * @param unkInt - 
 * @param unkX - 
 * @param unkY - 
 * @param unkZ - 
 * @param unk_40000f - 
 * @returns void
 * @remarks Hash: 0x17F58B88D085DBAC
 */
export function taskFollowNavMeshToCoordAdvanced(ped: number, x: number, y: number, z: number, speed: number, timeout: number, unkFloat: number, unkInt: number, unkX: number, unkY: number, unkZ: number, unk_40000f: number): void;

/**
 * ```
 * Routes: "1_FIBStairs", "2_FIBStairs", "3_FIBStairs", "4_FIBStairs", "5_FIBStairs", "5_TowardsFire", "6a_FIBStairs", "7_FIBStairs", "8_FIBStairs", "Aprtmnt_1", "AssAfterLift", "ATM_1", "coroner2", "coroner_stairs", "f5_jimmy1", "fame1", "family5b", "family5c", "Family5d", "family5d", "FIB_Glass1", "FIB_Glass2", "FIB_Glass3", "finaBroute1A", "finalb1st", "finalB1sta", "finalbround", "finalbroute2", "Hairdresser1", "jan_foyet_ft_door", "Jo_3", "Lemar1", "Lemar2", "mansion_1", "Mansion_1", "pols_1", "pols_2", "pols_3", "pols_4", "pols_5", "pols_6", "pols_7", "pols_8", "Pro_S1", "Pro_S1a", "Pro_S2", "Towards_case", "trev_steps", "tunrs1", "tunrs2", "tunrs3", "Wave01457s"  
 * ```
 * @param route - 
 * @returns void
 * @remarks Hash: 0x817268968605947A
 */
export function assistedMovementRequestRoute(route: string): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param timeout - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @param p10 - 
 * @returns void
 * @remarks Hash: 0x4172393E6BE1FECE
 */
export function taskPutPedDirectlyIntoCover(ped: number, x: number, y: number, z: number, timeout: any, p5: number, p6: number, p7: number, p8: number, p9: any, p10: number): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x6100B3CEFD43452E
 */
export function 0x6100b3cefd43452e(p0: any): void;

/**
 * Puts the ped into the given scenario immediately at their current location. [List of scenario names](https://pastebin.com/6mrYTdQv) or in `update/update.rpf/common/data/ai/scenarios.meta`.
 * @param ped - 
 * @param scenarioName - 
 * @param timeToLeave - 
 * @param playIntroClip - 
 * @returns void
 * @remarks Hash: 0x142A02425FF02BD9
 */
export function taskStartScenarioInPlace(ped: number, scenarioName: string, timeToLeave: number, playIntroClip: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x47619ABE8B268C60
 */
export function getPhoneGestureAnimCurrentTime(ped: number): number;

/**
 * ```
 * makes ped parachute to coords x y z. Works well with PATHFIND::GET_SAFE_COORD_FOR_PED  
 * ```
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xB33E291AFA6BD03A
 */
export function taskParachuteToTarget(ped: number, x: number, y: number, z: number): void;

/**
 * ```
 * Updated variables
 * An alternative to TASK::TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP. Makes the ped walk to the scenario instead.
 * ```
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param distance - 
 * @param duration - 
 * @returns void
 * @remarks Hash: 0x277F471BA9DB000B
 */
export function taskUseNearestScenarioToCoord(ped: number, x: number, y: number, z: number, distance: number, duration: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param thrust - 
 * @returns void
 * @remarks Hash: 0x0729BAC1B8C64317
 */
export function setParachuteTaskThrust(ped: number, thrust: number): void;

/**
 * ```
 * NativeDB Added Parameter 2: BOOL p1
 * ```
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x601736CFE536B0A0
 */
export function taskSkyDive(ped: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0xD2A207EEBDF9889B
 */
export function taskGuardAssignedDefensiveArea(p0: any, p1: number, p2: number, p3: number, p4: number, p5: number, p6: any): void;

/**
 * ```
 * Flags from decompiled scripts:  
 * 0 = normal exit and closes door.  
 * 1 = normal exit and closes door.  
 * 16 = teleports outside, door kept closed.  (This flag does not seem to work for the front seats in buses, NPCs continue to exit normally)
 * 64 = normal exit and closes door, maybe a bit slower animation than 0.  
 * 256 = normal exit but does not close the door.  
 * 4160 = ped is throwing himself out, even when the vehicle is still.  
 * 262144 = ped moves to passenger seat first, then exits normally  
 * Others to be tried out: 320, 512, 131072.  
 * ```
 * @param ped - 
 * @param vehicle - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0xD3DBCE61A490BE02
 */
export function taskLeaveVehicle(ped: number, vehicle: number, flags: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param heading - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0x5A4A6A6D3DC64F52
 */
export function taskPedSlideToCoordHdgRate(ped: number, x: number, y: number, z: number, heading: number, p5: number, p6: number): void;

/**
 * Tells a ped to go to a coord by any means.
 * 
 * ```c
 * enum eDrivingMode {
 *   DF_StopForCars = 1,
 *   DF_StopForPeds = 2,
 *   DF_SwerveAroundAllCars = 4,
 *   DF_SteerAroundStationaryCars = 8,
 *   DF_SteerAroundPeds = 16,
 *   DF_SteerAroundObjects = 32,
 *   DF_DontSteerAroundPlayerPed = 64,
 *   DF_StopAtLights = 128,
 *   DF_GoOffRoadWhenAvoiding = 256,
 *   DF_DriveIntoOncomingTraffic = 512,
 *   DF_DriveInReverse = 1024,
 * 
 *   // If pathfinding fails, cruise randomly instead of going on a straight line
 *   DF_UseWanderFallbackInsteadOfStraightLine = 2048,
 * 
 *   DF_AvoidRestrictedAreas = 4096,
 * 
 *   // These only work on MISSION_CRUISE
 *   DF_PreventBackgroundPathfinding = 8192,
 *   DF_AdjustCruiseSpeedBasedOnRoadSpeed = 16384,
 * 
 *   DF_UseShortCutLinks =  262144,
 *   DF_ChangeLanesAroundObstructions = 524288,
 *   // cruise tasks ignore this anyway--only used for goto's
 *   DF_UseSwitchedOffNodes =  2097152,
 *   // if you're going to be primarily driving off road
 *   DF_PreferNavmeshRoute =  4194304,
 * 
 *   // Only works for planes using MISSION_GOTO, will cause them to drive along the ground instead of fly
 *   DF_PlaneTaxiMode =  8388608,
 * 
 *   DF_ForceStraightLine = 16777216,
 *   DF_UseStringPullingAtJunctions = 33554432,
 * 
 *   DF_AvoidHighways = 536870912,
 *   DF_ForceJoinInRoadDirection = 1073741824,
 * 
 *   // Standard driving mode. stops for cars, peds, and lights, goes around stationary obstructions
 *   DRIVINGMODE_STOPFORCARS = 786603, // DF_StopForCars|DF_StopForPeds|DF_SteerAroundObjects|DF_SteerAroundStationaryCars|DF_StopAtLights|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions,		// Obey lights too
 * 
 *   // Like the above, but doesn't steer around anything in its way - will only wait instead.
 *   DRIVINGMODE_STOPFORCARS_STRICT = 262275, // DF_StopForCars|DF_StopForPeds|DF_StopAtLights|DF_UseShortCutLinks, // Doesn't deviate an inch.
 * 
 *   // Default "alerted" driving mode. drives around everything, doesn't obey lights
 *   DRIVINGMODE_AVOIDCARS = 786469, // DF_SwerveAroundAllCars|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars,
 * 
 *   // Very erratic driving. difference between this and AvoidCars is that it doesn't use the brakes at ALL to help with steering
 *   DRIVINGMODE_AVOIDCARS_RECKLESS = 786468, // DF_SwerveAroundAllCars|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions,
 * 
 *   // Smashes through everything
 *   DRIVINGMODE_PLOUGHTHROUGH = 262144, // DF_UseShortCutLinks
 * 
 *   // Drives normally except for the fact that it ignores lights
 *   DRIVINGMODE_STOPFORCARS_IGNORELIGHTS = 786475, // DF_StopForCars|DF_SteerAroundStationaryCars|DF_StopForPeds|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions
 * 
 *   // Try to swerve around everything, but stop for lights if necessary
 *   DRIVINGMODE_AVOIDCARS_OBEYLIGHTS = 786597, // DF_SwerveAroundAllCars|DF_StopAtLights|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars
 * 
 *   // Swerve around cars, be careful around peds, and stop for lights
 *   DRIVINGMODE_AVOIDCARS_STOPFORPEDS_OBEYLIGHTS = 786599 // DF_SwerveAroundAllCars|DF_StopAtLights|DF_StopForPeds|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars
 * };
 * ```
 * @param ped - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param fMoveBlendRatio - 
 * @returns void
 * @remarks Hash: 0x5BC448CB78FA3E88
 */
export function taskGoToCoordAnyMeans(ped: number, x: number, y: number, z: number, fMoveBlendRatio: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param target - 
 * @returns void
 * @remarks Hash: 0xE41885592B08B097
 */
export function taskVehicleAimAtPed(ped: number, target: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param eventName - 
 * @returns number
 * @remarks Hash: 0xB4F47213DF45A64C
 */
export function getTaskMoveNetworkEvent(ped: number, eventName: string): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x95A6C46A31D1917D
 */
export function taskClearDefensiveArea(p0: any): void;

/**
 * @returns void
 * @remarks Hash: 0xB043ECA801B8CBC1
 */
export function closePatrolRoute(): void;

/**
 * ## Parameters
 * *
 * @param threadId - 
 * @returns void
 * @remarks Hash: 0xC8B189ED9138BCD4
 */
export function terminateThread(threadId: number): void;

/**
 * @returns void
 * @remarks Hash: 0x078EBE9809CCD637
 */
export function shutdownLoadingScreen(): void;

/**
 * ## Parameters
 * *
 * @param scriptHash - 
 * @returns void
 * @remarks Hash: 0xC5BC038960E9DB27
 */
export function setScriptWithNameHashAsNoLongerNeeded(scriptHash: number): void;

/**
 * ```
 * If the function returns 0, the end of the iteration has been reached.
 * ```
 * @returns number
 * @remarks Hash: 0x30B4FA1C82DD4B9F
 */
export function scriptThreadIteratorGetNextThreadId(): number;

/**
 * ## Parameters
 * *
 * @param scriptName - 
 * @returns void
 * @remarks Hash: 0xC90D2DCACD56184C
 */
export function setScriptAsNoLongerNeeded(scriptName: string): void;

/**
 * ```
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
 * ```
 * @param eventGroup - 
 * @param eventIndex - 
 * @param eventData - 
 * @param eventDataSize - 
 * @returns number
 * @remarks Hash: 0x2902843FCD2B2D79
 */
export function getEventData(eventGroup: number, eventIndex: number, eventData: number, eventDataSize: number): number;

/**
 * Starts a new iteration of the current threads.
 * Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
 * @returns void
 * @remarks Hash: 0xDADFADA5A20143A8
 */
export function scriptThreadIteratorReset(): void;

/**
 * ## Return value
 * @returns string
 * @remarks Hash: 0x442E0A7EDE4A738A
 */
export function getThisScriptName(): string;

/**
 * ```
 * See TRIGGER_SCRIPT_EVENT
 * ```
 * @returns void
 * @remarks Hash: 0xA40CC53DF8E50837
 */
export function TriggerScriptEvent2(): void;

/**
 * Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
 * @param scriptName - 
 * @returns number
 * @remarks Hash: 0xE6CC9F3BA0FB9EF1
 */
export function hasScriptLoaded(scriptName: string): number;

/**
 * ```
 * Deletes the given context from the background scripts context map.
 * 
 * NativeDB Introduced: v323
 * ```
 * @param contextName - 
 * @returns void
 * @remarks Hash: 0xDC2BACD920D0A0DD
 */
export function bgEndContext(contextName: string): void;

/**
 * ```
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 * ```
 * @param eventGroup - 
 * @param eventIndex - 
 * @returns number
 * @remarks Hash: 0x936E6168A9BCEDB5
 */
export function getEventExists(eventGroup: number, eventIndex: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x18C1270EA7F199BC
 */
export function getNoLoadingScreen(): number;

/**
 * ```
 * BG_*
 * 
 * NativeDB Introduced: v323
 * ```
 * @param scriptIndex - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x22E21FBCFC88C149
 */
export function 0x22e21fbcfc88c149(scriptIndex: number, p1: string): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC30338E8088E2E21
 */
export function getIdOfThisThread(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x8A1C8B1738FFE87E
 */
export function getHashOfThisScriptName(): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x5262CC1995D07E09
 */
export function setNoLoadingScreen(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param scriptHash - 
 * @returns number
 * @remarks Hash: 0xF86AA3C56BA31381
 */
export function doesScriptWithNameHashExist(scriptHash: number): number;

/**
 * @returns void
 * @remarks Hash: 0x1090044AD1DA76FA
 */
export function terminateThisThread(): void;

/**
 * ```
 * BG_*
 * 
 * NativeDB Introduced: v323
 * ```
 * @param scriptIndex - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x0F6F1EBBC4E1D5E6
 */
export function 0x0f6f1ebbc4e1d5e6(scriptIndex: number, p1: string): number;

/**
 * ```
 * formerly _REQUEST_STREAMED_SCRIPT  
 * ```
 * @param scriptHash - 
 * @returns void
 * @remarks Hash: 0xD62A67D26D9653E6
 */
export function requestScriptWithNameHash(scriptHash: number): void;

/**
 * ```
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
 * playerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players.
 * ```
 * @param eventGroup - 
 * @param eventData - 
 * @param eventDataSize - 
 * @param playerBits - 
 * @returns void
 * @remarks Hash: 0x5AE99C571D5BBE5D
 */
export function triggerScriptEvent(eventGroup: number, eventData: number, eventDataSize: number, playerBits: number): void;

/**
 * ## Parameters
 * *
 * @param scriptName - 
 * @returns void
 * @remarks Hash: 0x6EB5F71AA68F2E8E
 */
export function requestScript(scriptName: string): void;

/**
 * ## Parameters
 * *
 * @param scriptName - 
 * @returns number
 * @remarks Hash: 0xFC04745FBE67C19A
 */
export function doesScriptExist(scriptName: string): number;

/**
 * ```
 * Hashed version of 0xDC2BACD920D0A0DD.
 * 
 * NativeDB Introduced: v323
 * ```
 * @param contextHash - 
 * @returns void
 * @remarks Hash: 0x107E5CC7CA942BC1
 */
export function bgEndContextHash(contextHash: number): void;

/**
 * ```
 * Hashed version of 0x9D5A25BADB742ACD.
 * 
 * NativeDB Introduced: v323
 * ```
 * @param contextHash - 
 * @returns void
 * @remarks Hash: 0x75B18E49607874C7
 */
export function bgStartContextHash(contextHash: number): void;

/**
 * ```
 * Inserts the given context into the background scripts context map.
 * 
 * NativeDB Introduced: v323
 * ```
 * @param contextName - 
 * @returns void
 * @remarks Hash: 0x9D5A25BADB742ACD
 */
export function bgStartContext(contextName: string): void;

/**
 * ```
 * Returns true if bit 0 in GtaThread+0x154 is set.
 * 
 * BG_*
 * 
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0x836B62713E0534CA
 */
export function 0x836b62713e0534ca(): number;

/**
 * ```
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 * ```
 * @param eventGroup - 
 * @returns number
 * @remarks Hash: 0x5F92A689A06620AA
 */
export function getNumberOfEvents(eventGroup: number): number;

/**
 * ```
 * Gets the number of instances of the specified script is currently running.
 * Actually returns numRefs - 1.
 * if (program)
 * 	v3 = rage::scrProgram::GetNumRefs(program) - 1;
 * return v3;
 * ```
 * @param scriptHash - 
 * @returns number
 * @remarks Hash: 0x2C83A9DA6BFFC4F9
 */
export function GetNumberOfReferencesOfScriptWithNameHash(scriptHash: number): number;

/**
 * ## Parameters
 * *
 * @param threadId - 
 * @returns number
 * @remarks Hash: 0x46E9AE36D8FA6417
 */
export function isThreadActive(threadId: number): number;

/**
 * ```
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 * ```
 * @param eventGroup - 
 * @param eventIndex - 
 * @returns number
 * @remarks Hash: 0xD8F66A3A60C62153
 */
export function getEventAtIndex(eventGroup: number, eventIndex: number): number;

/**
 * ```
 * BG_*
 * 
 * NativeDB Introduced: v323
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x829CD22E043A2577
 */
export function 0x829cd22e043a2577(p0: number): number;

/**
 * ## Parameters
 * *
 * @param threadId - 
 * @returns string
 * @remarks Hash: 0x05A42BA9FC8DA96B
 */
export function GetNameOfThread(threadId: number): string;

/**
 * ## Parameters
 * *
 * @param scriptHash - 
 * @returns number
 * @remarks Hash: 0x5F0F0C783EB16C04
 */
export function hasScriptWithNameHashLoaded(scriptHash: number): number;

/**
 * ```
 * Sets bit 1 in GtaThread+0x154
 * 
 * BG_*
 * 
 * NativeDB Introduced: v323
 * ```
 * @returns void
 * @remarks Hash: 0x760910B49D2B98EA
 */
export function 0x760910b49d2b98ea(): void;

/**
 * Updates the display of the MP/SP loading buttons, and locks the state so that other options are not displayed or changed. This can only be done once.
 * @returns void
 * @remarks Hash: 0xB1577667C3708F9B
 */
export function LockLoadingScreenButtons(): void;

/**
 * ```
 * Probably IS_SWITCH_*
 * ```
 * @returns number
 * @remarks Hash: 0x933BBEEB8C61B5F4
 */
export function 0x933bbeeb8c61b5f4(): number;

/**
 * Releases the script ownership assigned by REQUEST\_MODEL. This command should be used when done using a specific model hash in script.
 * @param model - 
 * @returns void
 * @remarks Hash: 0xE532F5D78798DAAB
 */
export function setModelAsNoLongerNeeded(model: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0xEF39EE20C537E98C
 */
export function 0xef39ee20c537e98c(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;

/**
 * ```
 * Returns true if the player is currently switching, false otherwise.  
 * (When the camera is in the sky moving from Trevor to Franklin for example)  
 * ```
 * @returns number
 * @remarks Hash: 0xD9D2CFFF49FAB35F
 */
export function isPlayerSwitchInProgress(): number;

/**
 * ## Parameters
 * *
 * @param unused - 
 * @returns number
 * @remarks Hash: 0x07C313F94746702C
 */
export function streamvolIsValid(unused: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xF8155A7F03DDFC8E
 */
export function 0xf8155a7f03ddfc8e(p0: any): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xF086AD9354FAC3A3
 */
export function removeModelFromCreatorBudget(): void;

/**
 * ```
 * Alias for HAS_ANIM_SET_LOADED.  
 * ```
 * @param clipSet - 
 * @returns number
 * @remarks Hash: 0x318234F4F3738AF3
 */
export function hasClipSetLoaded(clipSet: string): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x4448EB75B4904BDB
 */
export function loadScene(x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x77B5F9A36BF96710
 */
export function setReducePedModelBudget(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param clipSet - 
 * @returns void
 * @remarks Hash: 0xD2A71E1A77418A49
 */
export function requestClipSet(clipSet: string): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xCB9E1EB3BE2AF4E9
 */
export function setVehiclePopulationBudget(p0: number): void;

/**
 * Returns true when the srl from BEGIN_SRL is loaded.
 * @returns number
 * @remarks Hash: 0xD0263801A4C5B0BB
 */
export function isSrlLoaded(): number;

/**
 * Unloads the specified animation set. An animation set provides movement animations for a ped.
 * 
 * Animation set and clip set are synonymous. See [`SET_PED_MOVEMENT_CLIPSET`](#_0xAF8A94EDE7712BEF).
 * @param animSet - 
 * @returns void
 * @remarks Hash: 0x16350528F93024B3
 */
export function removeAnimSet(animSet: string): void;

/**
 * ## Parameters
 * *
 * @param iplName - 
 * @returns number
 * @remarks Hash: 0x88A741E44A2B3495
 */
export function isIplActive(iplName: string): number;

/**
 * ## Parameters
 * *
 * @param animDict - 
 * @returns void
 * @remarks Hash: 0xD3BD40951412FEF6
 */
export function requestAnimDict(animDict: string): void;

/**
 * Sets the memory budget level for ped population.
 * @param budgetLevel - 
 * @returns void
 * @remarks Hash: 0x8C95333CFC3340F3
 */
export function setPedPopulationBudget(budgetLevel: number): void;

/**
 * @returns void
 * @remarks Hash: 0x95C0A5BBDC189AA1
 */
export function stopPlayerSwitch(): void;

/**
 * ## Parameters
 * *
 * @param animDict - 
 * @returns void
 * @remarks Hash: 0xF66A602F829E2A06
 */
export function removeAnimDict(animDict: string): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xFB199266061F820A
 */
export function 0xfb199266061f820a(): number;

/**
 * ```
 *  From the b678d decompiled scripts:
 *  STREAMING::REQUEST_NAMED_PTFX_ASSET("core_snow");
 *  STREAMING::REQUEST_NAMED_PTFX_ASSET("fm_mission_controler");
 *  STREAMING::REQUEST_NAMED_PTFX_ASSET("proj_xmas_firework");
 *  STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_apartment_mp");
 *  STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_biolab_heist");
 *  STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_fireworks");
 *  STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_parachute");
 *  STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_wheelsmoke");
 *  STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_cig_plane");
 *  STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_creator");
 *  STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_tankbattle");
 *  STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_ornate_heist");
 *  STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_prison_break_heist_station");
 * ```
 * @param fxName - 
 * @returns void
 * @remarks Hash: 0xB80D8756B4668AB6
 */
export function requestNamedPtfxAsset(fxName: string): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6E0C692677008888
 */
export function setStreaming(toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0x472397322E92A856
 */
export function 0x472397322e92a856(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xBC9823AB80A3DCAC
 */
export function isStreamvolActive(): number;

/**
 * ## Parameters
 * *
 * @param fxName - 
 * @returns number
 * @remarks Hash: 0x8702416E512EC454
 */
export function hasNamedPtfxAssetLoaded(fxName: string): number;

/**
 * ## Return value
 * - Returns 5 if the player is in the air (in a state of switch).
 * - Returns 12 if the player is either not in the air or if the switch is completed.
 * @returns number
 * @remarks Hash: 0x470555300D10B2A5
 */
export function getPlayerSwitchState(): number;

/**
 * Calls [`REQUEST_MODEL`](#_0x963D27A58DF860AC) with the `STRFLAG_PRIORITY_LOAD` and `STRFLAG_FORCE_LOAD` set.
 * @param model - 
 * @returns void
 * @remarks Hash: 0xA0261AEF7ACFC51E
 */
export function requestMenuPedModel(model: number): void;

/**
 * @returns void
 * @remarks Hash: 0x31B73D1EA9F01DA2
 */
export function clearFocus(): void;

/**
 * @returns void
 * @remarks Hash: 0x43D1680C6D19A8E9
 */
export function allowPlayerSwitchPan(): void;

/**
 * @returns void
 * @remarks Hash: 0xC197616D221FF4A4
 */
export function newLoadSceneStop(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x4060057271CEBC89
 */
export function getNumberOfStreamingRequests(): number;

/**
 * @returns void
 * @remarks Hash: 0xBD6E84632DD4CB3F
 */
export function loadAllObjectsNow(): void;

/**
 * @returns void
 * @remarks Hash: 0xBD605B8E0E18B3BB
 */
export function disableSwitchOutroFx(): void;

/**
 * ```
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "V_FIB01_cur_elev");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "V_Office_gnd_lifts");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "limbo");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "v_fib01_jan_elev");
 * STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
 * ```
 * @param interior - 
 * @param roomName - 
 * @returns void
 * @remarks Hash: 0x8A7A40100EDFEC58
 */
export function requestModelsInRoom(interior: number, roomName: string): void;

/**
 * ## Parameters
 * *
 * @param style - 
 * @returns void
 * @remarks Hash: 0x5F2013F8BC24EE69
 */
export function setPlayerShortSwitchStyle(style: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x20C6C7E4EB082A7F
 */
export function 0x20c6c7e4eb082a7f(p0: number): void;

/**
 * @returns void
 * @remarks Hash: 0xB5A4DB34FE89B88A
 */
export function initCreatorBudget(): void;

/**
 * ## Parameters
 * *
 * @param animDict - 
 * @returns number
 * @remarks Hash: 0x2DA49C3B79856961
 */
export function doesAnimDictExist(animDict: string): number;

/**
 * ```
 * Exemple: REQUEST_IPL("TrevorsTrailerTrash");
 * ```
 * @param iplName - 
 * @returns void
 * @remarks Hash: 0x41B4893843BBDB74
 */
export function requestIpl(iplName: string): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA41A05B6CB741B85
 */
export function isNewLoadSceneActive(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x20F898A5D9782800
 */
export function getPlayerShortSwitchState(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x0C15B0E443B2349D
 */
export function getLodscale(): number;

/**
 * This native is used to attribute the SRL that BeginSrl is going to load. This is usually used for 'in-game' cinematics (not cutscenes but camera stuff) instead of SetFocusArea because it loads a specific area of the map which is pretty useful when the camera moves from distant areas.
 * For instance, GTA:O opening cutscene.
 * 
 * https://pastebin.com/2EeKVeLA : a list of SRL found in srllist.meta
 * https://pastebin.com/zd9XYUWY : here is the content of a SRL file opened with codewalker.
 * @param srl - 
 * @returns void
 * @remarks Hash: 0x3D245789CE12982C
 */
export function prefetchSrl(srl: string): void;

/**
 * ```
 * x1, y1, z1 -- Coords of your ped model  
 * x2, y2, z2 -- Coords of the ped you want to switch to  
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @returns number
 * @remarks Hash: 0xB5D7B26B45720E05
 */
export function getIdealPlayerSwitchType(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xBED8CA5FF5E04113
 */
export function 0xbed8ca5ff5e04113(p0: number, p1: number, p2: number, p3: number): void;

/**
 * @returns void
 * @remarks Hash: 0x74DE2E8739086740
 */
export function allowPlayerSwitchOutro(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xDFA80CB25D0A19B3
 */
export function isSwitchReadyForDescent(): number;

/**
 * ```
 * Returns whether the specified model exists in the game.  
 * ```
 * @param model - 
 * @returns number
 * @remarks Hash: 0xC0296A2EDF545E92
 */
export function isModelValid(model: number): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x5B48A06DD0E792A5
 */
export function getPlayerSwitchInterpOutCurrentTime(): any;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @returns number
 * @remarks Hash: 0xF741BD853611592D
 */
export function GetGlobalWaterType(): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x717CD6E6FAEBBEDC
 */
export function setGamePausesForStreaming(toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x01B8247A7A8B9AD1
 */
export function isNewLoadSceneLoaded(): number;

/**
 * ```
 * 0.0 = no memory used
 * 1.0 = all memory used
 * 
 * Maximum model memory (as defined in common\data\missioncreatordata.meta) is 100 MiB
 * 
 * GET_*
 * ```
 * @returns number
 * @remarks Hash: 0x3D3D8B3BE5A83D35
 */
export function GetUsedCreatorModelMemoryPercentage(): number;

/**
 * ## Parameters
 * *
 * @param unused - 
 * @returns number
 * @remarks Hash: 0x7D41E9D2D17C5B2D
 */
export function streamvolHasLoaded(unused: any): number;

/**
 * ```
 * It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.  
 * ```
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x198F77705FA0931D
 */
export function setFocusEntity(entity: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x08C2D6C52A3104BB
 */
export function getPlayerSwitchInterpOutDuration(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x5068F488DDB54DD8
 */
export function 0x5068f488ddb54dd8(): any;

/**
 * @returns void
 * @remarks Hash: 0x8E2A065ABDAE6994
 */
export function allowPlayerSwitchAscent(): void;

/**
 * @returns void
 * @remarks Hash: 0xD4793DFF3AF2ABCD
 */
export function enableSwitchPauseBeforeDescent(): void;

/**
 * ```c
 * enum ePlayerSwitchType  
 * {  
 * 	SWITCH_TYPE_AUTO = 0,
 * 	SWITCH_TYPE_LONG = 1,
 * 	SWITCH_TYPE_MEDIUM = 2,
 * 	SWITCH_TYPE_SHORT = 3
 * };  
 * ```
 * 
 * 
 * ```c
 * enum eSwitchFlags {
 * 	SKIP_INTRO = 1,
 * 	SKIP_OUTRO = 2,
 * 	PAUSE_BEFORE_PAN = 4,
 * 	PAUSE_BEFORE_OUTRO = 8,
 * 	SKIP_PAN = 16,
 * 	UNKNOWN_DEST = 32,
 * 	DESCENT_ONLY = 64,
 * 	START_FROM_CAMPOS = 128,
 * 	PAUSE_BEFORE_ASCENT = 256,
 * 	PAUSE_BEFORE_DESCENT = 512,
 * 	ALLOW_SNIPER_AIM_INTRO = 1024,
 * 	ALLOW_SNIPER_AIM_OUTRO = 2048,
 * 	SKIP_TOP_DESCENT = 4096,
 * 	SUPPRESS_OUTRO_FX = 8192,
 * 	SUPPRESS_INTRO_FX = 16384,
 * 	DELAY_ASCENT_FX = 32768
 * }
 * ```
 * @param from - 
 * @param to - 
 * @param flags - 
 * @param switchType - 
 * @returns void
 * @remarks Hash: 0xFAA23F2CBA159D67
 */
export function startPlayerSwitch(from: number, to: number, flags: number, switchType: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x07503F7948F491A7
 */
export function requestCollisionAtCoord(x: number, y: number, z: number): void;

/**
 * ```
 * Possible p0 values:  
 * "prologue"  
 * "Prologue_Main"  
 * ```
 * @param name - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xAF12610C644A35C9
 */
export function setMapdatacullboxEnabled(name: string, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x40AEFD1A244741F2
 */
export function setRenderHdOnly(toggle: number): void;

/**
 * Gets whether the specified animation set has finished loading. An animation set provides movement animations for a ped.
 * 
 * Animation set and clip set are synonymous. See [`SET_PED_MOVEMENT_CLIPSET`](#_0xAF8A94EDE7712BEF).
 * @param animSet - 
 * @returns number
 * @remarks Hash: 0xC4EA073D86FB29B0
 */
export function hasAnimSetLoaded(animSet: string): number;

/**
 * @returns void
 * @remarks Hash: 0x03F1A106BDA7DD3E
 */
export function 0x03f1a106bda7dd3e(): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x2DDFF3FB9075D747
 */
export function isEntityFocus(entity: number): number;

/**
 * @returns void
 * @remarks Hash: 0x1E9057A74FD73E23
 */
export function 0x1e9057a74fd73e23(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xBEB2D9A1D9A8F55A
 */
export function 0xbeb2d9a1d9a8f55a(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xC9156DC11411A9EA
 */
export function requestAdditionalCollisionAtCoord(x: number, y: number, z: number): void;

/**
 * @returns void
 * @remarks Hash: 0xCE58B1CFB9290813
 */
export function clearHdArea(): void;

/**
 * @returns void
 * @remarks Hash: 0x63EB2B972A218CAC
 */
export function 0x63eb2b972a218cac(): void;

/**
 * ```
 * if (!sub_8f12("START LOAD SCENE SAFE")) {
 *     if (CUTSCENE::GET_CUTSCENE_TIME() > 4178) {
 *         STREAMING::_ACCFB4ACF53551B0(1973.845458984375, 3818.447265625, 32.43629837036133, 15.0, 2);
 *         sub_8e9e("START LOAD SCENE SAFE", 1);
 *     }
 * }
 * (Previously known as STREAMING::_NEW_LOAD_SCENE_START_SAFE)
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0xACCFB4ACF53551B0
 */
export function newLoadSceneStartSphere(x: number, y: number, z: number, radius: number, p4: any): number;

/**
 * ## Parameters
 * *
 * @param interiorID - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xE37B76C387BE28ED
 */
export function setInteriorActive(interiorID: number, toggle: number): void;

/**
 * 0 - default
 * 1 - HeistIsland
 * 
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param waterType - 
 * @returns void
 * @remarks Hash: 0x7E3F55ED251B76D3
 */
export function LoadGlobalWaterType(waterType: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x80C527893080CCF3
 */
export function setReduceVehicleModelBudget(toggle: number): void;

/**
 * ```
 * All names can be found in playerswitchestablishingshots.meta
 * ```
 * @param name - 
 * @returns void
 * @remarks Hash: 0x0FDE9DBFC0A6BC65
 */
export function setPlayerSwitchEstablishingShot(name: string): void;

/**
 * ## Parameters
 * *
 * @param animDict - 
 * @returns number
 * @remarks Hash: 0xD031A9162D01088C
 */
export function hasAnimDictLoaded(animDict: string): number;

/**
 * ## Parameters
 * *
 * @param fxName - 
 * @returns void
 * @remarks Hash: 0x5F61EBBE1A00F96D
 */
export function removeNamedPtfxAsset(fxName: string): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x41CA5A33160EA4AB
 */
export function isNetworkLoadingScene(): number;

/**
 * @returns void
 * @remarks Hash: 0xCCE26000E9A6FAD7
 */
export function shutdownCreatorBudget(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xB3C94A90D9FC9E62
 */
export function getPlayerSwitchType(): number;

/**
 * After using [`SWITCH_TO_MULTI_FIRSTPART`](#_0xAAB3200ED59016BC) , use this native to smoothly return the camera to the player's character.
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xD8295AF639FD9CB8
 */
export function switchToMultiSecondpart(ped: number): void;

/**
 * ## Parameters
 * *
 * @param cameraCoordX - 
 * @param cameraCoordY - 
 * @param cameraCoordZ - 
 * @param camRotationX - 
 * @param camRotationY - 
 * @param camRotationZ - 
 * @param camFov - 
 * @param camFarClip - 
 * @param rotationOrder - 
 * @returns void
 * @remarks Hash: 0xC208B673CE446B61
 */
export function setPlayerSwitchOutro(cameraCoordX: number, cameraCoordY: number, cameraCoordZ: number, camRotationX: number, camRotationY: number, camRotationZ: number, camFov: number, camFarClip: number, rotationOrder: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xA74A541C6884E7B8
 */
export function setSrlTime(p0: number): void;

/**
 * ```
 * Always returns zero.
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @returns any
 * @remarks Hash: 0x1F3F018BC3AFA77C
 */
export function streamvolCreateFrustum(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: any, p8: any): any;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0xB85F26619073E775
 */
export function setHdArea(x: number, y: number, z: number, radius: number): void;

/**
 * @returns number
 * @remarks Hash: 0xC4582015556D1C46
 */
export function networkUpdateLoadScene(): number;

/**
 * ```
 * `radius` value is usually between `3f` and `7000f` in original 1868 scripts.
 * `p7` is 0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common.
 * Returns True if success, used only 7 times in decompiled scripts of 1868
 * ```
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param offsetX - 
 * @param offsetY - 
 * @param offsetZ - 
 * @param radius - 
 * @param p7 - 
 * @returns number
 * @remarks Hash: 0x212A8D0D2BABFAC2
 */
export function newLoadSceneStart(posX: number, posY: number, posZ: number, offsetX: number, offsetY: number, offsetZ: number, radius: number, p7: number): number;

/**
 * ```
 * maps script name (thread + 0xD0) by lookup via scriptfx.dat - does nothing when script name is empty
 * ```
 * @returns void
 * @remarks Hash: 0x944955FB2A3935C8
 */
export function requestPtfxAsset(): void;

/**
 * ```
 * This is a NOP function. It does nothing at all.  
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x42CBE54462D92634
 */
export function setDitchPoliceModels(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x0811381EF5062FEC
 */
export function 0x0811381ef5062fec(p0: number): void;

/**
 * ## Parameters
 * *
 * @param iplName1 - 
 * @param iplName2 - 
 * @returns void
 * @remarks Hash: 0x95A7DABDDBB78AE7
 */
export function 0x95a7dabddbb78ae7(iplName1: string, iplName2: string): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x4E52E752C76E7E7A
 */
export function 0x4e52e752c76e7e7a(p0: any): void;

/**
 * Returns whether the specified model (archetype) is currently loaded.
 * 
 * Note that this will return 'true' even if the model has been requested and loaded by something other than the current script, if you're intending to actually use the model in a later frame, you should call REQUEST\_MODEL anyway.
 * @param model - 
 * @returns number
 * @remarks Hash: 0x98A4EB5D89A0C952
 */
export function hasModelLoaded(model: number): number;

/**
 * You can check if the player is in a Switch state with [`IS_PLAYER_SWITCH_IN_PROGRESS`](#_0xD9D2CFFF49FAB35F).
 * 
 * _**Note:** Doesn't act normally when used on Mount Chiliad._
 * @param ped - 
 * @param flags - 
 * @param switchType - 
 * @returns void
 * @remarks Hash: 0xAAB3200ED59016BC
 */
export function switchToMultiFirstpart(ped: number, flags: number, switchType: number): void;

/**
 * ## Parameters
 * *
 * @param model - 
 * @returns number
 * @remarks Hash: 0x75816577FEA6DAD5
 */
export function IsModelAPed(model: number): number;

/**
 * @returns void
 * @remarks Hash: 0x64E630FAF5F60F44
 */
export function networkStopLoadScene(): void;

/**
 * Enables the specified island. For more information, see islandhopper.meta
 * 
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param islandName - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9A9D1BA639675CF1
 */
export function setIslandEnabled(islandName: string, toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5B74EA8CFD5E3E7E
 */
export function isSwitchSkippingDescent(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x78C0D93253149435
 */
export function getPlayerSwitchJumpCutIndex(): number;

/**
 * Request a model (archetype) to be loaded for use by the current script. Use SET\_MODEL\_AS\_NO\_LONGER\_NEEDED when done using the model in script.
 * @param model - 
 * @returns void
 * @remarks Hash: 0x963D27A58DF860AC
 */
export function requestModel(model: number): void;

/**
 * IPL list can be found [here](https://gist.github.com/4mmonium/4c8a076b5f712a7cc64666003009a2e7).
 * @param iplName - 
 * @returns void
 * @remarks Hash: 0xEE6C5AD3ECE0A82D
 */
export function removeIpl(iplName: string): void;

/**
 * ## Parameters
 * *
 * @param model - 
 * @returns void
 * @remarks Hash: 0x923CB32A3B874FCB
 */
export function requestCollisionForModel(model: number): void;

/**
 * Starts loading the specified animation set. An animation set provides movement animations for a ped. See [`SET_PED_MOVEMENT_CLIPSET`](#_0xAF8A94EDE7712BEF).
 * @param animSet - 
 * @returns void
 * @remarks Hash: 0x6EA47DAE7FAD0EED
 */
export function requestAnimSet(animSet: string): void;

/**
 * Clear the current srl and stop rendering the area selected by PREFETCH_SRL and started with BEGIN_SRL.
 * @returns void
 * @remarks Hash: 0x0A41540E63C9EE17
 */
export function endSrl(): void;

/**
 * ```
 * This allows you to override "extended distance scaling" setting. Needs to be called each frame.
 * Max scaling seems to be 200.0, normal is 1.0
 * See https://gfycat.com/DetailedHauntingIncatern
 * ```
 * @param scaling - 
 * @returns void
 * @remarks Hash: 0xA76359FC80B2438E
 */
export function overrideLodscaleThisFrame(scaling: number): void;

/**
 * ## Parameters
 * *
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x0BC3144DEB678666
 */
export function addModelToCreatorBudget(modelHash: number): number;

/**
 * ## Parameters
 * *
 * @param model - 
 * @returns number
 * @remarks Hash: 0x22CCA434E368F03A
 */
export function hasCollisionForModelLoaded(model: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xCA7D9B86ECA7481B
 */
export function hasPtfxAssetLoaded(): number;

/**
 * ```
 * Always returns zero.
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns any
 * @remarks Hash: 0x0AD9710CEE2F590F
 */
export function streamvolCreateLine(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: any): any;

/**
 * ## Parameters
 * *
 * @param unused - 
 * @returns void
 * @remarks Hash: 0x1EE7D8DF4425F053
 */
export function streamvolDelete(unused: any): void;

/**
 * ```
 * Override the area where the camera will render the terrain.
 * p3, p4 and p5 are usually set to 0.0
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param offsetX - 
 * @param offsetY - 
 * @param offsetZ - 
 * @returns void
 * @remarks Hash: 0xBB7454BAFF08FE25
 */
export function setFocusPosAndVel(x: number, y: number, z: number, offsetX: number, offsetY: number, offsetZ: number): void;

/**
 * ```
 * Check if model is in cdimage(rpf)  
 * ```
 * @param model - 
 * @returns number
 * @remarks Hash: 0x35B9E0803292B641
 */
export function isModelInCdimage(model: number): number;

/**
 * ```
 * Alias for REMOVE_ANIM_SET.  
 * ```
 * @param clipSet - 
 * @returns void
 * @remarks Hash: 0x01F73A131C18CD94
 */
export function removeClipSet(clipSet: string): void;

/**
 * ```
 * Always returns zero.
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @param rad - 
 * @param p4 - 
 * @param p5 - 
 * @returns any
 * @remarks Hash: 0x219C7B8D53E429FD
 */
export function streamvolCreateSphere(x: number, y: number, z: number, rad: number, p4: any, p5: any): any;

/**
 * ```
 * Returns whether the specified model represents a vehicle.  
 * ```
 * @param model - 
 * @returns number
 * @remarks Hash: 0x19AAC8F07BFEC53E
 */
export function isModelAVehicle(model: number): number;

/**
 * @returns void
 * @remarks Hash: 0x9BADDC94EF83B823
 */
export function beginSrl(): void;

/**
 * @returns void
 * @remarks Hash: 0xF4A0DADB70F57FA6
 */
export function 0xf4a0dadb70f57fa6(): void;

/**
 * @returns void
 * @remarks Hash: 0xAD5FDF34B81BFE79
 */
export function allowPlayerSwitchDescent(): void;

/**
 * @returns void
 * @remarks Hash: 0x88C6814073DD4A73
 */
export function removePtfxAsset(): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x71E7B2E657449AAD
 */
export function 0x71e7b2e657449aad(): any;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x3F0CF9CB7E589B88
 */
export function GetNorthRadarBlip(): number;

/**
 * Enables or disables the blue half circle ![](https://i.imgur.com/iZes9Ec.png) around the specified blip on the left side of the blip. This is used to indicate that the player is in your crew in GTA:O. Color is changeable by using [`SET_BLIP_SECONDARY_COLOUR`](#_0x14892474891E09EB).
 * 
 * To toggle the right side of the circle use: [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#_0x23C3EB807312F01A).
 * 
 * Example code result:
 * ![](https://i.imgur.com/iZ9tNWl.png)
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDCFB5D4DB8BF367E
 */
export function showCrewIndicatorOnBlip(blip: number, toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0xB695E2CD0A2DA9EE
 */
export function thefeedSpsExtendWidescreenOff(): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param blipSprite - 
 * @returns number
 * @remarks Hash: 0xD484BF71050CA1EE
 */
export function GetClosestBlipOfType(blipSprite: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x8DFCED7A656F8802
 */
export function clearHelp(toggle: number): void;

/**
 * Adds a float to a text component placeholder, replacing `~1~` in the current text command's text label.
 * 
 * ![Example output](https://i.imgur.com/jvuQ0II.png)
 * @param value - 
 * @param decimalPlaces - 
 * @returns void
 * @remarks Hash: 0xE7DCB5B874BCD96E
 */
export function addTextComponentFloat(value: number, decimalPlaces: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0x24A49BEAF468DC90
 */
export function 0x24a49beaf468dc90(p0: any, p1: any, p2: any, p3: any, p4: any): number;

/**
 * ```
 * Calling this each frame, stops the player from receiving a weapon via the weapon wheel.
 * ```
 * @returns void
 * @remarks Hash: 0x0AFC4AF510774B47
 */
export function HudWeaponWheelIgnoreSelection(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xB0034A223497FFCB
 */
export function isPauseMenuActive(): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xA905192A6781C41B
 */
export function addPointToGpsMultiRoute(x: number, y: number, z: number): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xFD1D220394BCB824
 */
export function setMultiplayerHudCash(p0: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x24AC0137444F9FD5
 */
export function setBlipAsMissionCreatorBlip(blip: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param maximumValue - 
 * @returns void
 * @remarks Hash: 0x975D66A0BC17064C
 */
export function setMaxHealthHudDisplay(maximumValue: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x7C226D5346D4D10A
 */
export function 0x7c226d5346d4d10a(p0: any): void;

/**
 * ## Parameters
 * *
 * @param align - 
 * @returns void
 * @remarks Hash: 0xC02F4DBFB51D988B
 */
export function setTextCentre(align: number): void;

/**
 * @returns void
 * @remarks Hash: 0x80FE4F3AB4E1B62A
 */
export function thefeedClearFrozenPost(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x4167EFE0527D706E
 */
export function isHoveringOverMissionCreatorBlip(): number;

/**
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x13127EC3665E8EE1
 */
export function setBlipShowCone(blip: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF6865E26067B708C
 */
export function ShowPurchaseInstructionalButton(toggle: number): void;

/**
 * Disables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard. Not sure about controller. Does not disable mouse controls. No need to call this every tick.
 * 
 * To enable the keys again, use [`0x14621BB1DF14E2B2`](#_0x14621BB1DF14E2B2).
 * @returns void
 * @remarks Hash: 0xEC9264727EEC0F28
 */
export function takeControlOfFrontend(): void;

/**
 * Sets a gamer tag's component colour
 * @param gamerTagId - 
 * @param component - 
 * @param hudColorIndex - 
 * @returns void
 * @remarks Hash: 0x613ED644950626AE
 */
export function setMpGamerTagColour(gamerTagId: number, component: number, hudColorIndex: number): void;

/**
 * ```
 * Does not require whole number/integer rotations.
 * ```
 * @param blip - 
 * @param heading - 
 * @returns void
 * @remarks Hash: 0xA8B6AFDAC320AC87
 */
export function SetBlipSquaredRotation(blip: number, heading: number): void;

/**
 * Disables the loading spinner in Pause Menu when switching from one header tab to another.
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9245E81072704B8A
 */
export function PauseMenuDisableBusyspinner(toggle: number): void;

/**
 * ```
 * END_TEXT_COMMAND_*
 * In scripts font most of the time is passed as 1.
 * Use _BEGIN_TEXT_GET_COMMAND_GET_WIDTH
 * param is not font from what i've tested
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x85F061DA64ED2F67
 */
export function EndTextCommandGetWidth(p0: number): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x593FEAE1F73392D4
 */
export function 0x593feae1f73392d4(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC3B07BA00A83B0F1
 */
export function setWidescreenFormat(p0: any): void;

/**
 * Changes the mouse style.
 * 
 * ```c
 * enum eMousePointerStyle {
 * 	ARROW = 1,
 * 	ARROW_DIMMED = 2,
 * 	HAND_OPEN = 3,
 * 	HAND_GRAB = 4,
 * 	HAND_MIDDLE_FINGER = 5,
 * 	ARROW_LEFT = 6,
 * 	ARROW_RIGHT = 7,
 * 	ARROW_UP = 8,
 * 	ARROW_DOWN = 9,
 * 	ARROW_TRIMMING = 10,
 * 	ARROW_PLUS = 11,
 * 	ARROW_MINUS = 12
 * };
 * ```
 * @param style - 
 * @returns void
 * @remarks Hash: 0x8DB8CFFD58B62552
 */
export function setMouseCursorStyle(style: number): void;

/**
 * ## Parameters
 * *
 * @param gamerTagId - 
 * @returns number
 * @remarks Hash: 0x4E929E7A5796FD26
 */
export function isMpGamerTagActive(gamerTagId: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x62E849B7EB28E770
 */
export function 0x62e849b7eb28e770(p0: number): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2E8D9498C56DD0D1
 */
export function setBlipFlashesAlternate(blip: number, toggle: number): void;

/**
 * ```
 * "DISPLAY_CASH(true);" makes the cash amount render on the screen when appropriate  
 * "DISPLAY_CASH(false);" disables cash amount rendering  
 * ```
 * @param display - 
 * @returns void
 * @remarks Hash: 0x96DEC8D5430208B7
 */
export function displayCash(display: number): void;

/**
 * ```
 * Clears the GPS flags. Only the script that originally called SET_GPS_FLAGS can clear them.  
 * Doesn't seem like the flags are actually read by the game at all.  
 * ```
 * @returns void
 * @remarks Hash: 0x21986729D6A3A830
 */
export function clearGpsFlags(): void;

/**
 * ## Parameters
 * *
 * @param hudColor - 
 * @returns void
 * @remarks Hash: 0x39BBF623FC803EAC
 */
export function setColourOfNextTextComponent(hudColor: number): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xA86911979638106F
 */
export function endTextCommandOverrideButtonText(): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns number
 * @remarks Hash: 0xA6DB27D19ECBB7DA
 */
export function doesBlipExist(blip: number): number;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB203913733F27884
 */
export function setBlipBright(blip: number, toggle: number): void;

/**
 * Clears all active blip routes that have been set with [`SetBlipRoute`](#_0x4F7D8A9BFB0B43E9).
 * @returns void
 * @remarks Hash: 0xD12882D3FF82BF11
 */
export function ClearAllBlipRoutes(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xA17784FCA9548D15
 */
export function 0xa17784fca9548d15(p0: any, p1: any, p2: any): void;

/**
 * When this native returns true, do not call [`SET_MP_GAMER_TAG_NAME`](#_0xDEA2B8283BAA3944).
 * @param playerId - 
 * @returns number
 * @remarks Hash: 0xEB709A36958ABE0D
 */
export function isUpdatingMpGamerTagNameAndCrewDetails(playerId: number): number;

/**
 * ```
 * Returns a substring of a specified length starting at a specified position.
 * Example:
 * // Get "STRING" text from "MY_STRING"
 * subStr = HUD::_GET_TEXT_SUBSTRING("MY_STRING", 3, 6);
 * ```
 * @param text - 
 * @param position - 
 * @param length - 
 * @returns string
 * @remarks Hash: 0x169BD9382084C8C0
 */
export function GetTextSubstring(text: string, position: number, length: number): string;

/**
 * ```
 * If true, the entire map will be revealed.
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF8DEE0A5600CBB93
 */
export function setMinimapHideFow(toggle: number): void;

/**
 * ```
 * Requires manual management of game stream handles (i.e., 0xBE4390CB40B3E627).
 * ```
 * @returns void
 * @remarks Hash: 0xFDEC055AB549E328
 */
export function thefeedFreezeNextPost(): void;

/**
 * ```
 * This function is hard-coded to always return 0.  
 * ```
 * @param blip - 
 * @returns number
 * @remarks Hash: 0x9B6786E4C03DD382
 */
export function getBlipInfoIdPickupIndex(blip: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x97D47996FC48CBAD
 */
export function getCurrentWebsiteId(): number;

/**
 * ```
 * Returns the Blip handle of given Entity.  
 * ```
 * @param entity - 
 * @returns number
 * @remarks Hash: 0xBC8DBDCA2436F7E8
 */
export function getBlipFromEntity(entity: number): number;

/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @returns void
 * @remarks Hash: 0x243296A510B562B6
 */
export function 0x243296a510b562b6(): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param range - 
 * @returns void
 * @remarks Hash: 0x97C65887D4B37FA9
 */
export function setPedAiBlipNoticeRange(ped: number, range: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x9A3FF3DE163034E8
 */
export function getNumberOfActiveBlips(): number;

/**
 * ```
 * Shows a menu for reporting UGC content.
 * ```
 * @returns void
 * @remarks Hash: 0x523A590C1A3CC0D3
 */
export function openReportugcMenu(): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xDE03620F8703A9DF
 */
export function 0xde03620f8703a9df(): any;

/**
 * ```
 * You can only use text entries. No custom text.  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 11: Any p10
 * ```
 * @param entryHeader - 
 * @param entryLine1 - 
 * @param instructionalKey - 
 * @param entryLine2 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @returns void
 * @remarks Hash: 0x701919482C74B5AB
 */
export function setWarningMessageWithHeaderAndSubstringFlags(entryHeader: string, entryLine1: string, instructionalKey: any, entryLine2: string, p4: number, p5: any, p6: any, p7: any, p8: any, p9: number): void;

/**
 * Toggles pause menu map rendering.
 * @returns void
 * @remarks Hash: 0x2DE6C5E2E996F178
 */
export function pauseToggleFullscreenMap(): void;

/**
 * ## Parameters
 * *
 * @param gxtEntry - 
 * @returns void
 * @remarks Hash: 0x8F9EE5687F8EECCD
 */
export function beginTextCommandOverrideButtonText(gxtEntry: string): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xE0130B41D3CF4574
 */
export function getMinimapFowDiscoveryRatio(): number;

/**
 * ```
 * IS_*
 * ```
 * @returns number
 * @remarks Hash: 0x801879A9B4F4B2FB
 */
export function 0x801879a9b4f4b2fb(): number;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x7EC8ABA5E74B3D7A
 */
export function SetInteriorZoomLevelDecreased(toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0x2CEA2839313C09AC
 */
export function clearSmallPrints(): void;

/**
 * Does the same as [`SET_GPS_MULTI_ROUTE_RENDER(false)`](#_0x3DDA37128DD1ACA8)
 * @returns void
 * @remarks Hash: 0x67EEDEA1B9BAFD94
 */
export function clearGpsMultiRoute(): void;

/**
 * Returns true if a Warning Message or ReportUGC menu is active.
 * @returns number
 * @remarks Hash: 0xE18B138FABC53103
 */
export function isWarningMessageActive(): number;

/**
 * Toggles the big minimap state like in GTA:Online.
 * 
 * To get the current state of the minimap, use [`IS_BIGMAP_ACTIVE`](#_0xFFF65C63).
 * @param toggleBigMap - 
 * @param showFullMap - 
 * @returns void
 * @remarks Hash: 0x231C8F89D0539D8F
 */
export function setBigmapActive(toggleBigMap: number, showFullMap: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x1C491717107431C7
 */
export function isPauseMenuRestarting(): number;

/**
 * ```
 * Full list of components below  
 * HUD = 0;  
 * HUD_WANTED_STARS = 1;  
 * HUD_WEAPON_ICON = 2;  
 * HUD_CASH = 3;  
 * HUD_MP_CASH = 4;  
 * HUD_MP_MESSAGE = 5;  
 * HUD_VEHICLE_NAME = 6;  
 * HUD_AREA_NAME = 7;  
 * HUD_VEHICLE_CLASS = 8;  
 * HUD_STREET_NAME = 9;  
 * HUD_HELP_TEXT = 10;  
 * HUD_FLOATING_HELP_TEXT_1 = 11;  
 * HUD_FLOATING_HELP_TEXT_2 = 12;  
 * HUD_CASH_CHANGE = 13;  
 * HUD_RETICLE = 14;  
 * HUD_SUBTITLE_TEXT = 15;  
 * HUD_RADIO_STATIONS = 16;  
 * HUD_SAVING_GAME = 17;  
 * HUD_GAME_STREAM = 18;  
 * HUD_WEAPON_WHEEL = 19;  
 * HUD_WEAPON_WHEEL_STATS = 20;  
 * MAX_HUD_COMPONENTS = 21;  
 * MAX_HUD_WEAPONS = 22;  
 * MAX_SCRIPTED_HUD_COMPONENTS = 141;  
 * ```
 * @param id - 
 * @returns number
 * @remarks Hash: 0xBC4C9EA5391ECC0D
 */
export function isHudComponentActive(id: number): number;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x586AFE3FF72D996E
 */
export function getBlipCoords(blip: number): { x: number, y: number, z: number };

/**
 * Displays "normal" notifications again after calling `_0x56C8B608CFD49854` (those that were drawn before calling this native too), though those will have a weird offset and stay on screen forever (tested with notifications created from same script).
 * @returns void
 * @remarks Hash: 0xADED7F5748ACAFE6
 */
export function 0xaded7f5748acafe6(): void;

/**
 * Once called each frame hides all above radar notifications.
 * @returns void
 * @remarks Hash: 0x25F87B30C382FCA7
 */
export function thefeedHideThisFrame(): void;

/**
 * ```
 * List of picNames: pastebin.com/XdpJVbHz  
 * flash is a bool for fading in.  
 * iconTypes:  
 * 1 : Chat Box  
 * 2 : Email  
 * 3 : Add Friend Request  
 * 4 : Nothing  
 * 5 : Nothing  
 * 6 : Nothing  
 * 7 : Right Jumping Arrow  
 * 8 : RP Icon  
 * 9 : $ Icon  
 * "sender" is the very top header. This can be any old string.  
 * "subject" is the header under the sender.  
 * "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.  
 * "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)  
 * iconType2 is a mirror of iconType. It shows in the "subject" line, right under the original iconType.  
 * int IconNotification(char *text, char *text2, char *Subject)  
 * {  
 * 	_SET_NOTIFICATION_TEXT_ENTRY("STRING");  
 * 	ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  
 * 	_SET_NOTIFICATION_MESSAGE_CLAN_TAG_2("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 1, 7, text2, Subject, 1.0f, "__EXAMPLE", 7);  
 * 	return _DRAW_NOTIFICATION(1, 1);  
 * }  
 * ```
 * @param picTxd - 
 * @param picTxn - 
 * @param flash - 
 * @param iconType1 - 
 * @param nameStr - 
 * @param subtitleStr - 
 * @param duration - 
 * @param crewPackedStr - 
 * @param iconType2 - 
 * @param textColor - 
 * @returns number
 * @remarks Hash: 0x531B84E7DA981FB6
 */
export function endTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon(picTxd: string, picTxn: string, flash: number, iconType1: number, nameStr: string, subtitleStr: string, duration: number, crewPackedStr: string, iconType2: number, textColor: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x1A5CD7752DD28CD3
 */
export function setMinimapInSpectatorMode(toggle: number, ped: number): void;

/**
 * @returns void
 * @remarks Hash: 0xFDD85225B2DEA55E
 */
export function thefeedResetAllParameters(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param hudColor - 
 * @returns void
 * @remarks Hash: 0xF47E567B3630DD12
 */
export function OverrideMultiplayerChatColour(p0: number, hudColor: number): void;

/**
 * Should be enabled as component (2). Has 0 alpha by default.
 * @param gamerTagId - 
 * @param hudColorIndex - 
 * @returns void
 * @remarks Hash: 0x3158C77A7E888AB4
 */
export function setMpGamerTagHealthBarColour(gamerTagId: number, hudColorIndex: number): void;

/**
 * @returns void
 * @remarks Hash: 0x402F9ED62087E898
 */
export function displayHudWhenPausedThisFrame(): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns number
 * @remarks Hash: 0xDD2238F57B977751
 */
export function doesBlipHaveGpsRoute(blip: number): number;

/**
 * ```
 * Locks the minimap to the specified angle in integer degrees.  
 * angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.  
 * ```
 * @param angle - 
 * @returns void
 * @remarks Hash: 0x299FAEBB108AE05B
 */
export function lockMinimapAngle(angle: number): void;

/**
 * ```
 * Getter for 0xCD74233600C4EA6B
 * 
 * GET_*
 * ```
 * @returns number
 * @remarks Hash: 0xC2D2AD9EAAE265B8
 */
export function 0xc2d2ad9eaae265b8(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xDAD37F45428801AE
 */
export function isHelpMessageOnScreen(): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param spriteId - 
 * @returns void
 * @remarks Hash: 0xFCFACD0DB9D7A57D
 */
export function SetPedAiBlipSprite(ped: number, spriteId: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0x5F28ECF5FC84772F
 */
export function setMissionName(p0: number, name: string): void;

/**
 * Adds options on a warning message.
 * @param index - 
 * @param name - 
 * @param cash - 
 * @param rp - 
 * @param lvl - 
 * @param colour - 
 * @returns number
 * @remarks Hash: 0x0C5A80A9E096D529
 */
export function setWarningMessageOptionItems(index: number, name: string, cash: number, rp: number, lvl: number, colour: number): number;

/**
 * ```
 * Sets alpha-channel for blip color.
 * Example:
 * Blip blip = HUD::ADD_BLIP_FOR_ENTITY(entity);
 * HUD::SET_BLIP_COLOUR(blip , 3);
 * HUD::SET_BLIP_ALPHA(blip , 64);
 * ```
 * @param blip - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0x45FF974EEE1C8734
 */
export function setBlipAlpha(blip: number, alpha: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xB552929B85FC27EC
 */
export function 0xb552929b85fc27ec(p0: any, p1: any): void;

/**
 * ```
 * Returns the ActionScript flagValue.
 * ActionScript flags are global flags that scaleforms use
 * Flags found during testing
 * 0: Returns 1 if the web_browser keyboard is open, otherwise 0
 * 1: Returns 1 if the player has clicked back twice on the opening page, otherwise 0 (web_browser)
 * 2: Returns how many links the player has clicked in the web_browser scaleform, returns 0 when the browser gets closed
 * 9: Returns the current selection on the mobile phone scaleform
 * There are 20 flags in total.
 * ```
 * @param flagIndex - 
 * @returns number
 * @remarks Hash: 0xE3B05614DCE1D014
 */
export function getGlobalActionscriptFlag(flagIndex: number): number;

/**
 * Stops loading screen tips shown by invoking either `0x488043841BBE156F` or `0x15CFA549788D35EF`
 * @returns void
 * @remarks Hash: 0x32888337579A5970
 */
export function ThefeedDisableLoadingScreenTips(): void;

/**
 * ```
 * Returns the current AI BLIP for the specified ped  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x56176892826A4FE8
 */
export function GetAiBlip(ped: number): number;

/**
 * ```
 * Sets the color of HUD_COLOUR_SCRIPT_VARIABLE_2
 * ```
 * @param r - 
 * @param g - 
 * @param b - 
 * @param a - 
 * @returns void
 * @remarks Hash: 0x16A304E6CB2BFAB9
 */
export function SetScriptVariable2HudColour(r: number, g: number, b: number, a: number): void;

/**
 * Enables or disables the sonar sweep animation on the minimap.
 * 
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6B50FC8749632EC1
 */
export function setMinimapSonarSweep(toggle: number): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @returns void
 * @remarks Hash: 0xB57D8DD645CFA2CF
 */
export function clearReminderMessage(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2A179DF17CCF04CD
 */
export function clearAdditionalText(p0: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @param radarThickness - 
 * @param mapThickness - 
 * @returns void
 * @remarks Hash: 0x900086F371220B6F
 */
export function setGpsCustomRouteRender(toggle: number, radarThickness: number, mapThickness: number): void;

/**
 * ```
 * clears a print text command with this text  
 * ```
 * @param text - 
 * @returns void
 * @remarks Hash: 0xE124FA80A759019C
 */
export function beginTextCommandClearPrint(text: string): void;

/**
 * ```
 * Displays "normal" notifications again after calling `_0x56C8B608CFD49854` (those that were drawn before calling this native too), though those will have a weird offset and stay on screen forever (tested with notifications created from same script).
 * ```
 * @returns void
 * @remarks Hash: 0xADED7F5748ACAFE6
 */
export function thefeedCommentTeleportPoolOff(): void;

/**
 * ```
 * Removes the loading prompt at the bottom right of the screen.
 * ```
 * @returns void
 * @remarks Hash: 0x10D373323E5B9C0D
 */
export function busyspinnerOff(): void;

/**
 * ```
 * Must be toggled before being queued for animation
 * ```
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC4278F70131BAA6D
 */
export function SetBlipDisplayIndicatorOnBlip(blip: number, toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0xC7C6789AA1CFEDD0
 */
export function removeMultiplayerBankCash(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x90A6526CF0381030
 */
export function getMenuPedMaskedIntStat(p0: any, p1: any, p2: any, p3: any): number;

/**
 * distance - shadow distance in pixels, both horizontal and vertical
 * r, g, b, a - color
 * @param distance - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @param a - 
 * @returns void
 * @remarks Hash: 0x465C84BC39F1C351
 */
export function setTextDropshadow(distance: number, r: number, g: number, b: number, a: number): void;

/**
 * ```
 * HIDE_*_THIS_FRAME
 * 
 * Hides area and vehicle name HUD components for one frame.
 * ```
 * @returns void
 * @remarks Hash: 0xA4DEDE28B1814289
 */
export function HideAreaAndVehicleNameThisFrame(): void;

/**
 * ## Parameters
 * *
 * @param gamerTagId - 
 * @param string - 
 * @returns void
 * @remarks Hash: 0x7B7723747CCB55B6
 */
export function setMpGamerTagBigText(gamerTagId: number, string: string): void;

/**
 * ```
 * Returns a value based on what the blip is attached to
 * 1 - Vehicle
 * 2 - Ped
 * 3 - Object
 * 4 - Coord
 * 5 - unk
 * 6 - Pickup
 * 7 - Radius
 * ```
 * @param blip - 
 * @returns number
 * @remarks Hash: 0xBE9B0959FFD0779B
 */
export function getBlipInfoIdType(blip: number): number;

/**
 * Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
 * @returns void
 * @remarks Hash: 0x583049884A2EEE3C
 */
export function thefeedForceRenderOff(): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xA50ABC31E3CDFAFF
 */
export function setTextLeading(): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @param colour - 
 * @returns void
 * @remarks Hash: 0x837155CD2F63DA09
 */
export function setBlipRouteColour(blip: number, colour: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xDAF87174BE7454FF
 */
export function 0xdaf87174be7454ff(p0: any): number;

/**
 * Creates a blip for the specified coordinates. You can use `SET_BLIP_` natives to change the blip.
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns number
 * @remarks Hash: 0x5A039BB0BCA604B6
 */
export function addBlipForCoord(x: number, y: number, z: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x8F08017F9D7C47BD
 */
export function 0x8f08017f9d7c47bd(p0: any, p1: any, p2: any): number;

/**
 * ```
 * HAS_*
 * ```
 * @returns number
 * @remarks Hash: 0xA277800A9EAE340E
 */
export function HasDirectorModeBeenTriggered(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC406BE343FC4B9AF
 */
export function isSocialClubActive(): number;

/**
 * ```
 * Toggles the North Yankton map
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x9133955F1A2DA957
 */
export function setMinimapInPrologue(toggle: number): void;

/**
 * Shows an "award" notification above the minimap, lua example result:
 * 
 * ![](https://i.imgur.com/e2DNaKX.png)
 * 
 * 
 * 
 * Old description:
 * ```
 * Example:  
 * UI::_SET_NOTIFICATION_TEXT_ENTRY("HUNT");  
 * UI::_0xAA295B6F28BD587D("Hunting", "Hunting_Gold_128", 0, 109, "HUD_MED_UNLKED");  
 * ```
 * @param textureDict - 
 * @param textureName - 
 * @param rpBonus - 
 * @param colorOverlay - 
 * @param titleLabel - 
 * @returns number
 * @remarks Hash: 0xAA295B6F28BD587D
 */
export function endTextCommandThefeedPostAward(textureDict: string, textureName: string, rpBonus: number, colorOverlay: number, titleLabel: string): number;

/**
 * ```
 * Returns whether the ped's blip is controlled by the game.   
 * It's the default blip you can see on enemies during freeroam in singleplayer (the one that fades out quickly).  
 * ```
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x15B8ECF844EE67ED
 */
export function doesPedHaveAiBlip(ped: number): number;

/**
 * ```
 * If toggle is true, hides special ability bar / character name in the pause menu
 * If toggle is false, shows special ability bar / character name in the pause menu
 * SET_PLAYER_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x808519373FD336A3
 */
export function SetPlayerIsInDirectorMode(toggle: number): void;

/**
 * Enabling this on a radius blip will make it outline only.  
 * Please note that this only works on a
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x25615540D894B814
 */
export function setRadiusBlipEdge(blip: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x504DFE62A1692296
 */
export function SetInteriorZoomLevelIncreased(toggle: number): void;

/**
 * Name between `GET_ONSCREEN_KEYBOARD_RESULT` and `GET_PAUSE_MENU_STATE`. Likely, `GET_PAUSE_MENU_*`.
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x5BFF36D6ED83E0AE
 */
export function GetPauseMenuCursorPosition(): { x: number, y: number, z: number };

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xF284AC67940C6812
 */
export function 0xf284ac67940c6812(): any;

/**
 * ## Parameters
 * *
 * @param chTitle - 
 * @param iconType - 
 * @param chSubtitle - 
 * @param isImportant - 
 * @returns any
 * @remarks Hash: 0xC8F3AAF93D0600BF
 */
export function endTextCommandThefeedPostUnlockTu(chTitle: string, iconType: number, chSubtitle: string, isImportant: number): any;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @param color - 
 * @returns void
 * @remarks Hash: 0x03D7FB09E75D6B7E
 */
export function setBlipColour(blip: number, color: number): void;

/**
 * Declares the entry type of a notification, for example "STRING".
 * int ShowNotification(char *text)
 * {
 * 	BEGIN_TEXT_COMMAND_THEFEED_POST("STRING");
 * 	ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * 	return _DRAW_NOTIFICATION(1, 1);
 * }
 * @param text - 
 * @returns void
 * @remarks Hash: 0x202709F4C58A0424
 */
export function beginTextCommandThefeedPost(text: string): void;

/**
 * Shows this warning message when trying to switch pause menu header tabs: https://i.imgur.com/8qmfztu.png
 * @param setWarn - 
 * @returns void
 * @remarks Hash: 0xF06EBB91A81E09E3
 */
export function pauseMenuSetWarnOnTabChange(setWarn: number): void;

/**
 * Example output preview:
 * 
 * 
 * ![](https://i.imgur.com/TJvqkYq.png)
 * @param isImportant - 
 * @param bHasTokens - 
 * @returns number
 * @remarks Hash: 0x2ED7843F8F801023
 */
export function endTextCommandThefeedPostTicker(isImportant: number, bHasTokens: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x7984C03AA5CC2F41
 */
export function isMessageBeingDisplayed(): number;

/**
 * ## Parameters
 * *
 * @param shape - 
 * @param loop - 
 * @param beep - 
 * @param duration - 
 * @returns void
 * @remarks Hash: 0x238FFE5C7B0498A6
 */
export function endTextCommandDisplayHelp(shape: number, loop: number, beep: number, duration: number): void;

/**
 * ## Parameters
 * *
 * @param display - 
 * @returns void
 * @remarks Hash: 0xA5E78BA2B1331C55
 */
export function displayAmmoThisFrame(display: number): void;

/**
 * ## Parameters
 * *
 * @param hudColorIndex - 
 * @returns void
 * @remarks Hash: 0x6B1DE27EE78E6A19
 */
export function flashMinimapDisplayWithColor(hudColorIndex: number): void;

/**
 * ## Parameters
 * *
 * @param name - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x57D9C12635E25CE3
 */
export function registerNamedRendertarget(name: string, p1: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6B3C4650BC8BEE47
 */
export function setTextRightJustify(toggle: number): void;

/**
 * ```
 * Request a gxt into the passed slot.  
 * ```
 * @param gxt - 
 * @param slot - 
 * @returns void
 * @remarks Hash: 0x71A78003C8E71424
 */
export function requestAdditionalText(gxt: string, slot: number): void;

/**
 * @returns void
 * @remarks Hash: 0x95CF81BD06EE1887
 */
export function removeMultiplayerWalletCash(): void;

/**
 * **Note:** The buttons need to support mouse (with the `TOGGLE_MOUSE_SUPPORT` scaleform movie method) for it to return `true`.
 * @returns number
 * @remarks Hash: 0x3D9ACB1EB139E702
 */
export function isMouseRolledOverInstructionalButtons(): number;

/**
 * ```
 * displays wanted star above head  
 * ```
 * @param gamerTagId - 
 * @param wantedlvl - 
 * @returns void
 * @remarks Hash: 0xCF228E2AA03099C3
 */
export function setMpGamerTagWantedLevel(gamerTagId: number, wantedlvl: number): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x038C1F517D7FDCF8
 */
export function setTextProportional(p0: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @returns void
 * @remarks Hash: 0xFE43368D2AA4F2FC
 */
export function setNewWaypoint(x: number, y: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param visible - 
 * @returns void
 * @remarks Hash: 0x1DFEDD15019315A9
 */
export function SetAbilityBarVisibilityInMultiplayer(visible: number): void;

/**
 * Returns the same as `IS_SOCIAL_CLUB_ACTIVE`.
 * @returns number
 * @remarks Hash: 0x6F72CD94F7B5B68C
 */
export function isOnlinePoliciesMenuActive(): number;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns void
 * @remarks Hash: 0x80EAD8E2E1D5D52E
 */
export function addTextComponentSubstringBlipName(blip: number): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x75A16C3DA34F1245
 */
export function showHeightOnBlip(blip: number, toggle: number): void;

/**
 * ```
 * GET_F*
 * ```
 * @param string - 
 * @param length - 
 * @returns string
 * @remarks Hash: 0x98C3CF913D895111
 */
export function 0x98c3cf913d895111(string: string, length: number): string;

/**
 * Enables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard if they were disabled using the native below.
 * 
 * To disable the keys, use [`0xEC9264727EEC0F28`](#_0xEC9264727EEC0F28).
 * @returns void
 * @remarks Hash: 0x14621BB1DF14E2B2
 */
export function releaseControlOfFrontend(): void;

/**
 * Allows the user to set a blip as friendly or enemy based on the toggle.
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6F6F290102C02AB4
 */
export function setBlipAsFriendly(blip: number, toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x4D79439A6B55AC67
 */
export function isHelpMessageBeingDisplayed(): number;

/**
 * ```
 * displays wanted star above head  
 * ```
 * @param gamerTagId - 
 * @param count - 
 * @returns void
 * @remarks Hash: 0x9C16459B2324B2CF
 */
export function SetMpGamerTagMpBagLargeCount(gamerTagId: number, count: number): void;

/**
 * ## Parameters
 * *
 * @param hudIndex - 
 * @param x - 
 * @param y - 
 * @returns void
 * @remarks Hash: 0x7679CC1BCEBE3D4C
 */
export function setFloatingHelpTextScreenPosition(hudIndex: number, x: number, y: number): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x66E7CB63C97B7D20
 */
export function 0x66e7cb63c97b7d20(): any;

/**
 * ```
 * FORCE_*
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x57D760D55F54E071
 */
export function 0x57d760d55f54e071(p0: number): void;

/**
 * SET_C*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x9FCB3CBFB3EAD69A
 */
export function 0x9fcb3cbfb3ead69a(p0: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param contextHash - 
 * @returns void
 * @remarks Hash: 0x444D8CF241EC25C5
 */
export function pauseMenuDeactivateContext(contextHash: number): void;

/**
 * @returns void
 * @remarks Hash: 0x8183455E16C42E3A
 */
export function unlockMinimapAngle(): void;

/**
 * ## Parameters
 * *
 * @param name - 
 * @returns number
 * @remarks Hash: 0x1A6478B61C6BDC3B
 */
export function getNamedRendertargetRenderId(name: string): number;

/**
 * ## Parameters
 * *
 * @param blink - 
 * @param bHasTokens - 
 * @returns number
 * @remarks Hash: 0xF020C96915705B3A
 */
export function endTextCommandThefeedPostMpticker(blink: number, bHasTokens: number): number;

/**
 * ## Parameters
 * *
 * @param gxt - 
 * @returns number
 * @remarks Hash: 0x1C7302E725259789
 */
export function doesTextBlockExist(gxt: string): number;

/**
 * ```
 * When calling this, the current frame will have the players "arrow icon" be focused on the dead center of the radar.
 * ```
 * @returns void
 * @remarks Hash: 0x6D14BFDC33B34F55
 */
export function dontTiltMinimapThisFrame(): void;

/**
 * @returns void
 * @remarks Hash: 0xFCC75460ABA29378
 */
export function endTextCommandClearPrint(): void;

/**
 * ```
 * Removes a notification instantly instead of waiting for it to disappear  
 * ```
 * @param notificationId - 
 * @returns void
 * @remarks Hash: 0xBE4390CB40B3E627
 */
export function thefeedRemoveItem(notificationId: number): void;

/**
 * ## Parameters
 * *
 * @param chTitle - 
 * @param iconType - 
 * @param chSubtitle - 
 * @param isImportant - 
 * @param titleColor - 
 * @param p5 - 
 * @returns any
 * @remarks Hash: 0x7AE0589093A2E088
 */
export function endTextCommandThefeedPostUnlockTuWithColor(chTitle: string, iconType: number, chSubtitle: string, isImportant: number, titleColor: number, p5: number): any;

/**
 * Allows HUD to be drawn over screen fade every frame this function is called.
 * @returns void
 * @remarks Hash: 0xBF4F34A85CA2970C
 */
export function drawHudOverFadeThisFrame(): void;

/**
 * ## Parameters
 * *
 * @param id - 
 * @returns void
 * @remarks Hash: 0x450930E616475D0D
 */
export function resetHudComponentValues(id: number): void;

/**
 * ```
 * After applying the properties to the text (See UI::SET_TEXT_), this will draw the text in the applied position. Also 0.0f < x, y < 1.0f, percentage of the axis.  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 3: int p2
 * ```
 * @param x - 
 * @param y - 
 * @returns void
 * @remarks Hash: 0xCD015E5BB0D96A57
 */
export function endTextCommandDisplayText(x: number, y: number): void;

/**
 * @returns void
 * @remarks Hash: 0x1CA3E9EAC9D93E5E
 */
export function setTextDropShadow(): void;

/**
 * instructionalKey enum list:
 * ```
 * Buttons = {
 *       Empty = 0,
 *       Select = 1, -- (RETURN)
 *       Ok = 2, -- (RETURN)
 *       Yes = 4, -- (RETURN)
 *       Back = 8, -- (ESC)
 *       Cancel = 16, -- (ESC)
 *       No = 32, -- (ESC)
 *       RetrySpace = 64, -- (SPACE)
 *       Restart = 128, -- (SPACE)
 *       Skip = 256, -- (SPACE)
 *       Quit = 512, -- (ESC)
 *       Adjust = 1024, -- (ARROWS)
 *       SpaceKey = 2048, -- (SPACE)
 *       Share = 4096, -- (SPACE)
 *       SignIn = 8192, -- (SPACE)
 *       Continue = 16384, -- (RETURN)
 *       AdjustLeftRight = 32768, -- (SCROLL L/R)
 *       AdjustUpDown = 65536, -- (SCROLL U/D)
 *       Overwrite = 131072, -- (SPACE)
 *       SocialClubSignup = 262144, -- (RETURN)
 *       Confirm = 524288, -- (RETURN)
 *       Queue = 1048576, -- (RETURN)
 *       RetryReturn = 2097152, -- (RETURN)
 *       BackEsc = 4194304, -- (ESC)
 *       SocialClub = 8388608, -- (RETURN)
 *       Spectate = 16777216, -- (SPACE)
 *       OkEsc = 33554432, -- (ESC)
 *       CancelTransfer = 67108864, -- (ESC)
 *       LoadingSpinner = 134217728,
 *       NoReturnToGTA = 268435456, -- (ESC)
 *       CancelEsc = 536870912, -- (ESC)
 * }
 * 
 * Alt = {
 *       Empty = 0,
 *       No = 1, -- (SPACE)
 *       Host = 2, -- (ESC)
 *       SearchForJob = 4, -- (RETURN)
 *       ReturnKey = 8, -- (TURN)
 *       Freemode = 16, -- (ESC)
 * }
 * ```
 * @param labelTitle - 
 * @param labelMsg - 
 * @param p2 - 
 * @param p3 - 
 * @param labelMsg2 - 
 * @returns void
 * @remarks Hash: 0x15803FEC3B9A872B
 */
export function SetWarningMessageWithAlert(labelTitle: string, labelMsg: string, p2: number, p3: number, labelMsg2: string): void;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns void
 * @remarks Hash: 0x03B504CF259931BC
 */
export function addTextComponentInteger(value: number): void;

/**
 * @returns void
 * @remarks Hash: 0x6EF54AB721DC6242
 */
export function RemoveWarningMessageListItems(): void;

/**
 * ```
 * After some testing, looks like you need to use CEIL() on the rotation (vehicle/ped heading) before using it there.
 * ```
 * @param blip - 
 * @param rotation - 
 * @returns void
 * @remarks Hash: 0xF87683CDF73C3F6E
 */
export function setBlipRotation(blip: number, rotation: number): void;

/**
 * Highlights a blip by a half cyan circle on the right side of the blip. ![](https://i.imgur.com/FrV9M4e.png) Indicating that that player is a friend (in GTA:O). This color can not be changed.
 * 
 * To toggle the left side (crew member indicator) of the half circle around the blip, use: [`SHOW_CREW_INDICATOR_ON_BLIP`](#_0xDCFB5D4DB8BF367E).
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x23C3EB807312F01A
 */
export function showFriendIndicatorOnBlip(blip: number, toggle: number): void;

/**
 * Sets the interval in milliseconds before flashing the blip.
 * @param blip - 
 * @param interval - 
 * @returns void
 * @remarks Hash: 0xAA51DB313C010A7E
 */
export function setBlipFlashInterval(blip: number, interval: number): void;

/**
 * @returns void
 * @remarks Hash: 0x805D7CBB36FD6C4C
 */
export function openOnlinePoliciesMenu(): void;

/**
 * @returns void
 * @remarks Hash: 0x4B0311D3CDC4648F
 */
export function hideLoadingOnFadeThisFrame(): void;

/**
 * ```
 * p1 was always -1
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x761B77454205A61D
 */
export function addTextComponentSubstringPhoneNumber(p0: string, p1: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xE4C3B169876D33D7
 */
export function 0xe4c3b169876d33d7(p0: any): void;

/**
 * Related to notification color flashing, setting p0 to 0 invalidates a `_SET_NOTIFICATION_FLASH_COLOR` call for the target notification.
 * @param count - 
 * @returns void
 * @remarks Hash: 0x17AD8C9706BDD88A
 */
export function ThefeedSetAnimpostfxCount(count: number): void;

/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param blip - 
 * @returns number
 * @remarks Hash: 0x003E92BA477F9D7F
 */
export function GetBlipRotation(blip: number): number;

/**
 * Starts a new GPS multi-route, allowing you to create custom GPS paths.
 * GPS functions like the waypoint, except it can contain multiple points it's forced to go through.
 * Once the player has passed a point, the GPS will no longer force its path through it.
 * 
 * Works independently from the player-placed waypoint and blip routes.
 * @param hudColor - 
 * @param routeFromPlayer - 
 * @param displayOnFoot - 
 * @returns void
 * @remarks Hash: 0x3D3D15AF7BCAAF83
 */
export function startGpsMultiRoute(hudColor: number, routeFromPlayer: number, displayOnFoot: number): void;

/**
 * Shows a help message for one frame.
 * Do note that this message doesn't get added to the Pause Menu info section.
 * @param pTextLabel - 
 * @param bCurvedWindow - 
 * @returns void
 * @remarks Hash: 0x960C9FF8F616E41C
 */
export function displayHelpTextThisFrame(pTextLabel: string, bCurvedWindow: number): void;

/**
 * Sets current pause menu page/component to the specified value.
 * Available page IDs: https://pastebin.com/qxuhwjPT
 * @returns void
 * @remarks Hash: 0x77F16B447824DA6C
 */
export function pauseMenuceptionGoDeeper(): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @returns void
 * @remarks Hash: 0xD2049635DEB9C375
 */
export function 0xd2049635deb9c375(): void;

/**
 * ```
 * Doesn't work if the label text of gxtEntry is >= 80.  
 * ```
 * @param blip - 
 * @param gxtEntry - 
 * @returns void
 * @remarks Hash: 0xEAA0FFE120D92784
 */
export function setBlipNameFromTextFile(blip: number, gxtEntry: string): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @param zoom - 
 * @returns void
 * @remarks Hash: 0xF98E4B3E56AFC7B1
 */
export function setRadarZoomToBlip(blip: number, zoom: number): void;

/**
 * Uses the `SOCIAL_CLUB2` scaleform.
 * @returns void
 * @remarks Hash: 0x75D3691713C3B05A
 */
export function openSocialClubMenu(): void;

/**
 * @returns void
 * @remarks Hash: 0xD2B32BE3FC1626C6
 */
export function closeSocialClubMenu(): void;

/**
 * @returns void
 * @remarks Hash: 0xA13C11E1B5C06BFC
 */
export function thefeedForceRenderOn(): void;

/**
 * **displayId Behaviour**
 * 
 * | display ID 	| Behaviour                                                   	|
 * |------------	|-------------------------------------------------------------	|
 * | 0          	| Doesn't show up, ever, anywhere.                            	|
 * | 1          	| Doesn't show up, ever, anywhere.                            	|
 * | 2          	| Shows on both main map and minimap. (Selectable on map)     	|
 * | 3          	| Shows on main map only. (Selectable on map)                 	|
 * | 4          	| Shows on main map only. (Selectable on map)                 	|
 * | 5          	| Shows on minimap only.                                      	|
 * | 6          	| Shows on both main map and minimap. (Selectable on map)     	|
 * | 7          	| Doesn't show up, ever, anywhere.                            	|
 * | 8          	| Shows on both main map and minimap. (Not selectable on map) 	|
 * | 9          	| Shows on minimap only.                                      	|
 * | 10         	| Shows on both main map and minimap. (Not selectable on map) 	|
 * 
 * Anything higher than 10 seems to be exactly the same as 10.
 * 
 * Rockstar seem to only use 0, 2, 3, 4, 5 and 8 in the decompiled scripts.
 * @param blip - 
 * @param displayId - 
 * @returns void
 * @remarks Hash: 0x9029B2F3DA924928
 */
export function setBlipDisplay(blip: number, displayId: number): void;

/**
 * Removes the gamer tag associated with the provided ID. This does not happen instantly. Use [IS_MP_GAMER_TAG_FREE](#_0x595B5178E412E199) to determine when the ID is free for reuse.
 * @param gamerTagId - 
 * @returns void
 * @remarks Hash: 0x31698AA80E0223F8
 */
export function removeMpGamerTag(gamerTagId: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x4A9923385BDB9DAD
 */
export function getStandardBlipEnumId(): number;

/**
 * Finalizes a text command started with [`BEGIN_TEXT_COMMAND_SET_BLIP_NAME`](#_0xF9113A30DE5C6670), setting the name
 * of the specified blip.
 * @param blip - 
 * @returns void
 * @remarks Hash: 0xBC38B49BCB83BC9B
 */
export function endTextCommandSetBlipName(blip: number): void;

/**
 * SHOW_*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param id - 
 * @returns void
 * @remarks Hash: 0x4F38DCA127DAAEA2
 */
export function ShowScriptedHudComponentThisFrame(id: number): void;

/**
 * ```
 * SET_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x04655F9D075D0AE5
 */
export function 0x04655f9d075d0ae5(toggle: number): void;

/**
 * ```
 * Removes multiplayer cash hud each frame  
 * ```
 * @returns void
 * @remarks Hash: 0x968F270E39141ECA
 */
export function removeMultiplayerHudCash(): void;

/**
 * Controls the visibility of the "Contact" instructional buttons on the map screen.
 * 
 * ```
 * NativeDB Introduced: 2545
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC772A904CDE1186F
 */
export function showContactInstructionalButton(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param pos - 
 * @returns void
 * @remarks Hash: 0x55598D21339CB998
 */
export function thefeedSetScriptedMenuHeight(pos: number): void;

/**
 * Toggles the pause menu ped sleep state for frontend menus.
 * 
 * [Example GIF](https://vespura.com/hi/i/2019-04-01_15-51_8ed38_1014.gif)
 * @param state - 
 * @returns void
 * @remarks Hash: 0xECF128344E9FF9F1
 */
export function setPauseMenuPedSleepState(state: number): void;

/**
 * Adds an arbitrary string as a text component placeholder, replacing `~a~` in the current text command's text label.
 * 
 * See the documentation on text formatting for more information.
 * @param text - 
 * @returns void
 * @remarks Hash: 0x6C188BE134E074AA
 */
export function addTextComponentSubstringPlayerName(text: string): void;

/**
 * Overrides the position of the main player blip for the current frame.
 * @param x - 
 * @param y - 
 * @returns void
 * @remarks Hash: 0x77E2DD177910E1CF
 */
export function setFakePausemapPlayerPositionThisFrame(x: number, y: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0xE45087D85F468BC2
 */
export function SetMissionName2(p0: number, name: string): void;

/**
 * ```c
 * enum ePauseMenuState
 * {
 *     PM_INACTIVE 	 =  0,
 *     PM_STARTING_UP 	 =  5,
 *     PM_RESTARTING 	 = 10,
 *     PM_READY 		 = 15,
 *     PM_IN_STORE 	 = 20,
 *     PM_IN_SC_MENU 	 = 25,
 *     PM_SHUTTING_DOWN = 30,
 *     PM_IN_VIDEOEDITOR = 35,
 * }
 * ```
 * @returns number
 * @remarks Hash: 0x272ACD84970869C5
 */
export function getPauseMenuState(): number;

/**
 * This native is deprecated.
 * 
 * If you're looking to:
 * * Toggle the pause menu on, use [`ACTIVATE_FRONTEND_MENU`](#_0xEF01D36B9C9D0C7B)
 * * Toggle the pause menu off, use [`SET_FRONTEND_ACTIVE`](#_0x745711A75AB09277)
 * * Disable toggling the pause menu, use [`DISABLE_FRONTEND_THIS_FRAME`](#_0x6D3465A73092F0E6)
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDF47FC56C71569CF
 */
export function setPauseMenuActive(toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x157F93B036700462
 */
export function isRadarHidden(): number;

/**
 * ```
 * Sets the color of HUD_COLOUR_SCRIPT_VARIABLE
 * ```
 * @param r - 
 * @param g - 
 * @param b - 
 * @param a - 
 * @returns void
 * @remarks Hash: 0xD68A5FF8A3A89874
 */
export function setScriptVariableHudColour(r: number, g: number, b: number, a: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x311438A071DD9B1A
 */
export function addPointToGpsCustomRoute(x: number, y: number, z: number): void;

/**
 * Sets the displayed sprite for a specific blip.
 * 
 * There's a [list of sprites](https://docs.fivem.net/game-references/blips/) on the FiveM documentation site.
 * @param blip - 
 * @param spriteId - 
 * @returns void
 * @remarks Hash: 0xDF735600A4696DAF
 */
export function setBlipSprite(blip: number, spriteId: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA86478C6958735C5
 */
export function isHudHidden(): number;

/**
 * ```
 * Checks if the passed gxt name exists in the game files.  
 * ```
 * @param gxt - 
 * @returns number
 * @remarks Hash: 0xAC09CA973C564252
 */
export function doesTextLabelExist(gxt: string): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x9EB6522EA68F22FE
 */
export function isRadarPreferenceSwitchedOn(): number;

/**
 * ## Parameters
 * *
 * @param value - 
 * @param maxValue - 
 * @returns void
 * @remarks Hash: 0x9969599CCFF5D85E
 */
export function setAbilityBarValue(value: number, maxValue: number): void;

/**
 * ```
 * Sets a global that disables many weapon input tasks (shooting, aiming, etc.). Does not work with vehicle weapons, only used in selector.ysc
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x14C9FDCC41F81F63
 */
export function HudWeaponWheelIgnoreControlInput(toggle: number): void;

/**
 * Example, only occurrence in the scripts:
 * 
 * ```
 * v_8 = UI::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 0, 0, &v_9, "", a_5);
 * ```
 * 
 * Example result:
 * ![](https://i.imgur.com/YrN4Bcm.png)
 * @param picTxd - 
 * @param picTxn - 
 * @param flash - 
 * @param iconType - 
 * @param nameStr - 
 * @param subtitleStr - 
 * @param durationMultiplier - 
 * @returns number
 * @remarks Hash: 0x1E6611149DB3DB6B
 */
export function endTextCommandThefeedPostMessagetextTu(picTxd: string, picTxn: string, flash: number, iconType: number, nameStr: string, subtitleStr: string, durationMultiplier: number): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @returns number
 * @remarks Hash: 0x81DF9ABA6C83DFF9
 */
export function GetWarningMessageTitleHash(): number;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x54318C915D27E4CE
 */
export function setBlipHiddenOnLegend(blip: number, toggle: number): void;

/**
 * Sets the visibility of all components of the gamer tag to the specified value.
 * @param gamerTagId - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xEE76FF7E6A0166B0
 */
export function SetMpGamerTagVisibilityAll(gamerTagId: number, toggle: number): void;

/**
 * ```
 * This function and the one below it are for after you receive an invite, not sending it.  
 * p0 = 1 or 0  
 * nothin doin.   
 * int invite(Player player)  
 * 	{  
 * int iVar2, iVar3;  
 * networkHandleMgr handle;  
 * NETWORK_HANDLE_FROM_PLAYER(player, &handle.netHandle, 13);  
 * networkClanMgr clan;  
 * char *playerName = GET_PLAYER_NAME(player);  
 * _SET_NOTIFICATION_TEXT_ENTRY("STRING");  
 * _SET_NOTIFACTION_COLOR_NEXT(0);  
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);  
 * if (NETWORK_CLAN_PLAYER_GET_DESC(&clan, 35, &handle.netHandle))  
 * {  
 * 	iVar2 = 0;  
 * 	if (ARE_STRINGS_EQUAL(clan.unk22, "Leader") && clan.unk30 == 0)  
 * 	{  
 * iVar2 = 1;  
 * 	}  
 * 	if (clan.unk21 > 0)  
 * 	{  
 * iVar3 = 0;  
 * 	}  
 * 	else  
 * 	{  
 * iVar3 = 1;  
 * 	}  
 * 	BOOL unused = _0x54E79E9C(&clan.clanHandle, 35);  
 * 	return _DRAW_NOTIFICATION_APARTMENT_INVITE(iVar3, 0 /*unused*/, &clan.unk17, clan.unk30, iVar2, 0, clan.clanHandle, 0, 0, 0);  
 * }  
 * 	}  
 * ```
 * @param crewTypeIsPrivate - 
 * @param crewTagContainsRockstar - 
 * @param crewTag - 
 * @param rank - 
 * @param hasFounderStatus - 
 * @param isImportant - 
 * @param clanHandle - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns number
 * @remarks Hash: 0x97C9E4E7024A8F2C
 */
export function endTextCommandThefeedPostCrewtag(crewTypeIsPrivate: number, crewTagContainsRockstar: number, crewTag: number, rank: number, hasFounderStatus: number, isImportant: number, clanHandle: number, r: number, g: number, b: number): number;

/**
 * [List of picture names](https://pastebin.com/XdpJVbHz)
 * 
 * 
 * Example result:
 * 
 * 
 * ![](https://i.imgur.com/SdEZ22m.png)
 * @param statTitle - 
 * @param iconEnum - 
 * @param stepVal - 
 * @param barValue - 
 * @param isImportant - 
 * @param picTxd - 
 * @param picTxn - 
 * @returns number
 * @remarks Hash: 0x2B7E9A4EAAA93C89
 */
export function endTextCommandThefeedPostStats(statTitle: string, iconEnum: number, stepVal: number, barValue: number, isImportant: number, picTxd: string, picTxn: string): number;

/**
 * ```
 * HAS_S*
 * ```
 * @returns number
 * @remarks Hash: 0x214CD562A939246A
 */
export function 0x214cd562a939246a(): number;

/**
 * @returns void
 * @remarks Hash: 0x6D3465A73092F0E6
 */
export function disableFrontendThisFrame(): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xFA7C7F0AADF25D09
 */
export function getBlipInfoIdCoord(blip: number): { x: number, y: number, z: number };

/**
 * Sets the health bar of a gamer tag to show the health of the last (or current) vehicle of the ped the gamer tag is attached to.
 * The vehicle health value is stored separate from the player health and using it won't clear any player health overrides.
 * @param gamerTagId - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xA67F9C46D612B6F1
 */
export function SetMpGamerTagUseVehicleHealth(gamerTagId: number, toggle: number): void;

/**
 * Examples result:
 * 
 * ![](https://i.imgur.com/skY6vAJ.png)
 * @param blip - 
 * @param index - 
 * @returns void
 * @remarks Hash: 0x234CDD44D996FD9A
 */
export function setBlipCategory(blip: number, index: number): void;

/**
 * Starts a new GPS custom-route, allowing you to plot lines on the map.
 * Lines are drawn directly between points.
 * The GPS custom route works like the GPS multi route, except it does not follow roads.
 * @param hudColor - 
 * @param displayOnFoot - 
 * @param followPlayer - 
 * @returns void
 * @remarks Hash: 0xDB34E8D56FC13B08
 */
export function startGpsCustomRoute(hudColor: number, displayOnFoot: number, followPlayer: number): void;

/**
 * ### Arrow Positions
 * * 0 = Off / No arrow
 * * 1 = Top
 * * 2 = Left
 * * 3 = Bottom
 * * 4 = Right
 * @param hudIndex - 
 * @param style - 
 * @param hudColor - 
 * @param alpha - 
 * @param arrowPosition - 
 * @param boxOffset - 
 * @returns void
 * @remarks Hash: 0x788E7FD431BD67F1
 */
export function setFloatingHelpTextStyle(hudIndex: number, style: number, hudColor: number, alpha: number, arrowPosition: number, boxOffset: number): void;

/**
 * @returns void
 * @remarks Hash: 0x7792424AA0EAC32E
 */
export function clearDynamicPauseMenuErrorMessage(): void;

/**
 * ## Parameters
 * *
 * @param health - 
 * @param capacity - 
 * @param wasAdded - 
 * @returns void
 * @remarks Hash: 0x3F5CC444DCAAA8F2
 */
export function setHealthHudDisplayValues(health: number, capacity: number, wasAdded: number): void;

/**
 * Sets a warning message for one frame with header and upper buttons bit field that don't fit the standard 32 bit set.
 * @param headerTextLabel - 
 * @param line1TextLabel - 
 * @param buttonsBitField - 
 * @returns void
 * @remarks Hash: 0x38B55259C2E078ED
 */
export function setWarningMessageWithHeaderExtended(headerTextLabel: string, line1TextLabel: string, buttonsBitField: number): void;

/**
 * @returns void
 * @remarks Hash: 0xFF4FB7C8CDFA3DA7
 */
export function clearGpsPlayerWaypoint(): void;

/**
 * ```
 * Returns the string length of the string from the gxt string .  
 * ```
 * @param gxt - 
 * @returns number
 * @remarks Hash: 0x801BD273D3A23F74
 */
export function getLengthOfStringWithThisTextLabel(gxt: string): number;

/**
 * ```
 * List of picNames pastebin.com/XdpJVbHz  
 * flash is a bool for fading in.  
 * iconTypes:  
 * 1 : Chat Box  
 * 2 : Email  
 * 3 : Add Friend Request  
 * 4 : Nothing  
 * 5 : Nothing  
 * 6 : Nothing  
 * 7 : Right Jumping Arrow  
 * 8 : RP Icon  
 * 9 : $ Icon  
 * "sender" is the very top header. This can be any old string.  
 * "subject" is the header under the sender.  
 * "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.  
 * "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)  
 * ```
 * @param picTxd - 
 * @param picTxn - 
 * @param flash - 
 * @param iconType - 
 * @param nameStr - 
 * @param subtitleStr - 
 * @param duration - 
 * @param crewPackedStr - 
 * @returns number
 * @remarks Hash: 0x5CBF7BADE20DB93E
 */
export function endTextCommandThefeedPostMessagetextWithCrewTag(picTxd: string, picTxn: string, flash: number, iconType: number, nameStr: string, subtitleStr: string, duration: number, crewPackedStr: string): number;

/**
 * ```
 * Not present in retail version of the game, actual definiton seems to be
 * _LOG_DEBUG_INFO(const char* category, const char* debugText);
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x2162C446DFDF38FD
 */
export function LogDebugInfo(p0: string): void;

/**
 * ```
 * Returns the length of the string passed (much like strlen).  
 * ```
 * @param string - 
 * @returns number
 * @remarks Hash: 0xF030907CCBB8A9FD
 */
export function getLengthOfLiteralString(string: string): number;

/**
 * **NOTE:** This must be called before you open the text input box.
 * @returns void
 * @remarks Hash: 0x577599CCED639CA2
 */
export function setAllowCommaOnTextInput(): void;

/**
 * @returns void
 * @remarks Hash: 0x6178F68A87A4D3A0
 */
export function clearAllHelpMessages(): void;

/**
 * ```
 * Returns whether or not the text chat (MULTIPLAYER_CHAT Scaleform component) is active.  
 * ```
 * @returns number
 * @remarks Hash: 0xB118AF58B5F332A1
 */
export function IsMultiplayerChatActive(): number;

/**
 * Displays loading screen tips, requires `0x56C8B608CFD49854` to be called beforehand.
 * @returns void
 * @remarks Hash: 0x15CFA549788D35EF
 */
export function ThefeedDisplayLoadingScreenTips(): void;

/**
 * ```
 * Setter for 0xC2D2AD9EAAE265B8
 * 
 * SET_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xCD74233600C4EA6B
 */
export function 0xcd74233600c4ea6b(toggle: number): void;

/**
 * Allows opening the pause menu this frame, when the player is dead.
 * @returns void
 * @remarks Hash: 0xCC3FDDED67BCFC63
 */
export function AllowPauseMenuWhenDeadThisFrame(): void;

/**
 * Enables drawing some hud components, such as help labels, this frame, when the player is dead.
 * @returns void
 * @remarks Hash: 0x7669F9E39DC17063
 */
export function DisplayHudWhenDeadThisFrame(): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns number
 * @remarks Hash: 0xE41CA53051197A27
 */
export function isBlipOnMinimap(blip: number): number;

/**
 * ```
 * NativeDB Added Parameter 7: int hudColorIndex1
 * NativeDB Added Parameter 8: int hudColorIndex2
 * ```
 * @param ch1TXD - 
 * @param ch1TXN - 
 * @param val1 - 
 * @param ch2TXD - 
 * @param ch2TXN - 
 * @param val2 - 
 * @returns number
 * @remarks Hash: 0xB6871B0555B02996
 */
export function endTextCommandThefeedPostVersusTu(ch1TXD: string, ch1TXN: string, val1: number, ch2TXD: string, ch2TXN: string, val2: number): number;

/**
 * @returns void
 * @remarks Hash: 0x20FE7FDFEEAD38C0
 */
export function hideMinimapInteriorMapThisFrame(): void;

/**
 * ## Parameters
 * *
 * @param name - 
 * @returns number
 * @remarks Hash: 0x78DCDC15C9F116B4
 */
export function isNamedRendertargetRegistered(name: string): number;

/**
 * ## Parameters
 * *
 * @param modelHash - 
 * @returns void
 * @remarks Hash: 0xF6C09E276AEB3F2D
 */
export function linkNamedRendertarget(modelHash: number): void;

/**
 * ```
 * END_TEXT_COMMAND_*
 * Determines how many lines the text string will use when drawn on screen.
 * Must use 0x521FB041D93DD0E4 for setting up
 * ```
 * @param x - 
 * @param y - 
 * @returns number
 * @remarks Hash: 0x9040DFB09BE75706
 */
export function EndTextCommandLineCount(x: number, y: number): number;

/**
 * ```
 * Adds a timer (e.g. "00:00:00:000"). The appearance of the timer depends on the flags, which needs more research.  
 * ```
 * @param timestamp - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0x1115F16B8AB9E8BF
 */
export function addTextComponentSubstringTime(timestamp: number, flags: number): void;

/**
 * ```
 * returns a notification handle, prints out a notification like below:  
 * type range: 0   
 * if you set type to 1, image goes from 0 - 39 - Xbox you can add text to  
 * example:   
 * UI::_0xD202B92CBF1D816F(1, 20, "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");  
 * ```
 * @param eType - 
 * @param iIcon - 
 * @param sTitle - 
 * @returns number
 * @remarks Hash: 0xD202B92CBF1D816F
 */
export function EndTextCommandThefeedPostReplayIcon(eType: number, iIcon: number, sTitle: string): number;

/**
 * Preview image:
 * 
 * ![](https://i.imgur.com/1BTmdyv.png)
 * 
 * To change money value use [`STAT_SET_INT`](#_0xB3271D7AB655B441) with "MP0_WALLET_BALANCE" to whatever value you need to.
 * @returns void
 * @remarks Hash: 0xC2D15BEF167E27BC
 */
export function setMultiplayerWalletCash(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x1930DFA731813EC4
 */
export function isHudPreferenceSwitchedOn(): number;

/**
 * Sets a global mode which makes the pause menu map show 'Destination' instead of 'Waypoint' in the key legend on the
 * bottom of the screen.
 * 
 * <!--
 * 
 * Name guess:
 * 
 *   - alphabetical function order, below [SET_USER_RADIO_CONTROL_ENABLED, SET_USE_HI_DOF], above SET_VARIABLE_ON_SOUND.
 * 
 * -->
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6CDD58146A436083
 */
export function SetUseWaypointAsDestination(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param hudIndex - 
 * @param entity - 
 * @param offsetX - 
 * @param offsetY - 
 * @returns void
 * @remarks Hash: 0xB094BC1DB4018240
 */
export function setFloatingHelpTextToEntity(hudIndex: number, entity: number, offsetX: number, offsetY: number): void;

/**
 * ```
 * Checks if the specified gxt has loaded into the passed slot.  
 * ```
 * @param gxt - 
 * @param slot - 
 * @returns number
 * @remarks Hash: 0xADBF060E2B30C5BC
 */
export function hasThisAdditionalTextLoaded(gxt: string, slot: number): number;

/**
 * ## Parameters
 * *
 * @param active - 
 * @returns void
 * @remarks Hash: 0x745711A75AB09277
 */
export function setFrontendActive(active: number): void;

/**
 * @returns void
 * @remarks Hash: 0xCC33FA791322B9D9
 */
export function clearPrints(): void;

/**
 * ```
 * p0 = 1 or 0  
 * crashes my game...  
 * this is for sending invites to network players - jobs/apartment/ect...   
 * return notification handle  
 * int invite(Player player)  
 * 	{  
 * networkHandleMgr netHandle;  
 * networkClanMgr clan;  
 * char *playerName = GET_PLAYER_NAME(player);  
 * _SET_NOTIFICATION_TEXT_ENTRY("STRING");  
 * _SET_NOTIFACTION_COLOR_NEXT(1);  
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);  
 * NETWORK_HANDLE_FROM_PLAYER(player, &netHandle.netHandle, 13);  
 * if (NETWORK_CLAN_PLAYER_IS_ACTIVE(&netHandle.netHandle))  
 * {  
 * 	NETWORK_CLAN_PLAYER_GET_DESC(&clan.clanHandle, 35, &netHandle.netHandle);  
 * 	_DRAW_NOTIFICATION_CLAN_INVITE(0, _0x54E79E9C(&clan.clanHandle, 35), &clan.unk17, clan.isLeader, 0, 0, clan.clanHandle, playerName, 0, 0, 0);  
 * }  
 * 	}  
 * ```
 * @param crewTypeIsPrivate - 
 * @param crewTagContainsRockstar - 
 * @param crewTag - 
 * @param rank - 
 * @param isLeader - 
 * @param isImportant - 
 * @param clanHandle - 
 * @param gamerStr - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @returns number
 * @remarks Hash: 0x137BC35589E34E1E
 */
export function endTextCommandThefeedPostCrewtagWithGameName(crewTypeIsPrivate: number, crewTagContainsRockstar: number, crewTag: number, rank: number, isLeader: number, isImportant: number, clanHandle: number, gamerStr: string, r: number, g: number, b: number): number;

/**
 * Removes the blip from your map.
 * @param blip - 
 * @returns void
 * @remarks Hash: 0x86A652570E5F25DD
 */
export function removeBlip(blip: number): void;

/**
 * @returns void
 * @remarks Hash: 0xE1CD1E48E025E661
 */
export function thefeedResume(): void;

/**
 * ```
 * Related to displaying cash on the HUD
 * Always called before HUD::CHANGE_FAKE_MP_CASH in decompiled scripts
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x170F541E1CADD1DE
 */
export function useFakeMpCash(p0: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @returns void
 * @remarks Hash: 0x8410C5E0CD847B9D
 */
export function 0x8410c5e0cd847b9d(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5C90988E7C8E1AF4
 */
export function getNewSelectedMissionCreatorBlip(): number;

/**
 * ```
 * It sets the text in a specified box and wraps the text if it exceeds the boundries. Both values are for X axis. Useful when positioning text set to center or aligned to the right.  
 * start - left boundry on screen position (0.0 - 1.0)  
 * end - right boundry on screen position (0.0 - 1.0)  
 * ```
 * @param start - 
 * @param end - 
 * @returns void
 * @remarks Hash: 0x63145D9C883A1A70
 */
export function setTextWrap(start: number, end: number): void;

/**
 * ```
 * get's line count  
 * int GetLineCount(char *text, float x, float y)  
 * 	{  
 * _BEGIN_TEXT_COMMAND_LINE_COUNT("STRING");  
 *                 ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  
 * return _END_TEXT_COMMAND_GET_LINE_COUNT(x, y);  
 * 	}  
 * ```
 * @param entry - 
 * @returns void
 * @remarks Hash: 0x521FB041D93DD0E4
 */
export function BeginTextCommandLineCount(entry: string): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xCA6B2F7CE32AB653
 */
export function 0xca6b2f7ce32ab653(p0: any, p1: any, p2: any): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @returns void
 * @remarks Hash: 0xEB81A3DADD503187
 */
export function 0xeb81a3dadd503187(): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x2A25ADC48F87841F
 */
export function pauseMenuIsContextMenuActive(): any;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x7CD934010E115C2C
 */
export function GetAiBlip2(ped: number): number;

/**
 * This native is used to colorize/toggle certain map components like the army base.
 * 
 * Component IDs 6 through 14 are used by the freemode event King of the Castle in GTA Online.
 * @param componentID - 
 * @param toggle - 
 * @param hudColor - 
 * @returns number
 * @remarks Hash: 0x75A9A10948D1DEA6
 */
export function setMinimapComponent(componentID: number, toggle: number, hudColor: number): number;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @param scale - 
 * @returns void
 * @remarks Hash: 0xD38744167B2FA257
 */
export function setBlipScale(blip: number, scale: number): void;

/**
 * Preview image:
 * 
 * ![](https://i.imgur.com/1BTmdyv.png)
 * 
 * To change the bank balance use [`STAT_SET_INT`](#_0xB3271D7AB655B441) with "BANK_BALANCE" to whatever value you need to.
 * @returns void
 * @remarks Hash: 0xDD21B55DF695CD0A
 */
export function setMultiplayerBankCash(): void;

/**
 * ## Parameters
 * *
 * @param zoom - 
 * @returns void
 * @remarks Hash: 0xCB7CC0D58405AD41
 */
export function setRadarZoomToDistance(zoom: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x3DDA37128DD1ACA8
 */
export function setGpsMultiRouteRender(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xCFDBDF5AE59BA0F4
 */
export function EndTextCommandObjective(p0: number): void;

/**
 * ```c
 * enum eBusySpinnerType
 * {
 * 	BUSY_SPINNER_LEFT = 0,
 * 	BUSY_SPINNER_LEFT_2 = 1,
 * 	BUSY_SPINNER_LEFT_3 = 2,
 * 	BUSY_SPINNER_SAVE = 3,
 * 	BUSY_SPINNER_RIGHT = 4,
 * };
 * ```
 * @param busySpinnerType - 
 * @returns void
 * @remarks Hash: 0xBD12F8228410D9B4
 */
export function endTextCommandBusyspinnerOn(busySpinnerType: number): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns number
 * @remarks Hash: 0x729B5F1EFBC0AAEE
 */
export function getBlipHudColour(blip: number): number;

/**
 * Set a custom color for the MP HUD, providing a way to customize the HUD's appearance similar to character color changes in MP.
 * 
 * ```c
 * enum eHudColours {
 *     HUD_COLOUR_PURE_WHITE = 0,
 *     HUD_COLOUR_WHITE = 1,
 *     HUD_COLOUR_BLACK = 2,
 *     HUD_COLOUR_GREY = 3,
 *     HUD_COLOUR_GREYLIGHT = 4,
 *     HUD_COLOUR_GREYDARK = 5,
 *     HUD_COLOUR_RED = 6,
 *     HUD_COLOUR_REDLIGHT = 7,
 *     HUD_COLOUR_REDDARK = 8,
 *     HUD_COLOUR_BLUE = 9,
 *     HUD_COLOUR_BLUELIGHT = 10,
 *     HUD_COLOUR_BLUEDARK = 11,
 *     HUD_COLOUR_YELLOW = 12,
 *     HUD_COLOUR_YELLOWLIGHT = 13,
 *     HUD_COLOUR_YELLOWDARK = 14,
 *     HUD_COLOUR_ORANGE = 15,
 *     HUD_COLOUR_ORANGELIGHT = 16,
 *     HUD_COLOUR_ORANGEDARK = 17,
 *     HUD_COLOUR_GREEN = 18,
 *     HUD_COLOUR_GREENLIGHT = 19,
 *     HUD_COLOUR_GREENDARK = 20,
 *     HUD_COLOUR_PURPLE = 21,
 *     HUD_COLOUR_PURPLELIGHT = 22,
 *     HUD_COLOUR_PURPLEDARK = 23,
 *     HUD_COLOUR_PINK = 24,
 *     HUD_COLOUR_STAR = 25,
 *     HUD_COLOUR_STARLIGHT = 26,
 *     HUD_COLOUR_STARDARK = 27,
 *     HUD_COLOUR_NET_PLAYER1 = 28,
 *     HUD_COLOUR_NET_PLAYER2 = 29,
 *     HUD_COLOUR_NET_PLAYER3 = 30,
 *     HUD_COLOUR_NET_PLAYER4 = 31,
 *     HUD_COLOUR_NET_PLAYER5 = 32,
 *     HUD_COLOUR_NET_PLAYER6 = 33,
 *     HUD_COLOUR_NET_PLAYER7 = 34,
 *     HUD_COLOUR_NET_PLAYER8 = 35,
 *     HUD_COLOUR_NET_PLAYER9 = 36,
 *     HUD_COLOUR_NET_PLAYER10 = 37,
 *     HUD_COLOUR_NET_PLAYER11 = 38,
 *     HUD_COLOUR_NET_PLAYER12 = 39,
 *     HUD_COLOUR_NET_PLAYER13 = 40,
 *     HUD_COLOUR_NET_PLAYER14 = 41,
 *     HUD_COLOUR_NET_PLAYER15 = 42,
 *     HUD_COLOUR_NET_PLAYER16 = 43,
 *     HUD_COLOUR_NET_PLAYER17 = 44,
 *     HUD_COLOUR_NET_PLAYER18 = 45,
 *     HUD_COLOUR_NET_PLAYER19 = 46,
 *     HUD_COLOUR_NET_PLAYER20 = 47,
 *     HUD_COLOUR_NET_PLAYER21 = 48,
 *     HUD_COLOUR_NET_PLAYER22 = 49,
 *     HUD_COLOUR_NET_PLAYER23 = 50,
 *     HUD_COLOUR_NET_PLAYER24 = 51,
 *     HUD_COLOUR_NET_PLAYER25 = 52,
 *     HUD_COLOUR_NET_PLAYER26 = 53,
 *     HUD_COLOUR_NET_PLAYER27 = 54,
 *     HUD_COLOUR_NET_PLAYER28 = 55,
 *     HUD_COLOUR_NET_PLAYER29 = 56,
 *     HUD_COLOUR_NET_PLAYER30 = 57,
 *     HUD_COLOUR_NET_PLAYER31 = 58,
 *     HUD_COLOUR_NET_PLAYER32 = 59,
 *     HUD_COLOUR_SIMPLEBLIP_DEFAULT = 60,
 *     HUD_COLOUR_MENU_BLUE = 61,
 *     HUD_COLOUR_MENU_GREY_LIGHT = 62,
 *     HUD_COLOUR_MENU_BLUE_EXTRA_DARK = 63,
 *     HUD_COLOUR_MENU_YELLOW = 64,
 *     HUD_COLOUR_MENU_YELLOW_DARK = 65,
 *     HUD_COLOUR_MENU_GREEN = 66,
 *     HUD_COLOUR_MENU_GREY = 67,
 *     HUD_COLOUR_MENU_GREY_DARK = 68,
 *     HUD_COLOUR_MENU_HIGHLIGHT = 69,
 *     HUD_COLOUR_MENU_STANDARD = 70,
 *     HUD_COLOUR_MENU_DIMMED = 71,
 *     HUD_COLOUR_MENU_EXTRA_DIMMED = 72,
 *     HUD_COLOUR_BRIEF_TITLE = 73,
 *     HUD_COLOUR_MID_GREY_MP = 74,
 *     HUD_COLOUR_NET_PLAYER1_DARK = 75,
 *     HUD_COLOUR_NET_PLAYER2_DARK = 76,
 *     HUD_COLOUR_NET_PLAYER3_DARK = 77,
 *     HUD_COLOUR_NET_PLAYER4_DARK = 78,
 *     HUD_COLOUR_NET_PLAYER5_DARK = 79,
 *     HUD_COLOUR_NET_PLAYER6_DARK = 80,
 *     HUD_COLOUR_NET_PLAYER7_DARK = 81,
 *     HUD_COLOUR_NET_PLAYER8_DARK = 82,
 *     HUD_COLOUR_NET_PLAYER9_DARK = 83,
 *     HUD_COLOUR_NET_PLAYER10_DARK = 84,
 *     HUD_COLOUR_NET_PLAYER11_DARK = 85,
 *     HUD_COLOUR_NET_PLAYER12_DARK = 86,
 *     HUD_COLOUR_NET_PLAYER13_DARK = 87,
 *     HUD_COLOUR_NET_PLAYER14_DARK = 88,
 *     HUD_COLOUR_NET_PLAYER15_DARK = 89,
 *     HUD_COLOUR_NET_PLAYER16_DARK = 90,
 *     HUD_COLOUR_NET_PLAYER17_DARK = 91,
 *     HUD_COLOUR_NET_PLAYER18_DARK = 92,
 *     HUD_COLOUR_NET_PLAYER19_DARK = 93,
 *     HUD_COLOUR_NET_PLAYER20_DARK = 94,
 *     HUD_COLOUR_NET_PLAYER21_DARK = 95,
 *     HUD_COLOUR_NET_PLAYER22_DARK = 96,
 *     HUD_COLOUR_NET_PLAYER23_DARK = 97,
 *     HUD_COLOUR_NET_PLAYER24_DARK = 98,
 *     HUD_COLOUR_NET_PLAYER25_DARK = 99,
 *     HUD_COLOUR_NET_PLAYER26_DARK = 100,
 *     HUD_COLOUR_NET_PLAYER27_DARK = 101,
 *     HUD_COLOUR_NET_PLAYER28_DARK = 102,
 *     HUD_COLOUR_NET_PLAYER29_DARK = 103,
 *     HUD_COLOUR_NET_PLAYER30_DARK = 104,
 *     HUD_COLOUR_NET_PLAYER31_DARK = 105,
 *     HUD_COLOUR_NET_PLAYER32_DARK = 106,
 *     HUD_COLOUR_BRONZE = 107,
 *     HUD_COLOUR_SILVER = 108,
 *     HUD_COLOUR_GOLD = 109,
 *     HUD_COLOUR_PLATINUM = 110,
 *     HUD_COLOUR_GANG1 = 111,
 *     HUD_COLOUR_GANG2 = 112,
 *     HUD_COLOUR_GANG3 = 113,
 *     HUD_COLOUR_GANG4 = 114,
 *     HUD_COLOUR_SAME_CREW = 115,
 *     HUD_COLOUR_FREEMODE = 116,
 *     HUD_COLOUR_PAUSE_BG = 117,
 *     HUD_COLOUR_FRIENDLY = 118,
 *     HUD_COLOUR_ENEMY = 119,
 *     HUD_COLOUR_LOCATION = 120,
 *     HUD_COLOUR_PICKUP = 121,
 *     HUD_COLOUR_PAUSE_SINGLEPLAYER = 122,
 *     HUD_COLOUR_FREEMODE_DARK = 123,
 *     HUD_COLOUR_INACTIVE_MISSION = 124,
 *     HUD_COLOUR_DAMAGE = 125,
 *     HUD_COLOUR_PINKLIGHT = 126,
 *     HUD_COLOUR_PM_MITEM_HIGHLIGHT = 127,
 *     HUD_COLOUR_SCRIPT_VARIABLE = 128,
 *     HUD_COLOUR_YOGA = 129,
 *     HUD_COLOUR_TENNIS = 130,
 *     HUD_COLOUR_GOLF = 131,
 *     HUD_COLOUR_SHOOTING_RANGE = 132,
 *     HUD_COLOUR_FLIGHT_SCHOOL = 133,
 *     HUD_COLOUR_NORTH_BLUE = 134,
 *     HUD_COLOUR_SOCIAL_CLUB = 135,
 *     HUD_COLOUR_PLATFORM_BLUE = 136,
 *     HUD_COLOUR_PLATFORM_GREEN = 137,
 *     HUD_COLOUR_PLATFORM_GREY = 138,
 *     HUD_COLOUR_FACEBOOK_BLUE = 139,
 *     HUD_COLOUR_INGAME_BG = 140,
 *     HUD_COLOUR_DARTS = 141,
 *     HUD_COLOUR_WAYPOINT = 142,
 *     HUD_COLOUR_MICHAEL = 143,
 *     HUD_COLOUR_FRANKLIN = 144,
 *     HUD_COLOUR_TREVOR = 145,
 *     HUD_COLOUR_GOLF_P1 = 146,
 *     HUD_COLOUR_GOLF_P2 = 147,
 *     HUD_COLOUR_GOLF_P3 = 148,
 *     HUD_COLOUR_GOLF_P4 = 149,
 *     HUD_COLOUR_WAYPOINTLIGHT = 150,
 *     HUD_COLOUR_WAYPOINTDARK = 151,
 *     HUD_COLOUR_PANEL_LIGHT = 152,
 *     HUD_COLOUR_MICHAEL_DARK = 153,
 *     HUD_COLOUR_FRANKLIN_DARK = 154,
 *     HUD_COLOUR_TREVOR_DARK = 155,
 *     HUD_COLOUR_OBJECTIVE_ROUTE = 156,
 *     HUD_COLOUR_PAUSEMAP_TINT = 157,
 *     HUD_COLOUR_PAUSE_DESELECT = 158,
 *     HUD_COLOUR_PM_WEAPONS_PURCHASABLE = 159,
 *     HUD_COLOUR_PM_WEAPONS_LOCKED = 160,
 *     HUD_COLOUR_END_SCREEN_BG = 161,
 *     HUD_COLOUR_CHOP = 162,
 *     HUD_COLOUR_PAUSEMAP_TINT_HALF = 163,
 *     HUD_COLOUR_NORTH_BLUE_OFFICIAL = 164,
 *     HUD_COLOUR_SCRIPT_VARIABLE_2 = 165,
 *     HUD_COLOUR_H = 166,
 *     HUD_COLOUR_HDARK = 167,
 *     HUD_COLOUR_T = 168,
 *     HUD_COLOUR_TDARK = 169,
 *     HUD_COLOUR_HSHARD = 170,
 *     HUD_COLOUR_CONTROLLER_MICHAEL = 171 
 *     HUD_COLOUR_CONTROLLER_FRANKLIN = 172 
 *     HUD_COLOUR_CONTROLLER_TREVOR = 173 
 *     HUD_COLOUR_CONTROLLER_CHOP = 174,
 *     HUD_COLOUR_VIDEO_EDITOR_VIDEO = 175,
 *     HUD_COLOUR_VIDEO_EDITOR_AUDIO = 176,
 *     HUD_COLOUR_VIDEO_EDITOR_TEXT = 177,
 *     HUD_COLOUR_HB_BLUE = 178,
 *     HUD_COLOUR_HB_YELLOW = 179,
 *     HUD_COLOUR_VIDEO_EDITOR_SCORE = 180,
 *     HUD_COLOUR_VIDEO_EDITOR_AUDIO_FADEOUT = 181,
 *     HUD_COLOUR_VIDEO_EDITOR_TEXT_FADEOUT = 182,
 *     HUD_COLOUR_VIDEO_EDITOR_SCORE_FADEOUT = 183,
 *     HUD_COLOUR_HEIST_BACKGROUND = 184,
 *     HUD_COLOUR_VIDEO_EDITOR_AMBIENT = 185,
 *     HUD_COLOUR_VIDEO_EDITOR_AMBIENT_FADEOUT = 186,
 *     HUD_COLOUR_GANG_BOSS = 187,
 *     HUD_COLOUR_GOON = 188,
 *     HUD_COLOUR_BOSS = 189,
 *     HUD_COLOUR_LOW_FLOW = 190,
 *     HUD_COLOUR_LOW_FLOW_DARK = 191,
 *     HUD_COLOUR_G1 = 192,
 *     HUD_COLOUR_G2 = 193,
 *     HUD_COLOUR_G3 = 194,
 *     HUD_COLOUR_G4 = 195,
 *     HUD_COLOUR_G5 = 196,
 *     HUD_COLOUR_G6 = 197,
 *     HUD_COLOUR_G7 = 198,
 *     HUD_COLOUR_G8 = 199,
 *     HUD_COLOUR_G9 = 200,
 *     HUD_COLOUR_G10 = 201,
 *     HUD_COLOUR_G11 = 202,
 *     HUD_COLOUR_G12 = 203,
 *     HUD_COLOUR_G13 = 204,
 *     HUD_COLOUR_G14 = 205,
 *     HUD_COLOUR_G15 = 206,
 *     HUD_COLOUR_ADVERSARY = 207,
 *     HUD_COLOUR_DEGEN_RED = 208,
 *     HUD_COLOUR_DEGEN_YELLOW = 209,
 *     HUD_COLOUR_DEGEN_GREEN = 210,
 *     HUD_COLOUR_DEGEN_CYAN = 211,
 *     HUD_COLOUR_DEGEN_BLUE = 212,
 *     HUD_COLOUR_DEGEN_MAGENTA = 213,
 *     HUD_COLOUR_STUNT_1 = 214,
 *     HUD_COLOUR_STUNT_2 = 215,
 *     HUD_COLOUR_SPECIAL_RACE_SERIES = 216 
 *     HUD_COLOUR_SPECIAL_RACE_SERIES_DARK = 217,
 *     HUD_COLOUR_CS = 218 
 *     HUD_COLOUR_CS_DARK = 219,
 *     HUD_COLOUR_TECH_GREEN = 220,
 *     HUD_COLOUR_TECH_GREEN_DARK = 221,
 *     HUD_COLOUR_TECH_RED = 222,
 *     HUD_COLOUR_TECH_GREEN_VERY_DARK = 223,
 *     HUD_COLOUR_PLACEHOLDER_01 = 224,
 *     HUD_COLOUR_PLACEHOLDER_02 = 225,
 *     HUD_COLOUR_PLACEHOLDER_03 = 226,
 *     HUD_COLOUR_PLACEHOLDER_04 = 227,
 *     HUD_COLOUR_PLACEHOLDER_05 = 228,
 *     HUD_COLOUR_PLACEHOLDER_06 = 229,
 *     HUD_COLOUR_PLACEHOLDER_07 = 230,
 *     HUD_COLOUR_PLACEHOLDER_08 = 231,
 *     HUD_COLOUR_PLACEHOLDER_09 = 232,
 *     HUD_COLOUR_PLACEHOLDER_10 = 233,
 *     HUD_COLOUR_JUNK_ENERGY = 234
 * };
 * ```
 * 
 * ```
 * NativeDB Introduced: 2545
 * ```
 * @param hudColorId - 
 * @returns void
 * @remarks Hash: 0x2ACCB195F3CCD9DE
 */
export function setCustomMpHudColor(hudColorId: number): void;

/**
 * ```
 * This native (along with 0x5F68520888E69014 and 0x6C188BE134E074AA) do not actually filter anything. They simply add the provided text (as of 944)  
 * ```
 * @param website - 
 * @returns void
 * @remarks Hash: 0x94CF4AC034C9C986
 */
export function addTextComponentSubstringWebsite(website: string): void;

/**
 * @returns void
 * @remarks Hash: 0xE6DE0561D9232A64
 */
export function clearGpsCustomRoute(): void;

/**
 * If mouse is hovering on a slot, it returns the slot's index, else it returns -1.
 * @returns number
 * @remarks Hash: 0x359AF31A4B52F5ED
 */
export function PauseMenuGetIndexOfMouseHoveredSlot(): number;

/**
 * Converts the hash of a street name into a readable string. To retrieve a hash for a given (street) coordinate, see [`GET_STREET_NAME_AT_COORD`](#_0x2EB41072B4C1E4C0).
 * @param hash - 
 * @returns string
 * @remarks Hash: 0xD0EF8A959B8A4CB9
 */
export function getStreetNameFromHashKey(hash: number): string;

/**
 * ```
 * p0: found arguments in the b617d scripts: pastebin.com/X5akCN7z  
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xCF708001E1E536DD
 */
export function clearThisPrint(p0: string): void;

/**
 * ```
 * nothin doin.   
 * BOOL Message(char* text)  
 * 	{  
 * BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED("STRING");  
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  
 * return END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED();  
 * 	}  
 * ```
 * @param text - 
 * @returns void
 * @remarks Hash: 0x853648FD1063A213
 */
export function beginTextCommandIsMessageDisplayed(text: string): void;

/**
 * ## Parameters
 * *
 * @param style - 
 * @param hudColor - 
 * @param alpha - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xB9C362BABECDDC7A
 */
export function SetHelpMessageTextStyle(style: number, hudColor: number, alpha: number, p3: number, p4: number): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns void
 * @remarks Hash: 0x742D6FD43115AF73
 */
export function pulseBlip(blip: number): void;

/**
 * @returns void
 * @remarks Hash: 0xC65AB383CD91DF98
 */
export function preloadBusyspinner(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xEF4CED81CEBEDC6D
 */
export function getMenuPedIntStat(p0: any, p1: any): number;

/**
 * See https://imgur.com/a/lLkEsMN
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param blip - 
 * @param xScale - 
 * @param yScale - 
 * @returns void
 * @remarks Hash: 0xCD6524439909C979
 */
export function SetBlipScaleTransformation(blip: number, xScale: number, yScale: number): void;

/**
 * ## Parameters
 * *
 * @param id - 
 * @returns void
 * @remarks Hash: 0xE374C498D8BADC14
 */
export function hideScriptedHudComponentThisFrame(id: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x23D69E0465570028
 */
export function BeginTextCommandObjective(p0: string): void;

/**
 * ## Parameters
 * *
 * @param gxt - 
 * @param slot - 
 * @returns void
 * @remarks Hash: 0x6009F9F1AE90D8A6
 */
export function requestAdditionalTextForDlc(gxt: string, slot: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x320D0E0D936A0E9B
 */
export function setGpsFlashes(toggle: number): void;

/**
 * ```
 * lastItemMenuId: this is the menuID of the last selected item minus 1000 (lastItem.menuID - 1000)
 * selectedItemMenuId: same as lastItemMenuId except for the currently selected menu item
 * selectedItemUniqueId: this is uniqueID of the currently selected menu item
 * when the pausemenu is closed:
 * lastItemMenuId = -1
 * selectedItemMenuId = -1
 * selectedItemUniqueId = 0
 * when the header gains focus:
 * lastItemMenuId updates as normal or 0 if the pausemenu was just opened
 * selectedItemMenuId becomes a unique id for the pausemenu page that focus was taken from (?) or 0 if the pausemenu was just opened
 * selectedItemUniqueId = -1
 * when focus is moved from the header to a pausemenu page:
 * lastItemMenuId becomes a unique id for the pausemenu page that focus was moved to (?)
 * selectedItemMenuId = -1
 * selectedItemUniqueId updates as normal
 * ```
 * @param lastItemMenuId - 
 * @param selectedItemMenuId - 
 * @param selectedItemUniqueId - 
 * @returns void
 * @remarks Hash: 0x7E17BE53E1AAABAF
 */
export function GetPauseMenuSelectionData(lastItemMenuId: number, selectedItemMenuId: number, selectedItemUniqueId: number): void;

/**
 * ## Parameters
 * *
 * @param gamerTagId - 
 * @returns number
 * @remarks Hash: 0x595B5178E412E199
 */
export function isMpGamerTagFree(gamerTagId: number): number;

/**
 * ```
 * Adds a green checkmark on top of a blip.  
 * ```
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x74513EA3E505181E
 */
export function showTickOnBlip(blip: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x5FBD7095FE7AE57F
 */
export function getMenuPedFloatStat(p0: any, p1: number): number;

/**
 * ```
 * If toggle is true, the map is shown in full screen
 * If toggle is false, the map is shown in normal mode
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x5354C5BA2EA868A4
 */
export function RaceGalleryFullscreen(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x0923DBF87DFF735E
 */
export function setMinimapFowRevealCoordinate(x: number, y: number, z: number): void;

/**
 * If true is passed, the player won't be able to open the multiplayer chat
 * @param disable - 
 * @returns void
 * @remarks Hash: 0x1DB21A44B09E8BA3
 */
export function DisableMultiplayerChat(disable: number): void;

/**
 * Activates the specified frontend menu context.
 * 
 * pausemenu.xml defines some specific menu options using 'context'. Context is basically a 'condition'. 
 * 
 * The `*ALL*` part of the context means that whatever is being defined, will be active when any or all of those conditions after `*ALL*` are met.
 * 
 * The `*NONE*` part of the context section means that whatever is being defined, will NOT be active if any or all of the conditions after `*NONE*` are met.
 * 
 * This basically allows you to hide certain menu sections, or things like instructional buttons.
 * 
 * See the old description below for more info.
 * @param hash - 
 * @returns void
 * @remarks Hash: 0xDD564BDD0472C936
 */
export function pauseMenuActivateContext(hash: number): void;

/**
 * Updates instructional buttons in Pause Menu after menu contexts have been toggled. p0 purpose is currently unknown, only 0 is used in scripts.
 * @returns void
 * @remarks Hash: 0x4895BDEA16E7C080
 */
export function pauseMenuRedrawInstructionalButtons(): void;

/**
 * ## Parameters
 * *
 * @param id - 
 * @param x - 
 * @param y - 
 * @returns void
 * @remarks Hash: 0xAABB1F56E2A17CED
 */
export function setHudComponentPosition(id: number, x: number, y: number): void;

/**
 * ## Parameters
 * *
 * @param isImportant - 
 * @param bHasTokens - 
 * @returns number
 * @remarks Hash: 0x378E809BF61EC840
 */
export function endTextCommandThefeedPostTickerWithTokens(isImportant: number, bHasTokens: number): number;

/**
 * ## Parameters
 * *
 * @param zoom - 
 * @returns void
 * @remarks Hash: 0xBD12C5EEE184C337
 */
export function setRadarZoomPrecise(zoom: number): void;

/**
 * ```
 * Argument must be 0.0f or above 38.0f, or it will be ignored.  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * @param altitude - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xD201F3FF917A506D
 */
export function SetMinimapAltitudeIndicatorLevel(altitude: number, p1: number): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @param a - 
 * @returns void
 * @remarks Hash: 0x441603240D202FA6
 */
export function setTextEdge(p0: number, r: number, g: number, b: number, a: number): void;

/**
 * @returns void
 * @remarks Hash: 0x35EDD5B2E3FF01C0
 */
export function setMinimapGolfCourseOff(): void;

/**
 * Creates a gamer tag for the specified local player ID, automatically attached to the player's current ped.
 * The created gamer tag will have the same ID as the player. You can use [IS_MP_GAMER_TAG_ACTIVE](#_0x4E929E7A5796FD26) to check if a gamer tag already exists for a player.
 * After the gamer tag is created, all components will be set as invisible. Use [SET_MP_GAMER_TAG_VISIBILITY](#_0x63BB75ABEDC1F6A0) to change the visibility of individual components or [_SET_MP_GAMER_TAG_VISIBILITY_ALL](#_0xEE76FF7E6A0166B0) to set all of them at once.
 * 
 * To create a gamer tag for a ped that is not a player, see [CREATE_FAKE_MP_GAMER_TAG](#_0xBFEFE3321A3F5015).
 * @param player - 
 * @param username - 
 * @param crewIsPrivate - 
 * @param crewIsRockstar - 
 * @param crewName - 
 * @param crewRank - 
 * @param crewR - 
 * @param crewG - 
 * @param crewB - 
 * @returns void
 * @remarks Hash: 0x6DD05E9D83EFA4C9
 */
export function createMpGamerTagWithCrewColor(player: number, username: string, crewIsPrivate: number, crewIsRockstar: number, crewName: string, crewRank: number, crewR: number, crewG: number, crewB: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xAD6DACA4BA53E0A4
 */
export function isSubtitlePreferenceSwitchedOn(): number;

/**
 * @returns void
 * @remarks Hash: 0xE81B7D2A3DAB2D81
 */
export function setRadarAsExteriorThisFrame(): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @param player - 
 * @returns void
 * @remarks Hash: 0x127DE7B20C60A6A3
 */
export function setBlipNameToPlayerName(blip: number, player: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xAF754F20EB5CD51A
 */
export function isMinimapRendering(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x8B6817B71B85EBF0
 */
export function isStreamingAdditionalText(p0: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x8A9BA1AB3E237613
 */
export function endTextCommandIsMessageDisplayed(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xC8E1071177A23BE5
 */
export function 0xc8e1071177a23be5(p0: any, p1: any, p2: any): number;

/**
 * ```
 * adds a short flash to the Radar/Minimap  
 * Usage: UI.FLASH_MINIMAP_DISPLAY  
 * ```
 * @returns void
 * @remarks Hash: 0xF2DD778C22B15BDA
 */
export function flashMinimapDisplay(): void;

/**
 * ```
 * Forces the weapon wheel to show/hide.
 * ```
 * @param show - 
 * @returns void
 * @remarks Hash: 0xEB354E5376BC81A7
 */
export function hudForceWeaponWheel(show: number): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns number
 * @remarks Hash: 0x4BA4E2553AFEDC2C
 */
export function getBlipInfoIdEntityIndex(blip: number): number;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns number
 * @remarks Hash: 0xA5E41FD83AD6CEF0
 */
export function isBlipFlashing(blip: number): number;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns number
 * @remarks Hash: 0x26F49BF3381D933D
 */
export function isMissionCreatorBlip(blip: number): number;

/**
 * Also see [`GET_NEXT_BLIP_INFO_ID`](#_0x14F96AA50D6FBEA7) for an example.
 * @param blipSprite - 
 * @returns number
 * @remarks Hash: 0x1BEDE233E6CD2A1F
 */
export function getFirstBlipInfoId(blipSprite: number): number;

/**
 * ## Parameters
 * *
 * @param labelName - 
 * @returns void
 * @remarks Hash: 0xC63CD5D2920ACBE7
 */
export function addTextComponentSubstringTextLabel(labelName: string): void;

/**
 * ## Parameters
 * *
 * @param value - 
 * @param commaSeparated - 
 * @returns void
 * @remarks Hash: 0x0E4C749FF9DE9CC4
 */
export function addTextComponentFormattedInteger(value: number, commaSeparated: number): void;

/**
 * ## Parameters
 * *
 * @param chTitle - 
 * @param clanTxd - 
 * @param clanTxn - 
 * @param isImportant - 
 * @param showSubtitle - 
 * @returns number
 * @remarks Hash: 0x8EFCCF6EC66D85E4
 */
export function endTextCommandThefeedPostCrewRankup(chTitle: string, clanTxd: string, clanTxn: string, isImportant: number, showSubtitle: number): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x4E3CD0EF8A489541
 */
export function isNavigatingMenuContent(): any;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x3EED80DFF7325CAA
 */
export function setPedAiBlipHasCone(ped: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x889329C80FE5963C
 */
export function SetAllowAbilityBarInMultiplayer(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x41350B4FC28E3941
 */
export function 0x41350b4fc28e3941(p0: number): void;

/**
 * ## Parameters
 * *
 * @param renderId - 
 * @returns void
 * @remarks Hash: 0x5F15302936E07111
 */
export function setTextRenderId(renderId: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xF1A6C18B35BCADE6
 */
export function showStartMissionInstructionalButton(p0: number): void;

/**
 * ## Parameters
 * *
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0x17430B918701C342
 */
export function ThefeedSetAnimpostfxColor(red: number, green: number, blue: number, alpha: number): void;

/**
 * ## Parameters
 * *
 * @param id - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x223CA69A8C4417FD
 */
export function getHudComponentPosition(id: number): { x: number, y: number, z: number };

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA9CBFD40B3FA3010
 */
export function thefeedIsPaused(): number;

/**
 * Forces the Pause Menu to back out of unique pages such as Awards, Unlocks, Key Bindings etc
 * @returns void
 * @remarks Hash: 0xCDCA26E80FAECB8F
 */
export function pauseMenuceptionTheKick(): void;

/**
 * ```
 * This native removes the current waypoint from the map.
 * Example:
 * C#:
 * Function.Call(Hash.SET_WAYPOINT_OFF);
 * C++:
 * HUD::SET_WAYPOINT_OFF();
 * ```
 * @returns void
 * @remarks Hash: 0xA7E4E2D361C2627F
 */
export function setWaypointOff(): void;

/**
 * GET_BLIP_*
 * Seems to always return 0 from what I can tell. I've tried a lot of different blip related natives and it always seems to return 0. Decompiled scripts always pass a blip handle as p0.
 * @param blip - 
 * @returns number
 * @remarks Hash: 0x2C173AE2BDB9385E
 */
export function 0x2c173ae2bdb9385e(blip: number): number;

/**
 * ```
 * Sets the sprite of the next BLIP_GALLERY blip, values used in the native scripts: 143 (ObjectiveBlue), 144 (ObjectiveGreen), 145 (ObjectiveRed), 146 (ObjectiveYellow).
 * ```
 * @param spriteId - 
 * @returns void
 * @remarks Hash: 0x1EAE6DD17B7A5EFA
 */
export function RaceGalleryNextBlipSprite(spriteId: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param gangId - 
 * @returns void
 * @remarks Hash: 0xE52B8E7F85D39A08
 */
export function setPedAiBlipGangId(ped: number, gangId: number): void;

/**
 * Gets a localized string literal from a label name. This is used to get the filename of the audio conversation associated with the provided label name.
 * @param labelName - 
 * @returns string
 * @remarks Hash: 0x7B5280EBA9840C72
 */
export function getFilenameForAudioConversation(labelName: string): string;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param hasCone - 
 * @param color - 
 * @returns void
 * @remarks Hash: 0xB13DCB4C6FAAD238
 */
export function SetPedHasAiBlipWithColor(ped: number, hasCone: number, color: number): void;

/**
 * ```
 * List of interior hashes: pastebin.com/1FUyXNqY  
 * Not for every interior zoom > 0 available.  
 * ```
 * @param interior - 
 * @param x - 
 * @param y - 
 * @param heading - 
 * @param zoom - 
 * @returns void
 * @remarks Hash: 0x59E727A1C9D3E31A
 */
export function setRadarAsInteriorThisFrame(interior: number, x: number, y: number, heading: number, zoom: number): void;

/**
 * By default, the player health value shown by a gamer tag's health bar is synchronised with the health of the ped it is attached to.
 * This native disables that behaviour, allowing [`_SET_MP_GAMER_TAG_OVERRIDE_PLAYER_HEALTH`](#_0x1563FE35E9928E67) to have an effect.
 * @param gamerTagId - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xD29EC58C2F6B5014
 */
export function SetMpGamerTagDisablePlayerHealthSync(gamerTagId: number, toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0x3E93E06DB8EF1F30
 */
export function unlockMinimapPosition(): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1EAC5F91BCBC5073
 */
export function setRaceTrackRender(toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0x8817605C2BA76200
 */
export function forceCloseTextInputBox(): void;

/**
 * ```
 * Used in the native scripts to reference "GET_PEDHEADSHOT_TXD_STRING" and "CHAR_DEFAULT".
 * 
 * NativeDB Introduced: v323
 * ```
 * @param txdString1 - 
 * @param txnString1 - 
 * @param txdString2 - 
 * @param txnString2 - 
 * @returns void
 * @remarks Hash: 0x317EBA71D7543F52
 */
export function thefeedUpdateItemTexture(txdString1: string, txnString1: string, txdString2: string, txnString2: string): void;

/**
 * ## Parameters
 * *
 * @param string - 
 * @returns number
 * @remarks Hash: 0x43E4111189E54F0E
 */
export function getLengthOfLiteralStringInBytes(string: string): number;

/**
 * ```
 * Adds a orange checkmark on top of a given blip handle: https://imgur.com/a/aw5OTMF
 * _SHOW_FRIEND_INDICATOR_ON_BLIP* - _SHOW_HEADING_INDICATOR_ON_BLIP*
 * ```
 * 
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xCAC2031EBF79B1A8
 */
export function ShowHasCompletedIndicatorOnBlip(blip: number, toggle: number): void;

/**
 * ```
 * If Minimap / Radar should be displayed.
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xA0EBB943C300E693
 */
export function displayRadar(toggle: number): void;

/**
 * Switches the display of the in-game minimap to the Cayo Perico map. This native needs to be called every frame to maintain the toggled state effectively.
 * 
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x5E1460624D194A38
 */
export function setUseIslandMap(toggle: number): void;

/**
 * ```
 * IS_WARNING_MESSAGE_*
 * ```
 * @returns number
 * @remarks Hash: 0xAF42195A42C63BBA
 */
export function IsWarningMessageActive2(): number;

/**
 * @returns void
 * @remarks Hash: 0x9D292F73ADBD9313
 */
export function clearBrief(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xF13FE2A80C05C561
 */
export function 0xf13fe2a80c05c561(): number;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @param number - 
 * @returns void
 * @remarks Hash: 0xA3C0B359DCB848B6
 */
export function showNumberOnBlip(blip: number, number: number): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns void
 * @remarks Hash: 0x532CFF637EF80148
 */
export function hideNumberOnBlip(blip: number): void;

/**
 * @returns void
 * @remarks Hash: 0xA8FDB297A8D25FBA
 */
export function thefeedFlushQueue(): void;

/**
 * ```
 * Sets flag's sprite transparency. 0-255.  
 * ```
 * @param gamerTagId - 
 * @param component - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0xD48FE545CD46F857
 */
export function setMpGamerTagAlpha(gamerTagId: number, component: number, alpha: number): void;

/**
 * ```
 * Returns a substring of a specified length starting at a specified position. The result is guaranteed not to exceed the specified max length.
 * NOTE: The 'maxLength' parameter might actually be the size of the buffer that is returned. More research is needed. -CL69
 * Example:
 * // Condensed example of how Rockstar uses this function
 * strLen = HUD::GET_LENGTH_OF_LITERAL_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT());
 * subStr = HUD::_GET_TEXT_SUBSTRING_SAFE(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 0, strLen, 63);
 * --
 * "fm_race_creator.ysc", line 85115:
 * // parameters modified for clarity
 * BOOL sub_8e5aa(char *text, int length) {
 *     for (i = 0; i <= (length - 2); i += 1) {
 *         if (!MISC::ARE_STRINGS_EQUAL(HUD::_GET_TEXT_SUBSTRING_SAFE(text, i, i + 1, 1), " ")) {
 *             return FALSE;
 *         }
 *     }
 *     return TRUE;
 * }
 * ```
 * @param text - 
 * @param position - 
 * @param length - 
 * @param maxLength - 
 * @returns string
 * @remarks Hash: 0xB2798643312205C5
 */
export function GetTextSubstringSafe(text: string, position: number, length: number, maxLength: number): string;

/**
 * @returns void
 * @remarks Hash: 0x81FA173F170560D1
 */
export function refreshWaypoint(): void;

/**
 * Gets the sprite id of the specified blip. Blip sprite ids and images can be found [here](https://docs.fivem.net/docs/game-references/blips/).
 * @param blip - 
 * @returns number
 * @remarks Hash: 0x1FC877464A04FC4F
 */
export function getBlipSprite(blip: number): number;

/**
 * ```
 * Used to be known as _SET_TEXT_COMPONENT_FORMAT  
 * ```
 * @param inputType - 
 * @returns void
 * @remarks Hash: 0x8509B634FBE7DA11
 */
export function beginTextCommandDisplayHelp(inputType: string): void;

/**
 * Gets mouse event data from scaleforms with mouse support. Must be checked every frame.
 * Returns item index if using the COLOUR_SWITCHER_02 scaleform.
 * Selection types, found in MOUSE_EVENTS.as:
 * MOUSE_DRAG_OUT = 0;
 * MOUSE_DRAG_OVER = 1;
 * MOUSE_DOWN = 2;
 * MOUSE_MOVE = 3;
 * MOUSE_UP = 4;
 * MOUSE_PRESS = 5;
 * MOUSE_RELEASE = 6;
 * MOUSE_RELEASE_OUTSIDE = 7;
 * MOUSE_ROLL_OUT = 8;
 * MOUSE_ROLL_OVER = 9;
 * MOUSE_WHEEL_UP = 10;
 * MOUSE_WHEEL_DOWN = 11;
 *  
 * Scaleforms that this works with: 
 * - COLOUR_SWITCHER_02
 * - MP_RESULTS_PANEL
 * - MP_NEXT_JOB_SELECTION
 * - SC_LEADERBOARD
 * Probably works with other scaleforms, needs more research.
 * In order to use this Native you MUST have controls 239, 240, 237, 238 enabled!
 * This native, due to its erroneous redundancy of the returned boolean value, works differently in C#: shifting the parameters (where `received` becomes `selectionType` and so on making the fourth parameter unused and always 0).
 * @param scaleformHandle - 
 * @returns number
 * @remarks Hash: 0x632B2940C67F4EA9
 */
export function getMouseEvent(scaleformHandle: number): number;

/**
 * ```
 * Used to be known as _SET_TEXT_ENTRY_2  
 * void ShowSubtitle(char *text)  
 * {  
 * 	BEGIN_TEXT_COMMAND_PRINT("STRING");  
 * 	ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  
 * 	END_TEXT_COMMAND_PRINT(2000, 1);  
 * }  
 * ```
 * @param GxtEntry - 
 * @returns void
 * @remarks Hash: 0xB87A37EEB7FAA67D
 */
export function beginTextCommandPrint(GxtEntry: string): void;

/**
 * Same as [`SET_WAYPOINT_OFF`](#_0xA7E4E2D361C2627F), except it checks if the local player is the owner of the waypoint.
 * @returns void
 * @remarks Hash: 0xD8E694757BCEA8E9
 */
export function deleteWaypointsFromThisPlayer(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x327EDEEEAC55C369
 */
export function isHelpMessageFadingOut(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xDCD4EC3F419D02FA
 */
export function getMainPlayerBlipId(): number;

/**
 * ```
 * Requires GAME_STREAM_ENUMS.MSGTEXT. Default sounds: "DPAD_WEAPON_SCROLL" and "HUD_FRONTEND_DEFAULT_SOUNDSET"
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x4A0C7C9BB10ABB36
 */
export function ThefeedSetAnimpostfxSound(toggle: number): void;

/**
 * Displays loading screen tips, requires `_0x56C8B608CFD49854` to be called beforehand.
 * @returns void
 * @remarks Hash: 0x488043841BBE156F
 */
export function HudDisplayLoadingScreenTips(): void;

/**
 * @returns void
 * @remarks Hash: 0x583049884A2EEE3C
 */
export function 0x583049884a2eee3c(): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0x02CFBA0C9E9275CE
 */
export function flashAbilityBar(): void;

/**
 * ```
 * Returns the handle for the notification currently displayed on the screen. Name may be a hash collision, but describes the function accurately.
 * ```
 * @returns number
 * @remarks Hash: 0x82352748437638CA
 */
export function thefeedGetFirstVisibleDeleteRemaining(): number;

/**
 * @returns void
 * @remarks Hash: 0x12782CE0A636E9F0
 */
export function resetReticuleValues(): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x0C698D8F099174C7
 */
export function 0x0c698d8f099174c7(p0: any): void;

/**
 * Forces the map menu to reload.
 * @returns void
 * @remarks Hash: 0x2916A928514C9827
 */
export function reloadMapMenu(): void;

/**
 * @returns void
 * @remarks Hash: 0x5FBAE526203990C9
 */
export function hideMinimapExteriorMapThisFrame(): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6F1554B0CC2089FA
 */
export function thefeedOnlyShowTooltips(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @param opacity - 
 * @param duration - 
 * @returns void
 * @remarks Hash: 0x2AEE8F8390D2298C
 */
export function setBlipFade(blip: number, opacity: number, duration: number): void;

/**
 * SET_C*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @returns void
 * @remarks Hash: 0xB7B873520C84C118
 */
export function 0xb7b873520c84c118(): void;

/**
 * ## Parameters
 * *
 * @param color - 
 * @returns void
 * @remarks Hash: 0x7B21E0BB01E8224A
 */
export function SetMainPlayerBlipColour(color: number): void;

/**
 * ```
 * SET_*
 * ```
 * @returns void
 * @remarks Hash: 0x2632482FD6B9AB87
 */
export function SetDirectorModeClearTriggeredFlag(): void;

/**
 * ```
 * This native turns on the AI blip on the specified ped. It also disappears automatically when the ped is too far or if the ped is dead. You don't need to control it with other natives.
 * See gtaforums.com/topic/884370-native-research-ai-blips for further information.
 * ```
 * @param ped - 
 * @param hasCone - 
 * @returns void
 * @remarks Hash: 0xD30C50DF888D58B5
 */
export function setPedHasAiBlip(ped: number, hasCone: number): void;

/**
 * Hud colors can be found [here](https://docs.fivem.net/docs/game-references/hud-colors/)
 * @param hudColorIndex - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @param a - 
 * @returns void
 * @remarks Hash: 0xF314CF4F0211894E
 */
export function replaceHudColourWithRgba(hudColorIndex: number, r: number, g: number, b: number, a: number): void;

/**
 * ```
 * Set the active slotIndex in the wheel weapon to the slot associated with the provided Weapon hash
 * ```
 * @param weaponHash - 
 * @returns void
 * @remarks Hash: 0x72C1056D678BB7D8
 */
export function hudSetWeaponWheelTopSlot(weaponHash: number): void;

/**
 * Adds a rectangular blip for the specified coordinates/area.
 * 
 * It is recommended to use [SET_BLIP_ROTATION](#_0xF87683CDF73C3F6E) and [SET_BLIP_COLOUR](#_0x03D7FB09E75D6B7E) to make the blip not rotate along with the camera.
 * 
 * By default, the blip will show as a _regular_ blip with the specified color/sprite if it is outside of the minimap view.
 * 
 * Example image:
 * ![minimap](https://i.imgur.com/qLbXWcQ.png)
 * ![big map](https://i.imgur.com/0j7O7Rh.png)
 * 
 * (Native name is _likely_ to actually be ADD_BLIP_FOR_AREA, but due to the usual reasons this can't be confirmed)
 * @param x - 
 * @param y - 
 * @param z - 
 * @param width - 
 * @param height - 
 * @returns number
 * @remarks Hash: 0xCE5D0E5E315DB238
 */
export function AddBlipForArea(x: number, y: number, z: number, width: number, height: number): number;

/**
 * ## Parameters
 * *
 * @param pickup - 
 * @returns number
 * @remarks Hash: 0xBE339365C863BD36
 */
export function addBlipForPickup(pickup: number): number;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @returns void
 * @remarks Hash: 0x211C4EF450086857
 */
export function 0x211c4ef450086857(): void;

/**
 * ```
 * Initializes the text entry for the the text next to a loading prompt. All natives for for building UI texts can be used here  
 * BEGIN_TEXT_COMMAND_PRINT  
 * e.g  
 * void StartLoadingMessage(char *text, int spinnerType = 3)  
 * 	{  
 * _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");  
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  
 * _SHOW_LOADING_PROMPT(spinnerType);  
 * 	}  
 * /*OR*/  
 * 	void ShowLoadingMessage(char *text, int spinnerType = 3, int timeMs = 10000)  
 * 	{  
 * _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");  
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  
 * _SHOW_LOADING_PROMPT(spinnerType);  
 * WAIT(timeMs);  
 * _REMOVE_LOADING_PROMPT();  
 * 	}  
 * These are some localized strings used in the loading spinner.  
 * "PM_WAIT"                   = Please Wait  
 * "CELEB_WPLYRS"              = Waiting For Players.  
 * "CELL_SPINNER2"             = Scanning storage.  
 * "ERROR_CHECKYACHTNAME" = Registering your yacht's name. Please wait.  
 * "ERROR_CHECKPROFANITY"   = Checking your text for profanity. Please wait.  
 * "FM_COR_AUTOD"                        = Just spinner no text  
 * "FM_IHELP_WAT2"                        = Waiting for other players  
 * "FM_JIP_WAITO"                            = Game options are being set  
 * "FMMC_DOWNLOAD"                    = Downloading  
 * "FMMC_PLYLOAD"                         = Loading  
 * "FMMC_STARTTRAN"                    = Launching session  
 * "HUD_QUITTING"                           =  Quiting session  
 * "KILL_STRIP_IDM"                         = Waiting for to accept  
 * "MP_SPINLOADING"                      = Loading  
 * ```
 * @param string - 
 * @returns void
 * @remarks Hash: 0xABA17D7CE615ADBF
 */
export function beginTextCommandBusyspinnerOn(string: string): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x3BAB9A4E4F2FF5C7
 */
export function isFrontendReadyForControl(): number;

/**
 * ```
 * Adds the GTA: Online player heading indicator to a blip.  
 * ```
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x5FBCA48327B914DF
 */
export function showHeadingIndicatorOnBlip(blip: number, toggle: number): void;

/**
 * Sets some extra options for a notification. It adds an image (or icon type) and sets a notification title (sender) and subtitle (subject).
 * 
 * Texture dictionary and texture name parameters are usually the same exact value.
 * 
 * Example result:
 * 
 * ![](https://i.imgur.com/LviutDl.png)
 * 
 * Old description with list of possible icons and texture names:
 * 
 * ```
 * List of picNames: pastebin.com/XdpJVbHz  
 * flash is a bool for fading in.  
 * iconTypes:  
 * 1 : Chat Box  
 * 2 : Email  
 * 3 : Add Friend Request  
 * 4 : Nothing  
 * 5 : Nothing  
 * 6 : Nothing  
 * 7 : Right Jumping Arrow  
 * 8 : RP Icon  
 * 9 : $ Icon  
 * "sender" is the very top header. This can be any old string.  
 * "subject" is the header under the sender.  
 * ```
 * @param textureDict - 
 * @param textureName - 
 * @param flash - 
 * @param iconType - 
 * @param sender - 
 * @param subject - 
 * @returns number
 * @remarks Hash: 0x1CCD9A37359072CF
 */
export function endTextCommandThefeedPostMessagetext(textureDict: string, textureName: string, flash: number, iconType: number, sender: string, subject: string): number;

/**
 * @returns void
 * @remarks Hash: 0x5E62BE5DC58E9E06
 */
export function clearPedInPauseMenu(): void;

/**
 * ```
 * Returns a substring that is between two specified positions. The length of the string will be calculated using (endPosition - startPosition).
 * Example:
 * // Get "STRING" text from "MY_STRING"
 * subStr = HUD::_GET_TEXT_SUBSTRING_SLICE("MY_STRING", 3, 9);
 * // Overflows are possibly replaced with underscores (needs verification)
 * subStr = HUD::_GET_TEXT_SUBSTRING_SLICE("MY_STRING", 3, 10); // "STRING_"?
 * ```
 * @param text - 
 * @param startPosition - 
 * @param endPosition - 
 * @returns string
 * @remarks Hash: 0xCE94AEBA5D82908A
 */
export function GetTextSubstringSlice(text: string, startPosition: number, endPosition: number): string;

/**
 * Does stuff like this:  
 * gyazo.com/7fcb78ea3520e3dbc5b2c0c0f3712617  
 * Example:  
 * int GetHash = GET_HASH_KEY("fe_menu_version_corona_lobby");  
 * ACTIVATE_FRONTEND_MENU(GetHash, 0, -1);  
 * BOOL p1 is a toggle to define the game in pause.  
 * int p2 is unknown but -1 always works, not sure why though.  
 * [30/03/2017] ins1de :  
 * the int p2 is actually a component variable. When the pause menu is visible, it opens the tab related to it.  
 * Example : Function.Call(Hash.ACTIVATE_FRONTEND_MENU,-1171018317, 0, 42);  
 * Result : Opens the "Online" tab without pausing the menu, with -1 it opens the map.  
 * 
 * 
 * Below is a list of all known Frontend Menu Hashes.
 * 
 * - FE_MENU_VERSION_SP_PAUSE
 * - FE_MENU_VERSION_MP_PAUSE
 * - FE_MENU_VERSION_CREATOR_PAUSE
 * - FE_MENU_VERSION_CUTSCENE_PAUSE
 * - FE_MENU_VERSION_SAVEGAME
 * - FE_MENU_VERSION_PRE_LOBBY
 * - FE_MENU_VERSION_LOBBY
 * - FE_MENU_VERSION_MP_CHARACTER_SELECT
 * - FE_MENU_VERSION_MP_CHARACTER_CREATION
 * - FE_MENU_VERSION_EMPTY
 * - FE_MENU_VERSION_EMPTY_NO_BACKGROUND
 * - FE_MENU_VERSION_TEXT_SELECTION
 * - FE_MENU_VERSION_CORONA
 * - FE_MENU_VERSION_CORONA_LOBBY
 * - FE_MENU_VERSION_CORONA_JOINED_PLAYERS
 * - FE_MENU_VERSION_CORONA_INVITE_PLAYERS
 * - FE_MENU_VERSION_CORONA_INVITE_FRIENDS
 * - FE_MENU_VERSION_CORONA_INVITE_CREWS
 * - FE_MENU_VERSION_CORONA_INVITE_MATCHED_PLAYERS
 * - FE_MENU_VERSION_CORONA_INVITE_LAST_JOB_PLAYERS
 * - FE_MENU_VERSION_CORONA_RACE
 * - FE_MENU_VERSION_CORONA_BETTING
 * - FE_MENU_VERSION_JOINING_SCREEN
 * - FE_MENU_VERSION_LANDING_MENU
 * - FE_MENU_VERSION_LANDING_KEYMAPPING_MENU
 * @param menuhash - 
 * @param togglePause - 
 * @param component - 
 * @returns void
 * @remarks Hash: 0xEF01D36B9C9D0C7B
 */
export function activateFrontendMenu(menuhash: number, togglePause: number, component: number): void;

/**
 * ```
 * I think this works, but seems to prohibit switching to other weapons (or accessing the weapon wheel)  
 * ```
 * @returns void
 * @remarks Hash: 0x719FF505F097FD20
 */
export function hideHudAndRadarThisFrame(): void;

/**
 * ## Parameters
 * *
 * @param blipSprite - 
 * @returns number
 * @remarks Hash: 0x14F96AA50D6FBEA7
 */
export function getNextBlipInfoId(blipSprite: number): number;

/**
 * ## Parameters
 * *
 * @param hudIndex - 
 * @returns number
 * @remarks Hash: 0x2432784ACA090DA4
 */
export function isFloatingHelpTextOnScreen(hudIndex: number): number;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xE2590BC29220CEBB
 */
export function setBlipHighDetail(blip: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns number
 * @remarks Hash: 0x1E314167F701DC3B
 */
export function getBlipInfoIdDisplay(blip: number): number;

/**
 * ```
 * Does the same as SET_RACE_TRACK_RENDER(false);
 * ```
 * @returns void
 * @remarks Hash: 0x7AA5B4CE533C858B
 */
export function clearGpsRaceTrack(): void;

/**
 * @returns void
 * @remarks Hash: 0xEE4C0E6DBC6F2C6F
 */
export function forceCloseReportugcMenu(): void;

/**
 * @returns void
 * @remarks Hash: 0x1AC8F4AD40E22127
 */
export function CloseMultiplayerChat(): void;

/**
 * ```
 * HUD::SET_SOCIAL_CLUB_TOUR("Gallery");
 * HUD::SET_SOCIAL_CLUB_TOUR("Missions");
 * HUD::SET_SOCIAL_CLUB_TOUR("General");
 * HUD::SET_SOCIAL_CLUB_TOUR("Playlists");
 * ```
 * @param name - 
 * @returns void
 * @remarks Hash: 0x9E778248D6685FE0
 */
export function setSocialClubTour(name: string): void;

/**
 * ```
 * If Hud should be displayed  
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xA6294919E56FF02A
 */
export function displayHud(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param maximumValue - 
 * @returns void
 * @remarks Hash: 0x06A320535F5F0248
 */
export function setMaxArmourHudDisplay(maximumValue: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xB2A592B04648A9CB
 */
export function busyspinnerIsDisplaying(): number;

/**
 * ```
 * Displays the crosshair for this frame.  
 * ```
 * @returns void
 * @remarks Hash: 0x73115226F4814E62
 */
export function displaySniperScopeThisFrame(): void;

/**
 * ## Parameters
 * *
 * @param addToBrief - 
 * @returns void
 * @remarks Hash: 0x60296AF4BA14ABC5
 */
export function addNextMessageToPreviousBriefs(addToBrief: number): void;

/**
 * Starts a text command to change the name of a blip displayed in the pause menu.
 * 
 * This should be paired with [`END_TEXT_COMMAND_SET_BLIP_NAME`](#_0xBC38B49BCB83BC9B), once adding all required text components.
 * @param textLabel - 
 * @returns void
 * @remarks Hash: 0xF9113A30DE5C6670
 */
export function beginTextCommandSetBlipName(textLabel: string): void;

/**
 * ```
 * From the decompiled scripts:
 * HUD::_92F0DA1E27DB96DC(6);
 * HUD::_92F0DA1E27DB96DC(184);
 * HUD::_92F0DA1E27DB96DC(190);
 * sets background color for the next notification
 * 6 = red
 * 184 = green
 * 190 = yellow
 * Here is a list of some colors that can be used: gyazo.com/68bd384455fceb0a85a8729e48216e15
 * ```
 * @param hudColorIndex - 
 * @returns void
 * @remarks Hash: 0x92F0DA1E27DB96DC
 */
export function ThefeedSetNextPostBackgroundColor(hudColorIndex: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x2E22FEFA0100275E
 */
export function 0x2e22fefa0100275e(): number;

/**
 * ```
 * If true, remove all feed components instantly. Otherwise tween/animate close each component
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xBAE4F9B97CD43B30
 */
export function ThefeedSetFlushAnimpostfx(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns number
 * @remarks Hash: 0xDF729E8D20CF7327
 */
export function getBlipColour(blip: number): number;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns number
 * @remarks Hash: 0xDA5F8727EB75B926
 */
export function isBlipShortRange(blip: number): number;

/**
 * ## Parameters
 * *
 * @param id - 
 * @returns number
 * @remarks Hash: 0x09C0403ED9A751C2
 */
export function isScriptedHudComponentHiddenThisFrame(id: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x0CF54F20DE43879C
 */
export function 0x0cf54f20de43879c(p0: any): void;

/**
 * ```
 * Returns the weapon hash active in a specific weapon wheel slotList
 * ```
 * @param weaponTypeIndex - 
 * @returns number
 * @remarks Hash: 0xA13E93403F26C812
 */
export function HudWeaponWheelGetSlotHash(weaponTypeIndex: number): number;

/**
 * ```
 * Types -  
 * 0: Center-Justify  
 * 1: Left-Justify  
 * 2: Right-Justify  
 * Right-Justify requires SET_TEXT_WRAP, otherwise it will draw to the far right of the screen  
 * ```
 * @param justifyType - 
 * @returns void
 * @remarks Hash: 0x4E096588B13FFECA
 */
export function setTextJustification(justifyType: number): void;

/**
 * ```
 * Only the script that originally called SET_GPS_FLAGS can set them again. Another script cannot set the flags, until the first script that called it has called CLEAR_GPS_FLAGS.
 * Doesn't seem like the flags are actually read by the game at all.
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x5B440763A4C8D15B
 */
export function setGpsFlags(p0: number, p1: number): void;

/**
 * ```
 * Enable / disable showing route for the Blip-object.  
 * ```
 * @param blip - 
 * @param enabled - 
 * @returns void
 * @remarks Hash: 0x4F7D8A9BFB0B43E9
 */
export function setBlipRoute(blip: number, enabled: number): void;

/**
 * ```
 * Locks the minimap to the specified world position.  
 * ```
 * @param x - 
 * @param y - 
 * @returns void
 * @remarks Hash: 0x1279E861A329E73F
 */
export function lockMinimapPosition(x: number, y: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x6AFDFB93754950C7
 */
export function toggleStealthRadar(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param labelName - 
 * @returns void
 * @remarks Hash: 0x0A24DA3A41B718F5
 */
export function beginTextCommandIsThisHelpMessageBeingDisplayed(labelName: string): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0x6A1738B4323FE2D9
 */
export function OverrideMultiplayerChatPrefix(): void;

/**
 * Toggles the visibility of the cursor. Do note that if the game loses focus and then regains it, the cursor will become visible again.
 * @param isVisible - 
 * @returns void
 * @remarks Hash: 0x98215325A695E78A
 */
export function setMouseCursorVisible(isVisible: number): void;

/**
 * ```
 * Returns the weapon hash to the selected/highlighted weapon in the wheel
 * ```
 * @returns number
 * @remarks Hash: 0xA48931185F0536FE
 */
export function HudWeaponWheelGetSelectedHash(): number;

/**
 * Flashes blip for time in milliseconds before stopping.
 * @param blip - 
 * @param duration - 
 * @returns void
 * @remarks Hash: 0xD3CD6FD297AE87CC
 */
export function setBlipFlashTimer(blip: number, duration: number): void;

/**
 * ## Parameters
 * *
 * @param id - 
 * @returns number
 * @remarks Hash: 0xDD100EB17A94FF65
 */
export function isScriptedHudComponentActive(id: number): number;

/**
 * ```
 * It adds the localized text of the specified GXT entry name. Eg. if the argument is GET_HASH_KEY("ES_HELP"), adds "Continue". Just uses a text labels hash key  
 * ```
 * @param gxtEntryHash - 
 * @returns void
 * @remarks Hash: 0x17299B63C7683A2B
 */
export function addTextComponentSubstringTextLabelHashKey(gxtEntryHash: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x6E0EB3EB47C8D7AA
 */
export function isMpGamerTagMovieActive(): number;

/**
 * ```
 * colors you input not same as you think?
 * A: for some reason its R B G A
 * ```
 * @param red - 
 * @param green - 
 * @param blue - 
 * @param alpha - 
 * @returns void
 * @remarks Hash: 0xBE6B23FFA53FB442
 */
export function setTextColour(red: number, green: number, blue: number, alpha: number): void;

/**
 * ```
 * This function is hard-coded to always return 1.  
 * ```
 * @returns number
 * @remarks Hash: 0x52F0982D7FD156B6
 */
export function getDefaultScriptRendertargetRenderId(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x4B5B620C9B59ED34
 */
export function 0x4b5b620c9b59ed34(p0: any, p1: any): void;

/**
 * ```c
 * enum eInstructionalButtonTypes
 * {
 *     NONE = 0,
 *     SELECT = 1,
 *     OK = 2,
 *     YES = 4,
 *     BACK = 8,
 *     BACK_SELECT = 9,
 *     BACK_OK = 10,
 *     BACK_YES = 12,
 *     CANCEL = 16,
 *     CANCEL_SELECT = 17,
 *     CANCEL_OK = 18,
 *     CANCEL_YES = 20,
 *     NO = 32,
 *     NO_SELECT = 33,
 *     NO_OK = 34,
 *     YES_NO = 36,
 *     RETRY = 64,
 *     RETRY_SELECT = 65,
 *     RETRY_OK = 66,
 *     RETRY_YES = 68,
 *     RETRY_BACK = 72,
 *     RETRY_BACK_SELECT = 73,
 *     RETRY_BACK_OK = 74,
 *     RETRY_BACK_YES = 76,
 *     RETRY_CANCEL = 80,
 *     RETRY_CANCEL_SELECT = 81,
 *     RETRY_CANCEL_OK = 82,
 *     RETRY_CANCEL_YES = 84,
 *     SKIP = 256,
 *     SKIP_SELECT = 257,
 *     SKIP_OK = 258,
 *     SKIP_YES = 260,
 *     SKIP_BACK = 264,
 *     SKIP_BACK_SELECT = 265,
 *     SKIP_BACK_OK = 266,
 *     SKIP_BACK_YES = 268,
 *     SKIP_CANCEL = 272,
 *     SKIP_CANCEL_SELECT = 273,
 *     SKIP_CANCEL_OK = 274,
 *     SKIP_CANCEL_YES = 276,
 *     CONTINUE = 16384,
 *     BACK_CONTINUE = 16392,
 *     CANCEL_CONTINUE = 16400,
 *     LOADING_SPINNER = 134217728,
 *     SELECT_LOADING_SPINNER = 134217729,
 *     OK_LOADING_SPINNER = 134217730,
 *     YES_LOADING_SPINNER = 134217732,
 *     BACK_LOADING_SPINNER = 134217736,
 *     BACK_SELECT_LOADING_SPINNER = 134217737,
 *     BACK_OK_LOADING_SPINNER = 134217738,
 *     BACK_YES_LOADING_SPINNER = 134217740,
 *     CANCEL_LOADING_SPINNER = 134217744,
 *     CANCEL_SELECT_LOADING_SPINNER = 134217745,
 *     CANCEL_OK_LOADING_SPINNER = 134217746,
 *     CANCEL_YES_LOADING_SPINNER = 134217748
 * }
 * ```
 * 
 * Note: this list is definitely NOT complete, but these are the ones I've been able to find before giving up because it's such a boring thing to look for 'good' combinations.
 * @param entryLine1 - 
 * @param instructionalKey - 
 * @param entryLine2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x7B1776B3B53F8D74
 */
export function setWarningMessage(entryLine1: string, instructionalKey: number, entryLine2: string, p3: number, p4: number): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns number
 * @remarks Hash: 0x970F608F0EE6C885
 */
export function getBlipAlpha(blip: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x9135584D09A3437E
 */
export function isReportugcMenuOpen(): number;

/**
 * Changes the hud color at a given index (hudColorIndex) by another one (hudColorIndex2).
 * 
 * HUD colors can be found [here](https://docs.fivem.net/docs/game-references/hud-colors/)
 * @param hudColorIndex - 
 * @param hudColorIndex2 - 
 * @returns void
 * @remarks Hash: 0x1CCC708F0F850613
 */
export function replaceHudColour(hudColorIndex: number, hudColorIndex2: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x60734CC207C9833C
 */
export function allowSonarBlips(toggle: number): void;

/**
 * This function shows various HUD (Heads-up Display) components.
 * 
 * Listed below are the integers and the corresponding HUD component.
 * - 1 : WANTED_STARS
 * - 2 : WEAPON_ICON
 * - 3 : CASH
 * - 4 : MP_CASH
 * - 5 : MP_MESSAGE
 * - 6 : VEHICLE_NAME
 * - 7 : AREA_NAME
 * - 8 : VEHICLE_CLASS
 * - 9 : STREET_NAME
 * - 10 : HELP_TEXT
 * - 11 : FLOATING_HELP_TEXT_1
 * - 12 : FLOATING_HELP_TEXT_2
 * - 13 : CASH_CHANGE
 * - 14 : RETICLE
 * - 15 : SUBTITLE_TEXT
 * - 16 : RADIO_STATIONS
 * - 17 : SAVING_GAME
 * - 18 : GAME_STREAM
 * - 19 : WEAPON_WHEEL
 * - 20 : WEAPON_WHEEL_STATS
 * - 21 : HUD_COMPONENTS
 * - 22 : HUD_WEAPONS
 * 
 * These integers also work for the [`HIDE_HUD_COMPONENT_THIS_FRAME`](#_0x6806C51AD12B83B8) native, but instead hides the HUD component.
 * @param id - 
 * @returns void
 * @remarks Hash: 0x0B4DF1FA60C0E664
 */
export function showHudComponentThisFrame(id: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param blip - 
 * @returns void
 * @remarks Hash: 0x35A3CD97B2C0A6D2
 */
export function 0x35a3cd97b2c0a6d2(blip: number): void;

/**
 * Correct native name lies between SET_BLIP_SPRITE and SET_RADIUS_BLIP_EDGE alphabetically.
 * @param blip - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2C9F302398E13141
 */
export function 0x2c9f302398e13141(blip: number, p1: any): void;

/**
 * ```c
 * enum eTextFonts
 * {
 *     FONT_STANDARD = 0,
 *     FONT_CURSIVE = 1,
 *     FONT_ROCKSTAR_TAG = 2,
 *     FONT_LEADERBOAR0D = 3,
 *     FONT_CONDENSED = 4,
 *     FONT_STYLE_FIXED_WIDTH_NUMBERS = 5,
 *     FONT_CONDENSED_NOT_GAMERNAME = 6,
 *     FONT_STYLE_PRICEDOWN = 7,
 *     FONT_STYLE_TAXI = 8,
 * }
 * ```
 * @param fontType - 
 * @returns void
 * @remarks Hash: 0x66E0276CC5F6B9DA
 */
export function setTextFont(fontType: number): void;

/**
 * Toggles if the text input box can be opened with [`DISPLAY_ONSCREEN_KEYBOARD`](#_0x00DC833F2568DBF6).
 * @param state - 
 * @returns void
 * @remarks Hash: 0x1185A8087587322C
 */
export function setTextInputBoxEnabled(state: number): void;

/**
 * Changes the current frontend menu to the desired frontend menu version.
 * @param menuHash - 
 * @param highlightedTab - 
 * @returns void
 * @remarks Hash: 0x10706DC6AD2D49C0
 */
export function restartFrontendMenu(menuHash: number, highlightedTab: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x186E5D252FA50E7D
 */
export function getWaypointBlipEnumId(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x9049FE339D5F6F6F
 */
export function isPausemapInInteriorMode(): number;

/**
 * ```
 * Size range : 0F to 1.0F
 * p0 is unknown and doesn't seem to have an effect, yet in the game scripts it changes to 1.0F sometimes.
 * ```
 * @param scale - 
 * @param size - 
 * @returns void
 * @remarks Hash: 0x07C837F9A01C34C9
 */
export function setTextScale(scale: number, size: number): void;

/**
 * ## Parameters
 * *
 * @param hudIndex - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x784BA7E0ECEB4178
 */
export function setFloatingHelpTextWorldPosition(hudIndex: number, x: number, y: number, z: number): void;

/**
 * ```
 * World to relative screen coords
 * this world to screen will keep the text on screen. it will keep it in the screen pos
 * ```
 * @param worldX - 
 * @param worldY - 
 * @param worldZ - 
 * @param screenX - 
 * @param screenY - 
 * @returns number
 * @remarks Hash: 0xF9904D11F1ACBEC3
 */
export function getHudScreenPositionFromWorldPosition(worldX: number, worldY: number, worldZ: number, screenX: number, screenY: number): number;

/**
 * ## Parameters
 * *
 * @param contextHash - 
 * @returns number
 * @remarks Hash: 0x84698AB38D0C6636
 */
export function pauseMenuIsContextActive(contextHash: number): number;

/**
 * ## Parameters
 * *
 * @param modelHash - 
 * @returns number
 * @remarks Hash: 0x113750538FA31298
 */
export function isNamedRendertargetLinked(modelHash: number): number;

/**
 * ```
 * This gets the height of the FONT and not the total text. You need to get the number of lines your text uses, and get the height of a newline (I'm using a smaller value) to get the total text height.
 * Old name: _GET_TEXT_SCALE_HEIGHT
 * ```
 * @param size - 
 * @param font - 
 * @returns number
 * @remarks Hash: 0xDB88A37483346780
 */
export function getRenderedCharacterHeight(size: number, font: number): number;

/**
 * As per the name, this native creates a "fake" gamer tag that is attached to a specific ped.
 * Unlike "real" gamer tags, you cannot set the crew colour of these gamer tags.
 * 
 * To create gamer tags for actual players and for more gamer tag information, see [CREATE_MP_GAMER_TAG_WITH_CREW_COLOR](#_0x6DD05E9D83EFA4C9).
 * @param ped - 
 * @param username - 
 * @param crewIsPrivate - 
 * @param crewIsRockstar - 
 * @param crewName - 
 * @param crewRank - 
 * @returns number
 * @remarks Hash: 0xBFEFE3321A3F5015
 */
export function createFakeMpGamerTag(ped: number, username: string, crewIsPrivate: number, crewIsRockstar: number, crewName: string, crewRank: number): number;

/**
 * Not much is known so far on what it does _exactly_.
 * All I know for sure is that it draws the specified hole ID on the pause menu map as well as on the mini-map/radar. This native also seems to change some other things related to the pause menu map's behaviour, for example: you can no longer set waypoints, the pause menu map starts up in a 'zoomed in' state. This native does not need to be executed every tick.
 * 
 * You need to center the minimap manually as well as change/lock it's zoom and angle in order for it to appear correctly on the minimap.
 * You'll also need to use the `GOLF` scaleform in order to get the correct minmap border to show up.
 * 
 * Use [`SET_MINIMAP_GOLF_COURSE_OFF()`](#_0x35EDD5B2E3FF01C0) to reset the map when you no longer want to display any golf holes (you still need to unlock zoom, position and angle of the radar manually after calling this).
 * @param hole - 
 * @returns void
 * @remarks Hash: 0x71BDB63DBAF8DA59
 */
export function setMinimapGolfCourse(hole: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xE67C6DFD386EA5E7
 */
export function 0xe67c6dfd386ea5e7(p0: number): void;

/**
 * Sets the mouse pointer to be active on current frame.
 * @returns void
 * @remarks Hash: 0xAAE7CE1D63167423
 */
export function setMouseCursorThisFrame(): void;

/**
 * @returns void
 * @remarks Hash: 0x2708FC083123F9FF
 */
export function ClearRaceGalleryBlips(): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @returns void
 * @remarks Hash: 0x55F5A5F07134DE60
 */
export function 0x55f5a5f07134de60(): void;

/**
 * Toggles a cyan outline around the blip.
 * 
 * Color can be changed with [`SET_BLIP_SECONDARY_COLOUR`](#_0x14892474891E09EB). Enabling this circle will override the "crew" and "friend" half-circles (see [`SHOW_CREW_INDICATOR_ON_BLIP`](#_0xDCFB5D4DB8BF367E) and [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#_0x23C3EB807312F01A)).
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB81656BC81FE24D1
 */
export function showOutlineIndicatorOnBlip(blip: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param blink - 
 * @param bHasTokens - 
 * @returns number
 * @remarks Hash: 0x44FA03975424A0EE
 */
export function endTextCommandThefeedPostTickerForced(blink: number, bHasTokens: number): number;

/**
 * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
 * Needs more research.
 * Only one type of usage in the scripts:
 * HUD::_C6F580E4C94926AC("CHAR_ACTING_UP", "CHAR_ACTING_UP", 0, 0, "DI_FEED_CHAR", a_0);
 * @param txdName - 
 * @param textureName - 
 * @param flash - 
 * @param iconType - 
 * @param sender - 
 * @param subject - 
 * @returns number
 * @remarks Hash: 0xC6F580E4C94926AC
 */
export function EndTextCommandThefeedPostMessagetextGxtEntry(txdName: string, textureName: string, flash: number, iconType: number, sender: string, subject: string): number;

/**
 * ```
 * The following were found in the decompiled script files:  
 * STRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMOD_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3  
 * ESDOLLA   
 * ESMINDOLLA - cash (negative)  
 * Used to be known as _SET_TEXT_ENTRY  
 * ```
 * @param text - 
 * @returns void
 * @remarks Hash: 0x25FBB336DF1804CB
 */
export function beginTextCommandDisplayText(text: string): void;

/**
 * ```
 * Doesn't actually return anything.
 * ```
 * @returns any
 * @remarks Hash: 0x1121BFA1A1A522A8
 */
export function forceSonarBlipsThisFrame(): any;

/**
 * ```
 * Draws the subtitle at middle center of the screen.  
 * int duration = time in milliseconds to show text on screen before disappearing  
 * drawImmediately = If true, the text will be drawn immediately, if false, the text will be drawn after the previous subtitle has finished  
 * Used to be known as _DRAW_SUBTITLE_TIMED  
 * ```
 * @param duration - 
 * @param drawImmediately - 
 * @returns void
 * @remarks Hash: 0x9D77056A530643F6
 */
export function endTextCommandPrint(duration: number, drawImmediately: number): void;

/**
 * Certain characters like `<` will have to be escaped using html entities (e.g. `&lt;`), otherwise the text wont display properly.
 * @param string - 
 * @returns void
 * @remarks Hash: 0x5F68520888E69014
 */
export function addTextComponentSubstringKeyboardDisplay(string: string): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x276B6CE369C33678
 */
export function displayAreaName(toggle: number): void;

/**
 * Sets a loading icon in the pause menu.
 * @param bVisible - 
 * @param iColumnID - 
 * @param iSpinnerIndex - 
 * @returns void
 * @remarks Hash: 0xC78E239AC5B2DDB9
 */
export function pauseMenuSetBusySpinner(bVisible: number, iColumnID: number, iSpinnerIndex: number): void;

/**
 * @returns void
 * @remarks Hash: 0xD46923FC481CA285
 */
export function hideHelpTextThisFrame(): void;

/**
 * ```
 * See this topic for more details : gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-35?p=1069477935  
 * ```
 * @param blip - 
 * @param priority - 
 * @returns void
 * @remarks Hash: 0xAE9FC9EF6A9FAC79
 */
export function setBlipPriority(blip: number, priority: number): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB14552383D39CE3E
 */
export function setBlipFlashes(blip: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x58FADDED207897DC
 */
export function setMinimapBlockWaypoint(toggle: number): void;

/**
 * Toggles the light state for the pause menu ped in frontend menus.
 * 
 * This is used by R* in combination with [`SET_PAUSE_MENU_PED_SLEEP_STATE`](#_0xECF128344E9FF9F1) to toggle the "offline" or "online" state in the "friends" tab of the pause menu in GTA Online.
 * 
 * Example:
 * On: ![lights on](https://vespura.com/hi/i/2019-04-01_16-09_540ee_1015.png)
 * Off: ![lights off](https://vespura.com/hi/i/2019-04-01_16-10_8b5e7_1016.png)
 * @param state - 
 * @returns void
 * @remarks Hash: 0x3CA6050692BC61B0
 */
export function setPauseMenuPedLighting(state: number): void;

/**
 * ## Parameters
 * *
 * @param flagIndex - 
 * @returns void
 * @remarks Hash: 0xB99C4E4D9499DF29
 */
export function resetGlobalActionscriptFlag(flagIndex: number): void;

/**
 * ```
 * Displays cash change notifications on HUD.  
 * ```
 * @param cash - 
 * @param bank - 
 * @returns void
 * @remarks Hash: 0x0772DF77852C2E30
 */
export function changeFakeMpCash(cash: number, bank: number): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0x36C1451A88A09630
 */
export function GetPauseMenuSelection(): void;

/**
 * ```
 * returns a notification handle, prints out a notification like below:
 * type range: 0 - 2
 * if you set type to 1, button accepts "~INPUT_SOMETHING~"
 * example:
 * HUD::_0xDD6CB2CCE7C2735C(1, "~INPUT_TALK~", "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");
 * - imgur.com/UPy0Ial
 * Examples from the scripts:
 * l_D1[1/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
 * l_D1[2/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_SAVE_REPLAY_CLIP~","");
 * l_D1[1/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
 * l_D1[2/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING_SECONDARY~","");
 * ```
 * @param type - 
 * @param button - 
 * @param text - 
 * @returns number
 * @remarks Hash: 0xDD6CB2CCE7C2735C
 */
export function EndTextCommandThefeedPostReplayInput(type: number, button: string, text: string): number;

/**
 * Create a blip that by default is red (enemy), you can use [SET_BLIP_AS_FRIENDLY](#_0xC6F43D0E) to make it blue (friend).  
 * Can be used for objects, vehicles and peds.
 * 
 * Example of enemy:
 * ![enemy](https://i.imgur.com/fl78svv.png)
 * Example of friend:
 * ![friend](https://i.imgur.com/Q16ho5d.png)
 * @param entity - 
 * @returns number
 * @remarks Hash: 0x5CDE92C702A8FCE7
 */
export function addBlipForEntity(entity: number): number;

/**
 * ```
 * if (HUD::GET_CURRENT_FRONTEND_MENU_VERSION() == joaat("fe_menu_version_empty_no_background"))
 * ```
 * @returns number
 * @remarks Hash: 0x2309595AD6145265
 */
export function getCurrentFrontendMenuVersion(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xD422FCC5F239A915
 */
export function busyspinnerIsOn(): number;

/**
 * Returns whether a specific help message is being displayed or not.
 * 
 * ```c
 * enum HudIndexes {
 *     HELP_TEXT = 0,
 *     FLOATING_HELP_TEXT_1 = 1,
 *     FLOATING_HELP_TEXT_2 = 2,
 * }
 * ```
 * @param hudIndex - 
 * @returns number
 * @remarks Hash: 0x10BDDBFC529428DD
 */
export function endTextCommandIsThisHelpMessageBeingDisplayed(hudIndex: number): number;

/**
 * ```
 * Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
 * ```
 * @returns void
 * @remarks Hash: 0x56C8B608CFD49854
 */
export function thefeedCommentTeleportPoolOn(): void;

/**
 * Create a blip with a radius for the specified coordinates (it doesnt create the blip sprite, so you need to use [AddBlipCoords](#_0xC6F43D0E))
 * 
 * Example image:
 * ![example](https://i.imgur.com/9hQl3DB.png)
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param radius - 
 * @returns number
 * @remarks Hash: 0x46818D79B1F7499A
 */
export function addBlipForRadius(posX: number, posY: number, posZ: number, radius: number): number;

/**
 * ```
 * FORCE_*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xBA8D65C1C65702E5
 */
export function 0xba8d65c1c65702e5(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns number
 * @remarks Hash: 0x6E31B91145873922
 */
export function getMinimapFowCoordinateIsRevealed(x: number, y: number, z: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x01A358D9128B7A86
 */
export function getCurrentWebpageId(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xA238192F33110615
 */
export function 0xa238192f33110615(p0: number, p1: number, p2: number): number;

/**
 * ## Parameters
 * *
 * @param slot - 
 * @returns number
 * @remarks Hash: 0x02245FE4BED318B8
 */
export function hasAdditionalTextLoaded(slot: number): number;

/**
 * ```
 * SET_F*
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2790F4B17D098E26
 */
export function 0x2790f4b17d098e26(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param radius - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x72DD432F3CDFC0EE
 */
export function triggerSonarBlip(posX: number, posY: number, posZ: number, radius: number, p4: number): void;

/**
 * ## Parameters
 * *
 * @param name - 
 * @returns number
 * @remarks Hash: 0xE9F6FFE837354DD4
 */
export function releaseNamedRendertarget(name: string): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xC594B315EDF2D4AF
 */
export function 0xc594b315edf2d4af(ped: number): void;

/**
 * Gets hud color RGBA parameter values by passing a hud color index (hudColorIndex).
 * 
 * HUD colors can be found [here](https://docs.fivem.net/docs/game-references/hud-colors/)
 * @param hudColorIndex - 
 * @param r - 
 * @param g - 
 * @param b - 
 * @param a - 
 * @returns void
 * @remarks Hash: 0x7C9C91AB74A0360F
 */
export function getHudColour(hudColorIndex: number, r: number, g: number, b: number, a: number): void;

/**
 * ```
 * p1 is either 1 or 2 in the PC scripts.  
 * ```
 * 
 * 
 * This native is used to "give"/duplicate a player ped to a frontend menu as configured via the `ACTIVATE_FRONTEND_MENU` native, you first must utilize the [CLONE_PED](#_0xEF29A16337FACADB) to clone said ped.
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xAC0BFBDC3BE00E14
 */
export function givePedToPauseMenu(ped: number, p1: number): void;

/**
 * ```
 * if "flag" is true, the AI blip will always be displayed for the specified ped, if it has an AI blip  
 * If "flag" is false, the AI blip will only be displayed when the player is in combat with the specified ped, if it has an AI blip  
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x0C4BBF625CA98C4E
 */
export function setPedAiBlipForcedOn(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @returns void
 * @remarks Hash: 0xAE2AF67E9D9AF65D
 */
export function setBlipCoords(blip: number, posX: number, posY: number, posZ: number): void;

/**
 * Toggles whether or not name labels are shown on the expanded minimap next to player blips, like in GTA:O.
 * Doesn't need to be called every frame.
 * Preview: https://i.imgur.com/DfqKWfJ.png
 * Make sure to call SET_BLIP_CATEGORY with index 7 for this to work on the desired blip.
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x82CEDC33687E1F50
 */
export function displayPlayerNameTagsOnBlips(toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0xBA751764F0821256
 */
export function suppressFrontendRenderingThisFrame(): void;

/**
 * ```
 * p0 was always 0xAE2602A3.
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x052991E59076E4E4
 */
export function getMenuPedBoolStat(p0: number, p1: any): number;

/**
 * ## Parameters
 * *
 * @param gamerTagId - 
 * @param string - 
 * @returns void
 * @remarks Hash: 0xDEA2B8283BAA3944
 */
export function setMpGamerTagName(gamerTagId: number, string: string): void;

/**
 * ```
 * Add a BLIP_GALLERY at the specific coordinate. Used in fm_maintain_transition_players to display race track points.
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns any
 * @remarks Hash: 0x551DF99658DB6EE8
 */
export function RaceGalleryAddBlip(x: number, y: number, z: number): any;

/**
 * This function hides various HUD (Heads-up Display) components.
 * 
 * Listed below are the integers and the corresponding HUD component.
 * - 1 : WANTED_STARS
 * - 2 : WEAPON_ICON
 * - 3 : CASH
 * - 4 : MP_CASH
 * - 5 : MP_MESSAGE
 * - 6 : VEHICLE_NAME
 * - 7 : AREA_NAME
 * - 8 : VEHICLE_CLASS
 * - 9 : STREET_NAME
 * - 10 : HELP_TEXT
 * - 11 : FLOATING_HELP_TEXT_1
 * - 12 : FLOATING_HELP_TEXT_2
 * - 13 : CASH_CHANGE
 * - 14 : RETICLE
 * - 15 : SUBTITLE_TEXT
 * - 16 : RADIO_STATIONS
 * - 17 : SAVING_GAME
 * - 18 : GAME_STREAM
 * - 19 : WEAPON_WHEEL
 * - 20 : WEAPON_WHEEL_STATS
 * - 21 : HUD_COMPONENTS
 * - 22 : HUD_WEAPONS
 * 
 * These integers also work for the [`SHOW_HUD_COMPONENT_THIS_FRAME`](#_0x0B4DF1FA60C0E664) native, but instead shows the HUD Component.
 * @param id - 
 * @returns void
 * @remarks Hash: 0x6806C51AD12B83B8
 */
export function hideHudComponentThisFrame(id: number): void;

/**
 * ```
 * UI::_817B86108EB94E51(1, &g_189F36._f10CD1[0/*16*/], &g_189F36._f10CD1[1/*16*/], &g_189F36._f10CD1[2/*16*/], &g_189F36._f10CD1[3/*16*/], &g_189F36._f10CD1[4/*16*/], &g_189F36._f10CD1[5/*16*/], &g_189F36._f10CD1[6/*16*/], &g_189F36._f10CD1[7/*16*/]);  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @returns void
 * @remarks Hash: 0x817B86108EB94E51
 */
export function 0x817b86108eb94e51(p0: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xCEF214315D276FD1
 */
export function flagPlayerContextInTournament(toggle: number): void;

/**
 * Sets whether or not the specified blip should only be displayed when nearby, or on the minimap.
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xBE8BE4FE60E27B72
 */
export function setBlipAsShortRange(blip: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param blip - 
 * @returns void
 * @remarks Hash: 0x14892474891E09EB
 */
export function setBlipSecondaryColour(blip: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xA18AFB39081B6A1F
 */
export function flashWantedDisplay(p0: number): void;

/**
 * ```
 * NativeDB Added Parameter 9: int hudColour
 * NativeDB Introduced: v1290
 * ```
 * 
 * Sets the 'data' for a cone for a blip
 * 
 * See [here](https://docs.fivem.net/docs/game-references/hud-colors/) for the hud colours for the cone
 * 
 * Name in scripts: `SETUP_FAKE_CONE_DATA()`
 * 
 * For people who don't know how to convert degrees to radians and the other way around:
 * 
 * ```
 * degrees = radians * 180 / pi
 * radians = degrees * pi / 180
 * ```
 * @returns void
 * @remarks Hash: 0xF83D0FEBE75E62C9
 */
export function 0xf83d0febe75e62c9(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xD1942374085C8469
 */
export function 0xd1942374085c8469(p0: any): void;

/**
 * @returns void
 * @remarks Hash: 0xD4438C0564490E63
 */
export function thefeedSpsExtendWidescreenOn(): void;

/**
 * If mouse is hovering on a slot, it returns uniqueid of that slot, else it returns -1.
 * @returns number
 * @remarks Hash: 0x13C4B962653A5280
 */
export function PauseMenuGetUniqueIdOfMouseHoveredSlot(): number;

/**
 * ```
 * You can only use text entries. No custom text.  
 * C# Example :  
 * Function.Call(Hash._SET_WARNING_MESSAGE_2, "HUD_QUIT", "HUD_CGIGNORE", 2, "HUD_CGINVITE", 0, -1, 0, 0, 1);  
 * you can recreate this easily with scaleforms
 * @param titleMsg - 
 * @param entryLine1 - 
 * @param flags - 
 * @param promptMsg - 
 * @param p4 - 
 * @param p5 - 
 * @param background - 
 * @param p7 - 
 * @param showBg - 
 * @returns void
 * @remarks Hash: 0xDC38CC1E35B6A5D7
 */
export function setWarningMessageWithHeader(titleMsg: string, entryLine1: string, flags: number, promptMsg: string, p4: number, p5: any, background: number, p7: any, showBg: number): void;

/**
 * ```
 * Appears to return whether the player is using the pause menu store. Can't be sure though.  
 * ```
 * @returns number
 * @remarks Hash: 0x2F057596F2BD0061
 */
export function 0x2f057596f2bd0061(): number;

/**
 * ```
 * Makes a blip go small when off the minimap.
 * SET_BLIP_AS_*
 * ```
 * @param blip - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2B6D467DAB714E8D
 */
export function SetBlipShrink(blip: number, toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0xFDB423997FA30340
 */
export function thefeedPause(): void;

/**
 * ## Parameters
 * *
 * @param hudIndex - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x50085246ABD3FEFA
 */
export function clearFloatingHelp(hudIndex: number, p1: number): void;

/**
 * @returns void
 * @remarks Hash: 0x2513DFB0FB8400FE
 */
export function setTextOutline(): void;

/**
 * ```
 * zoomLevel ranges from 0 to 200  
 * ```
 * @param zoomLevel - 
 * @returns void
 * @remarks Hash: 0x096EF57A0C999BBA
 */
export function setRadarZoom(zoomLevel: number): void;

/**
 * @returns void
 * @remarks Hash: 0x60E892BA4F5BDCA4
 */
export function ShowSigninUi(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x1DD1F58F493F1DA5
 */
export function isWaypointActive(): number;

/**
 * Manually sets the player health value for a gamer tag, using the maximum health to calculate what percentage of the bar should be filled.
 * Has no effect unless [_SET_MP_GAMER_TAG_DISABLE_PLAYER_HEALTH_SYNC](#_0xD29EC58C2F6B5014) has been called prior to disable synchronisation with the attached ped.
 * @param gamerTagId - 
 * @param health - 
 * @param maximumHealth - 
 * @returns void
 * @remarks Hash: 0x1563FE35E9928E67
 */
export function SetMpGamerTagOverridePlayerHealth(gamerTagId: number, health: number, maximumHealth: number): void;

/**
 * ```c
 * enum eMpGamerTagComponent
 * {
 * 	MP_TAG_GAMER_NAME = 0,
 * 	MP_TAG_CREW_TAG = 1,
 * 	MP_TAG_HEALTH_ARMOUR = 2,
 * 	MP_TAG_BIG_TEXT = 3,
 * 	MP_TAG_AUDIO_ICON = 4,
 * 	MP_TAG_USING_MENU = 5,
 * 	MP_TAG_PASSIVE_MODE = 6,
 * 	MP_TAG_WANTED_STARS = 7,
 * 	MP_TAG_DRIVER = 8,
 * 	MP_TAG_CO_DRIVER = 9,
 * 	MP_TAG_TAGGED = 10,
 * 	MP_TAG_GAMER_NAME_NEARBY = 11,
 * 	MP_TAG_ARROW = 12,
 * 	MP_TAG_PACKAGES = 13,
 * 	MP_TAG_INV_IF_PED_FOLLOWING = 14,
 * 	MP_TAG_RANK_TEXT = 15,
 * 	MP_TAG_TYPING = 16,
 * 	MP_TAG_BAG_LARGE = 17,
 * 	MP_TAG_ARROW = 18,
 * 	MP_TAG_GANG_CEO = 19,
 * 	MP_TAG_GANG_BIKER = 20,
 * 	MP_TAG_BIKER_ARROW = 21,
 * 	MP_TAG_MC_ROLE_PRESIDENT = 22,
 * 	MP_TAG_MC_ROLE_VICE_PRESIDENT = 23,
 * 	MP_TAG_MC_ROLE_ROAD_CAPTAIN = 24,
 * 	MP_TAG_MC_ROLE_SARGEANT = 25,
 * 	MP_TAG_MC_ROLE_ENFORCER = 26,
 * 	MP_TAG_MC_ROLE_PROSPECT = 27,
 * 	MP_TAG_TRANSMITTER = 28,
 * 	MP_TAG_BOMB = 29
 * };
 * ```
 * 
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * @param gamerTagId - 
 * @param component - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x63BB75ABEDC1F6A0
 */
export function setMpGamerTagVisibility(gamerTagId: number, component: number, toggle: number): void;

/**
 * ```
 * BEGIN_TEXT_COMMAND_*
 * Example:
 * _BEGIN_TEXT_COMMAND_GET_WIDTH("NUMBER");
 * ADD_TEXT_COMPONENT_FLOAT(69.420f, 2);
 * float width = _END_TEXT_COMMAND_GET_WIDTH(1);
 * ```
 * @param text - 
 * @returns void
 * @remarks Hash: 0x54CE8AC98E120CAB
 */
export function BeginTextCommandGetWidth(text: string): void;

/**
 * ## Parameters
 * *
 * @param chTitle - 
 * @param iconType - 
 * @param chSubtitle - 
 * @returns any
 * @remarks Hash: 0x33EE12743CCD6343
 */
export function endTextCommandThefeedPostUnlock(chTitle: string, iconType: number, chSubtitle: string): any;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0xA770C8EEC6FB2AC5
 */
export function scGamerdataGetFloat(): number;

/**
 * ## Parameters
 * *
 * @param index - 
 * @param outData - 
 * @returns number
 * @remarks Hash: 0x87E0052F08BD64E6
 */
export function ScInboxMessageGetBountyData(index: number, outData: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xFE4C1D0D3B9CC17E
 */
export function 0xfe4c1d0d3b9cc17e(p0: any, p1: number): number;

/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: int* p1
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0x710BCDA8071EDED1
 */
export function 0x710bcda8071eded1(): number;

/**
 * ## Parameters
 * *
 * @param attrHash - 
 * @param value - 
 * @returns number
 * @remarks Hash: 0x287F1F75D2803595
 */
export function scPresenceAttrSetString(attrHash: number, value: string): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x116FB94DC4B79F17
 */
export function 0x116fb94dc4b79f17(p0: string): void;

/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: float* p1
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0x50A8A36201DBF83E
 */
export function 0x50a8a36201dbf83e(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xD8122C407663B995
 */
export function 0xd8122c407663b995(): any;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xE4F6E8D07A2F0F51
 */
export function 0xe4f6e8d07a2f0f51(p0: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns string
 * @remarks Hash: 0xF3E31D16CBDCB304
 */
export function ScInboxMessageGetString(p0: number): string;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xBFA0A56A817C6C7D
 */
export function SetHandleRockstarMessageViaScript(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param context - 
 * @param out - 
 * @returns number
 * @remarks Hash: 0x7572EF42FC6A9B6D
 */
export function scInboxMessageGetDataString(p0: number, context: string, out: string): number;

/**
 * Gets number of plates in the response of the get license plates request.
 * Range: [0, count) can be used as second argument to _0x1D4446A62D35B0D0 and _0x2E89990DDFF670C3
 * @param token - 
 * @returns number
 * @remarks Hash: 0x700569DBA175A77C
 */
export function scLicenseplateGetCount(token: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param context - 
 * @param out - 
 * @returns number
 * @remarks Hash: 0xA00EFE4082C4056E
 */
export function scInboxMessageGetDataInt(p0: number, context: string, out: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x92DA6E70EF249BD1
 */
export function 0x92da6e70ef249bd1(p0: string, p1: number): number;

/**
 * ## Parameters
 * *
 * @param data - 
 * @returns void
 * @remarks Hash: 0xA68D3D229F4F3B06
 */
export function ScInboxMessageSendUgcStatUpdateEvent(data: string): void;

/**
 * ## Parameters
 * *
 * @param data - 
 * @returns number
 * @remarks Hash: 0x6AFD2CD753FEEF83
 */
export function ScInboxMessageSendBountyPresenceEvent(data: string): number;

/**
 * ```
 * sfink: from scripts:
 * func_720(socialclub::_0x8416FE4E4629D7D7("bIgnoreCheaterOverride"));
 * func_719(socialclub::_0x8416FE4E4629D7D7("bIgnoreBadSportOverride"));
 * ```
 * @param name - 
 * @returns number
 * @remarks Hash: 0x8416FE4E4629D7D7
 */
export function scGamerdataGetBool(name: string): number;

/**
 * Checks if the "is valid license plate" request is still pending.
 * @param token - 
 * @returns number
 * @remarks Hash: 0xD302E99EDF0449CF
 */
export function scLicenseplateGetIsvalidIsPending(token: number): number;

/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: char* p1
 * NativeDB Added Parameter 3: char* p2
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0x1D12A56FC95BE92E
 */
export function 0x1d12a56fc95be92e(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x44ACA259D67651DB
 */
export function 0x44aca259d67651db(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param string - 
 * @param token - 
 * @returns number
 * @remarks Hash: 0xEB2BF817463DFA28
 */
export function ScProfanityCheckUgcString(string: string, token: number): number;

/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: float* p1
 * NativeDB Added Parameter 3: char* p2
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0x2570E26BE63964E3
 */
export function 0x2570e26be63964e3(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x07DBD622D9533857
 */
export function 0x07dbd622d9533857(p0: any): any;

/**
 * Gets license plate data related to the get license plate info request
 * @param token - 
 * @param plateIndex - 
 * @returns string
 * @remarks Hash: 0x2E89990DDFF670C3
 */
export function scLicenseplateGetPlateData(token: number, plateIndex: number): string;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x9A2C8064B6C1E41A
 */
export function scInboxMessageDoApply(p0: number): number;

/**
 * Starts a task to check an entered string for profanity on the ROS/Social Club services.  
 * 
 * See also: [`SC_PROFANITY_GET_CHECK_IS_VALID`](#_0x1753344C770358AE) and [`SC_PROFANITY_GET_CHECK_IS_PENDING`](#_0x82E4A58BABC15AE7).
 * @param string - 
 * @param token - 
 * @returns number
 * @remarks Hash: 0x75632C5ECD7ED843
 */
export function scProfanityCheckString(string: string, token: number): number;

/**
 * ## Parameters
 * *
 * @param token - 
 * @returns number
 * @remarks Hash: 0x82E4A58BABC15AE7
 */
export function scProfanityGetCheckIsPending(token: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xBC1CC91205EC8D6E
 */
export function IsRockstarMessageReadyForScript(): number;

/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: char* p1
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0x9DE5D2F723575ED0
 */
export function 0x9de5d2f723575ed0(): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x7DB18CA8CAD5B098
 */
export function 0x7db18ca8cad5b098(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x4737980E8A283806
 */
export function 0x4737980e8a283806(p0: number, p1: any): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns void
 * @remarks Hash: 0x2330C12A7A605D16
 */
export function scEmailMessagePushGamerToRecipList(networkHandle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xF6BAAAF762E1BF40
 */
export function 0xf6baaaf762e1bf40(p0: string, p1: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x69D82604A1A5A254
 */
export function scInboxMessageGetUgcdata(p0: any, p1: any): number;

/**
 * ## Parameters
 * *
 * @param attrHash - 
 * @param value - 
 * @returns number
 * @remarks Hash: 0x1F1E9682483697C7
 */
export function scPresenceAttrSetInt(attrHash: number, value: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x3001BEF2FECA3680
 */
export function 0x3001bef2feca3680(): number;

/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: char* p1
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0x33DF47CC0642061B
 */
export function 0x33df47cc0642061b(): number;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns any
 * @remarks Hash: 0x4ED9C8D6DA297639
 */
export function 0x4ed9c8d6da297639(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xF22CA0FD74B80E7A
 */
export function 0xf22ca0fd74b80e7a(p0: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x225798743970412B
 */
export function 0x225798743970412b(p0: number): number;

/**
 * ## Return value
 * @returns string
 * @remarks Hash: 0xDF649C4E9AFDD788
 */
export function RockstarMessageGetString(): string;

/**
 * Gets the status of the is valid license plate request
 * @param token - 
 * @returns number
 * @remarks Hash: 0x5C4EBFFA98BDB41C
 */
export function scLicenseplateGetIsvalidStatus(token: number): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x16DA8172459434AA
 */
export function 0x16da8172459434aa(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x2C015348CF19CA1D
 */
export function ScInboxMessagePop(p0: number): number;

/**
 * Returns a status for adding the license plate
 * @param token - 
 * @returns number
 * @remarks Hash: 0x8147FFF6A718E1AD
 */
export function scLicenseplateGetAddStatus(token: number): number;

/**
 * @returns void
 * @remarks Hash: 0x55DF6DB45179236E
 */
export function scEmailMessageClearRecipList(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x4A7D6E727F941747
 */
export function 0x4a7d6e727f941747(p0: any): any;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param newsStoryData - 
 * @returns number
 * @remarks Hash: 0x8A4416C0DB05FA66
 */
export function 0x8a4416c0db05fa66(newsStoryData: any): number;

/**
 * SC native to start a request for if license plate text is valid
 * @param plateText - 
 * @param tokenOut - 
 * @returns number
 * @remarks Hash: 0x0F73393BAC7E6730
 */
export function scLicenseplateIsvalid(plateText: string, tokenOut: number): number;

/**
 * ```
 * Returns the nickname of the logged-in Rockstar Social Club account.
 * ```
 * @returns string
 * @remarks Hash: 0x198D161F458ECC7F
 */
export function ScGetNickname(): string;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x9237E334F6E43156
 */
export function 0x9237e334f6e43156(p0: any): any;

/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0xC2C97EA97711D1AE
 */
export function 0xc2c97ea97711d1ae(): number;

/**
 * ## Parameters
 * *
 * @param token - 
 * @returns number
 * @remarks Hash: 0x930DE22F07B1CCE3
 */
export function scProfanityGetStringStatus(token: number): number;

/**
 * Social Club native to add license plate for the user
 * @param plateText - 
 * @param plateData - 
 * @param tokenOut - 
 * @returns number
 * @remarks Hash: 0x1989C6E6F67E76A8
 */
export function scLicenseplateAdd(plateText: string, plateData: string, tokenOut: number): number;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns any
 * @remarks Hash: 0x7FFCBFEE44ECFABF
 */
export function 0x7ffcbfee44ecfabf(): any;

/**
 * ## Parameters
 * *
 * @param msgIndex - 
 * @returns number
 * @remarks Hash: 0xBB8EA16ECBC976C4
 */
export function scInboxGetMessageTypeAtIndex(msgIndex: number): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xFF8F3A92B75ED67A
 */
export function 0xff8f3a92b75ed67a(): any;

/**
 * Returns true if the add license plate text request is still pending.
 * @param token - 
 * @returns number
 * @remarks Hash: 0x07C61676E5BB52CD
 */
export function scLicenseplateGetAddIsPending(token: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xFFE5C16F402D851D
 */
export function ScInboxMessageGetDataBool(p0: number, p1: string): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x487912FD248EFDDF
 */
export function 0x487912fd248efddf(p0: any, p1: number): number;

/**
 * Changes the license plate for the user (no insert).
 * @param oldPlateText - 
 * @param newPlateText - 
 * @param plateData - 
 * @returns number
 * @remarks Hash: 0xD0EE05FE193646EA
 */
export function scLicenseplateSetPlateData(oldPlateText: string, newPlateText: string, plateData: string): number;

/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0x450819D8CF90C416
 */
export function 0x450819d8cf90c416(): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @returns void
 * @remarks Hash: 0xEA95C0853A27888E
 */
export function 0xea95c0853a27888e(): void;

/**
 * ## Parameters
 * *
 * @param offset - 
 * @param limit - 
 * @returns void
 * @remarks Hash: 0x040ADDCBAFA1018A
 */
export function ScInboxGetEmails(offset: number, limit: number): void;

/**
 * Gets license plate text related to the get license plate info request
 * @param token - 
 * @param plateIndex - 
 * @returns string
 * @remarks Hash: 0x1D4446A62D35B0D0
 */
export function scLicenseplateGetPlate(token: number, plateIndex: number): string;

/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: int* p1
 * NativeDB Added Parameter 3: char* p2
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0xE75A4A2E5E316D86
 */
export function 0xe75a4a2e5e316d86(): number;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns any
 * @remarks Hash: 0x2D874D4AE612A65F
 */
export function 0x2d874d4ae612a65f(): any;

/**
 * ## Parameters
 * *
 * @param msgIndex - 
 * @returns number
 * @remarks Hash: 0x93028F1DB42BFD08
 */
export function scInboxGetMessageIsReadAtIndex(msgIndex: number): number;

/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * NativeDB Added Parameter 2: char* p1
 * NativeDB Added Parameter 3: float* p2
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0xC5A35C73B68F3C49
 */
export function 0xc5a35c73b68f3c49(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x03A93FF1A2CA0864
 */
export function scInboxGetTotalNumMessages(): number;

/**
 * ```
 * Same as HAS_ACHIEVEMENT_BEEN_PASSED
 * ```
 * @param achievement - 
 * @returns number
 * @remarks Hash: 0x418DC16FAE452C1C
 */
export function ScGetHasAchievementBeenPassed(achievement: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x8CC469AB4D349B7C
 */
export function 0x8cc469ab4d349b7c(p0: number, p1: string, p2: any): number;

/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0xA468E0BE12B12C70
 */
export function 0xa468e0be12b12c70(): number;

/**
 * ## Parameters
 * *
 * @param token - 
 * @returns number
 * @remarks Hash: 0x85535ACF97FC0969
 */
export function scProfanityGetStringPassed(token: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x6BFB12CE158E3DD4
 */
export function 0x6bfb12ce158e3dd4(p0: any): number;

/**
 * ```
 * NativeDB Introduced: v323
 * NativeDB Added Parameter 1: Hash attrHash
 * NativeDB Added Parameter 2: float value
 * ```
 * @returns number
 * @remarks Hash: 0xC4C4575F62534A24
 */
export function scPresenceAttrSetFloat(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x19853B5B17D77BCA
 */
export function 0x19853b5b17d77bca(p0: any, p1: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x699E4A5C8C893A18
 */
export function 0x699e4a5c8c893a18(p0: number, p1: string, p2: any): number;

/**
 * ## Parameters
 * *
 * @param networkHandle - 
 * @returns void
 * @remarks Hash: 0xDA024BDBD600F44A
 */
export function ScInboxMessagePushGamerToEventRecipList(networkHandle: number): void;

/**
 * @returns void
 * @remarks Hash: 0x675721C9F644D161
 */
export function 0x675721c9f644d161(): void;

/**
 * ## Parameters
 * *
 * @param token - 
 * @returns number
 * @remarks Hash: 0x1753344C770358AE
 */
export function scProfanityGetCheckIsValid(token: number): number;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0xC85A7127E7AD02AA
 */
export function scGamerdataGetInt(): number;

/**
 * This native is marked as deprecated internally, please use [REQUEST_SCRIPT_AUDIO_BANK](#_0x2F844A8B08D76685)
 * 
 * This native has a new argument on newer game builds:
 * *
 * @param bankName - 
 * @param bOverNetwork - 
 * @returns number
 * @remarks Hash: 0x7345BDD95E62E0F2
 */
export function requestMissionAudioBank(bankName: string, bOverNetwork: number): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x9BD7BD55E4533183
 */
export function 0x9bd7bd55e4533183(p0: any, p1: any, p2: any): void;

/**
 * ```
 * All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
 * ```
 * @param eventName - 
 * @returns number
 * @remarks Hash: 0x5B17A90291133DA5
 */
export function cancelMusicEvent(eventName: string): number;

/**
 * ## Parameters
 * *
 * @param finishCurrentLine - 
 * @returns number
 * @remarks Hash: 0xD79DEEFB53455EBA
 */
export function stopScriptedConversation(finishCurrentLine: number): number;

/**
 * Stops the named mixing scene (which was previously started by this script)
 * @param sceneName - 
 * @returns void
 * @remarks Hash: 0xDFE8422B3B94E688
 */
export function stopAudioScene(sceneName: string): void;

/**
 * ```
 * NativeDB Introduced: v463
 * ```
 * @returns any
 * @remarks Hash: 0x2DD39BF3E2F9C47F
 */
export function 0x2dd39bf3e2f9c47f(): any;

/**
 * Sets the radio to tune up. (changes radio station)
 * @returns void
 * @remarks Hash: 0xFF266D1D0EB1195D
 */
export function setRadioRetuneUp(): void;

/**
 * Removes an entity from its current mix group.
 * @param entity - 
 * @param fadeOut - 
 * @returns void
 * @remarks Hash: 0x18EB48CFC41F2EA0
 */
export function removeEntityFromAudioMixGroup(entity: number, fadeOut: number): void;

/**
 * Clears the previously queued custom track lost for the given radio station.
 * @param radioStation - 
 * @returns void
 * @remarks Hash: 0x1654F24A88A8E3FE
 */
export function clearCustomRadioTrackList(radioStation: string): void;

/**
 * This should be called once a sound has finished being manipulated by the script so that its SoundId can be released and re-used.
 * @param soundId - 
 * @returns void
 * @remarks Hash: 0x353FC880830B88FA
 */
export function releaseSoundId(soundId: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param pedRace - 
 * @param pvgHash - 
 * @returns void
 * @remarks Hash: 0x1B7ABE26CBCBF8C7
 */
export function setPedRaceAndVoiceGroup(ped: number, pedRace: number, pvgHash: number): void;

/**
 * See [`PLAY_PED_AMBIENT_SPEECH_NATIVE`](#_0x8E04FEDD28D42462) for parameter specifications.
 * 
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * @param ped - 
 * @param speechName - 
 * @param speechParam - 
 * @returns void
 * @remarks Hash: 0xC6941B4A3A8FBBB9
 */
export function playPedAmbientSpeechAndCloneNative(ped: number, speechName: string, speechParam: string): void;

/**
 * Checks if the context exists for the ped, searching through the voices in its PedVoiceGroup.
 * 
 * The final argument can be set to true to allow searching in backup PVGs
 * @param ped - 
 * @param speechName - 
 * @param allowBackupPVGs - 
 * @returns number
 * @remarks Hash: 0x49B99BF3FDA89A7A
 */
export function doesContextExistForThisPed(ped: number, speechName: string, allowBackupPVGs: number): number;

/**
 * ## Parameters
 * *
 * @param radioStation - 
 * @returns number
 * @remarks Hash: 0x2B1784DB08AFEA79
 */
export function isRadioStationFavourited(radioStation: string): number;

/**
 * Resets the list of ambients zones enabled/disabled status to its value before it was modified by this script.
 * 
 * Default behaviour is that any state change only gets applied once the player leaves the zone.
 * @returns void
 * @remarks Hash: 0x120C48C614909FA4
 */
export function clearAmbientZoneListState(): void;

/**
 * Forces the chosen station to paly the given music track list. All other music track lists will be locked.
 * @param radioStation - 
 * @param trackListName - 
 * @param timeOffsetMilliseconds - 
 * @returns void
 * @remarks Hash: 0x4E0AF9114608257C
 */
export function forceMusicTrackList(radioStation: string, trackListName: string, timeOffsetMilliseconds: number): void;

/**
 * ```
 * This is the same as PLAY_PED_AMBIENT_SPEECH_NATIVE and PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE but it will allow you to play a speech file from a specific voice file. It works on players and all peds, even animals.
 * EX (C#):
 * GTA.Native.Function.Call(Hash._0x3523634255FC3318, Game.Player.Character, "GENERIC_INSULT_HIGH", "s_m_y_sheriff_01_white_full_01", "SPEECH_PARAMS_FORCE_SHOUTED", 0);
 * The first param is the ped you want to play it on, the second is the speech name, the third is the voice name, the fourth is the speech param, and the last param is usually always 0.
 * ```
 * @param ped - 
 * @param speechName - 
 * @param voiceName - 
 * @param speechParam - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x3523634255FC3318
 */
export function playPedAmbientSpeechWithVoiceNative(ped: number, speechName: string, voiceName: string, speechParam: string, p4: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x76D683C108594D0E
 */
export function setHornEnabled(vehicle: number, toggle: number): void;

/**
 * Sets the footstep tuning modes
 * @returns void
 * @remarks Hash: 0xD2CC78CD3D0B50F9
 */
export function overridePlayerGroundMaterial(): void;

/**
 * This native has been marked as deprecated internally, please use [RELEASE_SCRIPT_AUDIO_BANK](#_0x7A2D8AD0A9EB9C3F) instead.
 * @returns void
 * @remarks Hash: 0x65475A218FFAA93D
 */
export function releaseAmbientAudioBank(): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x5E203DA2BA15D436
 */
export function getAmbientVoiceNameHash(ped: number): number;

/**
 * Hints that this bank would be good to load if there are free slots.
 * Does not guarentee loading of the bank, [REQUEST_SCRIPT_AUDIO_BANK](#_0xFE02FFBED8CA9D99) MUST be used as normal before triggering sounds"
 * 
 * This native has a new argument on newer game builds:
 * *
 * @returns number
 * @remarks Hash: 0xFB380A29641EC31A
 */
export function hintScriptAudioBank(): number;

/**
 * Determines if any ped-independent, positionally-based scripted speech is currently active. This typically includes speech events triggered using [`PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE`](#_0xED640017ED337E45).
 * 
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @returns number
 * @remarks Hash: 0x30CA2EF91D15ADF8
 */
export function isAnyPositionalSpeechPlaying(): number;

/**
 * Counterpart: [`GET_NETWORK_ID_FROM_SOUND_ID`](#_0x2DE3F0A134FFBC0D).
 * @param netId - 
 * @returns number
 * @remarks Hash: 0x75262FD12D0A1C84
 */
export function getSoundIdFromNetworkId(netId: number): number;

/**
 * ## Parameters
 * *
 * @param radioStationName - 
 * @returns number
 * @remarks Hash: 0x34D66BC058019CE0
 */
export function getCurrentTrackSoundName(radioStationName: string): number;

/**
 * ## Parameters
 * *
 * @param soundId - 
 * @param variableName - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xAD6B3148A78AE9B6
 */
export function setVariableOnSound(soundId: number, variableName: string, value: number): void;

/**
 * Sets the ped so they sound drunk
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x95D2D383D5396B8A
 */
export function setPedIsDrunk(ped: number, toggle: number): void;

/**
 * ```
 * Example:
 * AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_01_STAGE", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM", false);
 * This turns off surrounding sounds not connected directly to peds.
 * ```
 * @param emitterName - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x399D2D3B33F1B8EB
 */
export function setStaticEmitterEnabled(emitterName: string, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param timeInSeconds - 
 * @returns number
 * @remarks Hash: 0xC64A06D939F826F5
 */
export function getNextAudibleBeat(timeInSeconds: number): number;

/**
 * Plays a siren blip from the vehicle when you double press the horn key.
 * 
 * This only works on vehicles with sirens.
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x1B9025BDA76822B6
 */
export function blipSiren(vehicle: number): void;

/**
 * ## Return value
 * Returns true if the mission complete audio is playing
 * @returns number
 * @remarks Hash: 0x19A30C23F5827F8A
 */
export function isMissionCompletePlaying(): number;

/**
 * This native has a new argument on newer game builds:
 * *
 * @param bankName - 
 * @param bOverNetwork - 
 * @returns number
 * @remarks Hash: 0x2F844A8B08D76685
 */
export function requestScriptAudioBank(bankName: string, bOverNetwork: number): number;

/**
 * Unlocks any available DJ radio tracks based on the tuneable status
 * 
 * ```	
 * NativeDB Introduced: v1493	
 * ```
 * @param allowTrackReprioritization - 
 * @returns void
 * @remarks Hash: 0x47AED84213A47510
 */
export function updateUnlockableDjRadioTracks(allowTrackReprioritization: number): void;

/**
 * ## Parameters
 * *
 * @param instantStop - 
 * @returns void
 * @remarks Hash: 0x2F794A877ADD4C92
 */
export function stopAllAlarms(instantStop: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x032A116663A4D5AC
 */
export function canVehicleReceiveCbRadio(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x11579D940949C49E
 */
export function 0x11579d940949c49e(p0: any): void;

/**
 * Load in named stream. Optionally can specify a sound set which contains the sound specified by name.
 * @param streamName - 
 * @param startOffset - 
 * @param soundSet - 
 * @returns number
 * @remarks Hash: 0x59C16B79F53B3712
 */
export function loadStreamWithStartOffset(streamName: string, startOffset: number, soundSet: string): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x729072355FA39EC9
 */
export function isAnySpeechPlaying(ped: number): number;

/**
 * ## Parameters
 * *
 * @param sceneId - 
 * @returns number
 * @remarks Hash: 0x8B2FD4560E55DD2D
 */
export function playSynchronizedAudioEvent(sceneId: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param shouldDisable - 
 * @returns void
 * @remarks Hash: 0xA9A41C1E940FB0E8
 */
export function disablePedPainAudio(ped: number, shouldDisable: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param radioStationName - 
 * @param mixName - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x2CB0075110BE1E56
 */
export function SetRadioTrackMix(radioStationName: string, mixName: string, p2: number): void;

/**
 * ```cpp
 * enum eAudibility {
 * 	AUD_AUDIBILITY_NORMAL = 0,
 * 	AUD_AUDIBILITY_CLEAR = 1,
 * 	AUD_AUDIBILITY_CRITICAL = 2,
 * 	AUD_AUDIBILITY_LEAD_IN = 3
 * }
 * ```
 * @param speakerConversationIndex - 
 * @param context - 
 * @param subtitle - 
 * @param listenerNumber - 
 * @param volumeType - 
 * @param isRandom - 
 * @param interruptible - 
 * @param ducksRadio - 
 * @param ducksScore - 
 * @param audibility - 
 * @param headset - 
 * @param dontInterruptForSpecialAbility - 
 * @param isPadSpeakerRoute - 
 * @returns void
 * @remarks Hash: 0xC5EF963405593646
 */
export function addLineToConversation(speakerConversationIndex: number, context: string, subtitle: string, listenerNumber: number, volumeType: number, isRandom: number, interruptible: number, ducksRadio: number, ducksScore: number, audibility: number, headset: number, dontInterruptForSpecialAbility: number, isPadSpeakerRoute: number): void;

/**
 * Prepares the specified music event. Preparing it in advance will preload any required data so that it's ready to play immediately.
 * @param eventName - 
 * @returns number
 * @remarks Hash: 0x1E5185B72EF5158A
 */
export function prepareMusicEvent(eventName: string): number;

/**
 * Updates a playing sounds absolute position.
 * @param soundId - 
 * @returns void
 * @remarks Hash: 0x7EC3C679D0E7E46B
 */
export function updateSoundCoord(soundId: number): void;

/**
 * Stops a ped's ringtone from playing
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x6C5AE23EFA885092
 */
export function stopPedRingtone(ped: number): void;

/**
 * ... When not in a vehicle
 * 
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x66C3FB05206041BA
 */
export function TriggerSiren(vehicle: number): void;

/**
 * This native is marked as deprecated internally, please use [REQUEST_SCRIPT_AUDIO_BANK](#_0x2F844A8B08D76685)
 * 
 * This native has a new argument on newer game builds:
 * *
 * @param bankName - 
 * @param bOverNetwork - 
 * @returns number
 * @remarks Hash: 0xFE02FFBED8CA9D99
 */
export function requestAmbientAudioBank(bankName: string, bOverNetwork: number): number;

/**
 * Allows the radio to be played in the frontend.
 * @param active - 
 * @returns void
 * @remarks Hash: 0xF7F26C6E9CC9EBB8
 */
export function setFrontendRadioActive(active: number): void;

/**
 * Request that we preload the required audio bank for a given vehicle model.
 * 
 * 
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param model - 
 * @returns void
 * @remarks Hash: 0xCA4CEA6AE0000A7E
 */
export function preloadVehicleAudioBank(model: number): void;

/**
 * Allows script to freeze the microphone for a single frame, mantaining its current transform/settings.
 * This native should be called every frame you want to keep the microphone frozen, when you stop calling it it will automatically unfreeze
 * @returns void
 * @remarks Hash: 0xD57AAAE0E2214D11
 */
export function freezeMicrophone(): void;

/**
 * ## Return value
 * Returns true of a mobile phone call is currently happening.
 * @returns number
 * @remarks Hash: 0x7497D2CE2C30D24C
 */
export function isMobilePhoneCallOngoing(): number;

/**
 * ## Parameters
 * *
 * @param zoneName - 
 * @param enabled - 
 * @param forceUpdate - 
 * @returns void
 * @remarks Hash: 0x1D6650420CEC9D3B
 */
export function setAmbientZoneStatePersistent(zoneName: string, enabled: number, forceUpdate: number): void;

/**
 * ```c
 * enum eAudAnimalType {
 * 	AUD_ANIMAL_NONE = -1,
 * 	AUD_ANIMAL_BOAR = 0,
 * 	AUD_ANIMAL_CHICKEN = 1,
 * 	AUD_ANIMAL_DOG = 2,
 * 	AUD_ANIMAL_DOG_ROTTWEILER = 3,
 * 	AUD_ANIMAL_HORSE = 4,
 * 	AUD_NUM_ANIMALS = 5
 * }
 * ```
 * @param pedHandle - 
 * @param animalType - 
 * @param speechName - 
 * @returns void
 * @remarks Hash: 0xEE066C7006C49C0A
 */
export function playAnimalVocalization(pedHandle: number, animalType: number, speechName: string): void;

/**
 * Clears the override set by [OVERRIDE_TREVOR_RAGE](#_0x13AD665062541A7E)
 * @returns void
 * @remarks Hash: 0xE78503B10C4314E0
 */
export function resetTrevorRage(): void;

/**
 * @returns void
 * @remarks Hash: 0x9663FE6B7A61EB00
 */
export function skipToNextScriptedConversationLine(): void;

/**
 * ```
 * Called 38 times in the scripts. There are 5 different audioNames used.
 *  One unknown removed below.
 * AUDIO::PLAY_MISSION_COMPLETE_AUDIO("DEAD");
 * AUDIO::PLAY_MISSION_COMPLETE_AUDIO("FRANKLIN_BIG_01");
 * AUDIO::PLAY_MISSION_COMPLETE_AUDIO("GENERIC_FAILED");
 * AUDIO::PLAY_MISSION_COMPLETE_AUDIO("TREVOR_SMALL_01");
 * ```
 * @param audioName - 
 * @returns void
 * @remarks Hash: 0xB138AAB8A70D3C69
 */
export function playMissionCompleteAudio(audioName: string): void;

/**
 * Stops all smoke grenade sounds
 * @returns void
 * @remarks Hash: 0xE4E6DD5566D28C82
 */
export function stopSmokeGrenadeExplosionSounds(): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0xAA19F5572C38B564
 */
export function getVariationChosenForScriptedLine(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x16754C556D2EDE3D
 */
export function isScriptedConversationOngoing(): number;

/**
 * ## Parameters
 * *
 * @param radioStation - 
 * @returns void
 * @remarks Hash: 0x88795F13FACDA88D
 */
export function setInitialPlayerStation(radioStation: string): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x1098355A16064BB3
 */
export function setMobileRadioEnabledDuringGameplay(toggle: number): void;

/**
 * Restarts a conversation that was previously paused with [PAUSE_SCRIPTED_CONVERSATION](#_0x8530AD776CD72B12)
 * @returns void
 * @remarks Hash: 0x9AEB285D1818C9AC
 */
export function restartScriptedConversation(): void;

/**
 * Similar to [START_SCRIPT_CONVERSATION](#_0x6B17C62C9635D2DC), except that is starts the conversation off paused.
 * 
 * A scripter can then kick off the conversation by calling [START_PRELOADED_CONVERSATION](#_0x23641AFE870AF385).
 * 
 * If they want to check that the conversation is done preloading, they can use [GET_IS_PRELOADED_CONVERSATION_READY](#_0xE73364DB90778FFA)
 * @param displaySubtitles - 
 * @param addToBriefScreen - 
 * @param cloneConversation - 
 * @param interruptible - 
 * @returns void
 * @remarks Hash: 0x3B3CAD6166916D87
 */
export function preloadScriptConversation(displaySubtitles: number, addToBriefScreen: number, cloneConversation: number, interruptible: number): void;

/**
 * Load in named stream. Optionally can specify a sound set which contains the sound specified by name.
 * 
 * Names for the streams can be found [here](https://gist.github.com/4mmonium/2bd2c9c54d6ca5cbdb7b156a82a3a85a
 * ), the list will be updated as more are found.
 * @param streamName - 
 * @param soundSet - 
 * @returns number
 * @remarks Hash: 0x1F1F957154EC51DF
 */
export function loadStream(streamName: string, soundSet: string): number;

/**
 * ```
 * Sets radio station by index.  
 * ```
 * @param radioStation - 
 * @returns void
 * @remarks Hash: 0xA619B168B8A8570F
 */
export function setRadioToStationIndex(radioStation: number): void;

/**
 * ## Parameters
 * *
 * @param soundId - 
 * @returns number
 * @remarks Hash: 0x2DE3F0A134FFBC0D
 */
export function getNetworkIdFromSoundId(soundId: number): number;

/**
 * Sets the specified ped to use a specific voice different to the one associated with their model.
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x9A53DED9921DE990
 */
export function setAmbientVoiceNameHash(ped: number): void;

/**
 * This native has been marked as deprecated internally, please use [RELEASE_SCRIPT_AUDIO_BANK](#_0x7A2D8AD0A9EB9C3F) instead.
 * @returns void
 * @remarks Hash: 0x0EC92A1BF0857187
 */
export function releaseMissionAudioBank(): void;

/**
 * Plays a preloaded stream back from the specified ped.
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x89049DD63C08B5D1
 */
export function playStreamFromPed(ped: number): void;

/**
 * ## Parameters
 * *
 * @param active - 
 * @returns void
 * @remarks Hash: 0x3BD3F52BA9B1E4E8
 */
export function setGpsActive(active: number): void;

/**
 * Needs to be called every frame.
 * 
 * ```c
 * enum eAudSpecialEffectMode
 * {
 * 	kSpecialEffectModeNormal = 0,
 * 	kSpecialEffectModeUnderwater = 1,
 * 	kSpecialEffectModeStoned = 2,
 * 	kSpecialEffectModePauseMenu = 3,
 * 	kSpecialEffectModeSlowMotion = 4,
 * 	kSpecialEffectModeDrunkStage01 = 5,
 * 	kSpecialEffectModeDrunkStage02 = 6,
 * 	kSpecialEffectModeDrunkStage03 = 7,
 * 	NUM_AUDSPECIALEFFECTMODE
 * };
 * ```
 * @param mode - 
 * @returns void
 * @remarks Hash: 0x12561FCBB62D5B9C
 */
export function setAudioSpecialEffectMode(mode: number): void;

/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xD53F3A29BCE2580E
 */
export function getVehicleHornSoundIndex(vehicle: number): number;

/**
 * ## Return value
 * Returns true if the radio is tuning to a station
 * @returns number
 * @remarks Hash: 0xA151A7394A214E65
 */
export function isRadioRetuning(): number;

/**
 * Enable the stunt jump audio detection code
 * 
 * This native is meant to be called per-frame for as long as detection is wanted.
 * @returns void
 * @remarks Hash: 0xB81CF134AEB56FFB
 */
export function enableStuntJumpAudio(): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x02165D55000219AC
 */
export function getVehicleDefaultHorn(vehicle: number): number;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x55ECF4D13D9903B0
 */
export function 0x55ecf4d13d9903b0(p0: any, p1: any, p2: any, p3: any): void;

/**
 * Stops all mixed scenes which were previously started by this script
 * @returns void
 * @remarks Hash: 0xBAC7FC81A75EC1A1
 */
export function stopAudioScenes(): void;

/**
 * ## Return value
 * Returns true if the radio is currently faded out
 * @returns number
 * @remarks Hash: 0x0626A247D2405330
 */
export function isRadioFadedOut(): number;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @returns void
 * @remarks Hash: 0xC6ED9D5092438D91
 */
export function registerScriptWithAudio(): void;

/**
 * @returns void
 * @remarks Hash: 0x9AC92EED5E4793AB
 */
export function 0x9ac92eed5e4793ab(): void;

/**
 * ## Parameters
 * *
 * @param radioStation - 
 * @returns void
 * @remarks Hash: 0xFC00454CF60B91DD
 */
export function unfreezeRadioStation(radioStation: string): void;

/**
 * ## Parameters
 * *
 * @param radioStation - 
 * @param trackListName - 
 * @returns void
 * @remarks Hash: 0xFF5E5EA2DCEEACF3
 */
export function lockRadioStationTrackList(radioStation: string, trackListName: string): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param enableFanbeltDamage - 
 * @returns void
 * @remarks Hash: 0x1C073274E065C6D2
 */
export function enableVehicleFanbeltDamage(vehicle: number, enableFanbeltDamage: number): void;

/**
 * ```
 * SET_VEHICLE_BOOST_ACTIVE(vehicle, 1, 0);  
 * SET_VEHICLE_BOOST_ACTIVE(vehicle, 0, 0);   
 * Will give a boost-soundeffect.  
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x4A04DE7CAB2739A1
 */
export function setVehicleBoostActive(vehicle: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ambientZone - 
 * @returns number
 * @remarks Hash: 0x01E2817A479A7F9B
 */
export function isAmbientZoneEnabled(ambientZone: string): number;

/**
 * Find the radio station list [here](https://gist.github.com/4mmonium/b47d6512a2d992cbf4eea15d9038b581)
 * @param stationName - 
 * @returns void
 * @remarks Hash: 0xC69EDA28699D5107
 */
export function setRadioToStationName(stationName: string): void;

/**
 * This native enables the audio flag "TrevorRageIsOverridden" and sets the voice effect to `voiceEffect`
 * 
 * To clear the override use [RESET_TREVOR_RAGE](#_0xE78503B10C4314E0)
 * @param voiceEffect - 
 * @returns void
 * @remarks Hash: 0x13AD665062541A7E
 */
export function overrideTrevorRage(voiceEffect: string): void;

/**
 * ```
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/RFb4GTny  
 * AUDIO::PLAY_PED_RINGTONE("Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);  
 * AUDIO::PLAY_PED_RINGTONE("Dial_and_Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);  
 * ```
 * @param ringtoneName - 
 * @param ped - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xF9E56683CA8E11A5
 */
export function playPedRingtone(ringtoneName: string, ped: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x9D6BFC12B05C6121
 */
export function isHornActive(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x8BF907833BE275DE
 */
export function 0x8bf907833be275de(p0: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x1E8E5E20937E3137
 */
export function isPedRingtonePlaying(ped: number): number;

/**
 * To resume the conversation use [RESTART_SCRIPTED_CONVERSATION](#_0x9AEB285D1818C9AC)
 * @param finishCurrentLine - 
 * @returns void
 * @remarks Hash: 0x8530AD776CD72B12
 */
export function pauseScriptedConversation(finishCurrentLine: number): void;

/**
 * Unloads the specified audioBank
 * @param audioBank - 
 * @returns void
 * @remarks Hash: 0x77ED170667F50170
 */
export function releaseNamedScriptAudioBank(audioBank: string): void;

/**
 * This disables the radio station completely - it won't be selectable on the radio wheel or ever be heard coming from a vehicle/ambient emitter
 * 
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param radioStationName - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x477D9DB48F889591
 */
export function lockRadioStation(radioStationName: string, toggle: number): void;

/**
 * You should call [PREPARE_ALARM](#_0x9D74AE343DB65533) and wait for its value to be true before using this
 * @param alarmName - 
 * @param skipStartup - 
 * @returns void
 * @remarks Hash: 0x0355EF116C4C97B2
 */
export function startAlarm(alarmName: string, skipStartup: number): void;

/**
 * ## Parameters
 * *
 * @param newsStory - 
 * @returns number
 * @remarks Hash: 0x66E49BF55B4B1874
 */
export function isMissionNewsStoryUnlocked(newsStory: number): number;

/**
 * ## Return value
 * Returns the number of radio stations currently unlocked in the game. This can change as a result of DLC and/or script calls.
 * @returns number
 * @remarks Hash: 0xF1620ECB50E01DE7
 */
export function getNumUnlockedRadioStations(): number;

/**
 * Enable or disable the plane stall warning sounds
 * @param vehicle - 
 * @param enable - 
 * @returns void
 * @remarks Hash: 0xC15907D667F7CFB2
 */
export function enableStallWarningSounds(vehicle: number, enable: number): void;

/**
 * Retunes a named static emitter to the specified station
 * @param emitterName - 
 * @param radioStation - 
 * @returns void
 * @remarks Hash: 0xACF57305B12AF907
 */
export function setEmitterRadioStation(emitterName: string, radioStation: string): void;

/**
 * This native sets the audio to the specific vehicle hash's audioNameHash.
 * @param vehicle - 
 * @param gameObjectName - 
 * @returns void
 * @remarks Hash: 0x4F0C413926060B38
 */
export function forceUseAudioGameObject(vehicle: number, gameObjectName: string): void;

/**
 * ## Parameters
 * *
 * @param displaySubtitles - 
 * @param addToBriefScreen - 
 * @returns void
 * @remarks Hash: 0x252E5F915EABB675
 */
export function startScriptPhoneConversation(displaySubtitles: number, addToBriefScreen: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x480357EE890C295A
 */
export function getCurrentScriptedConversationLine(): number;

/**
 * ## Return value
 * Returns the genre of the players current radio station
 * @returns number
 * @remarks Hash: 0xA571991A7FE6CCEB
 */
export function getPlayerRadioStationGenre(): number;

/**
 * Vehicle will make a 'rattling' noise when decelerating
 * @param vehicle - 
 * @param intensity - 
 * @returns void
 * @remarks Hash: 0x01BB4D577D38BD9E
 */
export function setVehicleAudioBodyDamageFactor(vehicle: number, intensity: number): void;

/**
 * ## Parameters
 * *
 * @param scene - 
 * @param variableName - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xEF21A9EF089A2668
 */
export function setAudioSceneVariable(scene: string, variableName: string, value: number): void;

/**
 * Generic interface to toggle audio functionality, with auto-reset on script termination and support for multiple script threads
 * 
 * Flags used in game scripts:
 * | Flag Name | Description of Usage | 
 * |
 * @param flagName - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB9EFD5C25018725A
 */
export function setAudioFlag(flagName: string, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param loud - 
 * @returns void
 * @remarks Hash: 0xBB6F1CAEC68B0BCE
 */
export function setVehicleRadioLoud(vehicle: number, loud: number): void;

/**
 * Sets a player ped to use his ANGRY speech contexts
 * @param ped - 
 * @param isAngry - 
 * @returns void
 * @remarks Hash: 0xEA241BB04110F091
 */
export function setPlayerAngry(ped: number, isAngry: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF584CF8529B51434
 */
export function SetSirenKeepOn(vehicle: number, toggle: number): void;

/**
 * Makes pedestrians sound their horn longer, faster and more agressive when they use their horn.
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x395BF71085D1B1D9
 */
export function setAggressiveHorns(toggle: number): void;

/**
 * Sets the specified ped to use a specific voice different to the one associated with their model.
 * @param ped - 
 * @param voiceName - 
 * @returns void
 * @remarks Hash: 0x6C8065A3B780185B
 */
export function setAmbientVoiceName(ped: number, voiceName: string): void;

/**
 * ```
 * From the scripts:
 * AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("PAIGE_PVG"));
 * AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("TALINA_PVG"));
 * AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_BLACK_PVG"));
 * AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_WHITE_PVG"));
 * ```
 * @param ped - 
 * @param voiceGroupHash - 
 * @returns void
 * @remarks Hash: 0x7CDC8C3B89F661B3
 */
export function SetPedVoiceGroup(ped: number, voiceGroupHash: number): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * 
 * ```
 * On last-gen this just runs blr and this func is called by several other functions other then the native's table.  
 * ```
 * @returns void
 * @remarks Hash: 0xA8638BE228D4751A
 */
export function unregisterScriptWithAudio(): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x43FA0DFC5DF87815
 */
export function 0x43fa0dfc5df87815(vehicle: number, p1: number): void;

/**
 * ```
 * Dat151RelType == 29
 * ```
 * 
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param ped - 
 * @param voiceGroupHash - 
 * @returns void
 * @remarks Hash: 0x0BABC1345ABBFB16
 */
export function SetPedVoiceGroupRace(ped: number, voiceGroupHash: number): void;

/**
 * ## Return value
 * Returns true if the script is currently playing a stream.
 * @returns number
 * @remarks Hash: 0xD11FA52EB849D978
 */
export function isStreamPlaying(): number;

/**
 * ```
 *  Found in the b617d scripts, duplicates removed:
 *  AUDIO::_B4BBFD9CD8B3922B("V_CARSHOWROOM_PS_WINDOW_UNBROKEN");
 *  AUDIO::_B4BBFD9CD8B3922B("V_CIA_PS_WINDOW_UNBROKEN");
 *  AUDIO::_B4BBFD9CD8B3922B("V_DLC_HEIST_APARTMENT_DOOR_CLOSED");
 *  AUDIO::_B4BBFD9CD8B3922B("V_FINALEBANK_PS_VAULT_INTACT");
 *  AUDIO::_B4BBFD9CD8B3922B("V_MICHAEL_PS_BATHROOM_WITH_WINDOW");
 * ```
 * 
 * For events like cars driving through windows, allows script to unocclude that window
 * @param portalSettingsName - 
 * @returns void
 * @remarks Hash: 0xB4BBFD9CD8B3922B
 */
export function removePortalSettingsOverride(portalSettingsName: string): void;

/**
 * ```
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/f2A7vTj0   
 * No changes made in b678d.  
 * gtaforums.com/topic/795622-audio-for-mods  
 * ```
 * @param soundId - 
 * @param audioName - 
 * @param entity - 
 * @param audioRef - 
 * @param isNetwork - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0xE65F427EB70AB1ED
 */
export function playSoundFromEntity(soundId: number, audioName: string, entity: number, audioRef: string, isNetwork: number, p5: any): void;

/**
 * Deactivates the named slowmo mode.
 * @param mode - 
 * @returns void
 * @remarks Hash: 0xDDC635D5B3262C56
 */
export function deactivateAudioSlowmoMode(mode: string): void;

/**
 * ## Parameters
 * *
 * @param speechName - 
 * @param voiceName - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param speechParam - 
 * @returns void
 * @remarks Hash: 0xED640017ED337E45
 */
export function playAmbientSpeechFromPositionNative(speechName: string, voiceName: string, x: number, y: number, z: number, speechParam: string): void;

/**
 * ## Parameters
 * *
 * @param radioStation - 
 * @returns void
 * @remarks Hash: 0x344F393B027E38C3
 */
export function freezeRadioStation(radioStation: string): void;

/**
 * Stops currently playing speech (Pain, ambient, scripted, breathing).
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x7A73D05A607734C7
 */
export function stopCurrentPlayingSpeech(ped: number): void;

/**
 * Overrides wind elevation sounds
 * @param override - 
 * @returns void
 * @remarks Hash: 0x70B8EC8FC108A634
 */
export function scriptOverridesWindElevation(override: number): void;

/**
 * @returns void
 * @remarks Hash: 0x58FCE43488F9F5F4
 */
export function playStreamFrontend(): void;

/**
 * Creates a broken glass area
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0xFBE20329593DEC9D
 */
export function recordBrokenGlass(x: number, y: number, z: number, radius: number): void;

/**
 * @returns void
 * @remarks Hash: 0xB32209EFFDC04913
 */
export function clearAllBrokenGlass(): void;

/**
 * ```
 * Plays the given police radio message.
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/GBnsQ5hr
 * ```
 * @param name - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xDFEBD56D9BD1EB16
 */
export function playPoliceReport(name: string, p1: number): number;

/**
 * Sets radio to tune down. (Changes radio station)
 * @returns void
 * @remarks Hash: 0xDD6BCF9E94425DF9
 */
export function setRadioRetuneDown(): void;

/**
 * Sets whether or not scripted conversation flow should be controlled by anim triggers
 * @param enable - 
 * @returns void
 * @remarks Hash: 0x0B568201DD99F0EB
 */
export function setConversationAudioControlledByAnim(enable: number): void;

/**
 * ## Return value
 * Returns the name of the players radio station. This serves as the text label.
 * @returns string
 * @remarks Hash: 0xF6D733C32076AD03
 */
export function getPlayerRadioStationName(): string;

/**
 * ## Return value
 * Returns true if a one shot is currently playing or prepared
 * @returns number
 * @remarks Hash: 0xA097AB275061FB21
 */
export function isMusicOneshotPlaying(): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x19F21E63AE6EAE4E
 */
export function setUserRadioControlEnabled(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param pedHandle - 
 * @returns number
 * @remarks Hash: 0xC265DF9FB44A9FBD
 */
export function isAnimalVocalizationPlaying(pedHandle: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0xCC9AA18DCC7084F4
 */
export function isScriptedSpeechPlaying(ped: number): number;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0xACB5DCCA1EC76840
 */
export function getVehicleDefaultHornIgnoreMods(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xC8EDE9BDBCCBA6D4
 */
export function initSynchSceneAudioWithPosition(): void;

/**
 * @returns void
 * @remarks Hash: 0x6DDBBDD98E2E9C25
 */
export function skipRadioForward(): void;

/**
 * This doesn't stop a piece of dialogue that has been triggered.
 * 
 * This stops the ability to force ambient dialogue if set to true - however setting it to false, then triggering a context, then setting it to true again will allow this.
 * 
 * The ped will also be prevented from speaking on remote machines. Use [STOP_PED_SPEAKING](#_0x9D64D7405520E3D3) if you just want to affect the local machine.
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xAB6781A5F3101470
 */
export function stopPedSpeakingSynced(ped: number): void;

/**
 * Enable or disable exhaust pops on the given vehicle.
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x2BE4BC731D039D5A
 */
export function enableVehicleExhaustPops(vehicle: number, toggle: number): void;

/**
 * Links a static emitter to the given entity
 * @param emitterName - 
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x651D3228960D08AF
 */
export function linkStaticEmitterToEntity(emitterName: string, entity: number): void;

/**
 * Sets audio flag "OverrideMicrophoneSettings"
 * 
 * Allows the script to ovverride the current microphone settings
 * @returns void
 * @remarks Hash: 0x75773E11BA459E90
 */
export function overrideMicrophoneSettings(): void;

/**
 * Overrides the vehicle's startup engine rev sound.
 * 
 * You can reset this with [RESET_VEHICLE_STARTUP_REV_SOUND](#_0xD2DCCD8E16E20997)
 * @param vehicle - 
 * @param soundName - 
 * @param setName - 
 * @returns void
 * @remarks Hash: 0xF1F8157B8C3F171C
 */
export function setVehicleStartupRevSound(vehicle: number, soundName: string, setName: string): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0x06C0023BED16DD6B
 */
export function setScriptUpdateDoorAudio(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x109697E2FFBAC8A1
 */
export function doesPlayerVehHaveRadio(): number;

/**
 * ```
 * Used to prepare a scene where the surrounding sound is muted or a bit changed. This does not play any sound.  
 * List of all usable scene names found in b617d. Sorted alphabetically and identical names removed: pastebin.com/MtM9N9CC  
 * ```
 * @param scene - 
 * @returns number
 * @remarks Hash: 0x013A80FC08F6E4F2
 */
export function startAudioScene(scene: string): number;

/**
 * Unloads all audio banks requested by this script.
 * @returns void
 * @remarks Hash: 0x7A2D8AD0A9EB9C3F
 */
export function releaseScriptAudioBank(): void;

/**
 * ## Parameters
 * *
 * @param oldPortalSettingsName - 
 * @param newPortalSettingsName - 
 * @returns void
 * @remarks Hash: 0x044DBAD7A7FA2BE5
 */
export function setPortalSettingsOverride(oldPortalSettingsName: string, newPortalSettingsName: string): void;

/**
 * ## Return value
 * Returns the index of the current players radio station, or 255 if the radio is off
 * @returns number
 * @remarks Hash: 0xE8AF77C4C06ADC93
 */
export function getPlayerRadioStationIndex(): number;

/**
 * ## Parameters
 * *
 * @param audioEvent - 
 * @param startOffsetMs - 
 * @returns number
 * @remarks Hash: 0xC7ABCACA4985A766
 */
export function prepareSynchronizedAudioEvent(audioEvent: string, startOffsetMs: number): number;

/**
 * ## Parameters
 * *
 * @param displaySubtitles - 
 * @param addToBriefScreen - 
 * @returns void
 * @remarks Hash: 0x6004BCB0E226AAEA
 */
export function preloadScriptPhoneConversation(displaySubtitles: number, addToBriefScreen: number): void;

/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * @param vehicle - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x0350E7E17BA767D0
 */
export function SetVehicleHornVariation(vehicle: number, value: number): void;

/**
 * ## Return value
 * Returns true if the script should draw the mission complete UI to be in sync with audio.
 * @returns number
 * @remarks Hash: 0x6F259F82D873B8B8
 */
export function isMissionCompleteReadyForUi(): number;

/**
 * ## Parameters
 * *
 * @param bActive - 
 * @returns void
 * @remarks Hash: 0xCD536C4D33DCC900
 */
export function playEndCreditsMusic(bActive: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x0BE4BE946463F917
 */
export function isVehicleRadioOn(vehicle: number): number;

/**
 * Sets the global radio signal level, lower value will cause radio static. 
 * Used only a handful of times in scripts.
 * @returns void
 * @remarks Hash: 0x159B7318403A1CD8
 */
export function setGlobalRadioSignalLevel(): void;

/**
 * Refreshes the closest shoreline using the nearest road position.
 * @returns void
 * @remarks Hash: 0x5D2BFAAB8D956E0E
 */
export function refreshClosestOceanShoreline(): void;

/**
 * ## Parameters
 * *
 * @param soundId - 
 * @returns number
 * @remarks Hash: 0xFCBDCE714A7C88E5
 */
export function hasSoundFinished(soundId: number): number;

/**
 * ```
 * Enables/disables ped's "loud" footstep sound.
 * ```
 * 
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param ped - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x0653B735BFBDFE87
 */
export function SetPedAudioFootstepLoud(ped: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x9072C8B49907BFAD
 */
export function isAmbientSpeechPlaying(ped: number): number;

/**
 * ```
 * All found occurrences in b678d:
 * pastebin.com/ceu67jz8
 * ```
 * @param entity - 
 * @param groupName - 
 * @param fadeIn - 
 * @returns void
 * @remarks Hash: 0x153973AB99FE8980
 */
export function addEntityToAudioMixGroup(entity: number, groupName: string, fadeIn: number): void;

/**
 * ## Parameters
 * *
 * @param speakerConversationIndex - 
 * @param ped - 
 * @param voiceName - 
 * @returns void
 * @remarks Hash: 0x95D9F4BC443956E7
 */
export function addPedToConversation(speakerConversationIndex: number, ped: number, voiceName: string): void;

/**
 * Plays ambient speech; see also [`PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE`](#_0xC6941B4A3A8FBBB9).
 * 
 * ```
 * speechParam: Can be one of the following:
 * SPEECH_PARAMS_STANDARD
 * SPEECH_PARAMS_ALLOW_REPEAT
 * SPEECH_PARAMS_BEAT
 * SPEECH_PARAMS_FORCE
 * SPEECH_PARAMS_FORCE_FRONTEND
 * SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND
 * SPEECH_PARAMS_FORCE_NORMAL
 * SPEECH_PARAMS_FORCE_NORMAL_CLEAR
 * SPEECH_PARAMS_FORCE_NORMAL_CRITICAL
 * SPEECH_PARAMS_FORCE_SHOUTED
 * SPEECH_PARAMS_FORCE_SHOUTED_CLEAR
 * SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY
 * SPEECH_PARAMS_MEGAPHONE
 * SPEECH_PARAMS_HELI
 * SPEECH_PARAMS_FORCE_MEGAPHONE
 * SPEECH_PARAMS_FORCE_HELI
 * SPEECH_PARAMS_INTERRUPT
 * SPEECH_PARAMS_INTERRUPT_SHOUTED
 * SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR
 * SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL
 * SPEECH_PARAMS_INTERRUPT_NO_FORCE
 * SPEECH_PARAMS_INTERRUPT_FRONTEND
 * SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND
 * SPEECH_PARAMS_ADD_BLIP
 * SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT
 * SPEECH_PARAMS_ADD_BLIP_FORCE
 * SPEECH_PARAMS_ADD_BLIP_SHOUTED
 * SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE
 * SPEECH_PARAMS_ADD_BLIP_INTERRUPT
 * SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL
 * SPEECH_PARAMS_SHOUTED
 * SPEECH_PARAMS_SHOUTED_CLEAR
 * SPEECH_PARAMS_SHOUTED_CRITICAL
 * Note: A list of Name and Parameters can be found here pastebin.com/1GZS5dCL
 * ```
 * 
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * @param ped - 
 * @param speechName - 
 * @param speechParam - 
 * @returns void
 * @remarks Hash: 0x8E04FEDD28D42462
 */
export function playPedAmbientSpeechNative(ped: number, speechName: string, speechParam: string): void;

/**
 * ## Return value
 * Returns true of mobile phone interference is currently happening
 * @returns number
 * @remarks Hash: 0xC8B1B2425604CDD0
 */
export function isMobileInterferenceActive(): number;

/**
 * ## Parameters
 * *
 * @param speakerConversationIndex - 
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x892B6AB8F33606F5
 */
export function setEntityForNullConvPed(speakerConversationIndex: number, entity: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param doorIndex - 
 * @returns void
 * @remarks Hash: 0x62A456AA4769EF34
 */
export function playVehicleDoorCloseSound(vehicle: number, doorIndex: number): void;

/**
 * ```
 * can't seem to enable radio on cop cars etc  
 * ```
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x3B988190C0AA6C0B
 */
export function setVehicleRadioEnabled(vehicle: number, toggle: number): void;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns void
 * @remarks Hash: 0xCE4AC0439F607045
 */
export function releaseWeaponAudio(): void;

/**
 * Enable player vehicle specific alarm disarm/arm sound triggering
 * @param vehicle - 
 * @param active - 
 * @returns void
 * @remarks Hash: 0x6FDDAD856E36988A
 */
export function setPlayerVehicleAlarmAudioActive(vehicle: number, active: number): void;

/**
 * Forces the ambient peds into their panic walla state
 * @returns void
 * @remarks Hash: 0x062D5EAD4DA2FA6A
 */
export function forcePedPanicWalla(): void;

/**
 * ```c
 * enum eAudContextBlockTarget {
 * 	AUD_CONTEXT_BLOCK_PLAYER = 0,
 * 	AUD_CONTEXT_BLOCK_NPCS = 1,
 * 	AUD_CONTEXT_BLOCK_BUDDYS = 2,
 * 	AUD_CONTEXT_BLOCK_EVERYONE = 3,
 * 
 * 	AUD_CONTEXT_BLOCK_TARGETS_TOTAL
 * }
 * ```
 * 
 * Stop a certain group of peds from using a certain group of speech contexts.
 * 
 * Note that the block will be automatically removed when the calling script finishes
 * @param groupName - 
 * @param contextBlockTarget - 
 * @returns void
 * @remarks Hash: 0xA8A7D434AFB4B97B
 */
export function blockSpeechContextGroup(groupName: string, contextBlockTarget: number): void;

/**
 * Set a delay in milliseconds for the audio to be cleaned up when the script finishes.
 * @param timeMs - 
 * @returns void
 * @remarks Hash: 0xA5F377B175A699C5
 */
export function setAudioScriptCleanupTime(timeMs: number): void;

/**
 * ## Return value
 * Returns the currently playing stream's play time
 * @returns number
 * @remarks Hash: 0x4E72BBDBCA58A3DB
 */
export function getStreamPlayTime(): number;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xBDA07E5950085E46
 */
export function setAmbientZoneState(): void;

/**
 * ## Parameters
 * *
 * @param blocked - 
 * @returns void
 * @remarks Hash: 0xF154B8D1775B2DEC
 */
export function blockDeathJingle(blocked: number): void;

/**
 * ```
 * Hardcoded to return 1  
 * ```
 * @returns number
 * @remarks Hash: 0x6D28DC1671E334FD
 */
export function isGameInControlOfMusic(): number;

/**
 * @returns void
 * @remarks Hash: 0xB4F90FAF7670B16F
 */
export function cancelAllPoliceReports(): void;

/**
 * Handles conversation interrupts, using the code-side system for improved timing and to minimize unfriendly logic interactions.
 * @param interrupterPed - 
 * @returns void
 * @remarks Hash: 0xA018A12E5C5C2FA6
 */
export function interruptConversation(interrupterPed: number): void;

/**
 * Stops audio for the current cutscene.
 * @returns void
 * @remarks Hash: 0x806058BBDC136E06
 */
export function stopCutsceneAudio(): void;

/**
 * @returns void
 * @remarks Hash: 0xD2C91A0B572AAE56
 */
export function createNewScriptedConversation(): void;

/**
 * ## Parameters
 * *
 * @param fadeTime - 
 * @returns void
 * @remarks Hash: 0x2C96CDB04FCA358E
 */
export function setRadioFrontendFadeTime(fadeTime: number): void;

/**
 * This doesn't stop a piece of dialogue that has been triggered.
 * 
 * This stops the ability to force ambient dialogue if set to true - however setting it to false, then triggering a context, then setting it to true again will allow this.
 * 
 * Nb. This does not sync over the network, it will only affect peds locally. Use [STOP_PED_SPEAKING_SYNCED](#_0xAB6781A5F3101470) if you need to affect peds on other machines too.
 * @param ped - 
 * @param shouldDisable - 
 * @returns void
 * @remarks Hash: 0x9D64D7405520E3D3
 */
export function stopPedSpeaking(ped: number, shouldDisable: number): void;

/**
 * ```
 * If this is the correct name, what microphone? I know your TV isn't going to reach out and adjust your headset so..  
 * ```
 * @param p0 - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param x3 - 
 * @param y3 - 
 * @param z3 - 
 * @returns void
 * @remarks Hash: 0xB6AE90EDDE95C762
 */
export function setMicrophonePosition(p0: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number): void;

/**
 * Queues up a custom track list on the specified radio station. The content in the track list will be played as soon as possible.
 * The station does not have to be frozen.
 * @param radioStation - 
 * @param trackListName - 
 * @param forceNow - 
 * @returns void
 * @remarks Hash: 0x4E404A9361F75BB2
 */
export function setCustomRadioTrackList(radioStation: string, trackListName: string, forceNow: number): void;

/**
 * Used to determine whether conversation should use robot speech or not
 * @param isPlaceHolder - 
 * @returns void
 * @remarks Hash: 0x61631F5DF50D1C34
 */
export function setConversationAudioPlaceholder(isPlaceHolder: number): void;

/**
 * ## Return value
 * Returns true if the audio for the Multiplayer data set has loaded
 * @returns number
 * @remarks Hash: 0x544810ED9DB6BBE6
 */
export function hasLoadedMpDataSet(): number;

/**
 * Find the radio station list [here](https://gist.github.com/4mmonium/b47d6512a2d992cbf4eea15d9038b581)
 * @param vehicle - 
 * @param radioStation - 
 * @returns void
 * @remarks Hash: 0x1B9C0099CB942AC6
 */
export function setVehRadioStation(vehicle: number, radioStation: string): void;

/**
 * ## Return value
 * Returns true if the audio for the Single Player data set has loaded
 * @returns number
 * @remarks Hash: 0x5B50ABB1FE3746F4
 */
export function hasLoadedSpDataSet(): number;

/**
 * ## Return value
 * Returns true if the preloaded conversation has finished preparing.
 * @returns number
 * @remarks Hash: 0xE73364DB90778FFA
 */
export function getIsPreloadedConversationReady(): number;

/**
 * ```
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/eeFc5DiW  
 * gtaforums.com/topic/795622-audio-for-mods  
 * ```
 * @param soundId - 
 * @param audioName - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param audioRef - 
 * @param isNetwork - 
 * @param range - 
 * @param p8 - 
 * @returns void
 * @remarks Hash: 0x8D8686B622B88120
 */
export function playSoundFromCoord(soundId: number, audioName: string, x: number, y: number, z: number, audioRef: string, isNetwork: number, range: number, p8: number): void;

/**
 * ```
 * AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 1.0);
 * AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 0.0);
 * ```
 * @param variableName - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x733ADF241531E5C2
 */
export function setVariableOnUnderWaterStream(variableName: string, value: number): void;

/**
 * ```
 * All occurrences found in b617d, sorted alphabetically and identical lines removed:
 * AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_AK");
 * AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_CUSTOM");
 * AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_TOOTHLESS");
 * ```
 * 
 * Add a suffix to the cutscene audio name. Call before loading the cutscene.
 * @param name - 
 * @returns void
 * @remarks Hash: 0x3B4BF5F0859204D9
 */
export function setCutsceneAudioOverride(name: string): void;

/**
 * Allows script to trigger a sweetener footstep sound
 * @param ped - 
 * @param useSweetner - 
 * @returns void
 * @remarks Hash: 0xBF4DC1784BE94DFA
 */
export function useFootstepScriptSweeteners(ped: number, useSweetner: number): void;

/**
 * ## Parameters
 * *
 * @param alarmName - 
 * @returns number
 * @remarks Hash: 0x226435CB96CCFC8C
 */
export function isAlarmPlaying(alarmName: string): number;

/**
 * ```c
 * enum eAudAnimalMood {
 * 	AUD_ANIMAL_MOOD_ANGRY = 0,
 * 	AUD_ANIMAL_MOOD_PLAYFUL = 1,
 * 
 * 	AUD_ANIMAL_MOOD_NUM_MOODS = 2
 * }
 * ```
 * @param animal - 
 * @param mood - 
 * @returns void
 * @remarks Hash: 0xCC97B29285B1DC3B
 */
export function setAnimalMood(animal: number, mood: number): void;

/**
 * ## Return value
 * Returns true if the first batch of lines for the currently requested conversation have loaded successfully.
 * @returns number
 * @remarks Hash: 0xDF0D54BE7A776737
 */
export function isScriptedConversationLoaded(): number;

/**
 * Toggles fake distant siren sounds
 * @param shouldPlay - 
 * @returns void
 * @remarks Hash: 0x552369F549563AD5
 */
export function distantCopCarSirens(shouldPlay: number): void;

/**
 * Toggles the incoming missile warning system for specified vehicle.
 * @param vehicle - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF3365489E0DD50F9
 */
export function setVehicleMissileWarningEnabled(vehicle: number, toggle: number): void;

/**
 * ## Return value
 * Returns true if the mobile phone radio is active
 * @returns number
 * @remarks Hash: 0xB35CE999E8EF317E
 */
export function isMobilePhoneRadioActive(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x58BB377BEC7CD5F4
 */
export function 0x58bb377bec7cd5f4(p0: number, p1: number): void;

/**
 * ## Return value
 * Returns the current volume slider position from 0 to 10
 * @returns number
 * @remarks Hash: 0x3A48AB4445D499BE
 */
export function getMusicVolSlider(): number;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x02E93C796ABD3A97
 */
export function 0x02e93c796abd3a97(p0: number): void;

/**
 * ## Parameters
 * *
 * @param alarmName - 
 * @param instantStop - 
 * @returns void
 * @remarks Hash: 0xA1CADDCD98415A41
 */
export function stopAlarm(alarmName: string, instantStop: number): void;

/**
 * ## Parameters
 * *
 * @param speakerConversationIndex - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x33E3C6C6F2F0B506
 */
export function setPositionForNullConvPed(speakerConversationIndex: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param zoneListName - 
 * @param enabled - 
 * @param forceUpdate - 
 * @returns void
 * @remarks Hash: 0x9748FA4DE50CCE3E
 */
export function setAmbientZoneListState(zoneListName: string, enabled: number, forceUpdate: number): void;

/**
 * ```
 * SET_VEH*
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xC1805D05E6D4FE10
 */
export function 0xc1805d05e6d4fe10(vehicle: number): void;

/**
 * This native is used alongside with [`SET_VEHICLE_TYRE_BURST`](#_0xEC6A202EE4960385).
 * 
 * ```
 * NativeDB Introduced: v3258
 * ```
 * @param vehicle - 
 * @param force - 
 * @returns void
 * @remarks Hash: 0xEB7D0E1FCC8FE17A
 */
export function ForceVehicleEngineSynth(vehicle: number, force: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * 
 * Removes all instances of a given context block.
 * @param groupName - 
 * @returns void
 * @remarks Hash: 0x2ACABED337622DF2
 */
export function unblockSpeechContextGroup(groupName: string): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xB542DE8C3D1CB210
 */
export function 0xb542de8c3d1cb210(p0: number): void;

/**
 * ## Parameters
 * *
 * @param displaySubtitles - 
 * @param addToBriefScreen - 
 * @param cloneConversation - 
 * @param interruptible - 
 * @returns void
 * @remarks Hash: 0x6B17C62C9635D2DC
 */
export function startScriptConversation(displaySubtitles: number, addToBriefScreen: number, cloneConversation: number, interruptible: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x97FFB4ADEED08066
 */
export function 0x97ffb4adeed08066(p0: any, p1: any): void;

/**
 * Below is a list of modes and their respective hashes.
 * 
 * | Mode (string)               | Hash               |
 * |-----------------------------|--------------------|
 * | SLOWMO_BIG_SCORE_JUMP       | 0x2B981B0C         |
 * | JSH_EXIT_TUNNEL_SLOWMO      | 0x2562AA6          |
 * | SLOW_MO_METH_HOUSE_RAYFIRE  | 0xDB9E1909         |
 * | SLOWMO_FIB4_TRUCK_SMASH     | 0x9E144347         |
 * | SLOWMO_PROLOGUE_VAULT       | 0xEA2E68E1         |
 * | SLOWMO_T1_RAYFIRE_EXPLOSION | 0xD6D358F3         |
 * | SLOWMO_T1_TRAILER_SMASH     | 0xBE607345         |
 * | BARRY_01_SLOWMO             | 0xD59540D4         |
 * | BARRY_02_SLOWMO             | 0x12F140B3         |
 * | SLOWMO_EXTREME_04           | 0xF562EA50         |
 * | NIGEL_02_SLOWMO_SETTING     | 0x384689B0         |
 * @param mode - 
 * @returns void
 * @remarks Hash: 0xD01005D2BA2EB778
 */
export function activateAudioSlowmoMode(mode: string): void;

/**
 * If a playback function has a soundId field but the sound doesn't need to be altered after triggering then pass a value of -1 for fire-and-forget playback, rather than getting a soundId.
 * 
 * SoundId's can be reused, without needing to release them and grab a new one.
 * 
 * If a sound's finished playing, you can reuse its SoundId to kick off another one.
 * 
 * If the sound's not finished playing, it'll be stopped first (fading out or whatever is set up in RAVE by the sound designer), and the new one kicked off; usually it is safer to just get a new SoundId.
 * 
 * SoundId's are not automatically cleaned up, you must use [RELEASE_SOUND_ID](#_0x353FC880830B88FA) after you've finished using them to allow the engine to recycle the sound id.
 * @returns number
 * @remarks Hash: 0x430386FE9BF80B45
 */
export function getSoundId(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x50B196FC9ED6545B
 */
export function getAudibleMusicTrackTextId(): number;

/**
 * ```
 * 6 calls in the b617d scripts, removed identical lines:
 * AUDIO::SET_RADIO_STATION_MUSIC_ONLY("RADIO_01_CLASS_ROCK", 1);
 * AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 0);
 * AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 1);
 * ```
 * @param radioStation - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x774BD811F656A122
 */
export function setRadioStationMusicOnly(radioStation: string, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param sceneId - 
 * @returns number
 * @remarks Hash: 0x029FE7CD1B7E2E75
 */
export function prepareSynchronizedAudioEventForScene(sceneId: number): number;

/**
 * ## Parameters
 * *
 * @param ambientZone - 
 * @param enabled - 
 * @param forceUpdate - 
 * @returns void
 * @remarks Hash: 0xF3638DAE8C4045E1
 */
export function setAmbientZoneListStatePersistent(ambientZone: string, enabled: number, forceUpdate: number): void;

/**
 * ```
 * SET_H*
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x9D3AF56E94C9AE98
 */
export function 0x9d3af56e94c9ae98(vehicle: number, p1: number): void;

/**
 * ```
 * AUDIO::UNLOCK_RADIO_STATION_TRACK_LIST("RADIO_16_SILVERLAKE", "MIRRORPARK_LOCKED");
 * ```
 * @param radioStation - 
 * @param trackListName - 
 * @returns void
 * @remarks Hash: 0x031ACB6ABA18C729
 */
export function unlockRadioStationTrackList(radioStation: string, trackListName: string): void;

/**
 * ```
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/A8Ny8AHZ  
 * ```
 * @param soundId - 
 * @param audioName - 
 * @param audioRef - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x7FF4944CC209192D
 */
export function playSound(soundId: number, audioName: string, audioRef: string, p3: number, p4: any, p5: number): void;

/**
 * Handles conversation interrupts and pauses, using the code-side system for improved timing and to minimize unfriendly logic interactions.
 * @param interrupterPed - 
 * @param context - 
 * @param voiceName - 
 * @returns void
 * @remarks Hash: 0x8A694D7A68F8DC38
 */
export function interruptConversationAndPause(interrupterPed: number, context: string, voiceName: string): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x1FEF0683B96EBCF2
 */
export function setSirenWithNoDriver(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @returns number
 * @remarks Hash: 0x5DB8010EE71FDEF2
 */
export function isVehicleAudiblyDamaged(vehicle: number): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xF54BB7B61036F335
 */
export function resetPedAudioFlags(ped: number): void;

/**
 * This native is marked as a deprecated native internally, use [HINT_SCRIPT_AUDIO_BANK](#_0xFB380A29641EC31A) instead
 * @returns number
 * @remarks Hash: 0x8F8C0E370AE62F5C
 */
export function hintAmbientAudioBank(): number;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param ped - 
 * @param enabled - 
 * @returns void
 * @remarks Hash: 0x29DA3CA8D8B2692D
 */
export function setPedClothEventsEnabled(ped: number, enabled: number): void;

/**
 * For use with [PRELOAD_SCRIPT_CONVERSATION](#_0x3B3CAD6166916D87) and [GET_IS_PRELOADED_CONVERSATION_READY](#_0xE73364DB90778FFA)
 * @returns void
 * @remarks Hash: 0x23641AFE870AF385
 */
export function startPreloadedConversation(): void;

/**
 * Plays a preloaded stream back from the specified object.
 * @param object - 
 * @returns void
 * @remarks Hash: 0xEBAA9B64D76356FD
 */
export function playStreamFromObject(object: number): void;

/**
 * ```
 * SET_*
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x9C11908013EA4715
 */
export function SoundVehicleHornThisFrame(vehicle: number): void;

/**
 * ```
 * From the scripts, p0:  
 * "ArmWrestlingIntensity",  
 * "INOUT",  
 * "Monkey_Stream",  
 * "ZoomLevel"  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2F9D3834AEB9EF79
 */
export function setVariableOnStream(p0: string, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x5B9853296731E88D
 */
export function 0x5b9853296731e88d(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;

/**
 * ```
 * Return the playback time (in milliseconds) of the radio stations current track. 
 * 
 * NativeDB Introduced: v1493
 * ```
 * @param radioStationName - 
 * @returns number
 * @remarks Hash: 0x3E65CDE5215832C1
 */
export function GetCurrentRadioTrackPlaybackTime(radioStationName: string): number;

/**
 * Blocks *all* speech playing on the given ped, including speech triggered by natives such as [PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE](#_0x3523634255FC3318)
 * 
 * The flag itself is not synced, it must be called on each machine that wishes to suppress the speech.
 * 
 * The `SuppressOutgoingNetworkSpeech` flag can be set to `false` if you want speech triggered locally through `PLAY_PED_AMBIENT_SPEECH_*` related native calls to still be audible on remote machines, even though it was blocked on the local one.
 * @param ped - 
 * @param shouldBlock - 
 * @param suppressOutgoingNetworkSpeech - 
 * @returns void
 * @remarks Hash: 0xF8AD2EED7C47E8FE
 */
export function blockAllSpeechFromPed(ped: number, shouldBlock: number, suppressOutgoingNetworkSpeech: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x92D6A88E64A94430
 */
export function stopSynchronizedAudioEvent(p0: any): number;

/**
 * ```
 * List: https://pastebin.com/DCeRiaLJ
 * All occurrences as of Cayo Perico Heist DLC (b2189), sorted alphabetically and identical lines removed: https://git.io/JtLxM
 * ```
 * @param soundId - 
 * @param audioName - 
 * @param audioRef - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x67C540AA08E4A6F5
 */
export function playSoundFrontend(soundId: number, audioName: string, audioRef: string, p3: number): void;

/**
 * Unloads tennis vocalization banks loaded with [`REQUEST_TENNIS_BANKS`](#_0x4ADA3F19BE4A6047).
 * @returns void
 * @remarks Hash: 0x0150B6FF25A9E2E5
 */
export function unrequestTennisBanks(): void;

/**
 * This native had a 4th parameter added in newer game builds
 * `syncOverNetwork` creates a `CPedPlayPainEvent` when set to true, by default this variable is false.
 * 
 * You won't be able to use this for clones (remote pedestrians that are not owned by you) or migrating peds if `syncOverNetwork` is set to true; it simply won't execute. 
 * 
 * The `ped` should also have speech for this to work.
 * 
 * ```c
 * enum eAudDamageReason {
 * 	AUD_DAMAGE_REASON_DEFAULT = 0,
 * 	AUD_DAMAGE_REASON_FALLING = 1,
 * 	AUD_DAMAGE_REASON_SUPER_FALLING = 2,
 * 	AUD_DAMAGE_REASON_SCREAM_PANIC = 3,
 * 	AUD_DAMAGE_REASON_SCREAM_PANIC_SHORT = 4,
 * 	AUD_DAMAGE_REASON_SCREAM_SCARED = 5,
 * 	AUD_DAMAGE_REASON_SCREAM_SHOCKED = 6,
 * 	AUD_DAMAGE_REASON_SCREAM_TERROR = 7,
 * 	AUD_DAMAGE_REASON_ON_FIRE = 8,
 * 	AUD_DAMAGE_REASON_DROWNING = 9,
 * 	// drowning on the surface of water, after we time out
 * 	AUD_DAMAGE_REASON_SURFACE_DROWNING = 10,
 * 	AUD_DAMAGE_REASON_INHALE = 11,
 * 	AUD_DAMAGE_REASON_EXHALE = 12,
 * 	AUD_DAMAGE_REASON_POST_FALL_GRUNT = 13,
 * 	AUD_DAMAGE_REASON_ENTERING_RAGDOLL_DEATH = 14,
 * 	AUD_DAMAGE_REASON_EXPLOSION = 15,
 * 	AUD_DAMAGE_REASON_MELEE = 16,
 * 	AUD_DAMAGE_REASON_SHOVE = 17,
 * 	AUD_DAMAGE_REASON_WHEEZE = 18,
 * 	AUD_DAMAGE_REASON_COUGH = 19,
 * 	AUD_DAMAGE_REASON_TAZER = 20,
 * 	AUD_DAMAGE_REASON_EXHAUSTION = 21,
 * 	AUD_DAMAGE_REASON_CLIMB_LARGE = 22,
 * 	AUD_DAMAGE_REASON_CLIMB_SMALL = 23,
 * 	AUD_DAMAGE_REASON_JUMP = 24,
 * 	AUD_DAMAGE_REASON_COWER = 25,
 * 	AUD_DAMAGE_REASON_WHIMPER = 26,
 * 	AUD_DAMAGE_REASON_DYING_MOAN = 27,
 * 	AUD_DAMAGE_REASON_CYCLING_EXHALE = 28,
 * 	AUD_DAMAGE_REASON_PAIN_RAPIDS = 29,
 * 	AUD_DAMAGE_REASON_SNEEZE = 30,
 * 	AUD_DAMAGE_REASON_MELEE_SMALL_GRUNT = 31,
 * 	AUD_DAMAGE_REASON_MELEE_LARGE_GRUNT = 32,
 * 	AUD_DAMAGE_REASON_POST_FALL_GRUNT_LOW = 33
 * }
 * ```
 * @param ped - 
 * @param damageReason - 
 * @returns void
 * @remarks Hash: 0xBC9AE166038A5CEC
 */
export function playPain(ped: number, damageReason: number): void;

/**
 * ## Parameters
 * *
 * @param scene - 
 * @returns number
 * @remarks Hash: 0xB65B60556E2A9225
 */
export function isAudioSceneActive(scene: string): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC1AA9F53CE982990
 */
export function setRadioAutoUnfreeze(toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x845FFC3A4FEEFA3E
 */
export function audioIsScriptedMusicPlaying(): number;

/**
 * ```
 * List of all usable event names found in b617d used with this native. Sorted alphabetically and identical names removed: pastebin.com/RzDFmB1W  
 * All music event names found in the b617d scripts: pastebin.com/GnYt0R3P  
 * ```
 * @param eventName - 
 * @returns number
 * @remarks Hash: 0x706D57B0F50DA710
 */
export function triggerMusicEvent(eventName: string): number;

/**
 * @returns void
 * @remarks Hash: 0x19AF7ED9B9D23058
 */
export function 0x19af7ed9b9d23058(): void;

/**
 * ## Parameters
 * *
 * @param stationIndex - 
 * @returns string
 * @remarks Hash: 0xB28ECA15046CA8B9
 */
export function getRadioStationName(stationIndex: number): string;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5F43D83FD6738741
 */
export function isPlayerVehRadioEnable(): number;

/**
 * Prepares any banks required to play the given alarm
 * @param alarmName - 
 * @returns number
 * @remarks Hash: 0x9D74AE343DB65533
 */
export function prepareAlarm(alarmName: string): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xA5342D390CDA41D6
 */
export function SetPedAudioGender(ped: number, p1: number): void;

/**
 * ## Return value
 * Returns the play time in milliseconds of the current score track.
 * @returns number
 * @remarks Hash: 0xE7A0D23DC414507B
 */
export function getMusicPlaytime(): number;

/**
 * ## Parameters
 * *
 * @param soundName - 
 * @param soundsetName - 
 * @returns void
 * @remarks Hash: 0xCADA5A0D0702381E
 */
export function playDeferredSoundFrontend(soundName: string, soundsetName: string): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param damageFactor - 
 * @returns void
 * @remarks Hash: 0x59E7B488451F4D3A
 */
export function setVehicleAudioEngineDamageFactor(vehicle: number, damageFactor: number): void;

/**
 * Overrides the calculated ped density that is used to modulate the ambient ped walla sounds (in exteriors only)
 * 
 * If you want to use this for interiors, use [SET_PED_INTERIOR_WALLA_DENSITY](#_0x8BF907833BE275DE)
 * @param density - 
 * @param applyValue - 
 * @returns void
 * @remarks Hash: 0x149AEE66F0CB3A99
 */
export function setPedWallaDensity(density: number, applyValue: number): void;

/**
 * Stops the sound from currently playing, there isn't a way to resume a sound
 * after stopping it.
 * @param soundId - 
 * @returns void
 * @remarks Hash: 0xA3B0C41BA5CC0BB5
 */
export function stopSound(soundId: number): void;

/**
 * This native allows a scripter to override the current underwater stream.
 * It needs to be called before going into the water
 * 
 * It needs to also be called with OVERRIDE_UNDERWATER_STREAM("", false) in order to stop overriding.
 * @returns void
 * @remarks Hash: 0xF2A9CDABCEA04BD6
 */
export function overrideUnderwaterStream(): void;

/**
 * Plays a preloaded stream back from the specified ped vehicle
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xB70374A758007DFA
 */
export function playStreamFromVehicle(vehicle: number): void;

/**
 * Calls the same internal function [`_SET_PED_VOICE_GROUP`](#_0x7CDC8C3B89F661B3) calls, but passes `voiceGroupHash` (defined as a parameter in the referenced native) as `0`.
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x40CF0D12D142A9E8
 */
export function setPedVoiceFull(ped: number): void;

/**
 * ## Parameters
 * *
 * @param audioName - 
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x950A154B8DAB6185
 */
export function initSynchSceneAudioWithEntity(audioName: string, entity: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param sirenAsHorn - 
 * @returns void
 * @remarks Hash: 0xFA932DE350266EF8
 */
export function useSirenAsHorn(vehicle: number, sirenAsHorn: number): void;

/**
 * Doesn't have an effect in Story Mode.
 * 
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param radioStation - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x4CAFEBFA21EC188D
 */
export function SetRadioStationIsVisible(radioStation: string, toggle: number): void;

/**
 * This is marked as a deprecated function internally, please use [HINT_SCRIPT_AUDIO_BANK](#_0xFB380A29641EC31A) instead.
 * @param bankName - 
 * @returns number
 * @remarks Hash: 0x40763EA7B9B783E7
 */
export function hintMissionAudioBank(bankName: string): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x932C2D096A2C3FFF
 */
export function isAmbientSpeechDisabled(ped: number): number;

/**
 * ## Parameters
 * *
 * @param newsStory - 
 * @returns void
 * @remarks Hash: 0xB165AB7C248B2DC1
 */
export function unlockMissionNewsStory(newsStory: number): void;

/**
 * ```
 * SET_VARIABLE_ON_*
 * ```
 * @param variableName - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0xBCC29F935ED07688
 */
export function SetVariableOnCutsceneAudio(variableName: string, value: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xBEF34B1D9624D5DD
 */
export function 0xbef34b1d9624d5dd(p0: number): void;

/**
 * Sets the priority for the given vehicle. This is a hint for the audio system as to what LOD the
 * vehicle should use.
 * 
 * 'High' priority will bump up the activation range significantly and prevent it
 * from dropping when the vehicle is not within the view frustrum.
 * 
 * 'Max' will attempt to keep the vehicle at maximum LOD regardless of how far it is from the listener or what it is currently doing. Be careful with this!
 * 
 * There is a hard limit of 5 simulataneous granular cars (including the player) so we are quite limited on the number
 * we can play at once, so setting vehicles to max priority will reduce the number of engines availble for regular NPC vehicles
 * 
 * 
 * ```c
 * enum eAudVehiclePriority {
 * 	AUDIO_VEHICLE_PRIORITY_NORMAL = 0,
 * 	AUDIO_VEHICLE_PRIORITY_MEDIUM = 1,
 * 	AUDIO_VEHICLE_PRIORITY_MAX = 2,
 * 	AUDIO_VEHICLE_PRIORITY_HIGH = 3,
 * }
 * ```
 * @param vehicle - 
 * @param priority - 
 * @returns void
 * @remarks Hash: 0xE5564483E407F914
 */
export function setAudioVehiclePriority(vehicle: number, priority: number): void;

/**
 * Resets the ambient zone enabled/disabled status to its value before it was modified by this script
 * 
 * Default behaviour is that any state change only gets applied once the player leaves the zone.
 * @param zoneName - 
 * @param forceUpdate - 
 * @returns void
 * @remarks Hash: 0x218DD44AAAC964FF
 */
export function clearAmbientZoneState(zoneName: string, forceUpdate: number): void;

/**
 * ```
 * Only found this one in the decompiled scripts:  
 * AUDIO::SET_RADIO_TRACK("RADIO_03_HIPHOP_NEW", "ARM1_RADIO_STARTS");  
 * ```
 * @param radioStation - 
 * @param radioTrack - 
 * @returns void
 * @remarks Hash: 0xB39786F201FEE30B
 */
export function setRadioTrack(radioStation: string, radioTrack: string): void;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns number
 * @remarks Hash: 0x049E937F18F4020C
 */
export function isPedInCurrentConversation(ped: number): number;

/**
 * Resets the override for [SET_VEHICLE_STARTUP_REV_SOUND](#_0xF1F8157B8C3F171C)
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0xD2DCCD8E16E20997
 */
export function resetVehicleStartupRevSound(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xDA07819E452FFE8F
 */
export function setPositionedPlayerVehicleRadioEmitterEnabled(): void;

/**
 * Plays a preloaded stream back from the specified Vector3.
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0x21442F412E8DE56B
 */
export function playStreamFromPosition(x: number, y: number, z: number): void;

/**
 * Overrides the vehicle's horn hash.
 * 
 * 
 * When changing this hash on a vehicle, [`_GET_VEHICLE_HORN_HASH`](#_0xACB5DCCA1EC76840) will
 * @param vehicle - 
 * @param override - 
 * @param hornHash - 
 * @returns void
 * @remarks Hash: 0x3CDC1E622CCE0356
 */
export function overrideVehHorn(vehicle: number, override: number, hornHash: number): void;

/**
 * ## Parameters
 * *
 * @param vehicle - 
 * @param doorIndex - 
 * @returns void
 * @remarks Hash: 0x3A539D52857EA82D
 */
export function playVehicleDoorOpenSound(vehicle: number, doorIndex: number): void;

/**
 * @returns void
 * @remarks Hash: 0xA4718A1419D18151
 */
export function stopStream(): void;

/**
 * Stops currently playing ambient speech.
 * @param ped - 
 * @returns void
 * @remarks Hash: 0xB8BEC0CA6F0EDB0F
 */
export function stopCurrentPlayingAmbientSpeech(ped: number): void;

/**
 * ## Parameters
 * *
 * @param state - 
 * @returns void
 * @remarks Hash: 0xBF286C554784F3DF
 */
export function setMobilePhoneRadioState(state: number): void;

/**
 * Loads the tennis vocalization banks into a couple animal slots.
 * @param opponentPed - 
 * @returns void
 * @remarks Hash: 0x4ADA3F19BE4A6047
 */
export function requestTennisBanks(opponentPed: number): void;

/**
 * ## Parameters
 * *
 * @param stationNameHash - 
 * @returns number
 * @remarks Hash: 0x8D67489793FF428B
 */
export function findRadioStationIndex(stationNameHash: number): number;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param vehicle - 
 * @returns void
 * @remarks Hash: 0x3E45765F3FBB582F
 */
export function SetVehHasRadioOverride(vehicle: number): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @returns number
 * @remarks Hash: 0xA10B2DB49E92A6B0
 */
export function getCamAnimCurrentPhase(cam: number): number;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x503F5920162365B2
 */
export function setFlyCamHorizontalResponse(cam: number, p1: number, p2: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @returns number
 * @remarks Hash: 0x036F97C908C2B52C
 */
export function isCamInterpolating(cam: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xB15162CB5826E9E8
 */
export function isCinematicCamRendering(): number;

/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#_0x8D4D46230B2C353A) for the view mode enum.
 * @param context - 
 * @returns number
 * @remarks Hash: 0xEE778F8C7E1142E2
 */
export function getCamViewModeForContext(context: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xCED08CBE8EBB97C7
 */
export function 0xced08cbe8ebb97c7(p0: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param rotationOrder - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x5B4E4C817FCC2DFB
 */
export function getFinalRenderedCamRot(rotationOrder: number): { x: number, y: number, z: number };

/**
 * This native sets the camera's pitch (rotation on the x-axis).
 * @param angle - 
 * @param scalingFactor - 
 * @returns void
 * @remarks Hash: 0x6D0858B8EDFD2B7D
 */
export function setGameplayCamRelativePitch(angle: number, scalingFactor: number): void;

/**
 * ## Parameters
 * *
 * @param distance - 
 * @returns void
 * @remarks Hash: 0x42156508606DE65E
 */
export function setThirdPersonAimCamNearClipThisUpdate(distance: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xCA9D2AA3E326D720
 */
export function isCinematicIdleCamRendering(): number;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xCCD078C2665D2973
 */
export function 0xccd078c2665d2973(p0: number): void;

/**
 * ```
 * Only used in R* Script fm_mission_controller_2020
 * ```
 * 
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @returns void
 * @remarks Hash: 0x731A880555DA3647
 */
export function SetUseHiDofInCutscene(): void;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param cam - 
 * @returns number
 * @remarks Hash: 0xC2612D223D915A1C
 */
export function GetCamNearDof(cam: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xD7360051C885628B
 */
export function isBonnetCinematicCamRendering(): number;

/**
 * Enumerated type defined in camControlHelperMetadataViewModes:
 * 
 * ```c
 * enum eContext {
 *     ON_FOOT = 0, // [G|S]ET_FOLLOW_PED_CAM_*
 *     IN_VEHICLE = 1, // [G|S]ET_FOLLOW_VEHICLE_CAM_*
 *     ON_BIKE = 2,
 *     IN_BOAT = 3,
 *     IN_AIRCRAFT = 4,
 *     IN_SUBMARINE = 5,
 *     IN_HELI = 6,
 *     IN_TURRET = 7,
 * }
 * ```
 * @returns number
 * @remarks Hash: 0x19CAFA3C87F7C2FF
 */
export function GetCamActiveViewModeContext(): number;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x83B8201ED82A9A2D
 */
export function setCamSplineNodeEase(cam: number, p1: number, p2: number, p3: number): void;

/**
 * ```
 * SET_FOLLOW_*
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x9DFE13ECDC1EC196
 */
export function 0x9dfe13ecdc1ec196(p0: number, p1: number): void;

/**
 * ```
 * Fades the screen out.  
 * duration: The time the fade should take, in milliseconds.  
 * ```
 * @param duration - 
 * @returns void
 * @remarks Hash: 0x891B5B39AC6302AF
 */
export function doScreenFadeOut(duration: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xA41BCD7213805AAC
 */
export function forceCinematicRenderingThisUpdate(p0: number): void;

/**
 * ```
 * Sets gameplay camera to hash
 * ```
 * 
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param camName - 
 * @returns void
 * @remarks Hash: 0x425A920FDB9A0DDA
 */
export function SetGameplayCamHash(camName: string): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xCBBDE6D335D6D496
 */
export function isFollowVehicleCamActive(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x469F2ECDEC046337
 */
export function 0x469f2ecdec046337(p0: number): void;

/**
 * Attaches a camera to a specific bone of a Ped, including full matrix transformations for both rotation and position offsets.
 * This native works with peds only.
 * 
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param cam - 
 * @param ped - 
 * @param boneIndex - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param xOffset - 
 * @param yOffset - 
 * @param zOffset - 
 * @param isRelative - 
 * @returns void
 * @remarks Hash: 0x149916F50C34A40D
 */
export function hardAttachCamToPedBone(cam: number, ped: number, boneIndex: number, xRot: number, yRot: number, zRot: number, xOffset: number, yOffset: number, zOffset: number, isRelative: number): void;

/**
 * ```
 * Allows you to aim and shoot at the direction the camera is facing.  
 * ```
 * @param cam - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x8C1DC7770C51DC8D
 */
export function setCamAffectsAiming(cam: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xA2767257A320FC82
 */
export function 0xa2767257a320fc82(p0: any, p1: number): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @returns void
 * @remarks Hash: 0xB1381B97F70C7B30
 */
export function 0xb1381b97f70c7b30(): void;

/**
 * ```
 * Parameters p0-p5 seems correct. The bool p6 is unknown, but through every X360 script it's always 1. Please correct p0-p5 if any prove to be wrong.  
 * ```
 * @param cam - 
 * @param ped - 
 * @param boneIndex - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0x68B2B5F33BA63C41
 */
export function pointCamAtPedBone(cam: number, ped: number, boneIndex: number, x: number, y: number, z: number, p6: number): void;

/**
 * ## Return value
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x14D6F5678D8F1B37
 */
export function getGameplayCamCoord(): { x: number, y: number, z: number };

/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.  
 * ```
 * @param camera - 
 * @param name - 
 * @returns void
 * @remarks Hash: 0x1B93E0107865DD40
 */
export function setCamDebugName(camera: number, name: string): void;

/**
 * Overrides the ped follow camera (not first person camera) with the specified camera. The game loads all camera metadata from `update/update.rpf/x64/data/metadata/cameras.ymt` and `x64a.rpf/data/metadata/cameras.ymt` with the ped follow cameras being of type `camFollowPedCameraMetadata`.
 * 
 * | Follow Camera Names                          |
 * |----------------------------------------------|
 * | DEFAULT_FOLLOW_PED_CAMERA                    |
 * | FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA           |
 * | FOLLOW_PED_ON_EXILE1_LADDER_CAMERA           |
 * | FOLLOW_PED_SKY_DIVING_CAMERA                 |
 * | FOLLOW_PED_SKY_DIVING_FAMILY5_CAMERA         |
 * | NIGHTCLUB_FOLLOW_PED_CAMERA                  |
 * | FOLLOW_PED_INTIMIDATION_CAMERA               |
 * | FOLLOW_PED_IN_WATER_CAMERA                   |
 * | FOLLOW_PED_PRONE_CAMERA                      |
 * | FOLLOW_PED_ON_SEAT_CAMERA                    |
 * | FOLLOW_PED_HANGING_UPSIDE_DOWN_CAMERA        |
 * | FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA           |
 * | CUSTOM_TRANSITION_AFTER_WARP_SKY_DIVE_CAMERA |
 * | FOLLOW_PED_ON_HORSE_CAMERA                   |
 * | FOLLOW_PED_ON_LOUNGER_CAMERA                 |
 * 
 * Other camera hashes (names not found yet)
 * ```c
 * // 0x5DBBFB6E
 * // 0xA38DB056
 * // 0x16B702A3
 * // 0x41D72A2E
 * ```
 * @param camName - 
 * @param easeTime - 
 * @returns number
 * @remarks Hash: 0x44A113DD6FFC48D1
 */
export function setFollowPedCamThisUpdate(camName: string, easeTime: number): number;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xAABD62873FFB1A33
 */
export function 0xaabd62873ffb1a33(p0: any, p1: any): void;

/**
 * Override the camera work of the third-person camera to table game for current frame only.
 * 
 * |                  HashKey                    |       Hash        |    Game         |
 * | :---------------------------------: | :-----------:| :-------------:  |
 * | `CASINO_LUCKY_WHEEL_CAMERA` |   `5891389`   |  Lucky Wheel    |
 * | `CASINO_SLOT_MACHINE_CAMERA` |  `518572876`  |     Slots       |
 * | `CASINO_ROULETTE_CAMERA` |   `71681063`  |    Roulette     |
 * | `CASINO_BLACKJACK_CAMERA` | `-2124244681` |    Blackjack    |
 * | `CASINO_POKER_CAMERA` | `-1938411241` |   Three Cards   |
 * | `CASINO_INSIDE_TRACK_CAMERA` | `1929822423` |   Inside Track    |
 * | `ARCADE_LOVE_PROFESSOR_P1_CAMERA` | `545868034` |   LoveProfessorP1   |
 * | `ARCADE_LOVE_PROFESSOR_P2_CAMERA` | `935304251` |   LoveProfessorP2   |
 * @param hash - 
 * @returns number
 * @remarks Hash: 0x79C0E43EB9B944E2
 */
export function setTableGamesCameraThisUpdate(hash: number): number;

/**
 * Stops the currently active global camera shake that was initiated by a script. You can check if a global camera shake is active using [IS_SCRIPT_GLOBAL_SHAKING](#_0xC912AF078AF19212).
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param bStopImmediately - 
 * @returns void
 * @remarks Hash: 0x1C9D7949FA533490
 */
export function stopScriptGlobalShaking(bStopImmediately: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param p4 - 
 * @param duration - 
 * @param blendOutDuration - 
 * @param blendInDuration - 
 * @returns void
 * @remarks Hash: 0x2B486269ACD548D3
 */
export function setGameplayPedHint(p0: number, x1: number, y1: number, z1: number, p4: number, duration: number, blendOutDuration: number, blendInDuration: number): void;

/**
 * ## Parameters
 * *
 * @param context - 
 * @param viewMode - 
 * @returns void
 * @remarks Hash: 0x2A2173E46DAECD12
 */
export function setCamViewModeForContext(context: number, viewMode: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xF55E4046F6F831DC
 */
export function 0xf55e4046f6f831dc(p0: any, p1: number): void;

/**
 * @returns void
 * @remarks Hash: 0xDC9DA9E8789F5246
 */
export function setCinematicNewsChannelActiveThisUpdate(): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @returns number
 * @remarks Hash: 0x02EC0AF5C5A49B7A
 */
export function isCamRendering(cam: number): number;

/**
 * ```
 * This native has its name defined inside its codE  
 * ```
 * @param camera - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x7DD234D6F3914C5B
 */
export function SetCamDofFnumberOfLens(camera: number, p1: number): void;

/**
 * ```
 * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.  
 * ```
 * @param cam - 
 * @param bScriptHostCam - 
 * @returns void
 * @remarks Hash: 0x865908C81A2C22E9
 */
export function destroyCam(cam: number, bScriptHostCam: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @returns number
 * @remarks Hash: 0x77C3CEC46BE286F6
 */
export function GetDebugCamera(): number;

/**
 * ## Parameters
 * *
 * @param ped - 
 * @returns void
 * @remarks Hash: 0x8BBACBF51DA047A8
 */
export function setGameplayCamFollowPedThisUpdate(ped: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xE3433EADAAF7EE40
 */
export function SetGameplayHintAnimCloseup(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xDCD4EA924F42D01A
 */
export function setWidescreenBorders(p0: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param roll - 
 * @param pitch - 
 * @param yaw - 
 * @returns void
 * @remarks Hash: 0x48608C3464F58AB4
 */
export function SetGameplayCamRelativeRotation(roll: number, pitch: number, yaw: number): void;

/**
 * F*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x28B022A17B068A3A
 */
export function 0x28b022a17b068a3a(p0: number, p1: number): void;

/**
 * ```
 * Sets the camera position relative to heading in float from -360 to +360.  
 * Heading is alwyas 0 in aiming camera.  
 * ```
 * @param heading - 
 * @returns void
 * @remarks Hash: 0xB4EC2312F4E5B1F1
 */
export function setGameplayCamRelativeHeading(heading: number): void;

/**
 * ```
 * Does nothing  
 * ```
 * 
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * @param yaw - 
 * @returns void
 * @remarks Hash: 0x103991D4A307D472
 */
export function SetGameplayCamRawYaw(yaw: number): void;

/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#_0x8D4D46230B2C353A) for the follow mode enum.
 * @param viewMode - 
 * @returns void
 * @remarks Hash: 0xAC253D7842768F48
 */
export function setFollowVehicleCamViewMode(viewMode: number): void;

/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param cam - 
 * @param animName - 
 * @param animDictionary - 
 * @returns number
 * @remarks Hash: 0xC90621D8A0CEECF2
 */
export function isCamPlayingAnim(cam: number, animName: string, animDictionary: string): number;

/**
 * B*
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @returns void
 * @remarks Hash: 0x9F97DA93681F87EA
 */
export function 0x9f97da93681f87ea(): void;

/**
 * Creates a camera with the specified camera hash, You can use `SET_CAM_` natives to manipulate the camera.
 * Make sure to call [RENDER_SCRIPT_CAMS](#_0x07E5B515DB0636FC) once the camera is created, or this won't have any visible effect.
 * 
 * Take a look at [CREATE_CAM](#_0xC3981DCE61D9E13F) if you would like to see the available camera names.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param camHash - 
 * @param active - 
 * @returns number
 * @remarks Hash: 0x5E3CF89C6BCCA67D
 */
export function createCamera(camHash: number, active: number): number;

/**
 * ```
 * This native has a name defined inside its code  
 * ```
 * @param camera - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2C654B4943BDDF7C
 */
export function SetCamDofMaxNearInFocusDistanceBlendLevel(camera: number, p1: number): void;

/**
 * ```
 * if p0 is 0, effect is cancelled  
 * if p0 is 1, effect zooms in, gradually tilts cam clockwise apx 30 degrees, wobbles slowly. Motion blur is active until cancelled.  
 * if p0 is 2, effect immediately tilts cam clockwise apx 30 degrees, begins to wobble slowly, then gradually tilts cam back to normal. The wobbling will continue until the effect is cancelled.  
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x80C8B1846639BB19
 */
export function SetCamEffect(p0: number): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xBDECF64367884AC3
 */
export function stopCamShaking(cam: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x5C41E6BABC9E2112
 */
export function 0x5c41e6babc9e2112(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * @param seatIndex - 
 * @returns void
 * @remarks Hash: 0x5C90CAB09951A12F
 */
export function SetFollowTurretSeatCam(seatIndex: number): void;

/**
 * ```
 * Previous declaration void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, BOOL easeLocation, BOOL easeRotation) is completely wrong. The last two params are integers not BOOLs...  
 * ```
 * @param camTo - 
 * @param camFrom - 
 * @param duration - 
 * @param easeLocation - 
 * @param easeRotation - 
 * @returns void
 * @remarks Hash: 0x9FBDA379383A52A4
 */
export function setCamActiveWithInterp(camTo: number, camFrom: number, duration: number, easeLocation: number, easeRotation: number): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @returns number
 * @remarks Hash: 0xC3330A45CCCDB26A
 */
export function getCamFov(cam: number): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param duration - 
 * @param blendOutDuration - 
 * @param blendInDuration - 
 * @param unk - 
 * @returns void
 * @remarks Hash: 0xD51ADCD2D8BC0FB3
 */
export function setGameplayCoordHint(x: number, y: number, z: number, duration: number, blendOutDuration: number, blendInDuration: number, unk: number): void;

/**
 * ```
 * Set camera as active/inactive.  
 * ```
 * @param cam - 
 * @param active - 
 * @returns void
 * @remarks Hash: 0x026FB97D0A425F84
 */
export function setCamActive(cam: number, active: number): void;

/**
 * ```
 * minimum: Degrees between -90f and 90f.
 * maximum: Degrees between -90f and 90f.
 * Clamps the gameplay camera's current pitch.
 * Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.
 * ```
 * @param minimum - 
 * @param maximum - 
 * @returns void
 * @remarks Hash: 0xA516C198B7DCA1E1
 */
export function ClampGameplayCamPitch(minimum: number, maximum: number): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @returns number
 * @remarks Hash: 0xC520A34DAFBF24B1
 */
export function getCamNearClip(cam: number): number;

/**
 * ```
 * The native seems to only be called once.  
 * The native is used as so,  
 * CAM::SET_CAM_INHERIT_ROLL_VEHICLE(l_544, getElem(2, &l_525, 4));  
 * In the exile1 script.  
 * ```
 * @param cam - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x45F1DE9C34B93AE6
 */
export function setCamInheritRollVehicle(cam: number, p1: number): void;

/**
 * ```
 * A*
 * ```
 * @returns number
 * @remarks Hash: 0x4879E4FE39074CDF
 */
export function 0x4879e4fe39074cdf(): number;

/**
 * Points the camera at the specified entity.
 * 
 * Offset works like [GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS](#_0x1899F328B0E12848).
 * @param cam - 
 * @param entity - 
 * @param offsetX - 
 * @param offsetY - 
 * @param offsetZ - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x5640BFF86B16E8DC
 */
export function pointCamAtEntity(cam: number, entity: number, offsetX: number, offsetY: number, offsetZ: number, p5: number): void;

/**
 * ## Return value
 * Returns if the "Allow Independent Camera Modes" setting in Pause Menu is turned On or Off.
 * @returns number
 * @remarks Hash: 0xEAF0FA793D05C592
 */
export function isAllowedIndependentCameraModes(): number;

/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x324C5AA411DA7737
 */
export function 0x324c5aa411da7737(p0: any): void;

/**
 * @returns void
 * @remarks Hash: 0xC8391C309684595A
 */
export function 0xc8391c309684595a(): void;

/**
 * ## Parameters
 * *
 * @param yOffset - 
 * @returns void
 * @remarks Hash: 0xC92717EF615B6704
 */
export function SetGameplayHintAnimOffsety(yOffset: number): void;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param cam - 
 * @returns number
 * @remarks Hash: 0x06D153C0B99B6128
 */
export function GetCamDofStrength(cam: number): number;

/**
 * Creates a camera with the specified cam name, You can use `SET_CAM_` natives to manipulate the camera.  
 * Make sure to call [RENDER_SCRIPT_CAMS](#_0x07E5B515DB0636FC) once the camera is created, or this won't have any visible effect.
 * @param camName - 
 * @param active - 
 * @returns number
 * @remarks Hash: 0xC3981DCE61D9E13F
 */
export function createCam(camName: string, active: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x797AC7CB535BA28F
 */
export function isScreenFadingOut(): number;

/**
 * ## Return value
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xA200EB1EE790F448
 */
export function getFinalRenderedCamCoord(): { x: number, y: number, z: number };

/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#_0x8D4D46230B2C353A) for the follow mode enum.
 * @param zoomLevel - 
 * @returns void
 * @remarks Hash: 0x19464CB6E4078C8A
 */
export function setFollowVehicleCamZoomLevel(zoomLevel: number): void;

/**
 * ## Parameters
 * *
 * @param distance - 
 * @returns void
 * @remarks Hash: 0x0AF7B437918103B3
 */
export function setFirstPersonAimCamNearClipThisUpdate(distance: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x8BFCEB5EA1B161B6
 */
export function ReplayFreeCamGetMaxRange(): number;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x3CF48F6F96E749DC
 */
export function setCamDofPlanes(cam: number, p1: number, p2: number, p3: number, p4: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x2AED6301F67007D5
 */
export function DisableCamCollisionForEntity(entity: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xBBC08F6B4CB8FF0A
 */
export function isCinematicCamShaking(): number;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @returns void
 * @remarks Hash: 0xA2FABBE87F4BAD82
 */
export function detachCam(cam: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE9EA16D6E54CDCA4
 */
export function setInVehicleCamStateThisUpdate(p0: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x247ACBC4ABBC9D1C
 */
export function 0x247acbc4abbc9d1c(p0: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x7EC52CC40597D170
 */
export function getFirstPersonAimCamZoomFactor(): number;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param cam2 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x0A9F2A468B328E74
 */
export function addCamSplineNodeUsingCameraFrame(cam: number, cam2: number, p2: number, p3: number): void;

/**
 * Terminates the current gameplay hint camera, with an option for immediate cessation or a gradual fade out.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param bStopImmediately - 
 * @returns void
 * @remarks Hash: 0xF46C581C61718916
 */
export function stopGameplayHint(bStopImmediately: number): void;

/**
 * ## Parameters
 * *
 * @param bStopImmediately - 
 * @returns void
 * @remarks Hash: 0x0EF93E9F3D08C178
 */
export function stopGameplayCamShaking(bStopImmediately: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA03502FC581F7D9B
 */
export function getFinalRenderedCamNearDof(): number;

/**
 * ```
 * CAM::SHAKE_SCRIPT_GLOBAL("HAND_SHAKE", 0.2);
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xF4C8CF9E353AFECA
 */
export function shakeScriptGlobal(p0: string, p1: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x70FDA869F3317EA9
 */
export function isGameplayCamLookingBehind(): number;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param nearClip - 
 * @returns void
 * @remarks Hash: 0xC7848EFCCC545182
 */
export function setCamNearClip(cam: number, nearClip: number): void;

/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#_0x8D4D46230B2C353A) for the follow mode enum.
 * @returns number
 * @remarks Hash: 0xEE82280AB767B690
 */
export function getFollowVehicleCamZoomLevel(): number;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xE827B9382CFB41BA
 */
export function SetFlyCamVerticalSpeedMultiplier(cam: number, p1: number, p2: number, p3: number): void;

/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#_0x8D4D46230B2C353A) for the follow mode enum.
 * @returns number
 * @remarks Hash: 0x33E6C8EFD0CD93E9
 */
export function getFollowPedCamZoomLevel(): number;

/**
 * ```
 * I named p1 as timeDuration as it is obvious. I'm assuming tho it is ran in ms(Milliseconds) as usual.  
 * ```
 * @param cam - 
 * @param timeDuration - 
 * @returns void
 * @remarks Hash: 0x1381539FEE034CDA
 */
export function setCamSplineDuration(cam: number, timeDuration: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC6D3D26810C8E0F9
 */
export function isFollowPedCamActive(): number;

/**
 * Adjusts the field of view (FOV) for a specified camera, allowing for a wider or narrower perspective of the game world. The field of view is measured in degrees and affects how much of the game world is visible at any given moment through the camera.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param cam - 
 * @param fieldOfView - 
 * @returns void
 * @remarks Hash: 0xB13C14F66A00D047
 */
export function setCamFov(cam: number, fieldOfView: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x2F7F2B26DD3F18EE
 */
export function 0x2f7f2b26dd3f18ee(p0: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xCC9F3371A7C28BC9
 */
export function isCinematicShotActive(p0: any): number;

/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#_0x8D4D46230B2C353A) for the follow mode enum.
 * @returns number
 * @remarks Hash: 0xA4FF579AC0E3AAAE
 */
export function getFollowVehicleCamViewMode(): number;

/**
 * ```
 * Native name labeled within its code
 * ```
 * @param camera - 
 * @param multiplier - 
 * @returns void
 * @remarks Hash: 0x47B595D60664CFFA
 */
export function SetCamDofFocalLengthMultiplier(camera: number, multiplier: number): void;

/**
 * @returns void
 * @remarks Hash: 0x5A43C76F7FC7BA5F
 */
export function 0x5a43c76f7fc7ba5f(): void;

/**
 * ```
 * _RESET_*
 * 
 * _RESET_GAMEPLAY_CAM_RELATIVE_ORBIT_HOLD_TIME?
 * ```
 * 
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @returns void
 * @remarks Hash: 0x7295C203DD659DFE
 */
export function 0x7295c203dd659dfe(): void;

/**
 * ```
 * From b617 scripts:
 * CAM::_21E253A7F8DA5DFB("DINGHY");
 * CAM::_21E253A7F8DA5DFB("ISSI2");
 * CAM::_21E253A7F8DA5DFB("SPEEDO");
 * ```
 * @param vehicleName - 
 * @returns void
 * @remarks Hash: 0x21E253A7F8DA5DFB
 */
export function SetGameplayCamVehicleCamera(vehicleName: string): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x65019750A0324133
 */
export function getGameplayCamFov(): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @returns number
 * @remarks Hash: 0x5F35F6732C3FBBA0
 */
export function getFinalRenderedInWhenFriendlyFov(player: number): number;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param height - 
 * @returns void
 * @remarks Hash: 0xF9D02130ECDD1D77
 */
export function setFlyCamMaxHeight(cam: number, height: number): void;

/**
 * ## Parameters
 * *
 * @param pitch - 
 * @returns void
 * @remarks Hash: 0x759E13EBC1C15C5A
 */
export function SetGameplayCamRawPitch(pitch: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @returns number
 * @remarks Hash: 0xF5F1E89A970B7796
 */
export function isCinematicCamInputActive(): number;

/**
 * Resets the idle camera timer. Calling that in a loop once every few seconds is enough to disable the idle cinematic camera.
 * @returns void
 * @remarks Hash: 0xF4F2C0D4EE209E20
 */
export function invalidateIdleCam(): void;

/**
 * ## Parameters
 * *
 * @param minAngle - 
 * @param maxAngle - 
 * @returns void
 * @remarks Hash: 0xBCFC632DB7673BF0
 */
export function SetFirstPersonCamPitchRange(minAngle: number, maxAngle: number): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @returns number
 * @remarks Hash: 0x255F8DAFD540D397
 */
export function getCamFarDof(cam: number): number;

/**
 * @returns void
 * @remarks Hash: 0x62374889A4D59F72
 */
export function 0x62374889a4d59f72(): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @returns void
 * @remarks Hash: 0xF33AB75780BA57DE
 */
export function stopCamPointing(cam: number): void;

/**
 * ## Return value
 * Returns the relative pitch of the gameplay camera
 * @returns number
 * @remarks Hash: 0x3A6867B4845BEDA2
 */
export function getGameplayCamRelativePitch(): number;

/**
 * ```
 * p0 argument found in the b617d scripts: "DRUNK_SHAKE"  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xDCE214D9ED58F3CF
 */
export function shakeCinematicCam(p0: string, p1: number): void;

/**
 * ```
 * This native has a name defined inside its code  
 * ```
 * @param camera - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xC3654A441402562D
 */
export function SetCamDofMaxNearInFocusDistance(camera: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x51669F7D1FB53D9F
 */
export function setCinematicButtonActive(p0: number): void;

/**
 * ```
 * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.  
 * ```
 * @param bScriptHostCam - 
 * @returns void
 * @remarks Hash: 0x8E5FB15663F79120
 */
export function destroyAllCams(bScriptHostCam: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x705A276EBFF3133D
 */
export function 0x705a276ebff3133d(): number;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x609278246A29CA34
 */
export function addCamSplineNodeUsingGameplayFrame(cam: number, p1: number, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @returns void
 * @remarks Hash: 0xA7092AFE81944852
 */
export function 0xa7092afe81944852(): void;

/**
 * Enables or disables the usage of a shallow DOF. Needs to be set to true to use [`SET_CAM_NEAR_DOF`](#_0x3FA4BF0A7AB7DE2C), [`SET_CAM_FAR_DOF`](#_0xEDD91296CD01AEE0), etc. Doesn't need to be called every tick.
 * @param cam - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x16A96863A17552BB
 */
export function setCamUseShallowDofMode(cam: number, toggle: number): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param farClip - 
 * @returns void
 * @remarks Hash: 0xAE306F2A904BF86E
 */
export function setCamFarClip(cam: number, farClip: number): void;

/**
 * ```
 * W*
 * ```
 * @param cam - 
 * @returns number
 * @remarks Hash: 0x5C48A1D6E3B33179
 */
export function 0x5c48a1d6e3b33179(cam: number): number;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param amplitude - 
 * @returns void
 * @remarks Hash: 0xD93DB43B82BC0D00
 */
export function setCamShakeAmplitude(cam: number, amplitude: number): void;

/**
 * @returns void
 * @remarks Hash: 0xDD79DF9F4D26E1C9
 */
export function 0xdd79df9f4d26e1c9(): void;

/**
 * ## Parameters
 * *
 * @param xOffset - 
 * @returns void
 * @remarks Hash: 0x5D7B620DAE436138
 */
export function SetGameplayHintAnimOffsetx(xOffset: number): void;

/**
 * This native works with vehicles only.
 * Bone indexes are usually given by this native [GET_ENTITY_BONE_INDEX_BY_NAME](#_0xFB71170B7E76ACBA).
 * @param cam - 
 * @param vehicle - 
 * @param boneIndex - 
 * @param relativeRotation - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param offX - 
 * @param offY - 
 * @param offZ - 
 * @param fixedDirection - 
 * @returns void
 * @remarks Hash: 0x8DB3F12A02CAEF72
 */
export function AttachCamToVehicleBone(cam: number, vehicle: number, boneIndex: number, relativeRotation: number, rotX: number, rotY: number, rotZ: number, offX: number, offY: number, offZ: number, fixedDirection: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x4F32C0D5A90A9B40
 */
export function IsInVehicleCamDisabled(): number;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xF75497BB865F0803
 */
export function pointCamAtCoord(cam: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xE111A7C0D200CBC5
 */
export function 0xe111a7c0d200cbc5(p0: any, p1: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x162F9D995753DC19
 */
export function getFinalRenderedCamMotionBlurStrength(): number;

/**
 * ```
 * minimum: Degrees between -180f and 180f.
 * maximum: Degrees between -180f and 180f.
 * Clamps the gameplay camera's current yaw.
 * Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.
 * ```
 * @param minimum - 
 * @param maximum - 
 * @returns void
 * @remarks Hash: 0x8F993D26E0CA5E8E
 */
export function ClampGameplayCamYaw(minimum: number, maximum: number): void;

/**
 * Specifies how much the DoF effect should be applied (Set using [`SET_CAM_NEAR_DOF`](#_0x3FA4BF0A7AB7DE2C), [`SET_CAM_FAR_DOF`](#_0xEDD91296CD01AEE0), etc.)
 * @param cam - 
 * @param dofStrength - 
 * @returns void
 * @remarks Hash: 0x5EE29B4D7D5DF897
 */
export function setCamDofStrength(cam: number, dofStrength: number): void;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns void
 * @remarks Hash: 0xD1F8363DFAD03848
 */
export function setGameplayHintBaseOrbitPitchOffset(value: number): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @returns number
 * @remarks Hash: 0xB60A9CFEB21CA6AA
 */
export function getCamFarClip(cam: number): number;

/**
 * ## Parameters
 * *
 * @param player - 
 * @param rotationOrder - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x26903D9CD1175F2C
 */
export function getFinalRenderedInWhenFriendlyRot(player: number, rotationOrder: number): { x: number, y: number, z: number };

/**
 * This function takes a rotation order and outputs a `Vector3` in degrees. 
 * 
 * It first calls a game function to calculate these values given the rotation order and effectively multiplies those values by `180/PI`, hence degrees since the function it calls outputs radians which are then converted to degrees.
 * @param rotationOrder - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x837765A25378F0BB
 */
export function getGameplayCamRot(rotationOrder: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x4008EDF7D6E48175
 */
export function 0x4008edf7d6e48175(p0: number): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param phase - 
 * @returns void
 * @remarks Hash: 0x4145A4C44FF3B5A6
 */
export function setCamAnimCurrentPhase(cam: number, phase: number): void;

/**
 * Sets the smoothing style for a DEFAULT_SPLINE_CAMERA
 * Ranges from 0 to 3 in rockstar scripts although there are actually 26
 * ```
 * 0: No lead-in or lead-out smoothing
 * 1: Smooth lead-in
 * 2: Smooth lead-out
 * 3: Both lead-in and lead-out are smoothed
 * 4-6: Longer speed up, lead-in, lead-out, and both in order as above. 
 * 6: see above, but missed a node in testing(?)
 * 7: Smoothed lead-in, longer smoothed lead-out
 * 8: Longer lead-in and lead-out than 6, didn't drop node
 * 9: Constant acceleration
 * 10: Constant deceleration. Dropped 2 nodes in testing.
 * 11: Same as 0
 * 12: 10 but slower lead-in, reaches end node less early
 * 13: Extremely close to 3, slightly longer lead-in/lead-out
 * 14: Constant acceleration, dropped last 2 nodes in testing and halted (?)
 * 15: Very similar to 10, did not drop any nodes.
 * 16: Long lead-in, dropped 2 nodes in testing, very long leadout.
 * 17: Constant acceleration, slower speed-up than 9
 * 18: Same as 17 is to 9, slightly longer lead-out, lingers at end node
 * 19: Very long lead in and out
 * 20: Very long, gradual lead-in acceleration at start, gets extremely fast
 * 21: Same as 20 but for constant deceleration
 * 22: 20 and 21 combined, long linger at end node. Dropped 2 nodes in testing
 * 23: Constant acceleration, doesn't complete path before it stops
 * 24: Same as 23 but with constant deceleration, but completes path
 * 25: 23 and 24 combined, insanely fast at middle.
 * 26: No noticable lead-in, misses last 2 nodes in testing
 * 27+: Alternates between 0 and 26
 * ```
 * 
 * The above is documented and graphed at [Spline Cam Interp Graphs](https://docs.google.com/spreadsheets/d/1ejyiMcEYrhhQOL0mLe8664UN-vU4Oh-SBqQnVcKlFIk/edit?usp=sharing)
 * 
 * ```
 * 
 * Using 1-3 will result in misalignment from the passed durations for the spline nodes, the overall duration will remain but other nodes will be shortened if smoothing anything.
 * 
 * Graph below demonstrates interpolation between 0-1000 and back 10 times.
 * 
 * ![](https://i.imgur.com/cixWh7m.png)
 * @param cam - 
 * @param smoothingStyle - 
 * @returns void
 * @remarks Hash: 0xD1B0F412F109EA5D
 */
export function setCamSplineSmoothingStyle(cam: number, smoothingStyle: number): void;

/**
 * ## Parameters
 * *
 * @param FOV - 
 * @returns void
 * @remarks Hash: 0x513403FB9C56211F
 */
export function setGameplayHintFov(FOV: number): void;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param radius - 
 * @returns number
 * @remarks Hash: 0xE33D59DA70B58FDF
 */
export function isSphereVisible(x: number, y: number, z: number, radius: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xE520FF1AD2785B40
 */
export function isGameplayHintActive(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC724C701C30B2FE7
 */
export function setCinematicCamShakeAmplitude(p0: number): void;

/**
 * ```
 * Example from michael2 script.  
 * CAM::ANIMATED_SHAKE_CAM(l_5069, "shake_cam_all@", "light", "", 1f);  
 * ```
 * @param cam - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param amplitude - 
 * @returns void
 * @remarks Hash: 0xA2746EEAE3E577CD
 */
export function animatedShakeCam(cam: number, p1: string, p2: string, p3: string, amplitude: number): void;

/**
 * Renders the camera previously created with [CREATE_CAM](#_0xC3981DCE61D9E13F) or [CREATE_CAMERA](#_0x5E3CF89C6BCCA67D)
 * 
 * ```
 * NativeDB Added Parameter 6: Any p5
 * ```
 * @param render - 
 * @param ease - 
 * @param easeTime - 
 * @param easeCoordsAnim - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x07E5B515DB0636FC
 */
export function renderScriptCams(render: number, ease: number, easeTime: number, easeCoordsAnim: number, p4: number): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x40B62FA033EB0346
 */
export function overrideCamSplineVelocity(cam: number, p1: number, p2: number, p3: number): void;

/**
 * Create a camera with the specified cam name/type, You can use `SET_CAM_` natives to manipulate the camera.
 * 
 * Take a look at [CREATE_CAM](#_0xC3981DCE61D9E13F) if you would like to see the available camera names.
 * @param camName - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param fov - 
 * @param active - 
 * @param rotationOrder - 
 * @returns number
 * @remarks Hash: 0xB51194800B257161
 */
export function createCamWithParams(camName: string, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, fov: number, active: number, rotationOrder: number): number;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param p1 - 
 * @param flags - 
 * @returns void
 * @remarks Hash: 0x7BF1A54AE67AC070
 */
export function setCamSplineNodeExtraFlags(cam: number, p1: number, flags: number): void;

/**
 * @returns void
 * @remarks Hash: 0x0AA27680A0BD43FA
 */
export function 0x0aa27680a0bd43fa(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x3044240D2E0FA842
 */
export function 0x3044240d2e0fa842(): number;

/**
 * ```
 * Examples:  
 * CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_2734, NETWORK::_02C40BF885C567B6(l_2739), "PLAYER_EXIT_L_CAM", "mp_doorbell");  
 * CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_F0D[7/*1*/], l_F4D[15/*1*/], "ah3b_attackheli_cam2", "missheistfbi3b_helicrash");  
 * ```
 * 
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param camera - 
 * @param scene - 
 * @param animName - 
 * @param animDictionary - 
 * @returns number
 * @remarks Hash: 0xE32EFE9AB4A9AA0C
 */
export function playSynchronizedCamAnim(camera: number, scene: number, animName: string, animDictionary: string): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5A859503B0C08678
 */
export function isScreenFadedIn(): number;

/**
 * Specifies when the camera should stop being in focus. Can be used together with [`SET_USE_HI_DOF`](#_0xA13B0222F3D94A94), [`SET_CAM_NEAR_DOF`](#_0x3FA4BF0A7AB7DE2C), [`SET_CAM_USE_SHALLOW_DOF_MODE`](#_0x16A96863A17552BB), [`SET_CAM_DOF_STRENGTH`](#_0x5EE29B4D7D5DF897) and other DoF related natives.
 * @param cam - 
 * @param farDOF - 
 * @returns void
 * @remarks Hash: 0xEDD91296CD01AEE0
 */
export function setCamFarDof(cam: number, farDOF: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x68EDDA28A5976D07
 */
export function isAimCamActive(): number;

/**
 * ```
 * some camera effect that is (also) used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled. Possibly a cinematic or script-cam version of _0x487A82C650EB7799  
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x0225778816FDC28C
 */
export function 0x0225778816fdc28c(p0: number): void;

/**
 * ```
 * Seems to animate the gameplay camera zoom.  
 * Eg. _ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1000f);  
 * will animate the camera zooming in from 1000 meters away.  
 * Game scripts use it like this:  
 * // Setting this to 1 prevents V key from changing zoom  
 * PLAYER::SET_PLAYER_FORCED_ZOOM(PLAYER::PLAYER_ID(), 1);  
 * // These restrict how far you can move cam up/down left/right  
 * CAM::_CLAMP_GAMEPLAY_CAM_YAW(-20f, 50f);  
 * CAM::_CLAMP_GAMEPLAY_CAM_PITCH(-60f, 0f);  
 * CAM::_ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1f);  
 * ```
 * @param p0 - 
 * @param distance - 
 * @returns void
 * @remarks Hash: 0xDF2E1F7742402E81
 */
export function AnimateGameplayCamZoom(p0: number, distance: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x271017B9BA825366
 */
export function 0x271017b9ba825366(p0: any, p1: number): void;

/**
 * ```
 * CAM::ANIMATED_SHAKE_SCRIPT_GLOBAL("SHAKE_CAM_medium", "medium", "", 0.5f);
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xC2EAE3FB8CDBED31
 */
export function animatedShakeScriptGlobal(p0: string, p1: string, p2: string, p3: number): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param p1 - 
 * @param scale - 
 * @returns void
 * @remarks Hash: 0xA6385DEB180F319F
 */
export function setCamSplineNodeVelocityScale(cam: number, p1: number, scale: number): void;

/**
 * ```
 * Shows the crosshair even if it wouldn't show normally. Only works for one frame, so make sure to call it repeatedly.  
 * ```
 * @returns void
 * @remarks Hash: 0xEA7F0AD7E9BA676F
 */
export function EnableCrosshairThisFrame(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x0290F35C0AD97864
 */
export function isCamSplinePaused(p0: any): number;

/**
 * ```
 * Possible shake types (updated b617d):  
 * DEATH_FAIL_IN_EFFECT_SHAKE  
 * DRUNK_SHAKE  
 * FAMILY5_DRUG_TRIP_SHAKE  
 * HAND_SHAKE  
 * JOLT_SHAKE  
 * LARGE_EXPLOSION_SHAKE  
 * MEDIUM_EXPLOSION_SHAKE  
 * SMALL_EXPLOSION_SHAKE  
 * ROAD_VIBRATION_SHAKE  
 * SKY_DIVING_SHAKE  
 * VIBRATE_SHAKE  
 * ```
 * @param cam - 
 * @param type - 
 * @param amplitude - 
 * @returns void
 * @remarks Hash: 0x6A25241C340D3822
 */
export function shakeCam(cam: number, type: string, amplitude: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5234F9F10919EABA
 */
export function getRenderingCam(): number;

/**
 * ```
 * Atleast one time in a script for the zRot Rockstar uses GET_ENTITY_HEADING to help fill the parameter.  
 * p9 is unknown at this time.  
 * p10 throughout all the X360 Scripts is always 2.  
 * ```
 * 
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * @param cam - 
 * @param animName - 
 * @param animDictionary - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param p9 - 
 * @param p10 - 
 * @returns number
 * @remarks Hash: 0x9A2D0FB2E7852392
 */
export function playCamAnim(cam: number, animName: string, animDictionary: string, x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, p9: number, p10: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5E346D934122613F
 */
export function isFirstPersonAimCamActive(): number;

/**
 * ```
 * p6 & p7 - possibly length or time  
 * ```
 * @param entity - 
 * @param xOffset - 
 * @param yOffset - 
 * @param zOffset - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @returns void
 * @remarks Hash: 0x189E955A8313E298
 */
export function setGameplayEntityHint(entity: number, xOffset: number, yOffset: number, zOffset: number, p4: number, p5: number, p6: number, p7: number, p8: any): void;

/**
 * Interpolates the camera to specified parameters over a set duration using various curve types for position, rotation, and fov.
 * 
 * ```
 * NativeDB Introduced: v3258
 * ```
 * @param camera - 
 * @param camPosX - 
 * @param camPosY - 
 * @param camPosZ - 
 * @param camRotX - 
 * @param camRotY - 
 * @param camRotZ - 
 * @param fov - 
 * @param duration - 
 * @param posCurveType - 
 * @param rotCurveType - 
 * @param rotOrder - 
 * @param fovCurveType - 
 * @returns void
 * @remarks Hash: 0xDDA77EE33C005AAF
 */
export function InterpolateCamWithParams(camera: number, camPosX: number, camPosY: number, camPosZ: number, camRotX: number, camRotY: number, camRotZ: number, fov: number, duration: number, posCurveType: number, rotCurveType: number, rotOrder: number, fovCurveType: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x2238E588E588A6D7
 */
export function stopCinematicCamShaking(p0: number): void;

/**
 * Sets the ambient ped & vehicle population spawning origin to be based around the active scripted camera for this frame
 * This will prevent vehicles from being created close to the camera and/or on-screen
 * @param vehicles - 
 * @param peds - 
 * @returns void
 * @remarks Hash: 0x271401846BD26E92
 */
export function useScriptCamForAmbientPopulationOriginThisFrame(vehicles: number, peds: number): void;

/**
 * This native works with peds only.
 * @param cam - 
 * @param ped - 
 * @param boneIndex - 
 * @param xOffset - 
 * @param yOffset - 
 * @param zOffset - 
 * @param isRelative - 
 * @returns void
 * @remarks Hash: 0x61A3DBA14AB7F411
 */
export function attachCamToPedBone(cam: number, ped: number, boneIndex: number, xOffset: number, yOffset: number, zOffset: number, isRelative: number): void;

/**
 * ```
 * I filled p1-p6 (the floats) as they are as other natives with 6 floats in a row are similar and I see no other method. So if a test from anyone proves them wrong please correct.  
 * p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one  
 * p8 big values ~100 will slow down the camera movement before reaching this node  
 * p9 != 0 seems to override the rotation/pitch (bool?)  
 * ```
 * @param camera - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param length - 
 * @param p8 - 
 * @param transitionType - 
 * @returns void
 * @remarks Hash: 0x8609C75EC438FB3B
 */
export function addCamSplineNode(camera: number, x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, length: number, p8: number, transitionType: number): void;

/**
 * @returns void
 * @remarks Hash: 0xDB629FFD9285FA06
 */
export function stopCutsceneCamShaking(): void;

/**
 * @returns void
 * @remarks Hash: 0x62ECFCFDEE7885D6
 */
export function 0x62ecfcfdee7885d6(): void;

/**
 * ```
 * Fades the screen in.  
 * duration: The time the fade should take, in milliseconds.  
 * ```
 * @param duration - 
 * @returns void
 * @remarks Hash: 0xD4E8E24955024033
 */
export function doScreenFadeIn(duration: number): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0xBAC038F7459AE5AE
 */
export function getCamCoord(cam: number): { x: number, y: number, z: number };

/**
 * Instructs the game engine to stop rendering scripted cameras and transition back to the gameplay camera, optionally applying custom blending and rendering options.
 * 
 * ```c
 * enum eRenderingOptionFlags {
 *     RO_NO_OPTIONS = 0,
 *     RO_STOP_RENDERING_OPTION_WHEN_PLAYER_EXITS_INTO_COVER = 1
 * };
 * ```
 * 
 * ```c
 * enum eCamSplineSmoothingFlags {
 * 	// No smoothing just moves at a constant rate
 * 	CAM_SPLINE_NO_SMOOTH = 0,
 * 	// Decelerates when approaching a node
 * 	CAM_SPLINE_SLOW_IN_SMOOTH = 1, 
 * 	// Accelerates slowly when leaving a node
 * 	CAM_SPLINE_SLOW_OUT_SMOOTH = 2,    
 * 	// Decelerates when approaching a node and accelerates slowly when leaving a node
 * 	CAM_SPLINE_SLOW_IN_OUT_SMOOTH = 3,
 * 	CAM_SPLINE_VERY_SLOW_IN = 4,
 * 	CAM_SPLINE_VERY_SLOW_OUT = 5,
 * 	CAM_SPLINE_VERY_SLOW_IN_SLOW_OUT = 6,
 * 	CAM_SPLINE_SLOW_IN_VERY_SLOW_OUT = 7,
 * 	CAM_SPLINE_VERY_SLOW_IN_VERY_SLOW_OUT = 8,
 * 	CAM_SPLINE_EASE_IN = 9,
 * 	CAM_SPLINE_EASE_OUT = 10,
 * 	CAM_SPLINE_QUADRATIC_EASE_IN = 11,
 * 	CAM_SPLINE_QUADRATIC_EASE_OUT = 12,
 * 	CAM_SPLINE_QUADRATIC_EASE_IN_OUT = 13,
 * 	CAM_SPLINE_CUBIC_EASE_IN = 14,
 * 	CAM_SPLINE_CUBIC_EASE_OUT = 15,
 * 	CAM_SPLINE_CUBIC_EASE_IN_OUT = 16,
 * 	CAM_SPLINE_QUARTIC_EASE_IN = 17,
 * 	CAM_SPLINE_QUARTIC_EASE_OUT = 18,
 * 	CAM_SPLINE_QUARTIC_EASE_IN_OUT = 19,
 * 	CAM_SPLINE_QUINTIC_EASE_IN = 20,
 * 	CAM_SPLINE_QUINTIC_EASE_OUT = 21,
 * 	CAM_SPLINE_QUINTIC_EASE_IN_OUT = 22,
 * 	CAM_SPLINE_CIRCULAR_EASE_IN = 23,
 * 	CAM_SPLINE_CIRCULAR_EASE_OUT = 24,
 * 	CAM_SPLINE_CIRCULAR_EASE_IN_OUT = 25 
 * };
 * ```
 * 
 * ```
 * NativeDB Added Parameter 4: int renderingOptions : An integer bitmask of eRenderingOptionFlags to apply specific rendering behaviors during the transition. RO_NO_OPTIONS signifies no special options are applied.
 * ```
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param bShouldApplyAcrossAllThreads - 
 * @param distanceToBlend - 
 * @param blendType - 
 * @returns void
 * @remarks Hash: 0xC819F3CBB62BF692
 */
export function stopRenderingScriptCamsUsingCatchUp(bShouldApplyAcrossAllThreads: number, distanceToBlend: number, blendType: number): void;

/**
 * Looks up a camera handle in the current camera pool and returns `true` if the handle is found, otherwise it returns `false`.
 * @param cam - 
 * @returns number
 * @remarks Hash: 0xA7A932170592B50E
 */
export function doesCamExist(cam: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x741B0129D4560F31
 */
export function createCinematicShot(p0: any, p1: number, p2: any, entity: number): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0x7660C6E75D3A078E
 */
export function stopCinematicShot(): void;

/**
 * Resets the vehicle idle camera timer. Calling this in a loop will disable the idle camera.
 * @returns void
 * @remarks Hash: 0x9E4CFFF989258472
 */
export function InvalidateVehicleIdleCam(): void;

/**
 * ```
 * some camera effect that is used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled.  
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x487A82C650EB7799
 */
export function customMenuCoordinates(p0: number): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @returns number
 * @remarks Hash: 0x6B24BFE83A2BE47B
 */
export function isCamShaking(cam: number): number;

/**
 * ```
 * Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake. Used in script "drunk_controller.ysc.c4" to simulate making the player drunk.  
 * ```
 * @param amplitude - 
 * @returns void
 * @remarks Hash: 0xA87E00932DB4D85D
 */
export function setGameplayCamShakeAmplitude(amplitude: number): void;

/**
 * Sets the rotation of the camera.
 * @param cam - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param rotationOrder - 
 * @returns void
 * @remarks Hash: 0x85973643155D0B07
 */
export function setCamRot(cam: number, rotX: number, rotY: number, rotZ: number, rotationOrder: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x743607648ADD4587
 */
export function getGameplayCamRelativeHeading(): number;

/**
 * Attaches a camera to an entity, including full matrix transformations for both rotation and position offsets.
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param cam - 
 * @param entity - 
 * @param xRot - 
 * @param yRot - 
 * @param zRot - 
 * @param xOffset - 
 * @param yOffset - 
 * @param zOffset - 
 * @param isRelative - 
 * @returns void
 * @remarks Hash: 0x202A5ED9CE01D6E7
 */
export function hardAttachCamToEntity(cam: number, entity: number, xRot: number, yRot: number, zRot: number, xOffset: number, yOffset: number, zOffset: number, isRelative: number): void;

/**
 * ```
 * Max value for p1 is 15.  
 * ```
 * @param cam - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x7DCF7C708D292D55
 */
export function overrideCamSplineMotionBlur(cam: number, p1: number, p2: number, p3: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x91EF6EE6419E5B97
 */
export function 0x91ef6ee6419e5b97(p0: number): void;

/**
 * ```
 * NativeDB Introduced: v3258
 * ```
 * @param camTo - 
 * @param camFrom - 
 * @param duration - 
 * @param easeLocation - 
 * @param easeRotation - 
 * @param easeFove - 
 * @returns void
 * @remarks Hash: 0x34CFC4C2A38E83E3
 */
export function ActivateCamWithInterpAndFovCurve(camTo: number, camFrom: number, duration: number, easeLocation: number, easeRotation: number, easeFove: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5C544BC6C57AC575
 */
export function isScreenFadingIn(): number;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @returns void
 * @remarks Hash: 0xC8B5C4A79CC18B94
 */
export function 0xc8b5c4a79cc18b94(cam: number): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0x11FA5D3479C7DD47
 */
export function SetGameplayCamVehicleCameraName(): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns void
 * @remarks Hash: 0xC91C6C55199308CA
 */
export function setFlyCamCoordAndConstrain(cam: number, x: number, y: number, z: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns void
 * @remarks Hash: 0xFD3151CD37EA2245
 */
export function 0xfd3151cd37ea2245(entity: number): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @returns void
 * @remarks Hash: 0x380B4968D1E09E55
 */
export function 0x380b4968d1e09e55(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x9780F32BCAF72431
 */
export function getFinalRenderedCamFarDof(): number;

/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#_0x8D4D46230B2C353A) for the follow mode enum.
 * @param viewMode - 
 * @returns void
 * @remarks Hash: 0x5A4F9EDF1673F704
 */
export function setFollowPedCamViewMode(viewMode: number): void;

/**
 * ## Parameters
 * *
 * @param entity - 
 * @returns void
 * @remarks Hash: 0x49482F9FCD825AAA
 */
export function disableCamCollisionForObject(entity: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @returns void
 * @remarks Hash: 0x83E87508A2CA2AC6
 */
export function setGameplayObjectHint(p0: any, p1: number, p2: number, p3: number, p4: number, p5: any, p6: any, p7: any): void;

/**
 * Needs to be called every tick to make the active camera use a high depth of field.  
 * The DoF can be customized using [`SET_CAM_NEAR_DOF`](#_0x3FA4BF0A7AB7DE2C), [`SET_CAM_FAR_DOF`](#_0xEDD91296CD01AEE0), [`SET_CAM_USE_SHALLOW_DOF_MODE`](#_0x16A96863A17552BB), [`SET_CAM_DOF_STRENGTH`](#_0x5EE29B4D7D5DF897) and other DoF related natives.
 * @returns void
 * @remarks Hash: 0xA13B0222F3D94A94
 */
export function setUseHiDof(): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param fieldOfView - 
 * @param transitionSpeed - 
 * @param p9 - 
 * @param p10 - 
 * @param rotationOrder - 
 * @returns void
 * @remarks Hash: 0xBFD8727AEA3CCEBA
 */
export function setCamParams(cam: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, fieldOfView: number, transitionSpeed: number, p9: number, p10: number, rotationOrder: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @returns number
 * @remarks Hash: 0x89215EC747DF244A
 */
export function getFocusPedOnScreen(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number): number;

/**
 * ```
 * Last param determines if its relative to the Entity  
 * ```
 * @param cam - 
 * @param entity - 
 * @param xOffset - 
 * @param yOffset - 
 * @param zOffset - 
 * @param isRelative - 
 * @returns void
 * @remarks Hash: 0xFEDB7D269E8C60E3
 */
export function attachCamToEntity(cam: number, entity: number, xOffset: number, yOffset: number, zOffset: number, isRelative: number): void;

/**
 * ```
 * Examples when this function will return 0 are:
 * - During busted screen.
 * - When player is coming out from a hospital.
 * - When player is coming out from a police station.
 * - When player is buying gun from AmmuNation.
 * ```
 * @returns number
 * @remarks Hash: 0x39B5D1B10383F0C8
 */
export function isGameplayCamRendering(): number;

/**
 * Determines if a global camera shake is currently active. You can stop the currently active global camera shake using [STOP_SCRIPT_GLOBAL_SHAKING](#_0x1C9D7949FA533490).
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @returns number
 * @remarks Hash: 0xC912AF078AF19212
 */
export function isScriptGlobalShaking(): number;

/**
 * ```
 * Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.  
 * (returns 1.0f when no nodes has been added, reached end of non existing spline)  
 * ```
 * @param cam - 
 * @returns number
 * @remarks Hash: 0xB5349E36C546509A
 */
export function getCamSplinePhase(cam: number): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xBF72910D0F26F025
 */
export function 0xbf72910d0f26f025(): any;

/**
 * p1: 0..16
 * 
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @param vehicle - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x5D96CFB59DA076A0
 */
export function 0x5d96cfb59da076a0(vehicle: number, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param zoomFactor - 
 * @returns void
 * @remarks Hash: 0x70894BD0915C5BCA
 */
export function setFirstPersonAimCamZoomFactor(zoomFactor: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xD0082607100D7193
 */
export function getFinalRenderedCamNearClip(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xDB90C6CCA48940F1
 */
export function 0xdb90c6cca48940f1(p0: number): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x1F2300CB7FA7B7F6
 */
export function 0x1f2300cb7fa7b7f6(): any;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param strength - 
 * @returns void
 * @remarks Hash: 0x6F0F77FBA9A8F2E6
 */
export function setCamMotionBlurStrength(cam: number, strength: number): void;

/**
 * ```
 * Returns whether or not the passed camera handle is active.  
 * ```
 * @param cam - 
 * @returns number
 * @remarks Hash: 0xDFB2B516207D3534
 */
export function isCamActive(cam: number): number;

/**
 * ```
 * Toggles the vehicle cinematic cam; requires the player ped to be in a vehicle to work.
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xDCF0754AC3D6FD4E
 */
export function setCinematicModeActive(toggle: number): void;

/**
 * @returns void
 * @remarks Hash: 0x59424BD75174C9B1
 */
export function 0x59424bd75174c9b1(): void;

/**
 * Applies a predefined set of vehicle camera settings optimized for capturing stunts, effective for the current game update/frame.
 * 
 * ```
 * NativeDB Introduced: v791
 * ```
 * @returns void
 * @remarks Hash: 0x6493CF69859B116A
 */
export function useVehicleCamStuntSettingsThisUpdate(): void;

/**
 * Disables first person camera while in a vehicle for the current tick.
 * @returns void
 * @remarks Hash: 0xADFF1B2A555F5FBA
 */
export function disableCinematicBonnetCameraThisUpdate(): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xDFC8CBC606FDB0FC
 */
export function getFinalRenderedCamFarClip(): number;

/**
 * Gets a camera's rotation by handle (`cam`) lookup, outputs a `Vector3` in degrees.
 * @param cam - 
 * @param rotationOrder - 
 * @returns { x: number, y: number, z: number }
 * @remarks Hash: 0x7D304C1C955E3E12
 */
export function getCamRot(cam: number, rotationOrder: number): { x: number, y: number, z: number };

/**
 * ## Parameters
 * *
 * @param cam - 
 * @returns number
 * @remarks Hash: 0xB22B17DF858716A6
 */
export function getCamSplineNodeIndex(cam: number): number;

/**
 * Makes the minimap follow a scripted camera's rotation instead of the gameplay cam.
 * @param cam - 
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0x661B5C8654ADD825
 */
export function setCamControlsMiniMapHeading(cam: number, toggle: number): void;

/**
 * ```
 * Possible shake types (updated b617d):  
 * DEATH_FAIL_IN_EFFECT_SHAKE  
 * DRUNK_SHAKE  
 * FAMILY5_DRUG_TRIP_SHAKE  
 * HAND_SHAKE  
 * JOLT_SHAKE  
 * LARGE_EXPLOSION_SHAKE  
 * MEDIUM_EXPLOSION_SHAKE  
 * SMALL_EXPLOSION_SHAKE  
 * ROAD_VIBRATION_SHAKE  
 * SKY_DIVING_SHAKE  
 * VIBRATE_SHAKE  
 * ```
 * @param shakeName - 
 * @param intensity - 
 * @returns void
 * @remarks Hash: 0xFD55E49555E017CF
 */
export function shakeGameplayCam(shakeName: string, intensity: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x80EC114669DAEFF4
 */
export function getFinalRenderedCamFov(): number;

/**
 * ```
 * Hardcoded to only work in multiplayer.  
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x12DED8CA53D47EA5
 */
export function 0x12ded8ca53d47ea5(p0: number): void;

/**
 * Takes a camera and uses the information from it as a camera spline node.
 * @param cam - 
 * @param cam2 - 
 * @param length - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x0FB82563989CF4FB
 */
export function addCamSplineNodeUsingCamera(cam: number, cam2: number, length: number, p3: number): void;

/**
 * ```
 * IS_A*
 * ```
 * @returns number
 * @remarks Hash: 0x74BD83EA840F6BC9
 */
export function IsAimCamThirdPersonActive(): number;

/**
 * ```c
 * // view mode enumeration
 * enum eCamViewMode 
 * {
 * 	THIRD_PERSON_NEAR = 0,
 * 	THIRD_PERSON_MEDIUM = 1,
 * 	THIRD_PERSON_FAR = 2,
 * 	CINEMATIC = 3,
 * 	FIRST_PERSON = 4,
 * };
 * ```
 * @returns number
 * @remarks Hash: 0x8D4D46230B2C353A
 */
export function getFollowPedCamViewMode(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xB16FCE9DDC7BA182
 */
export function isScreenFadedOut(): number;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns void
 * @remarks Hash: 0xF8BDBF3D573049A1
 */
export function setGameplayHintFollowDistanceScalar(value: number): void;

/**
 * ```
 * I'm pretty sure the parameter is the camera as usual, but I am not certain so I'm going to leave it as is.  
 * ```
 * @param cam - 
 * @returns number
 * @remarks Hash: 0xD9D0E694C8282C96
 */
export function getCamSplineNodePhase(cam: number): number;

/**
 * Disables first person camera while on foot for the current tick.
 * @returns void
 * @remarks Hash: 0xDE2EF5DA284CC8DF
 */
export function disableOnFootFirstPersonViewThisUpdate(): void;

/**
 * ## Parameters
 * *
 * @param cam - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x242B5874F0A4E052
 */
export function setCamSplinePhase(cam: number, p1: number): void;

/**
 * @returns void
 * @remarks Hash: 0x1A31FE0049E542F6
 */
export function disableAimCamThisUpdate(): void;

/**
 * Create a camera with the specified camera hash, You can use `SET_CAM_` natives to manipulate the camera.
 * Make sure to call [RENDER_SCRIPT_CAMS](#_0x07E5B515DB0636FC) once the camera is created, or this won't have any visible effect.
 * 
 * Take a look at [CREATE_CAM](#_0xC3981DCE61D9E13F) if you would like to see the available camera names.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param camHash - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @param rotX - 
 * @param rotY - 
 * @param rotZ - 
 * @param fov - 
 * @param active - 
 * @param rotationOrder - 
 * @returns number
 * @remarks Hash: 0x6ABFA3E16460F22D
 */
export function createCameraWithParams(camHash: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, fov: number, active: number, rotationOrder: number): number;

/**
 * ```
 * Sets the position of the cam.  
 * ```
 * @param cam - 
 * @param posX - 
 * @param posY - 
 * @param posZ - 
 * @returns void
 * @remarks Hash: 0x4D41783FB745E42E
 */
export function setCamCoord(cam: number, posX: number, posY: number, posZ: number): void;

/**
 * Focuses the camera on the specified vehicle.
 * @param vehicle - 
 * @param offsetX - 
 * @param offsetY - 
 * @param offsetZ - 
 * @param p4 - 
 * @param time - 
 * @param easeInTime - 
 * @param easeOutTime - 
 * @returns void
 * @remarks Hash: 0xA2297E18F3E71C2E
 */
export function setGameplayVehicleHint(vehicle: number, offsetX: number, offsetY: number, offsetZ: number, p4: number, time: number, easeInTime: number, easeOutTime: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x016C090630DF1F89
 */
export function isGameplayCamShaking(): number;

/**
 * @returns void
 * @remarks Hash: 0x7B8A361C1813FBEF
 */
export function ignoreMenuPreferenceForBonnetCameraThisUpdate(): void;

/**
 * ```
 * This native has a name defined inside its code  
 * ```
 * @param camera - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xC669EEA5D031B7DE
 */
export function SetCamDofFocusDistanceBias(camera: number, p1: number): void;

/**
 * Specifies when the camera should start being in focus. Can be used together with [`SET_USE_HI_DOF`](#_0xA13B0222F3D94A94), [`SET_CAM_FAR_DOF`](#_0xEDD91296CD01AEE0), [`SET_CAM_USE_SHALLOW_DOF_MODE`](#_0x16A96863A17552BB), [`SET_CAM_DOF_STRENGTH`](#_0x5EE29B4D7D5DF897) and other DoF related natives.
 * @param cam - 
 * @param nearDOF - 
 * @returns void
 * @remarks Hash: 0x3FA4BF0A7AB7DE2C
 */
export function setCamNearDof(cam: number, nearDOF: number): void;

/**
 * @returns void
 * @remarks Hash: 0x17FCA7199A530203
 */
export function 0x17fca7199a530203(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x547237AA71AB44DE
 */
export function 0x547237aa71ab44de(p0: number): void;

/**
 * ```
 * Sets the water height for a given position and radius.  
 * ```
 * @param x - 
 * @param y - 
 * @param height - 
 * @param radius - 
 * @returns void
 * @remarks Hash: 0xC443FD757C3BA637
 */
export function modifyWater(x: number, y: number, height: number, radius: number): void;

/**
 * ```
 * Gets the aggressiveness factor of the ocean waves.  
 * ```
 * @returns number
 * @remarks Hash: 0x2B2A2CC86778B619
 */
export function getDeepOceanScaler(): number;

/**
 * ```
 * Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for very aggressive waves like you see during a thunderstorm.  
 * Works only ~200 meters around the player.  
 * ```
 * @param intensity - 
 * @returns void
 * @remarks Hash: 0xB96B00E976BE977F
 */
export function setDeepOceanScaler(intensity: number): void;

/**
 * Only 8 current rises can exist. If rises need to be changed, use REMOVE_EXTRA_CALMING_QUAD and then ADD_EXTRA_CALMING_QUAD again.
 * After removing a rise, you will be able to add a rise again.
 * @param xLow - 
 * @param yLow - 
 * @param xHigh - 
 * @param yHigh - 
 * @param height - 
 * @returns number
 * @remarks Hash: 0xFDBF4CDBC07E1706
 */
export function addExtraCalmingQuad(xLow: number, yLow: number, xHigh: number, yHigh: number, height: number): number;

/**
 * Retrieves the depth of the water beneath the specified position, disregarding wave effects.
 * @param x - 
 * @param y - 
 * @param z - 
 * @param height - 
 * @returns number
 * @remarks Hash: 0x8EE6B53CE13A9794
 */
export function getWaterHeightNoWaves(x: number, y: number, z: number, height: number): number;

/**
 * ## Parameters
 * *
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param result - 
 * @returns number
 * @remarks Hash: 0xFFA5D878809819DB
 */
export function testProbeAgainstWater(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, result: { x: number, y: number, z: number }): number;

/**
 * ## Parameters
 * *
 * @param x - 
 * @param y - 
 * @param z - 
 * @param flag - 
 * @param height - 
 * @returns number
 * @remarks Hash: 0x2B3451FA1E3142E2
 */
export function testVerticalProbeAgainstAllWater(x: number, y: number, z: number, flag: number, height: number): number;

/**
 * Retrieves the depth of the water beneath the specified position, accounting for the waves.
 * @param x - 
 * @param y - 
 * @param z - 
 * @param height - 
 * @returns number
 * @remarks Hash: 0xF6829842C06AE524
 */
export function getWaterHeight(x: number, y: number, z: number, height: number): number;

/**
 * ```
 * Sets the waves intensity back to original (1.0 in most cases). 
 * ```
 * @returns void
 * @remarks Hash: 0x5E5E99285AE812DB
 */
export function resetDeepOceanScaler(): void;

/**
 * ```
 * p0 is the handle returned from _0xFDBF4CDBC07E1706  
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xB1252E3E59A82AAF
 */
export function RemoveCurrentRise(p0: number): void;

/**
 * Flags are identical to START_SHAPE_TEST*, however, 128 is automatically set.
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @param flag - 
 * @param result - 
 * @returns number
 * @remarks Hash: 0x8974647ED222EA5F
 */
export function testProbeAgainstAllWater(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flag: number, result: { x: number, y: number, z: number }): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xC7E7181C09F33B69
 */
export function LoadingscreenSetIsLoadingFreemode(toggle: number): void;

/**
 * ## Return value
 * Hard-coded to always return 0.
 * @returns number
 * @remarks Hash: 0xF2CA003F167E21D2
 */
export function 0xf2ca003f167e21d2(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xEF7D17BC6C85264C
 */
export function LoadingscreenGetLoadFreemode(): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xB0C56BD3D808D863
 */
export function LoadingscreenSetLoadFreemode(toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x8AA464D4E0F6ACCD
 */
export function LoadingscreenGetLoadFreemodeWithEventName(): number;

/**
 * ```
 * Only occurrence was false, in maintransition.  
 * ```
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xFC309E94546FCDB5
 */
export function LoadingscreenSetLoadFreemodeWithEventName(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xFA1E0E893D915215
 */
export function 0xfa1e0e893d915215(toggle: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC6DC823253FBB366
 */
export function LoadingscreenIsLoadingFreemode(): number;

/**
 * ```
 * Calculates the magnitude of a vector.  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns number
 * @remarks Hash: 0x652D2EEEF1D3E62C
 */
export function vmag(x: number, y: number, z: number): number;

/**
 * ```
 * 0 = high
 * 1 = normal
 * 2 = low
 * ```
 * @param priority - 
 * @returns void
 * @remarks Hash: 0x42B65DEEF2EDF2A1
 */
export function SetThreadPriority(priority: number): void;

/**
 * Sets the value for the timer A in milliseconds
 * @param value - 
 * @returns void
 * @remarks Hash: 0xC1B1E9A034A63A62
 */
export function settimera(value: number): void;

/**
 * Left bit shifts a value.
 * It is advised you use the `<<` operator instead of this native. It does the same and is faster.
 * @param value - 
 * @param bitShift - 
 * @returns number
 * @remarks Hash: 0xEDD95A39E5544DE8
 */
export function shiftLeft(value: number, bitShift: number): number;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param value - 
 * @returns number
 * @remarks Hash: 0xE816E655DE37FE20
 */
export function Log10(value: number): number;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns number
 * @remarks Hash: 0xBBDA792448DB5A89
 */
export function toFloat(value: number): number;

/**
 * Calculates the distance between two points in 3D space. For performance reasons, consider using direct mathematical calculations for distance, as they can be more efficient than calling this native function.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @returns number
 * @remarks Hash: 0x2A488C176D52CCA5
 */
export function vdist(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;

/**
 * Calculates distance between vectors but does not perform Sqrt operations. Its way faster than [`VDIST`](#_0x2A488C176D52CCA5), but it's not faster than direct mathematical calculations.
 * 
 * ```
 * NativeDB Introduced: v323
 * ```
 * @param x1 - 
 * @param y1 - 
 * @param z1 - 
 * @param x2 - 
 * @param y2 - 
 * @param z2 - 
 * @returns number
 * @remarks Hash: 0xB7A628320EFF8E47
 */
export function vdist2(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;

/**
 * ```
 * Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).  
 * ```
 * @returns number
 * @remarks Hash: 0x83666F9FB8FEBD4B
 */
export function timera(): number;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns number
 * @remarks Hash: 0xF2DB717A73826179
 */
export function round(value: number): number;

/**
 * ```
 * Gets the current frame time.  
 * ```
 * @returns number
 * @remarks Hash: 0x0000000050597EE2
 */
export function timestep(): number;

/**
 * Returns the sine of the given number.
 * @param value - 
 * @returns number
 * @remarks Hash: 0x0BADBFA3B172435F
 */
export function sin(value: number): number;

/**
 * ## Parameters
 * *
 * @param scriptHash - 
 * @param args - 
 * @param argCount - 
 * @param stackSize - 
 * @returns number
 * @remarks Hash: 0xC4BB298BD441BE78
 */
export function startNewScriptWithNameHashAndArgs(scriptHash: number, args: any, argCount: number, stackSize: number): number;

/**
 * ```
 * Examples:
 *  g_384A = SYSTEM::START_NEW_SCRIPT("cellphone_flashhand", 1424);
 *  l_10D = SYSTEM::START_NEW_SCRIPT("taxiService", 1828);
 *  SYSTEM::START_NEW_SCRIPT("AM_MP_YACHT", 5000);
 *  SYSTEM::START_NEW_SCRIPT("emergencycall", 512);
 *  SYSTEM::START_NEW_SCRIPT("emergencycall", 512);
 *  SYSTEM::START_NEW_SCRIPT("FM_maintain_cloud_header_data", 1424);
 *  SYSTEM::START_NEW_SCRIPT("FM_Mission_Controller", 31000);
 *  SYSTEM::START_NEW_SCRIPT("tennis_family", 3650);
 *  SYSTEM::START_NEW_SCRIPT("Celebrations", 3650);
 * Decompiled examples of usage when starting a script:
 * 
 *     SCRIPT::REQUEST_SCRIPT(a_0);
 *     if (SCRIPT::HAS_SCRIPT_LOADED(a_0)) {
 *         SYSTEM::START_NEW_SCRIPT(a_0, v_3);
 *         SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(a_0);
 *         return 1;
 *     }
 * 
 * or:
 *     v_2 = "MrsPhilips2";
 *     SCRIPT::REQUEST_SCRIPT(v_2);
 *     while (!SCRIPT::HAS_SCRIPT_LOADED(v_2)) {
 *     SCRIPT::REQUEST_SCRIPT(v_2);
 *     SYSTEM::WAIT(0);
 *     }
 *     sub_8792(36);
 *     SYSTEM::START_NEW_SCRIPT(v_2, 17000);
 *     SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(v_2);
 * All native script names: pastebin.com/K9adDsu4 and pastebin.com/yLNWicUi
 * ```
 * @param scriptName - 
 * @param stackSize - 
 * @returns number
 * @remarks Hash: 0xE81651AD79516E48
 */
export function startNewScript(scriptName: string, stackSize: number): number;

/**
 * ```
 * Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)  
 * ```
 * @param x - 
 * @param y - 
 * @param z - 
 * @returns number
 * @remarks Hash: 0xA8CEACB4F35AE058
 */
export function vmag2(x: number, y: number, z: number): number;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns number
 * @remarks Hash: 0x71D93B57D07F9804
 */
export function sqrt(value: number): number;

/**
 * ## Parameters
 * *
 * @param base - 
 * @param exponent - 
 * @returns number
 * @remarks Hash: 0xE3621CC40F31FE2E
 */
export function pow(base: number, exponent: number): number;

/**
 * ## Parameters
 * *
 * @param value - 
 * @returns number
 * @remarks Hash: 0xF34EE736CF047844
 */
export function floor(value: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC9D9444186B5A374
 */
export function timerb(): number;

/**
 * ```
 * I'm guessing this rounds a float value up to the next whole number, and FLOOR rounds it down  
 * ```
 * @param value - 
 * @returns number
 * @remarks Hash: 0x11E019C8F43ACC8A
 */
export function ceil(value: number): number;

/**
 * ## Parameters
 * *
 * @param scriptHash - 
 * @param stackSize - 
 * @returns number
 * @remarks Hash: 0xEB1C67C3A5333A92
 */
export function startNewScriptWithNameHash(scriptHash: number, stackSize: number): number;

/**
 * ```
 * return : script thread id, 0 if failed  
 * Pass pointer to struct of args in p1, size of struct goes into p2  
 * ```
 * @param scriptName - 
 * @param args - 
 * @param argCount - 
 * @param stackSize - 
 * @returns number
 * @remarks Hash: 0xB8BA7F44DF1575E1
 */
export function startNewScriptWithArgs(scriptName: string, args: any, argCount: number, stackSize: number): number;

/**
 * ```
 * Pauses execution of the current script, please note this behavior is only seen when called from one of the game script files(ysc). In order to wait an asi script use "static void WAIT(DWORD time);" found in main.h
 * ```
 * @param ms - 
 * @returns void
 * @remarks Hash: 0x4EDE34FBADD967A6
 */
export function wait(ms: number): void;

/**
 * Sets the value for the timer B in milliseconds
 * @param value - 
 * @returns void
 * @remarks Hash: 0x5AE11BC36633DE4E
 */
export function settimerb(value: number): void;

/**
 * Returns the cosine of the given number.
 * @param value - 
 * @returns number
 * @remarks Hash: 0xD0FFB162F40A139C
 */
export function cos(value: number): number;

/**
 * Right bit shifts a value.
 * It is advised you use the `>>` operator instead of this native. It does the same and is faster.
 * @param value - 
 * @param bitShift - 
 * @returns number
 * @remarks Hash: 0x97EF1E5BCE9DC075
 */
export function shiftRight(value: number, bitShift: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x46326E13DA4E0546
 */
export function PlaystatsDirectorMode(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xDAF80797FC534BEC
 */
export function 0xdaf80797fc534bec(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xF9096193DF1F99D4
 */
export function 0xf9096193df1f99d4(p0: any): void;

/**
 * ```
 * The following values have been found in the decompiled scripts:  
 * "RC_ABI1"  
 * "RC_ABI2"  
 * "RC_BA1"  
 * "RC_BA2"  
 * "RC_BA3"  
 * "RC_BA3A"  
 * "RC_BA3C"  
 * "RC_BA4"  
 * "RC_DRE1"  
 * "RC_EPS1"  
 * "RC_EPS2"  
 * "RC_EPS3"  
 * "RC_EPS4"  
 * "RC_EPS5"  
 * "RC_EPS6"  
 * "RC_EPS7"  
 * "RC_EPS8"  
 * "RC_EXT1"  
 * "RC_EXT2"  
 * "RC_EXT3"  
 * "RC_EXT4"  
 * "RC_FAN1"  
 * "RC_FAN2"  
 * "RC_FAN3"  
 * "RC_HAO1"  
 * "RC_HUN1"  
 * "RC_HUN2"  
 * "RC_JOS1"  
 * "RC_JOS2"  
 * "RC_JOS3"  
 * "RC_JOS4"  
 * "RC_MAU1"  
 * "RC_MIN1"  
 * "RC_MIN2"  
 * "RC_MIN3"  
 * "RC_MRS1"  
 * "RC_MRS2"  
 * "RC_NI1"  
 * "RC_NI1A"  
 * "RC_NI1B"  
 * "RC_NI1C"  
 * "RC_NI1D"  
 * "RC_NI2"  
 * "RC_NI3"  
 * "RC_OME1"  
 * "RC_OME2"  
 * "RC_PA1"  
 * "RC_PA2"  
 * "RC_PA3"  
 * "RC_PA3A"  
 * "RC_PA3B"  
 * "RC_PA4"  
 * "RC_RAM1"  
 * "RC_RAM2"  
 * "RC_RAM3"  
 * "RC_RAM4"  
 * "RC_RAM5"  
 * "RC_SAS1"  
 * "RC_TON1"  
 * "RC_TON2"  
 * "RC_TON3"  
 * "RC_TON4"  
 * "RC_TON5"  
 * ```
 * @param statName - 
 * @param value - 
 * @param save - 
 * @returns number
 * @remarks Hash: 0x17695002FD8B2AE0
 */
export function statSetGxtLabel(statName: number, value: string, save: number): number;

/**
 * ```
 * This function is hard-coded to always return 1.
 * NETWORK_IS_*
 * ```
 * @returns number
 * @remarks Hash: 0xB3DA2606774A8E2D
 */
export function 0xb3da2606774a8e2d(): number;

/**
 * @returns void
 * @remarks Hash: 0x6F361B8889A792A3
 */
export function 0x6f361b8889a792a3(): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x0C432C1435F5E4FA
 */
export function PlaystatsCasinoLuckyseven(p0: any): void;

/**
 * ## Parameters
 * *
 * @param statName - 
 * @param x - 
 * @param y - 
 * @param z - 
 * @param save - 
 * @returns number
 * @remarks Hash: 0xDB283FDE680FE72E
 */
export function statSetPos(statName: number, x: number, y: number, z: number, save: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x015B03EE1C43E6EC
 */
export function 0x015b03ee1c43e6ec(p0: any): void;

/**
 * ```
 * Sets profile setting 866
 * SET_*
 * ```
 * @param value - 
 * @returns void
 * @remarks Hash: 0xDAC073C7901F9E15
 */
export function SetHasContentUnlocksFlags(value: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x0A9C7F36E5D7B683
 */
export function 0x0a9c7f36e5d7b683(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x2B69F5074C894811
 */
export function playstatsImportExportMissionDone(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x53C31853EC9531FF
 */
export function 0x53c31853ec9531ff(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x049F059625058A86
 */
export function PlaystatsCasinoInsidetrack(p0: any): void;

/**
 * Disallows CEventNetworkStuntPerformed to be triggered (Resets [`PLAYSTATS_START_TRACKING_STUNTS`](#_0x928DBFB892638EF3)).
 * @returns void
 * @remarks Hash: 0x8A800DACCC0DA55D
 */
export function playstatsStopTrackingStunts(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x5BD5F255321C4AAF
 */
export function 0x5bd5f255321c4aaf(p0: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x5CE587FB5A42C8C4
 */
export function leaderboards2ReadByRadius(p0: any, p1: any, p2: any): number;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xD4367D310F079DB0
 */
export function 0xd4367d310f079db0(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * Does not take effect immediately, unfortunately.
 * profileSetting seems to only be 936, 937 and 938 in scripts
 * ```
 * @param profileSetting - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x68F01422BE1D838F
 */
export function statSetProfileSettingValue(profileSetting: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @returns void
 * @remarks Hash: 0x27AA1C973CACFE63
 */
export function 0x27aa1c973cacfe63(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;

/**
 * Sets a byte that is then used in session_host and session_join metrics when hosting or joining a session
 * @param joinType - 
 * @returns void
 * @remarks Hash: 0xD1032E482629049E
 */
export function playstatsSetJoinType(joinType: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x9A62EC95AE10E011
 */
export function 0x9a62ec95ae10e011(): number;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xBBA55BE9AAAABF44
 */
export function PlaystatsRobberyFinale(p0: any): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x4FEF53183C3C6414
 */
export function StatSaveMigrationCancel(): number;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xB26F670685631727
 */
export function 0xb26f670685631727(p0: any): void;

/**
 * ## Parameters
 * *
 * @param index - 
 * @param spStat - 
 * @param charStat - 
 * @param character - 
 * @returns number
 * @remarks Hash: 0xC4BB08EE7907471E
 */
export function getPackedTuBoolStatKey(index: number, spStat: number, charStat: number, character: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x0D0A9F0E7BD91E3C
 */
export function statSlotIsLoaded(p0: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xA3C53804BDB68ED2
 */
export function 0xa3c53804bdb68ed2(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x84DFC579C2FC214C
 */
export function 0x84dfc579c2fc214c(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x0F71DE29AB2258F1
 */
export function playstatsFriendActivity(p0: any, p1: any): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param modelHash - 
 * @returns void
 * @remarks Hash: 0x9572BD4DD6B72122
 */
export function PlaystatsPegasaircraft(modelHash: number): void;

/**
 * ```
 * PLAYSTATS_START_INVITE_DESPAWNING?
 * ```
 * @returns void
 * @remarks Hash: 0x098760C7461724CD
 */
export function PlaystatsStartOfflineMode(): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param data - 
 * @returns void
 * @remarks Hash: 0x35E39E5570358630
 */
export function PlaystatsStoneHatchetEnd(data: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x117B45156D7EFF2E
 */
export function leaderboardsGetNumberOfColumns(p0: any, p1: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x6483C25849031C4F
 */
export function 0x6483c25849031c4f(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x7E6946F68A38B74F
 */
export function 0x7e6946f68a38b74f(p0: any): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xAFF47709F1D5DCCE
 */
export function 0xaff47709f1d5dcce(): any;

/**
 * ```
 * STATS::0x343B27E2(0);  
 * STATS::0x343B27E2(1);  
 * STATS::0x343B27E2(2);  
 * STATS::0x343B27E2(3);  
 * STATS::0x343B27E2(4);  
 * STATS::0x343B27E2(5);  
 * STATS::0x343B27E2(6);  
 * STATS::0x343B27E2(7);  
 * Identical in ingamehud & maintransition.  
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x26D7399B9587FE89
 */
export function 0x26d7399b9587fe89(p0: number): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x6572ABA3DE1197FC
 */
export function PlaystatsCasinoRouletteLight(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xA0F93D5465B3094D
 */
export function 0xa0f93d5465b3094d(p0: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xBF371CD2B64212FD
 */
export function 0xbf371cd2b64212fd(p0: any): void;

/**
 * ## Parameters
 * *
 * @param data - 
 * @returns number
 * @remarks Hash: 0x886913BBEACA68C1
 */
export function statGetSaveMigrationStatus(data: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0x8989CBD7B4E82534
 */
export function 0x8989cbd7b4e82534(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x38491439B6BA7F7D
 */
export function 0x38491439b6ba7f7d(p0: any, p1: any): number;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x2FA3173480008493
 */
export function 0x2fa3173480008493(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x3EAE97309727E7AD
 */
export function PlaystatsCasinoBlackjack(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0x0B565B0AAE56A0E8
 */
export function 0x0b565b0aae56a0e8(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xAA525DFF66BB82F5
 */
export function 0xaa525dff66bb82f5(p0: any, p1: any, p2: any): void;

/**
 * ## Parameters
 * *
 * @param scaleformHash - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xDDF24D535060F811
 */
export function playstatsWebsiteVisited(scaleformHash: number, p1: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x2FB19228983E832C
 */
export function leaderboardsReadSuccessful(p0: any, p1: any, p2: any): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xF9F2922717B819EC
 */
export function 0xf9f2922717b819ec(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xFCC228E07217FCAC
 */
export function 0xfcc228e07217fcac(p0: any): void;

/**
 * ```
 * NativeDB Removed Parameter 5: Any p4
 * NativeDB Removed Parameter 6: Any p5
 * NativeDB Removed Parameter 7: Any p6
 * NativeDB Removed Parameter 8: Any p7
 * NativeDB Removed Parameter 9: Any p8
 * NativeDB Removed Parameter 10: Any p9
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @returns void
 * @remarks Hash: 0xADDD1C754E2E2914
 */
export function playstatsRaceToPointMissionDone(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xBA2C7DB0C129449A
 */
export function leaderboards2ReadByRank(p0: any, p1: any, p2: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x3EBEAC6C3F81F6BD
 */
export function 0x3ebeac6c3f81f6bd(p0: any): void;

/**
 * ```
 * Needs more research. Gets the stat name of a masked bool?
 * section - values used in the decompiled scripts:
 * "_NGPSTAT_BOOL"
 * "_NGTATPSTAT_BOOL"
 * "_NGDLCPSTAT_BOOL"
 * "_DLCBIKEPSTAT_BOOL"
 * "_DLCGUNPSTAT_BOOL"
 * "_GUNTATPSTAT_BOOL"
 * "_DLCSMUGCHARPSTAT_BOOL"
 * "_GANGOPSPSTAT_BOOL"
 * "_BUSINESSBATPSTAT_BOOL"
 * "_ARENAWARSPSTAT_BOOL"
 * "_CASINOPSTAT_BOOL"
 * "_CASINOHSTPSTAT_BOOL"
 * "_HEIST3TATTOOSTAT_BOOL"
 * ```
 * @param index - 
 * @param spStat - 
 * @param charStat - 
 * @param character - 
 * @param section - 
 * @returns number
 * @remarks Hash: 0xBA52FF538ED2BC71
 */
export function GetNgstatBoolHash(index: number, spStat: number, charStat: number, character: number, section: string): number;

/**
 * ## Parameters
 * *
 * @param index - 
 * @param spStat - 
 * @param charStat - 
 * @param character - 
 * @returns number
 * @remarks Hash: 0x80C75307B1C42837
 */
export function getPackedBoolStatKey(index: number, spStat: number, charStat: number, character: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x73001E34F85137F8
 */
export function 0x73001e34f85137f8(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x2818FF6638CB09DE
 */
export function 0x2818ff6638cb09de(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x88087EE1F28024AE
 */
export function 0x88087ee1f28024ae(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0x03C2EEBB04B3FB72
 */
export function 0x03c2eebb04b3fb72(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xBA739D6D5A05D6E7
 */
export function playstatsPropChange(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xA736CF7FB7C5BFF4
 */
export function 0xa736cf7fb7c5bff4(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x164C5FF663790845
 */
export function 0x164c5ff663790845(p0: any): void;

/**
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xE07BCA305B82D2FD
 */
export function statSave(p0: number, p1: number, p2: number): number;

/**
 * ## Parameters
 * *
 * @param action - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x5009DFD741329729
 */
export function playstatsBackgroundScriptAction(action: string, value: number): void;

/**
 * ```
 * _PLAYSTATS_ROB_ARMOURD_TRUCK  
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x7EEC2A316C250073
 */
export function 0x7eec2a316c250073(p0: any, p1: any, p2: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xB9BB18E2C40142ED
 */
export function leaderboardsCacheDataRow(p0: any): number;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xE95C8A1875A02CA4
 */
export function playstatsWeaponModeChange(): void;

/**
 * ## Parameters
 * *
 * @param statName - 
 * @returns string
 * @remarks Hash: 0x5473D4195058B2E4
 */
export function statGetLicensePlate(statName: number): string;

/**
 * ```
 * p1 is always -1 in the script files  
 * ```
 * @param statHash - 
 * @param p1 - 
 * @returns string
 * @remarks Hash: 0xE50384ACC2C3DB74
 */
export function statGetString(statHash: number, p1: number): string;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x2D7A9B577E72385E
 */
export function 0x2d7a9b577e72385e(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x93054C88E6AA7C44
 */
export function playstatsNpcInvite(p0: any): void;

/**
 * ```
 * Sets profile setting 940 and 941
 * 
 * _SET_F* - _SET_G*
 * ```
 * 
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param profileSetting - 
 * @param settingValue - 
 * @returns void
 * @remarks Hash: 0x79D310A861697CC9
 */
export function 0x79d310a861697cc9(profileSetting: number, settingValue: number): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xA31FD15197B192BD
 */
export function leaderboardsReadAnyPending(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x176852ACAAC173D1
 */
export function playstatsShopItem(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0x350F82CCB186AA1B
 */
export function statGetPos(p0: any, p1: any, p2: any, p3: any, p4: any): number;

/**
 * ## Parameters
 * *
 * @param statName - 
 * @param str - 
 * @returns number
 * @remarks Hash: 0x69FF13266D7296DA
 */
export function statSetLicensePlate(statName: number, str: string): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xA34CB6E6F0DF4A0B
 */
export function leaderboardsReadClearAll(): any;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x3270F67EED31FBC1
 */
export function StatSaveMigrationConsumeContentUnlock(): number;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xF740FB339D471C35
 */
export function PlaystatsCasinoThreecardpoker(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x516FC96EB88EEFE5
 */
export function PlaystatsBanAlert(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x6BCCF9948492FD85
 */
export function 0x6bccf9948492fd85(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x23A3CBCD50D54E47
 */
export function PlaystatsCasinoInsidetrackLight(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xA6F54BB2FFCA35EA
 */
export function 0xa6f54bb2ffca35ea(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xC900596A63978C1D
 */
export function playstatsMissionCheckpoint(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xF534D94DFA2EAD26
 */
export function 0xf534d94dfa2ead26(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x3DE3AA516FB126A4
 */
export function 0x3de3aa516fb126a4(p0: any): void;

/**
 * ```
 * p2 - Default value? Seems to be -1 most of the time.  
 * ```
 * @param statName - 
 * @param mask - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x10FE3F1B79F9B071
 */
export function statGetBoolMasked(statName: number, mask: number, p2: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x06EAF70AE066441E
 */
export function 0x06eaf70ae066441e(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x0A50D2604E05CB94
 */
export function PlaystatsChangeMcEmblem(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xEF5EC67D392B830A
 */
export function PlaystatsCasinoSlotmachine(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xCC25A4553DFBF9EA
 */
export function 0xcc25a4553dfbf9ea(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * NativeDB Added Parameter 7: Any p6
 * NativeDB Added Parameter 8: Any p7
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x1CAE5D2E3F9A07F0
 */
export function playstatsCrateDropMissionDone(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;

/**
 * @returns void
 * @remarks Hash: 0x629526ABA383BCAA
 */
export function 0x629526aba383bcaa(): void;

/**
 * ## Parameters
 * *
 * @param data - 
 * @returns void
 * @remarks Hash: 0x0EACDF8487D5155A
 */
export function PlaystatsGunrunMissionEnded(data: any): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xE8853FBCE7D8D0D6
 */
export function 0xe8853fbce7d8d0d6(): any;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x5A556B229A169402
 */
export function 0x5a556b229a169402(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x2E65248609523599
 */
export function leaderboardsWriteAddColumnLong(p0: any, p1: any, p2: any): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x6E0A5253375C4584
 */
export function 0x6e0a5253375c4584(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xC980E62E33DF1D5C
 */
export function leaderboards2WriteDataForEventType(p0: any, p1: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns any
 * @remarks Hash: 0x7CCE5C737A665701
 */
export function leaderboardsReadClear(p0: any, p1: any, p2: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x14EDA9EE27BD1626
 */
export function 0x14eda9ee27bd1626(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x1A67DFBF1F5C3835
 */
export function PlaystatsRobberyPrep(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x1187CB58D7F3BED7
 */
export function PlaystatsCarclubChallenge(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param statHash - 
 * @param outValue - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x11B5E6D2AE73F48E
 */
export function statGetBool(statHash: number, outValue: number, p2: any): number;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @param p7 - 
 * @param p8 - 
 * @param p9 - 
 * @returns void
 * @remarks Hash: 0xCD0A8A9338681CF2
 */
export function PlaystatsCollectible(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x723C1CE13FBFDB67
 */
export function 0x723c1ce13fbfdb67(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xE662C8B759D08F3C
 */
export function leaderboards2ReadByScoreFloat(p0: any, p1: number, p2: any): number;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param data - 
 * @returns void
 * @remarks Hash: 0xD8AFB345A9C5CCBB
 */
export function PlaystatsH2FmprepEnd(data: any): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xBA9749CC94C1FD85
 */
export function 0xba9749cc94c1fd85(): any;

/**
 * ## Parameters
 * *
 * @param statName - 
 * @param value - 
 * @param save - 
 * @returns number
 * @remarks Hash: 0xA87B2335D12531D7
 */
export function statSetString(statName: number, value: string, save: number): number;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xFCCCAC2BD3C1F180
 */
export function PlaystatsCasinoStoryMissionEnded(p0: any, p1: any): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param data - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x1E1497D0D2108115
 */
export function PlaystatsH2InstanceEnd(data: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param rank - 
 * @returns void
 * @remarks Hash: 0xC7F2DE41D102BFB4
 */
export function playstatsRankUp(rank: number): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xFA5B74BAB8A7EF99
 */
export function PlaystatsExtraEvent(p0: any): void;

/**
 * ```
 * Sets profile setting 933  
 * ```
 * @param value - 
 * @returns void
 * @remarks Hash: 0xF1A1803D3476F215
 */
export function 0xf1a1803d3476f215(value: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xA8733668D1047B51
 */
export function 0xa8733668d1047b51(p0: any): void;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0x6DEE77AFF8C21BD1
 */
export function 0x6dee77aff8c21bd1(): number;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xDFBD93BF2943E29B
 */
export function 0xdfbd93bf2943e29b(p0: any): void;

/**
 * ```
 * platformName must be one of the following: ps3, xbox360, ps4, xboxone
 * ```
 * @param platformName - 
 * @returns number
 * @remarks Hash: 0xA5C80D8E768A9E66
 */
export function StatMigrateSave(platformName: string): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x53CAE13E9B426993
 */
export function 0x53cae13e9b426993(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x2E0259BABC27A327
 */
export function 0x2e0259babc27a327(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x6731DE84A38BFAD0
 */
export function PlaystatsSpectatorWheelSpin(p0: number, p1: number, p2: number, p3: number): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param data - 
 * @returns void
 * @remarks Hash: 0x1A0D4A6C336B7BC5
 */
export function PlaystatsCasinoMissionEnded(data: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0xDEAAF77EB3687E97
 */
export function 0xdeaaf77eb3687e97(p0: any, p1: any): any;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x830C3A44EB3F2CF9
 */
export function 0x830c3a44eb3f2cf9(p0: any): void;

/**
 * ## Parameters
 * *
 * @param statName - 
 * @returns number
 * @remarks Hash: 0x2CE056FF3723F00B
 */
export function statGetNumberOfSeconds(statName: number): number;

/**
 * ## Parameters
 * *
 * @param toggle - 
 * @returns void
 * @remarks Hash: 0xF434A10BA01C37D0
 */
export function statSetBlockSaves(toggle: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x1A7CE7CD3E653485
 */
export function 0x1a7ce7cd3e653485(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xAE2206545888AE49
 */
export function leaderboards2WriteData(p0: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x501478855A6074CE
 */
export function PlaystatsEarnedMcPoints(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns number
 * @remarks Hash: 0x918B101666F9CB83
 */
export function leaderboards2ReadFriendsByRow(p0: any, p1: any, p2: any, p3: number, p4: any, p5: any): number;

/**
 * ## Parameters
 * *
 * @param statName - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param save - 
 * @returns number
 * @remarks Hash: 0x7BBB1B54583ED410
 */
export function statSetMaskedInt(statName: number, p1: any, p2: any, p3: number, save: number): number;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xD5451C7BF151EB6F
 */
export function PlaystatsCasinoBlackjackLight(p0: any): void;

/**
 * @returns void
 * @remarks Hash: 0xB475F27C6A994D65
 */
export function setProfileSettingPrologueComplete(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x6A60E43998228229
 */
export function 0x6a60e43998228229(p0: any): void;

/**
 * ```
 * longest time being ilde?  
 * ```
 * @param time - 
 * @returns void
 * @remarks Hash: 0x5DA3A8DE8CB6226F
 */
export function playstatsIdleKick(time: number): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x9EC8858184CD253A
 */
export function 0x9ec8858184cd253a(): any;

/**
 * ## Parameters
 * *
 * @param data - 
 * @returns void
 * @remarks Hash: 0x848B66100EE33B05
 */
export function PlaystatsDupeDetection(data: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x8C9D11605E59D955
 */
export function 0x8c9d11605e59d955(p0: any): void;

/**
 * ```
 * Sets profile setting 935  
 * ```
 * @param value - 
 * @returns void
 * @remarks Hash: 0x55384438FC55AD8E
 */
export function 0x55384438fc55ad8e(value: number): void;

/**
 * @returns void
 * @remarks Hash: 0x9B4BD21D69B1E609
 */
export function 0x9b4bd21d69b1e609(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x7C4BB33A8CED7324
 */
export function playstatsMissionOver(p0: any, p1: any, p2: any, p3: number, p4: number, p5: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x678F86D8FC040BDB
 */
export function 0x678f86d8fc040bdb(p0: any): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * 
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @returns void
 * @remarks Hash: 0xC01D2470F22CDE5A
 */
export function 0xc01d2470f22cde5a(): void;

/**
 * ## Parameters
 * *
 * @param data - 
 * @returns void
 * @remarks Hash: 0xD6781E42755531F7
 */
export function PlaystatsBuyContraband(data: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x28ECB8AC2F607DB2
 */
export function 0x28ecb8ac2f607db2(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0xB7257BA2550EA10A
 */
export function PlaystatsCopyRankIntoNewSlot(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x1A8EA222F9C67DBB
 */
export function 0x1a8ea222f9c67dbb(p0: number): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x8EC74CEB042E7CFF
 */
export function 0x8ec74ceb042e7cff(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xD6CA58B3B53A0F22
 */
export function 0xd6ca58b3b53a0f22(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x533A7D1EA58DF958
 */
export function PlaystatsArcadegame(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;

/**
 * @returns void
 * @remarks Hash: 0x98E2BC1CA26287C3
 */
export function 0x98e2bc1ca26287c3(): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x35EEC6C2BC821A71
 */
export function PlaystatsPassiveMode(p0: number, p1: number, p2: number, p3: number): void;

/**
 * @returns void
 * @remarks Hash: 0xC141B8917E0017EC
 */
export function 0xc141b8917e0017ec(): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x810B5FCC52EC7FF0
 */
export function 0x810b5fcc52ec7ff0(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * Example:
 *  STATS::STAT_SET_BOOL(MISC::GET_HASH_KEY("MPPLY_MELEECHLENGECOMPLETED"), trur, true);
 * ```
 * @param statName - 
 * @param value - 
 * @param save - 
 * @returns number
 * @remarks Hash: 0x4B33C4243DE0C432
 */
export function statSetBool(statName: number, value: number, save: number): number;

/**
 * ```
 * STATS::0xE3247582(0);  
 * STATS::0xE3247582(1);  
 * STATS::0xE3247582(2);  
 * STATS::0xE3247582(3);  
 * STATS::0xE3247582(4);  
 * STATS::0xE3247582(5);  
 * STATS::0xE3247582(6);  
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xA78B8FA58200DA56
 */
export function 0xa78b8fa58200da56(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x88578F6EC36B4A3A
 */
export function 0x88578f6ec36b4a3a(p0: any, p1: any): any;

/**
 * ## Parameters
 * *
 * @param data - 
 * @returns void
 * @remarks Hash: 0x2605663BD4F23B5D
 */
export function PlaystatsDefendContraband(data: any): void;

/**
 * ## Parameters
 * *
 * @param data - 
 * @returns void
 * @remarks Hash: 0x04D90BA8207ADA2D
 */
export function PlaystatsRecoverContraband(data: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xC5BE134EC7BA96A0
 */
export function playstatsLeaveJobChain(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x32CAC93C9DE73D32
 */
export function 0x32cac93c9de73d32(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x2CD90358F67D0AA8
 */
export function 0x2cd90358f67d0aa8(p0: any): void;

/**
 * @returns void
 * @remarks Hash: 0x71B008056E5692D6
 */
export function 0x71b008056e5692d6(): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param data - 
 * @returns void
 * @remarks Hash: 0x0BC254FF3A911501
 */
export function PlaystatsDarMissionEnd(data: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xF06A6F41CB445443
 */
export function 0xf06a6f41cb445443(p0: any): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xC0E0D686DDFC6EAE
 */
export function 0xc0e0d686ddfc6eae(): any;

/**
 * ## Parameters
 * *
 * @param statName - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x428EAF89E24F6C36
 */
export function LeaderboardsDeaths(statName: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x14E0B2D1AD1044E0
 */
export function 0x14e0b2d1ad1044e0(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC14BD9F5337219B2
 */
export function 0xc14bd9f5337219b2(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x4DC416F246A41FC8
 */
export function 0x4dc416f246a41fc8(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * NativeDB Removed Parameter 4: Any p3
 * NativeDB Removed Parameter 5: Any p4
 * NativeDB Removed Parameter 6: Any p5
 * NativeDB Removed Parameter 7: Any p6
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns void
 * @remarks Hash: 0xBC80E22DED931E3D
 */
export function playstatsMatchStarted(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x316DB59CD14C1774
 */
export function 0x316db59cd14c1774(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x4FCDBD3F0A813C25
 */
export function 0x4fcdbd3f0a813c25(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param statName - 
 * @returns number
 * @remarks Hash: 0xE0E854F5280FB769
 */
export function statGetNumberOfDays(statName: number): number;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0x30A6614C1F7799B8
 */
export function presenceEventUpdatestatFloat(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x7033EEFD9B28088E
 */
export function 0x7033eefd9b28088e(p0: any): void;

/**
 * @returns void
 * @remarks Hash: 0x047CBED6F6F8B63C
 */
export function statSetCheatIsActive(): void;

/**
 * ## Parameters
 * *
 * @param data - 
 * @returns void
 * @remarks Hash: 0xC729991A9065376E
 */
export function PlaystatsSellContraband(data: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xA1750FFAFA181661
 */
export function statLoadPending(p0: any): number;

/**
 * ## Parameters
 * *
 * @returns number
 * @remarks Hash: 0xCE5AA445ABA8DEE0
 */
export function StatGetSaveMigrationConsumeContentUnlockStatus(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xF8C54A461C3E11DC
 */
export function 0xf8c54a461c3e11dc(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns number
 * @remarks Hash: 0x655185A06D9EEAAB
 */
export function statGetMaskedInt(p0: any, p1: any, p2: any, p3: any, p4: any): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xB1D2BB1E1631F5B1
 */
export function 0xb1d2bb1e1631f5b1(): number;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param data - 
 * @returns void
 * @remarks Hash: 0xB479D9F0D48A1BC5
 */
export function PlaystatsArenaWarsEnded(data: any): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x0077F15613D36993
 */
export function 0x0077f15613d36993(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x792271AB35C356A4
 */
export function HiredLimo(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0x34770B9CE0E03B91
 */
export function 0x34770b9ce0e03b91(p0: any, p1: any): number;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x5BF29846C6527C54
 */
export function 0x5bf29846c6527c54(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC1E963C58664B556
 */
export function 0xc1e963c58664b556(p0: any): void;

/**
 * ```
 * Example:
 * for (v_2 = 0; v_2 <= 4; v_2 += 1) {
 *     STATS::STAT_CLEAR_SLOT_FOR_RELOAD(v_2);
 * }
 * ```
 * @param statSlot - 
 * @returns any
 * @remarks Hash: 0xEB0A72181D4AA4AD
 */
export function statClearSlotForReload(statSlot: number): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x7EEC7E4F6984A16A
 */
export function leaderboards2ReadByScoreInt(p0: any, p1: any, p2: any): number;

/**
 * ```
 * Sets profile setting 934  
 * ```
 * @param value - 
 * @returns void
 * @remarks Hash: 0x38BAAA5DD4C9D19F
 */
export function 0x38baaa5dd4c9d19f(value: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x6551B1F7F6CD46EA
 */
export function 0x6551b1f7f6cd46ea(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @param p6 - 
 * @returns number
 * @remarks Hash: 0xA9CDB1E3F0A49883
 */
export function leaderboards2ReadByRow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): number;

/**
 * ## Parameters
 * *
 * @param statName - 
 * @returns number
 * @remarks Hash: 0x7583B4BE4C5A41B5
 */
export function statGetNumberOfMinutes(statName: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0xD558BEC0BBA7E8D2
 */
export function 0xd558bec0bba7e8d2(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ## Parameters
 * *
 * @param id - 
 * @returns void
 * @remarks Hash: 0x47B32F5611E6E483
 */
export function PlaystatsAwardBadsport(id: number): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xE60054A0FAE8227F
 */
export function PlaystatsCasinoSlotmachineLight(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x69C922B677621428
 */
export function PlaystatsCarclubPrize(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x7B18DA61F6BAE9D5
 */
export function 0x7b18da61f6bae9d5(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * @param data - 
 * @returns void
 * @remarks Hash: 0x878FF156D36E9956
 */
export function PlaystatsEnterSessionPack(data: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns any
 * @remarks Hash: 0xBF4FEF46DB7894D3
 */
export function leaderboardsGetColumnType(p0: any, p1: any, p2: any): any;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0xF4FF020A08BC8863
 */
export function playstatsHeistSaveCheat(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x0BCA1D2C47B0D269
 */
export function leaderboardsWriteAddColumn(p0: any, p1: any, p2: number): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x5CDAED54B34B0ED0
 */
export function 0x5cdaed54b34b0ed0(p0: any): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x7D3A583856F2C5AC
 */
export function statSavePending(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xD1C9B92BDD3F151D
 */
export function 0xd1c9b92bdd3f151d(p0: any, p1: any, p2: any): void;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xBBB6AD006F1BBEA3
 */
export function statSavePendingOrRequested(): number;

/**
 * ## Parameters
 * *
 * @param statName - 
 * @returns number
 * @remarks Hash: 0xF2D4B2FE415AAFC3
 */
export function statGetNumberOfHours(statName: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xF11F01D98113536A
 */
export function 0xf11f01d98113536a(p0: number): any;

/**
 * ## Parameters
 * *
 * @param index - 
 * @param spStat - 
 * @param charStat - 
 * @param character - 
 * @returns number
 * @remarks Hash: 0xD16C2AD6B8E32854
 */
export function getPackedTuIntStatKey(index: number, spStat: number, charStat: number, character: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x60EEDC12AF66E846
 */
export function 0x60eedc12af66e846(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xBAA2F0490E146BE8
 */
export function 0xbaa2f0490e146be8(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0x0D01D20616FC73FB
 */
export function 0x0d01d20616fc73fb(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param element - 
 * @param item - 
 * @returns void
 * @remarks Hash: 0x90D0622866E80445
 */
export function playstatsQuickfixTool(element: number, item: string): void;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0xBE509B0A3693DE8B
 */
export function PlaystatsSpentPiCustomLoadout(amount: number): void;

/**
 * @returns void
 * @remarks Hash: 0xD4B02A6B476E1FDC
 */
export function leaderboardsClearCacheData(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x58A651CD201D89AD
 */
export function leaderboardsGetCacheNumberOfRows(p0: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xAC392C8483342AC2
 */
export function leaderboardsReadPending(p0: any, p1: any, p2: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xC38DC1E90D22547C
 */
export function leaderboards2ReadRankPrediction(p0: any, p1: any, p2: any): number;

/**
 * ```
 * Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_MASKED_INT"?  
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x94F12ABF9C79E339
 */
export function StatGetPackedIntMask(p0: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xF5BB8DAC426A52C0
 */
export function playstatsJobBend(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * @param data - 
 * @returns void
 * @remarks Hash: 0x320C35147D5B5DDD
 */
export function PlaystatsSmugMissionEnded(data: any): void;

/**
 * ## Parameters
 * *
 * @param index - 
 * @param spStat - 
 * @param charStat - 
 * @param character - 
 * @returns number
 * @remarks Hash: 0x61E111E323419E07
 */
export function getPackedIntStatKey(index: number, spStat: number, charStat: number, character: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x9120E8DBA3D69273
 */
export function leaderboardsGetCacheDataRow(p0: any, p1: any, p2: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0xAFC7E5E075A96F46
 */
export function playstatsCrateCreated(p0: number, p1: number, p2: number): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xA943FD1722E11EFD
 */
export function 0xa943fd1722e11efd(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param gamerHandleCsv - 
 * @param platformName - 
 * @returns number
 * @remarks Hash: 0xF1AE5DCDBFCA2721
 */
export function Leaderboards2ReadByPlatform(p0: any, gamerHandleCsv: string, platformName: string): number;

/**
 * ```
 * Needs more research. Seems to return "STAT_UNKNOWN" if no such user id exists.  
 * ```
 * @param p0 - 
 * @returns string
 * @remarks Hash: 0x2365C388E393BBE2
 */
export function statGetUserId(p0: any): string;

/**
 * ## Parameters
 * *
 * @param statHash - 
 * @param outValue - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0xD7AE6C9C9C6AC54C
 */
export function statGetFloat(statHash: number, outValue: number, p2: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x9C51349BE6CDFE2C
 */
export function leaderboardsGetCacheExists(p0: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param valueA - 
 * @param valueB - 
 * @returns void
 * @remarks Hash: 0x6BC0ACD0673ACEBE
 */
export function 0x6bc0acd0673acebe(p0: any, valueA: number, valueB: number): void;

/**
 * ## Parameters
 * *
 * @param name - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0x71862B1D855F32E1
 */
export function playstatsRandomMissionDone(name: string, p1: any, p2: any, p3: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xCEA553E35C2246E1
 */
export function OrderedBossVehicle(p0: any, p1: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x96E6D5150DBF1C09
 */
export function 0x96e6d5150dbf1c09(p0: any, p1: any, p2: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x282B6739644F4347
 */
export function 0x282b6739644f4347(p0: any): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xA761D4AC6115623D
 */
export function 0xa761d4ac6115623d(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xE3261D791EB44ACB
 */
export function 0xe3261d791eb44acb(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xDFCDB14317A9B361
 */
export function 0xdfcdb14317a9b361(p0: any): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x8B9CDBD6C566C38C
 */
export function 0x8b9cdbd6c566c38c(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x34B973047A2268B9
 */
export function playstatsClothChange(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ## Parameters
 * *
 * @param cheat - 
 * @returns void
 * @remarks Hash: 0x6058665D72302D3F
 */
export function playstatsCheatApplied(cheat: string): void;

/**
 * ## Parameters
 * *
 * @param data - 
 * @returns void
 * @remarks Hash: 0x203B381133817079
 */
export function PlaystatsPiMenuHideSettings(data: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x419615486BBF1956
 */
export function 0x419615486bbf1956(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xF04C1C27DA35F6C8
 */
export function leaderboardsGetCacheTime(p0: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns any
 * @remarks Hash: 0xC4B5467A1886EA7E
 */
export function leaderboardsGetColumnId(p0: any, p1: any, p2: any): any;

/**
 * ```
 * Sets profile setting 501
 * ```
 * @param transactionId - 
 * @returns void
 * @remarks Hash: 0xF6792800AC95350D
 */
export function SetSaveMigrationTransactionId(transactionId: number): void;

/**
 * ## Parameters
 * *
 * @param statName - 
 * @param value - 
 * @param mask - 
 * @param save - 
 * @returns number
 * @remarks Hash: 0x5BC62EC1937B9E5B
 */
export function statSetBoolMasked(statName: number, value: number, mask: number, save: number): number;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @param act - 
 * @param player - 
 * @param cm - 
 * @returns void
 * @remarks Hash: 0x121FB4DDDC2D5291
 */
export function playstatsRosBet(amount: number, act: number, player: number, cm: number): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x84A810B375E69C0E
 */
export function 0x84a810b375e69c0e(): any;

/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x887DAD63CF5B7908
 */
export function PlaystatsInventory(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * @returns number
 * @remarks Hash: 0x6A7F19756F1A9016
 */
export function 0x6a7f19756f1a9016(): number;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x95101C443A84E7F1
 */
export function PlaystatsCasinoRoulette(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @param p5 - 
 * @returns void
 * @remarks Hash: 0x92FC0EEDFAC04A14
 */
export function 0x92fc0eedfac04a14(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;

/**
 * ```
 * example from completionpercentage_controller.ysc.c4
 * if (STATS::_5EAD2BF6484852E4()) {
 *             MISC::SET_BIT(g_17b95._f20df._ff10, 15);
 *             STATS::_11FF1C80276097ED(0xe9ec4dd1, 200, 0);
 *         }
 * ```
 * @returns number
 * @remarks Hash: 0x5EAD2BF6484852E4
 */
export function 0x5ead2bf6484852e4(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0x49A49BED12794D70
 */
export function statDeleteSlot(p0: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x930F504203F561C9
 */
export function 0x930f504203f561c9(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xC19A2925C34D2231
 */
export function playstatsMissionStarted(p0: any, p1: any, p2: any, p3: number): void;

/**
 * ```
 * 'value' is a structure to a structure, 'numFields' is how many fields there are in said structure (usually 7).  
 * The structure looks like this:  
 * int year  
 * int month  
 * int day  
 * int hour  
 * int minute  
 * int second  
 * int millisecond  
 * The decompiled scripts use TIME::GET_POSIX_TIME to fill this structure.  
 * ```
 * @param statName - 
 * @param value - 
 * @param numFields - 
 * @param save - 
 * @returns number
 * @remarks Hash: 0x2C29BFB64F4FCBE4
 */
export function statSetDate(statName: number, value: any, numFields: number, save: number): number;

/**
 * ## Parameters
 * *
 * @param statName - 
 * @param p1 - 
 * @param outValue - 
 * @returns number
 * @remarks Hash: 0xBED9F5693F34ED17
 */
export function 0xbed9f5693f34ed17(statName: number, p1: number, outValue: number): number;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC03FAB2C2F92289B
 */
export function 0xc03fab2c2f92289b(p0: any): void;

/**
 * ```
 * p2 appears to always be -1  
 * ```
 * @param statHash - 
 * @param outValue - 
 * @param p2 - 
 * @returns number
 * @remarks Hash: 0x767FBC2AC802EF3D
 */
export function statGetInt(statHash: number, outValue: number, p2: number): number;

/**
 * ```
 * p1 always true.  
 * ```
 * @param statName - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xC2F84B7F9C4D0C61
 */
export function statSetCurrentPosixTime(statName: number, p1: number): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x0B8B7F74BF061C6D
 */
export function 0x0b8b7f74bf061c6d(): any;

/**
 * ## Parameters
 * *
 * @param statName - 
 * @param value - 
 * @param save - 
 * @returns number
 * @remarks Hash: 0x8CDDF1E452BABE11
 */
export function statSetUserId(statName: number, value: string, save: number): number;

/**
 * Sets profile setting 939
 * 
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @returns void
 * @remarks Hash: 0xC67E2DA1CBE759E2
 */
export function 0xc67e2da1cbe759e2(): void;

/**
 * @returns void
 * @remarks Hash: 0xC847B43F369AC0B5
 */
export function 0xc847b43f369ac0b5(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xD1A1EE3B4FA8E760
 */
export function 0xd1a1ee3b4fa8e760(p0: any): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xBE3DB208333D9844
 */
export function 0xbe3db208333d9844(): any;

/**
 * ```
 * Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_BOOL_MASKED"?  
 * ```
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xF4D8E7AC2A27758C
 */
export function StatGetPackedBoolMask(p0: number): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0xC70DDCE56D0D3A99
 */
export function statSaveMigrationStatusStart(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns any
 * @remarks Hash: 0x33D72899E24C3365
 */
export function 0x33d72899e24c3365(p0: any, p1: any): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x7D8BA05688AD64C7
 */
export function 0x7d8ba05688ad64c7(p0: any): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0xC6E0E2616A7576BB
 */
export function 0xc6e0e2616a7576bb(): any;

/**
 * ## Parameters
 * *
 * @param statName - 
 * @param value - 
 * @param save - 
 * @returns number
 * @remarks Hash: 0xB3271D7AB655B441
 */
export function statSetInt(statName: number, value: number, save: number): number;

/**
 * ```
 * STAT_SET_*
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x5688585E6D563CD8
 */
export function 0x5688585e6d563cd8(p0: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0x7F2C4CDF2E82DF4C
 */
export function 0x7f2c4cdf2e82df4c(p0: any): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x5FF2C33B13A02A11
 */
export function 0x5ff2c33b13a02a11(p0: any): void;

/**
 * ## Parameters
 * *
 * @returns void
 * @remarks Hash: 0x11FF1C80276097ED
 */
export function presenceEventUpdatestatInt(): void;

/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xFF14D6FEEC507BBE
 */
export function PlaystatsCarclubPoints(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x79AB33F0FBFAC40C
 */
export function playstatsAcquiredHiddenPackage(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns void
 * @remarks Hash: 0xCB00196B31C39EB1
 */
export function playstatsHoldUpMissionDone(p0: any, p1: any, p2: any, p3: any): void;

/**
 * ```
 * Needs more research. Gets the stat name of a masked int?
 * section - values used in the decompiled scripts:
 * "_NGPSTAT_INT"
 * "_MP_NGPSTAT_INT"
 * "_MP_LRPSTAT_INT"
 * "_MP_APAPSTAT_INT"
 * "_MP_LR2PSTAT_INT"
 * "_MP_BIKEPSTAT_INT"
 * "_MP_IMPEXPPSTAT_INT"
 * "_MP_GUNRPSTAT_INT"
 * "_NGDLCPSTAT_INT"
 * "_MP_NGDLCPSTAT_INT"
 * "_DLCSMUGCHARPSTAT_INT"
 * "_GANGOPSPSTAT_INT"
 * "_BUSINESSBATPSTAT_INT"
 * "_ARENAWARSPSTAT_INT"
 * "_CASINOPSTAT_INT"
 * "_CASINOHSTPSTAT_INT"
 * ```
 * @param index - 
 * @param spStat - 
 * @param charStat - 
 * @param character - 
 * @param section - 
 * @returns number
 * @remarks Hash: 0x2B4CDCA6F07FF3DA
 */
export function GetNgstatIntHash(index: number, spStat: number, charStat: number, character: number, section: string): number;

/**
 * ## Parameters
 * *
 * @param amount - 
 * @returns void
 * @remarks Hash: 0x46F917F6B4128FE4
 */
export function playstatsAwardXp(amount: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xEDBF6C9B0D2C65C8
 */
export function 0xedbf6c9b0d2c65c8(p0: any): void;

/**
 * ```
 * STAT_LOAD_*
 * ```
 * @returns number
 * @remarks Hash: 0xECB41AC6AB754401
 */
export function 0xecb41ac6ab754401(): number;

/**
 * ## Return value
 * @returns number
 * @remarks Hash: 0x567384DFA67029E6
 */
export function StatGetCancelSaveMigrationStatus(): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x9C375C315099DDE4
 */
export function playstatsRaceCheckpoint(p0: any, p1: any, p2: any, p3: any, p4: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns void
 * @remarks Hash: 0xA071E0ED98F91286
 */
export function playstatsActivityDone(p0: any, p1: any): void;

/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @param p4 - 
 * @returns void
 * @remarks Hash: 0x6F4F599753F8200A
 */
export function PlaystatsArenaWarSpectator(p0: number, p1: number, p2: number, p3: number, p4: number): void;

/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x66C7BB2416ED3FCE
 */
export function PlaystatsDroneUsage(p0: number, p1: number, p2: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xBFAFDB5FAAA5C5AB
 */
export function 0xbfafdb5faaa5c5ab(p0: any): void;

/**
 * ```
 * Example:
 *  STATS::STAT_SET_FLOAT(MISC::GET_HASH_KEY("MP0_WEAPON_ACCURACY"), 66.6f, true);
 * ```
 * @param statName - 
 * @param value - 
 * @param save - 
 * @returns number
 * @remarks Hash: 0x4851997F37FE9B3C
 */
export function statSetFloat(statName: number, value: number, save: number): number;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns any
 * @remarks Hash: 0xE496A53BA5F50A56
 */
export function 0xe496a53ba5f50a56(p0: any): any;

/**
 * ## Parameters
 * *
 * @param statName - 
 * @param value - 
 * @returns void
 * @remarks Hash: 0x9B5A68C6489E9909
 */
export function statIncrement(statName: number, value: number): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x8D8ADB562F09A245
 */
export function 0x8d8adb562f09a245(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @param p1 - 
 * @returns number
 * @remarks Hash: 0xC30713A383BFBF0E
 */
export function leaderboards2ReadByHandle(p0: any, p1: any): number;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x55A8BECAF28A4EB7
 */
export function 0x55a8becaf28a4eb7(): any;

/**
 * Allows stunts to be triggered and sent as a `CEventNetworkStuntPerformed` event.
 * 
 * Event types are shown below:
 * 
 * ```c
 * enum eTrackedStuntType
 * {
 *     ST_FRONTFLIP = 0,
 *     ST_BACKFLIP = 1,
 *     ST_SPIN = 2,
 *     ST_WHEELIE = 3,
 *     ST_STOPPIE = 4,
 *     ST_BOWLING_PIN = 5,
 *     ST_FOOTBALL = 6,
 *     ST_ROLL = 7
 * };
 * ```
 * @returns void
 * @remarks Hash: 0x928DBFB892638EF3
 */
export function playstatsStartTrackingStunts(): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x44919CC079BB60BF
 */
export function 0x44919cc079bb60bf(p0: any): void;

/**
 * **This native does absolutely nothing, just a nullsub**
 * @param p0 - 
 * @param p1 - 
 * @param p2 - 
 * @returns void
 * @remarks Hash: 0x69DEA3E9DB727B4C
 */
export function playstatsOddjobDone(p0: any, p1: any, p2: any): void;

/**
 * ## Return value
 * @returns any
 * @remarks Hash: 0x4C89FE2BDEB3F169
 */
export function 0x4c89fe2bdeb3f169(): any;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns number
 * @remarks Hash: 0xA651443F437B1CE6
 */
export function statLoad(p0: number): number;

/**
 * ## Parameters
 * *
 * @param statHash - 
 * @param p1 - 
 * @param p2 - 
 * @param p3 - 
 * @returns number
 * @remarks Hash: 0x8B0FACEFC36C824B
 */
export function statGetDate(statHash: number, p1: any, p2: any, p3: any): number;

/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * @returns void
 * @remarks Hash: 0x4AFF7E02E485E92B
 */
export function 0x4aff7e02e485e92b(): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0xC9001364B4388F22
 */
export function PlaystatsCasinoThreecardpokerLight(p0: any): void;

/**
 * ## Parameters
 * *
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x7D36291161859389
 */
export function 0x7d36291161859389(p0: any): void;

/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * @param p0 - 
 * @returns void
 * @remarks Hash: 0x0999F3F090EC5012
 */
export function PlaystatsCasinoChip(p0: any): void;

